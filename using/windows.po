# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-12 08:36+0000\n"
"PO-Revision-Date: 2021-06-28 01:51+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../using/windows.rst:7
msgid "Using Python on Windows"
msgstr "Використання Python у Windows"

#: ../../using/windows.rst:12
msgid ""
"This document aims to give an overview of Windows-specific behaviour you "
"should know about when using Python on Microsoft Windows."
msgstr ""
"Цей документ має на меті дати огляд специфічної поведінки Windows, про яку "
"ви повинні знати під час використання Python у Microsoft Windows."

#: ../../using/windows.rst:15
msgid ""
"Unlike most Unix systems and services, Windows does not include a system "
"supported installation of Python. To make Python available, the CPython team"
" has compiled Windows installers with every `release "
"<https://www.python.org/downloads/>`_ for many years. These installers are "
"primarily intended to add a per-user installation of Python, with the core "
"interpreter and library being used by a single user. The installer is also "
"able to install for all users of a single machine, and a separate ZIP file "
"is available for application-local distributions."
msgstr ""

#: ../../using/windows.rst:24
msgid ""
"As specified in :pep:`11`, a Python release only supports a Windows platform"
" while Microsoft considers the platform under extended support. This means "
"that Python |version| supports Windows 8.1 and newer. If you require Windows"
" 7 support, please install Python 3.8."
msgstr ""
"Як зазначено в :pep:`11`, випуск Python підтримує лише платформу Windows, "
"тоді як Microsoft розглядає цю платформу як розширену підтримку. Це означає,"
" що Python |version| підтримує Windows 8.1 і новіше. Якщо вам потрібна "
"підтримка Windows 7, установіть Python 3.8."

#: ../../using/windows.rst:29
msgid ""
"There are a number of different installers available for Windows, each with "
"certain benefits and downsides."
msgstr ""
"Існує кілька різних інсталяторів для Windows, кожен з яких має певні "
"переваги та недоліки."

#: ../../using/windows.rst:32
msgid ""
":ref:`windows-full` contains all components and is the best option for "
"developers using Python for any kind of project."
msgstr ""
":ref:`windows-full` містить усі компоненти та є найкращим варіантом для "
"розробників, які використовують Python для будь-яких проектів."

#: ../../using/windows.rst:35
msgid ""
":ref:`windows-store` is a simple installation of Python that is suitable for"
" running scripts and packages, and using IDLE or other development "
"environments. It requires Windows 10 and above, but can be safely installed "
"without corrupting other programs. It also provides many convenient commands"
" for launching Python and its tools."
msgstr ""

#: ../../using/windows.rst:41
msgid ""
":ref:`windows-nuget` are lightweight installations intended for continuous "
"integration systems. It can be used to build Python packages or run scripts,"
" but is not updateable and has no user interface tools."
msgstr ""
":ref:`windows-nuget` — це легкі установки, призначені для систем "
"безперервної інтеграції. Його можна використовувати для створення пакетів "
"Python або запуску сценаріїв, але він не оновлюється та не має інструментів "
"інтерфейсу користувача."

#: ../../using/windows.rst:45
msgid ""
":ref:`windows-embeddable` is a minimal package of Python suitable for "
"embedding into a larger application."
msgstr ""
":ref:`windows-embeddable` — це мінімальний пакет Python, придатний для "
"вбудовування у більшу програму."

#: ../../using/windows.rst:52
msgid "The full installer"
msgstr "Повний інсталятор"

#: ../../using/windows.rst:55
msgid "Installation steps"
msgstr "Етапи встановлення"

#: ../../using/windows.rst:57
msgid ""
"Four Python |version| installers are available for download - two each for "
"the 32-bit and 64-bit versions of the interpreter. The *web installer* is a "
"small initial download, and it will automatically download the required "
"components as necessary. The *offline installer* includes the components "
"necessary for a default installation and only requires an internet "
"connection for optional features. See :ref:`install-layout-option` for other"
" ways to avoid downloading during installation."
msgstr ""
"Чотири Python |version| інсталятори доступні для завантаження - по два для "
"32-розрядної та 64-розрядної версій інтерпретатора. *Веб-інсталятор* — це "
"невелике початкове завантаження, яке за потреби автоматично завантажить "
"необхідні компоненти. *Автономний інсталятор* містить компоненти, необхідні "
"для інсталяції за замовчуванням, і вимагає лише підключення до Інтернету для"
" додаткових функцій. Перегляньте :ref:`install-layout-option` для інших "
"способів уникнути завантаження під час інсталяції."

#: ../../using/windows.rst:65
msgid "After starting the installer, one of two options may be selected:"
msgstr "Після запуску інсталятора можна вибрати один із двох варіантів:"

#: ../../using/windows.rst:69
msgid "If you select \"Install Now\":"
msgstr "Якщо вибрати \"Встановити зараз\":"

#: ../../using/windows.rst:71
msgid ""
"You will *not* need to be an administrator (unless a system update for the C"
" Runtime Library is required or you install the :ref:`launcher` for all "
"users)"
msgstr ""
"Вам *не* потрібно бути адміністратором (якщо не потрібне оновлення системи "
"для C Runtime Library або якщо ви не встановите :ref:`launcher` для всіх "
"користувачів)"

#: ../../using/windows.rst:74
msgid "Python will be installed into your user directory"
msgstr "Python буде встановлено у ваш каталог користувача"

#: ../../using/windows.rst:75
msgid ""
"The :ref:`launcher` will be installed according to the option at the bottom "
"of the first page"
msgstr ""
":ref:`launcher` буде встановлено відповідно до опції внизу першої сторінки"

#: ../../using/windows.rst:77
msgid "The standard library, test suite, launcher and pip will be installed"
msgstr ""
"Буде встановлено стандартну бібліотеку, набір тестів, засіб запуску та pip"

#: ../../using/windows.rst:78
msgid ""
"If selected, the install directory will be added to your :envvar:`PATH`"
msgstr ""
"Якщо вибрано, каталог встановлення буде додано до вашого :envvar:`PATH`"

#: ../../using/windows.rst:79
msgid "Shortcuts will only be visible for the current user"
msgstr "Ярлики будуть видимі лише для поточного користувача"

#: ../../using/windows.rst:81
msgid ""
"Selecting \"Customize installation\" will allow you to select the features "
"to install, the installation location and other options or post-install "
"actions. To install debugging symbols or binaries, you will need to use this"
" option."
msgstr ""
"Вибравши \"Налаштувати інсталяцію\", ви зможете вибрати функції для "
"інсталяції, місце інсталяції та інші параметри чи дії після інсталяції. Щоб "
"установити символи налагодження або двійкові файли, вам потрібно буде "
"скористатися цією опцією."

#: ../../using/windows.rst:85
msgid ""
"To perform an all-users installation, you should select \"Customize "
"installation\". In this case:"
msgstr ""
"Щоб виконати інсталяцію для всіх користувачів, вам слід вибрати "
"\"Налаштувати інсталяцію\". В цьому випадку:"

#: ../../using/windows.rst:88
msgid "You may be required to provide administrative credentials or approval"
msgstr ""
"Вам може знадобитися надати облікові дані адміністратора або схвалення"

#: ../../using/windows.rst:89
msgid "Python will be installed into the Program Files directory"
msgstr "Python буде встановлено в каталог Program Files"

#: ../../using/windows.rst:90
msgid "The :ref:`launcher` will be installed into the Windows directory"
msgstr ":ref:`launcher` буде встановлено в каталог Windows"

#: ../../using/windows.rst:91
msgid "Optional features may be selected during installation"
msgstr "Під час встановлення можна вибрати додаткові функції"

#: ../../using/windows.rst:92
msgid "The standard library can be pre-compiled to bytecode"
msgstr "Стандартна бібліотека може бути попередньо скомпільована в байт-код"

#: ../../using/windows.rst:93
msgid ""
"If selected, the install directory will be added to the system "
":envvar:`PATH`"
msgstr ""
"Якщо вибрано, каталог встановлення буде додано до системи :envvar:`PATH`"

#: ../../using/windows.rst:94
msgid "Shortcuts are available for all users"
msgstr "Ярлики доступні для всіх користувачів"

#: ../../using/windows.rst:99
msgid "Removing the MAX_PATH Limitation"
msgstr "Видалення обмеження MAX_PATH"

#: ../../using/windows.rst:101
msgid ""
"Windows historically has limited path lengths to 260 characters. This meant "
"that paths longer than this would not resolve and errors would result."
msgstr ""
"Історично у Windows довжина шляху обмежена 260 символами. Це означало, що "
"шляхи, довші за цей, не вирішуватимуться, і спричинятимуться помилки."

#: ../../using/windows.rst:104
msgid ""
"In the latest versions of Windows, this limitation can be expanded to "
"approximately 32,000 characters. Your administrator will need to activate "
"the \"Enable Win32 long paths\" group policy, or set ``LongPathsEnabled`` to"
" ``1`` in the registry key "
"``HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem``."
msgstr ""
"В останніх версіях Windows це обмеження можна розширити приблизно до 32 000 "
"символів. Вашому адміністратору потрібно буде активувати групову політику "
"\"Увімкнути довгі шляхи Win32\" або встановити для ``LongPathsEnabled`` "
"значення ``1`` у розділі реєстру "
"``HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem``."

#: ../../using/windows.rst:110
msgid ""
"This allows the :func:`open` function, the :mod:`os` module and most other "
"path functionality to accept and return paths longer than 260 characters."
msgstr ""
"Це дозволяє функції :func:`open`, модулю :mod:`os` і більшості інших функцій"
" шляху приймати та повертати шляхи, довші за 260 символів."

#: ../../using/windows.rst:113
msgid "After changing the above option, no further configuration is required."
msgstr "Після зміни наведеного вище параметра подальша настройка не потрібна."

#: ../../using/windows.rst:117
msgid "Support for long paths was enabled in Python."
msgstr "У Python увімкнено підтримку довгих шляхів."

#: ../../using/windows.rst:122
msgid "Installing Without UI"
msgstr "Встановлення без інтерфейсу користувача"

#: ../../using/windows.rst:124
msgid ""
"All of the options available in the installer UI can also be specified from "
"the command line, allowing scripted installers to replicate an installation "
"on many machines without user interaction.  These options may also be set "
"without suppressing the UI in order to change some of the defaults."
msgstr ""
"Усі параметри, доступні в інтерфейсі користувача інсталятора, також можна "
"вказати з командного рядка, що дозволяє сценаріям інсталяторів копіювати "
"інсталяцію на багатьох машинах без участі користувача. Ці параметри також "
"можна встановити без придушення інтерфейсу користувача, щоб змінити деякі "
"параметри за замовчуванням."

#: ../../using/windows.rst:129
msgid ""
"The following options (found by executing the installer with ``/?``) can be "
"passed into the installer:"
msgstr ""

#: ../../using/windows.rst:133 ../../using/windows.rst:153
#: ../../using/windows.rst:1150
msgid "Name"
msgstr "Ім'я"

#: ../../using/windows.rst:133 ../../using/windows.rst:153
#: ../../using/windows.rst:1150
msgid "Description"
msgstr "опис"

#: ../../using/windows.rst:135
msgid "/passive"
msgstr ""

#: ../../using/windows.rst:135
msgid "to display progress without requiring user interaction"
msgstr ""

#: ../../using/windows.rst:137
msgid "/quiet"
msgstr ""

#: ../../using/windows.rst:137
msgid "to install/uninstall without displaying any UI"
msgstr ""

#: ../../using/windows.rst:139
msgid "/simple"
msgstr ""

#: ../../using/windows.rst:139
msgid "to prevent user customization"
msgstr ""

#: ../../using/windows.rst:141
msgid "/uninstall"
msgstr ""

#: ../../using/windows.rst:141
msgid "to remove Python (without confirmation)"
msgstr ""

#: ../../using/windows.rst:143
msgid "/layout [directory]"
msgstr ""

#: ../../using/windows.rst:143
msgid "to pre-download all components"
msgstr ""

#: ../../using/windows.rst:145
msgid "/log [filename]"
msgstr ""

#: ../../using/windows.rst:145
msgid "to specify log files location"
msgstr ""

#: ../../using/windows.rst:148
msgid ""
"All other options are passed as ``name=value``, where the value is usually "
"``0`` to disable a feature, ``1`` to enable a feature, or a path. The full "
"list of available options is shown below."
msgstr ""
"Усі інші параметри передаються як ``name=value``, де зазвичай значення "
"``0``, щоб вимкнути функцію, ``1``, щоб увімкнути функцію, або шлях. Нижче "
"наведено повний список доступних опцій."

#: ../../using/windows.rst:153
msgid "Default"
msgstr "За замовчуванням"

#: ../../using/windows.rst:155
msgid "InstallAllUsers"
msgstr "InstallAllUsers"

#: ../../using/windows.rst:155
msgid "Perform a system-wide installation."
msgstr "Виконайте установку для всієї системи."

#: ../../using/windows.rst:155 ../../using/windows.rst:181
#: ../../using/windows.rst:184 ../../using/windows.rst:188
#: ../../using/windows.rst:197 ../../using/windows.rst:219
#: ../../using/windows.rst:227 ../../using/windows.rst:230
msgid "0"
msgstr "0"

#: ../../using/windows.rst:157
msgid "TargetDir"
msgstr "TargetDir"

#: ../../using/windows.rst:157
msgid "The installation directory"
msgstr "Каталог встановлення"

#: ../../using/windows.rst:157
msgid "Selected based on InstallAllUsers"
msgstr "Вибрано на основі InstallAllUsers"

#: ../../using/windows.rst:160
msgid "DefaultAllUsersTargetDir"
msgstr "DefaultAllUsersTargetDir"

#: ../../using/windows.rst:160
msgid "The default installation directory for all-user installs"
msgstr "Стандартний каталог встановлення для всіх користувачів"

#: ../../using/windows.rst:160
msgid ""
":file:`%ProgramFiles%\\\\\\ Python X.Y` or :file:`\\ "
"%ProgramFiles(x86)%\\\\\\ Python X.Y`"
msgstr ""
":file:`%ProgramFiles%\\\\\\ Python X.Y` or :file:`\\ "
"%ProgramFiles(x86)%\\\\\\ Python X.Y`"

#: ../../using/windows.rst:165
msgid "DefaultJustForMeTargetDir"
msgstr "DefaultJustForMeTargetDir"

#: ../../using/windows.rst:165
msgid "The default install directory for just-for-me installs"
msgstr "Каталог встановлення за замовчуванням для встановлення лише для мене"

#: ../../using/windows.rst:165
msgid ""
":file:`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY` or "
":file:`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY-32` or "
":file:`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY-64`"
msgstr ""

#: ../../using/windows.rst:175
msgid "DefaultCustomTargetDir"
msgstr "DefaultCustomTargetDir"

#: ../../using/windows.rst:175
msgid "The default custom install directory displayed in the UI"
msgstr ""
"Каталог спеціального встановлення за замовчуванням, який відображається в "
"інтерфейсі користувача"

#: ../../using/windows.rst:175 ../../using/windows.rst:232
msgid "(empty)"
msgstr "(порожній)"

#: ../../using/windows.rst:178
msgid "AssociateFiles"
msgstr "AssociateFiles"

#: ../../using/windows.rst:178
msgid "Create file associations if the launcher is also installed."
msgstr "Створіть асоціації файлів, якщо також встановлено програму запуску."

#: ../../using/windows.rst:178 ../../using/windows.rst:192
#: ../../using/windows.rst:195 ../../using/windows.rst:199
#: ../../using/windows.rst:203 ../../using/windows.rst:207
#: ../../using/windows.rst:209 ../../using/windows.rst:213
#: ../../using/windows.rst:217 ../../using/windows.rst:221
#: ../../using/windows.rst:223 ../../using/windows.rst:225
msgid "1"
msgstr "1"

#: ../../using/windows.rst:181
msgid "CompileAll"
msgstr "CompileAll"

#: ../../using/windows.rst:181
msgid "Compile all ``.py`` files to ``.pyc``."
msgstr "Зкомпілюйте всі файли ``.py`` до ``.pyc``."

#: ../../using/windows.rst:184
msgid "PrependPath"
msgstr "PrependPath"

#: ../../using/windows.rst:184
msgid ""
"Prepend install and Scripts directories  to :envvar:`PATH` and add ``.PY`` "
"to :envvar:`PATHEXT`"
msgstr ""

#: ../../using/windows.rst:188
msgid "AppendPath"
msgstr ""

#: ../../using/windows.rst:188
msgid ""
"Append install and Scripts directories  to :envvar:`PATH` and add ``.PY`` to"
" :envvar:`PATHEXT`"
msgstr ""

#: ../../using/windows.rst:192
msgid "Shortcuts"
msgstr "Ярлики"

#: ../../using/windows.rst:192
msgid ""
"Create shortcuts for the interpreter, documentation and IDLE if installed."
msgstr ""
"Створіть ярлики для інтерпретатора, документації та IDLE, якщо встановлено."

#: ../../using/windows.rst:195
msgid "Include_doc"
msgstr "Include_doc"

#: ../../using/windows.rst:195
msgid "Install Python manual"
msgstr "Інсталюйте посібник з Python"

#: ../../using/windows.rst:197
msgid "Include_debug"
msgstr "Include_debug"

#: ../../using/windows.rst:197
msgid "Install debug binaries"
msgstr "Встановити двійкові файли налагодження"

#: ../../using/windows.rst:199
msgid "Include_dev"
msgstr "Include_dev"

#: ../../using/windows.rst:199
msgid ""
"Install developer headers and libraries. Omitting this may lead to an "
"unusable installation."
msgstr ""

#: ../../using/windows.rst:203
msgid "Include_exe"
msgstr "Включити_exe"

#: ../../using/windows.rst:203
msgid ""
"Install :file:`python.exe` and related files. Omitting this may lead to an "
"unusable installation."
msgstr ""

#: ../../using/windows.rst:207
msgid "Include_launcher"
msgstr "Include_launcher"

#: ../../using/windows.rst:207
msgid "Install :ref:`launcher`."
msgstr "Встановіть :ref:`launcher`."

#: ../../using/windows.rst:209
msgid "InstallLauncherAllUsers"
msgstr "InstallLauncherAllUsers"

#: ../../using/windows.rst:209
msgid ""
"Installs the launcher for all users. Also requires ``Include_launcher`` to "
"be set to 1"
msgstr ""

#: ../../using/windows.rst:213
msgid "Include_lib"
msgstr "Включити_бібліотеку"

#: ../../using/windows.rst:213
msgid ""
"Install standard library and extension modules. Omitting this may lead to an"
" unusable installation."
msgstr ""

#: ../../using/windows.rst:217
msgid "Include_pip"
msgstr "Включити_піп"

#: ../../using/windows.rst:217
msgid "Install bundled pip and setuptools"
msgstr "Встановіть у комплекті pip і setuptools"

#: ../../using/windows.rst:219
msgid "Include_symbols"
msgstr "Включити_символи"

#: ../../using/windows.rst:219
msgid "Install debugging symbols (``*.pdb``)"
msgstr ""

#: ../../using/windows.rst:221
msgid "Include_tcltk"
msgstr "Включити_tcltk"

#: ../../using/windows.rst:221
msgid "Install Tcl/Tk support and IDLE"
msgstr "Встановіть підтримку Tcl/Tk і IDLE"

#: ../../using/windows.rst:223
msgid "Include_test"
msgstr "Включити_тест"

#: ../../using/windows.rst:223
msgid "Install standard library test suite"
msgstr "Встановіть стандартний набір тестів бібліотеки"

#: ../../using/windows.rst:225
msgid "Include_tools"
msgstr "Include_tools"

#: ../../using/windows.rst:225
msgid "Install utility scripts"
msgstr "Встановити службові скрипти"

#: ../../using/windows.rst:227
msgid "LauncherOnly"
msgstr "LauncherOnly"

#: ../../using/windows.rst:227
msgid "Only installs the launcher. This will override most other options."
msgstr "Встановлює лише лаунчер. Це замінить більшість інших параметрів."

#: ../../using/windows.rst:230
msgid "SimpleInstall"
msgstr "SimpleInstall"

#: ../../using/windows.rst:230
msgid "Disable most install UI"
msgstr "Вимкнути більшість інтерфейсу користувача для встановлення"

#: ../../using/windows.rst:232
msgid "SimpleInstallDescription"
msgstr "SimpleInstallDescription"

#: ../../using/windows.rst:232
msgid "A custom message to display when the simplified install UI is used."
msgstr ""
"Спеціальне повідомлення, яке відображатиметься під час використання "
"спрощеного інтерфейсу користувача для встановлення."

#: ../../using/windows.rst:236
msgid ""
"For example, to silently install a default, system-wide Python installation,"
" you could use the following command (from an elevated command prompt)::"
msgstr ""
"Наприклад, щоб безшумно встановити загальносистемну інсталяцію Python за "
"замовчуванням, можна використати таку команду (з командного рядка з "
"адміністраторами):"

#: ../../using/windows.rst:239
msgid "python-3.9.0.exe /quiet InstallAllUsers=1 PrependPath=1 Include_test=0"
msgstr ""

#: ../../using/windows.rst:241
msgid ""
"To allow users to easily install a personal copy of Python without the test "
"suite, you could provide a shortcut with the following command. This will "
"display a simplified initial page and disallow customization::"
msgstr ""
"Щоб дозволити користувачам легко інсталювати особисту копію Python без "
"набору тестів, ви можете створити ярлик за допомогою такої команди. Це "
"відобразить спрощену початкову сторінку та заборонить налаштування::"

#: ../../using/windows.rst:245
msgid ""
"python-3.9.0.exe InstallAllUsers=0 Include_launcher=0 Include_test=0\n"
"    SimpleInstall=1 SimpleInstallDescription=\"Just for me, no test suite.\""
msgstr ""

#: ../../using/windows.rst:248
msgid ""
"(Note that omitting the launcher also omits file associations, and is only "
"recommended for per-user installs when there is also a system-wide "
"installation that included the launcher.)"
msgstr ""
"(Зауважте, що відсутність програми запуску також пропускає асоціації файлів "
"і рекомендується лише для інсталяції для кожного користувача, якщо також є "
"загальносистемна інсталяція, яка включає програму запуску.)"

#: ../../using/windows.rst:252
msgid ""
"The options listed above can also be provided in a file named "
"``unattend.xml`` alongside the executable. This file specifies a list of "
"options and values. When a value is provided as an attribute, it will be "
"converted to a number if possible. Values provided as element text are "
"always left as strings. This example file sets the same options as the "
"previous example:"
msgstr ""
"Параметри, перелічені вище, також можна надати у файлі з назвою "
"``unattend.xml`` разом із виконуваним файлом. Цей файл визначає список "
"параметрів і значень. Коли значення надається як атрибут, воно буде "
"перетворено на число, якщо це можливо. Значення, надані як текст елемента, "
"завжди залишаються як рядки. Цей приклад файлу встановлює ті самі параметри,"
" що й попередній приклад:"

#: ../../using/windows.rst:258
msgid ""
"<Options>\n"
"    <Option Name=\"InstallAllUsers\" Value=\"no\" />\n"
"    <Option Name=\"Include_launcher\" Value=\"0\" />\n"
"    <Option Name=\"Include_test\" Value=\"no\" />\n"
"    <Option Name=\"SimpleInstall\" Value=\"yes\" />\n"
"    <Option Name=\"SimpleInstallDescription\">Just for me, no test suite</Option>\n"
"</Options>"
msgstr ""

#: ../../using/windows.rst:271
msgid "Installing Without Downloading"
msgstr "Встановлення без завантаження"

#: ../../using/windows.rst:273
msgid ""
"As some features of Python are not included in the initial installer "
"download, selecting those features may require an internet connection.  To "
"avoid this need, all possible components may be downloaded on-demand to "
"create a complete *layout* that will no longer require an internet "
"connection regardless of the selected features. Note that this download may "
"be bigger than required, but where a large number of installations are going"
" to be performed it is very useful to have a locally cached copy."
msgstr ""
"Оскільки деякі функції Python не входять до початкового завантаження "
"інсталятора, для вибору цих функцій може знадобитися підключення до "
"Інтернету. Щоб уникнути цієї необхідності, усі можливі компоненти можна "
"завантажити на вимогу, щоб створити повний *макет*, який більше не "
"потребуватиме підключення до Інтернету, незалежно від вибраних функцій. "
"Зауважте, що це завантаження може бути більшим, ніж потрібно, але якщо "
"планується виконати велику кількість інсталяцій, дуже корисно мати локально "
"кешовану копію."

#: ../../using/windows.rst:281
msgid ""
"Execute the following command from Command Prompt to download all possible "
"required files.  Remember to substitute ``python-3.9.0.exe`` for the actual "
"name of your installer, and to create layouts in their own directories to "
"avoid collisions between files with the same name."
msgstr ""
"Виконайте наступну команду з командного рядка, щоб завантажити всі необхідні"
" файли. Не забудьте замінити ``python-3.9.0.exe`` замість справжньої назви "
"вашого інсталятора та створити макети у власних каталогах, щоб уникнути "
"зіткнень між файлами з однаковою назвою."

#: ../../using/windows.rst:288
msgid "python-3.9.0.exe /layout [optional target directory]"
msgstr ""

#: ../../using/windows.rst:290
msgid ""
"You may also specify the ``/quiet`` option to hide the progress display."
msgstr ""
"Ви також можете вказати параметр ``/quiet``, щоб приховати відображення "
"прогресу."

#: ../../using/windows.rst:293
msgid "Modifying an install"
msgstr "Зміна інсталяції"

#: ../../using/windows.rst:295
msgid ""
"Once Python has been installed, you can add or remove features through the "
"Programs and Features tool that is part of Windows. Select the Python entry "
"and choose \"Uninstall/Change\" to open the installer in maintenance mode."
msgstr ""
"Після встановлення Python ви можете додавати або видаляти функції за "
"допомогою інструмента \"Програми та засоби\", який є частиною Windows. "
"Виберіть запис Python і виберіть \"Видалити/Змінити\", щоб відкрити програму"
" встановлення в режимі обслуговування."

#: ../../using/windows.rst:299
msgid ""
"\"Modify\" allows you to add or remove features by modifying the checkboxes "
"- unchanged checkboxes will not install or remove anything. Some options "
"cannot be changed in this mode, such as the install directory; to modify "
"these, you will need to remove and then reinstall Python completely."
msgstr ""
"\"Змінити\" дозволяє додавати або видаляти функції, змінюючи прапорці - "
"незмінені прапорці не встановлюють або видаляють нічого. Деякі параметри не "
"можна змінити в цьому режимі, наприклад каталог встановлення; щоб змінити "
"їх, вам потрібно буде видалити, а потім повністю перевстановити Python."

#: ../../using/windows.rst:304
msgid ""
"\"Repair\" will verify all the files that should be installed using the "
"current settings and replace any that have been removed or modified."
msgstr ""
"\"Відновлення\" перевірить усі файли, які слід інсталювати з використанням "
"поточних налаштувань, і замінить усі видалені чи змінені."

#: ../../using/windows.rst:307
msgid ""
"\"Uninstall\" will remove Python entirely, with the exception of the "
":ref:`launcher`, which has its own entry in Programs and Features."
msgstr ""
"\"Видалити\" повністю видалить Python, за винятком :ref:`launcher`, який має"
" власний запис у програмах і функціях."

#: ../../using/windows.rst:313
msgid "Installing Free-threaded Binaries"
msgstr ""

#: ../../using/windows.rst:315 ../../using/windows.rst:501
msgid "(Experimental)"
msgstr ""

#: ../../using/windows.rst:319 ../../using/windows.rst:505
msgid ""
"Everything described in this section is considered experimental, and should "
"be expected to change in future releases."
msgstr ""

#: ../../using/windows.rst:322
msgid ""
"To install pre-built binaries with free-threading enabled (see :pep:`703`), "
"you should select \"Customize installation\". The second page of options "
"includes the \"Download free-threaded binaries\" checkbox."
msgstr ""

#: ../../using/windows.rst:328
msgid ""
"Selecting this option will download and install additional binaries to the "
"same location as the main Python install. The main executable is called "
"``python3.13t.exe``, and other binaries either receive a ``t`` suffix or a "
"full ABI suffix. Python source files and bundled third-party dependencies "
"are shared with the main install."
msgstr ""

#: ../../using/windows.rst:334
msgid ""
"The free-threaded version is registered as a regular Python install with the"
" tag ``3.13t`` (with a ``-32`` or ``-arm64`` suffix as normal for those "
"platforms). This allows tools to discover it, and for the :ref:`launcher` to"
" support ``py.exe -3.13t``. Note that the launcher will interpret ``py.exe "
"-3`` (or a ``python3`` shebang) as \"the latest 3.x install\", which will "
"prefer the free-threaded binaries over the regular ones, while ``py.exe "
"-3.13`` will not. If you use the short style of option, you may prefer to "
"not install the free-threaded binaries at this time."
msgstr ""

#: ../../using/windows.rst:343
msgid ""
"To specify the install option at the command line, use "
"``Include_freethreaded=1``. See :ref:`install-layout-option` for "
"instructions on pre-emptively downloading the additional binaries for "
"offline install. The options to include debug symbols and binaries also "
"apply to the free-threaded builds."
msgstr ""

#: ../../using/windows.rst:349
msgid ""
"Free-threaded binaries are also available :ref:`on nuget.org <windows-"
"nuget>`."
msgstr ""

#: ../../using/windows.rst:354
msgid "The Microsoft Store package"
msgstr "Пакет Microsoft Store"

#: ../../using/windows.rst:358
msgid ""
"The Microsoft Store package is an easily installable Python interpreter that"
" is intended mainly for interactive use, for example, by students."
msgstr ""
"Пакет Microsoft Store — це інтерпретатор Python, який легко встановлюється і"
" призначений переважно для інтерактивного використання, наприклад, "
"студентами."

#: ../../using/windows.rst:361
msgid ""
"To install the package, ensure you have the latest Windows 10 updates and "
"search the Microsoft Store app for \"Python |version|\". Ensure that the app"
" you select is published by the Python Software Foundation, and install it."
msgstr ""
"Щоб інсталювати пакет, переконайтеся, що у вас є останні оновлення Windows "
"10, і знайдіть у програмі Microsoft Store \"Python |version|\". "
"Переконайтеся, що вибрану програму опубліковано Python Software Foundation, "
"і встановіть її."

#: ../../using/windows.rst:366
msgid ""
"Python will always be available for free on the Microsoft Store. If you are "
"asked to pay for it, you have not selected the correct package."
msgstr ""
"Python завжди буде доступний безкоштовно в Microsoft Store. Якщо вас "
"попросять заплатити за це, ви не вибрали правильний пакет."

#: ../../using/windows.rst:369
msgid ""
"After installation, Python may be launched by finding it in Start. "
"Alternatively, it will be available from any Command Prompt or PowerShell "
"session by typing ``python``. Further, pip and IDLE may be used by typing "
"``pip`` or ``idle``. IDLE can also be found in Start."
msgstr ""
"Після інсталяції Python можна запустити, знайшовши його в меню Пуск. Крім "
"того, він буде доступний з будь-якого командного рядка або сеансу "
"PowerShell, ввівши ``python``. Крім того, pip і IDLE можна використовувати, "
"ввівши ``pip`` або ``idle``. IDLE також можна знайти в Пуск."

#: ../../using/windows.rst:374
msgid ""
"All three commands are also available with version number suffixes, for "
"example, as ``python3.exe`` and ``python3.x.exe`` as well as ``python.exe`` "
"(where ``3.x`` is the specific version you want to launch, such as "
"|version|). Open \"Manage App Execution Aliases\" through Start to select "
"which version of Python is associated with each command. It is recommended "
"to make sure that ``pip`` and ``idle`` are consistent with whichever version"
" of ``python`` is selected."
msgstr ""
"Усі три команди також доступні з суфіксами номерів версій, наприклад, як "
"``python3.exe`` і ``python3.x.exe``, а також ``python.exe`` (де ``'3.x'`` — "
"це конкретна версія, яку ви хочете запустити, наприклад |version|). "
"Відкрийте \"Керування псевдонімами виконання програми\" через \"Пуск\", щоб "
"вибрати, яку версію Python пов’язано з кожною командою. Рекомендується "
"переконатися, що ``pip`` і ``idle`` узгоджені з будь-якою версією "
"``python``, яку вибрано."

#: ../../using/windows.rst:382
msgid ""
"Virtual environments can be created with ``python -m venv`` and activated "
"and used as normal."
msgstr ""
"Віртуальні середовища можна створити за допомогою ``python -m venv``, "
"активувати та використовувати як зазвичай."

#: ../../using/windows.rst:385
msgid ""
"If you have installed another version of Python and added it to your "
"``PATH`` variable, it will be available as ``python.exe`` rather than the "
"one from the Microsoft Store. To access the new installation, use "
"``python3.exe`` or ``python3.x.exe``."
msgstr ""
"Якщо ви встановили іншу версію Python і додали її до своєї змінної ``PATH``,"
" вона буде доступна як ``python.exe``, а не як файл із Microsoft Store. Щоб "
"отримати доступ до нової інсталяції, використовуйте ``python3.exe`` або "
"``python3.x.exe``."

#: ../../using/windows.rst:390
msgid ""
"The ``py.exe`` launcher will detect this Python installation, but will "
"prefer installations from the traditional installer."
msgstr ""
"Засіб запуску ``py.exe`` виявить цю інсталяцію Python, але віддасть перевагу"
" інсталяції з традиційного інсталятора."

#: ../../using/windows.rst:393
msgid ""
"To remove Python, open Settings and use Apps and Features, or else find "
"Python in Start and right-click to select Uninstall. Uninstalling will "
"remove all packages you installed directly into this Python installation, "
"but will not remove any virtual environments"
msgstr ""
"Щоб видалити Python, відкрийте \"Параметри\" та скористайтеся \"Програми та "
"функції\" або знайдіть Python у \"Пуску\" та клацніть правою кнопкою миші, "
"щоб вибрати \"Видалити\". Видалення видалить усі пакети, які ви встановили "
"безпосередньо в цю інсталяцію Python, але не видалить віртуальні середовища"

#: ../../using/windows.rst:399
msgid "Known issues"
msgstr ""

#: ../../using/windows.rst:402
msgid "Redirection of local data, registry, and temporary paths"
msgstr ""

#: ../../using/windows.rst:404
msgid ""
"Because of restrictions on Microsoft Store apps, Python scripts may not have"
" full write access to shared locations such as :envvar:`TEMP` and the "
"registry. Instead, it will write to a private copy. If your scripts must "
"modify the shared locations, you will need to install the full installer."
msgstr ""

#: ../../using/windows.rst:409
msgid ""
"At runtime, Python will use a private copy of well-known Windows folders and"
" the registry. For example, if the environment variable :envvar:`%APPDATA%` "
"is :file:`c:\\\\Users\\\\<user>\\\\AppData\\\\`, then when writing to "
":file:`C:\\\\Users\\\\<user>\\\\AppData\\\\Local` will write to "
":file:`C:\\\\Users\\\\<user>\\\\AppData\\\\Local\\\\Packages\\\\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\\\\LocalCache\\\\Local\\\\`."
msgstr ""

#: ../../using/windows.rst:414
msgid ""
"When reading files, Windows will return the file from the private folder, or"
" if that does not exist, the real Windows directory. For example reading "
":file:`C:\\\\Windows\\\\System32` returns the contents of "
":file:`C:\\\\Windows\\\\System32` plus the contents of :file:`C:\\\\Program "
"Files\\\\WindowsApps\\\\package_name\\\\VFS\\\\SystemX86`."
msgstr ""

#: ../../using/windows.rst:418
msgid ""
"You can find the real path of any existing file using "
":func:`os.path.realpath`:"
msgstr ""

#: ../../using/windows.rst:420
msgid ""
">>> import os\n"
">>> test_file = 'C:\\\\Users\\\\example\\\\AppData\\\\Local\\\\test.txt'\n"
">>> os.path.realpath(test_file)\n"
"'C:\\\\Users\\\\example\\\\AppData\\\\Local\\\\Packages\\\\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\\\\LocalCache\\\\Local\\\\test.txt'"
msgstr ""

#: ../../using/windows.rst:427
msgid "When writing to the Windows Registry, the following behaviors exist:"
msgstr ""

#: ../../using/windows.rst:429
msgid ""
"Reading from ``HKLM\\\\Software`` is allowed and results are merged with the"
" :file:`registry.dat` file in the package."
msgstr ""

#: ../../using/windows.rst:430
msgid ""
"Writing to ``HKLM\\\\Software`` is not allowed if the corresponding "
"key/value exists, i.e. modifying existing keys."
msgstr ""

#: ../../using/windows.rst:431
msgid ""
"Writing to ``HKLM\\\\Software`` is allowed as long as a corresponding "
"key/value does not exist in the package and the user has the correct access "
"permissions."
msgstr ""

#: ../../using/windows.rst:434
msgid ""
"For more detail on the technical basis for these limitations, please consult"
" Microsoft's documentation on packaged full-trust apps, currently available "
"at `docs.microsoft.com/en-us/windows/msix/desktop/desktop-to-uwp-behind-the-"
"scenes <https://learn.microsoft.com/windows/msix/desktop/desktop-to-uwp-"
"behind-the-scenes>`_"
msgstr ""

#: ../../using/windows.rst:443
msgid "The nuget.org packages"
msgstr "Пакунки nuget.org"

#: ../../using/windows.rst:447
msgid ""
"The nuget.org package is a reduced size Python environment intended for use "
"on continuous integration and build systems that do not have a system-wide "
"install of Python. While nuget is \"the package manager for .NET\", it also "
"works perfectly fine for packages containing build-time tools."
msgstr ""
"Пакет nuget.org — це середовище Python зменшеного розміру, призначене для "
"використання в системах безперервної інтеграції та побудови, які не мають "
"загальносистемної інсталяції Python. Хоча nuget є \"менеджером пакунків для "
".NET\", він також чудово працює для пакунків, що містять інструменти для "
"збирання."

#: ../../using/windows.rst:452
msgid ""
"Visit `nuget.org <https://www.nuget.org/>`_ for the most up-to-date "
"information on using nuget. What follows is a summary that is sufficient for"
" Python developers."
msgstr ""
"Відвідайте `nuget.org <https://www.nuget.org/>`_, щоб отримати найновішу "
"інформацію про використання nuget. Далі наведено підсумок, достатній для "
"розробників Python."

#: ../../using/windows.rst:456
msgid ""
"The ``nuget.exe`` command line tool may be downloaded directly from "
"``https://aka.ms/nugetclidl``, for example, using curl or PowerShell. With "
"the tool, the latest version of Python for 64-bit or 32-bit machines is "
"installed using::"
msgstr ""
"Інструмент командного рядка ``nuget.exe`` можна завантажити безпосередньо з "
"``https://aka.ms/nugetclidl``, наприклад, за допомогою curl або PowerShell. "
"За допомогою інструменту встановлюється остання версія Python для "
"64-розрядних або 32-розрядних машин за допомогою:"

#: ../../using/windows.rst:461
msgid ""
"nuget.exe install python -ExcludeVersion -OutputDirectory .\n"
"nuget.exe install pythonx86 -ExcludeVersion -OutputDirectory ."
msgstr ""

#: ../../using/windows.rst:464
msgid ""
"To select a particular version, add a ``-Version 3.x.y``. The output "
"directory may be changed from ``.``, and the package will be installed into "
"a subdirectory. By default, the subdirectory is named the same as the "
"package, and without the ``-ExcludeVersion`` option this name will include "
"the specific version installed. Inside the subdirectory is a ``tools`` "
"directory that contains the Python installation:"
msgstr ""
"Щоб вибрати певну версію, додайте ``-Version 3.x.y``. Вихідний каталог можна"
" змінити з ``.``, і пакет буде встановлено в підкаталог. За замовчуванням "
"підкаталог називається так само, як і пакунок, і без опції "
"``-ExcludeVersion`` ця назва включатиме конкретну встановлену версію. "
"Усередині підкаталогу є каталог ``tools``, який містить установку Python:"

#: ../../using/windows.rst:471
msgid ""
"# Without -ExcludeVersion\n"
"> .\\python.3.5.2\\tools\\python.exe -V\n"
"Python 3.5.2\n"
"\n"
"# With -ExcludeVersion\n"
"> .\\python\\tools\\python.exe -V\n"
"Python 3.5.2"
msgstr ""

#: ../../using/windows.rst:481
msgid ""
"In general, nuget packages are not upgradeable, and newer versions should be"
" installed side-by-side and referenced using the full path. Alternatively, "
"delete the package directory manually and install it again. Many CI systems "
"will do this automatically if they do not preserve files between builds."
msgstr ""
"Загалом пакети nuget не можна оновлювати, а новіші версії слід встановлювати"
" поруч із повним шляхом. Крім того, видаліть каталог пакетів вручну та "
"інсталюйте його знову. Багато систем CI зроблять це автоматично, якщо вони "
"не зберігають файли між збірками."

#: ../../using/windows.rst:486
msgid ""
"Alongside the ``tools`` directory is a ``build\\native`` directory. This "
"contains a MSBuild properties file ``python.props`` that can be used in a "
"C++ project to reference the Python install. Including the settings will "
"automatically use the headers and import libraries in your build."
msgstr ""
"Поряд з каталогом ``tools`` є каталог ``build\\native``. Він містить файл "
"властивостей MSBuild ``python.props``, який можна використовувати в проекті "
"C++ для посилання на встановлення Python. Включення налаштувань автоматично "
"використовуватиме заголовки та бібліотеки імпорту у вашій збірці."

#: ../../using/windows.rst:491
msgid ""
"The package information pages on nuget.org are "
"`www.nuget.org/packages/python <https://www.nuget.org/packages/python>`_ for"
" the 64-bit version, `www.nuget.org/packages/pythonx86 "
"<https://www.nuget.org/packages/pythonx86>`_ for the 32-bit version, and "
"`www.nuget.org/packages/pythonarm64 "
"<https://www.nuget.org/packages/pythonarm64>`_ for the ARM64 version"
msgstr ""

#: ../../using/windows.rst:499
msgid "Free-threaded packages"
msgstr ""

#: ../../using/windows.rst:508
msgid ""
"Packages containing free-threaded binaries are named `python-freethreaded "
"<https://www.nuget.org/packages/python-freethreaded>`_ for the 64-bit "
"version, `pythonx86-freethreaded "
"<https://www.nuget.org/packages/pythonx86-freethreaded>`_ for the 32-bit "
"version, and `pythonarm64-freethreaded "
"<https://www.nuget.org/packages/pythonarm64-freethreaded>`_ for the ARM64 "
"version. These packages contain both the ``python3.13t.exe`` and "
"``python.exe`` entry points, both of which run free threaded."
msgstr ""

#: ../../using/windows.rst:520
msgid "The embeddable package"
msgstr "Вбудовуваний пакет"

#: ../../using/windows.rst:524
msgid ""
"The embedded distribution is a ZIP file containing a minimal Python "
"environment. It is intended for acting as part of another application, "
"rather than being directly accessed by end-users."
msgstr ""
"Вбудований дистрибутив — це ZIP-файл, що містить мінімальне середовище "
"Python. Він призначений для роботи як частини іншої програми, а не для "
"прямого доступу кінцевих користувачів."

#: ../../using/windows.rst:528
msgid ""
"When extracted, the embedded distribution is (almost) fully isolated from "
"the user's system, including environment variables, system registry "
"settings, and installed packages. The standard library is included as pre-"
"compiled and optimized ``.pyc`` files in a ZIP, and ``python3.dll``, "
"``python37.dll``, ``python.exe`` and ``pythonw.exe`` are all provided. "
"Tcl/tk (including all dependents, such as Idle), pip and the Python "
"documentation are not included."
msgstr ""

#: ../../using/windows.rst:537
msgid ""
"The embedded distribution does not include the `Microsoft C Runtime "
"<https://learn.microsoft.com/cpp/windows/latest-supported-vc-redist#visual-"
"studio-2015-2017-2019-and-2022>`_ and it is the responsibility of the "
"application installer to provide this. The runtime may have already been "
"installed on a user's system previously or automatically via Windows Update,"
" and can be detected by finding ``ucrtbase.dll`` in the system directory."
msgstr ""

#: ../../using/windows.rst:544
msgid ""
"Third-party packages should be installed by the application installer "
"alongside the embedded distribution. Using pip to manage dependencies as for"
" a regular Python installation is not supported with this distribution, "
"though with some care it may be possible to include and use pip for "
"automatic updates. In general, third-party packages should be treated as "
"part of the application (\"vendoring\") so that the developer can ensure "
"compatibility with newer versions before providing updates to users."
msgstr ""
"Пакунки сторонніх розробників повинні бути встановлені інсталятором програми"
" разом із вбудованим дистрибутивом. Використання pip для керування "
"залежностями, як для звичайної інсталяції Python, не підтримується цим "
"дистрибутивом, хоча з певною обережністю можна включити та використовувати "
"pip для автоматичних оновлень. Загалом пакети сторонніх розробників слід "
"розглядати як частину програми (\"постачальник\"), щоб розробник міг "
"забезпечити сумісність із новими версіями, перш ніж надавати оновлення "
"користувачам."

#: ../../using/windows.rst:552
msgid ""
"The two recommended use cases for this distribution are described below."
msgstr ""
"Нижче наведено два рекомендованих випадки використання цього дистрибутива."

#: ../../using/windows.rst:555
msgid "Python Application"
msgstr "Програма Python"

#: ../../using/windows.rst:557
msgid ""
"An application written in Python does not necessarily require users to be "
"aware of that fact. The embedded distribution may be used in this case to "
"include a private version of Python in an install package. Depending on how "
"transparent it should be (or conversely, how professional it should appear),"
" there are two options."
msgstr ""
"Програма, написана на Python, не обов’язково вимагає від користувачів "
"усвідомлення цього факту. Вбудований дистрибутив можна використовувати в "
"цьому випадку, щоб включити приватну версію Python до інсталяційного пакета."
" Залежно від того, наскільки це має бути прозоро (або, навпаки, наскільки "
"професійно це має виглядати), є два варіанти."

#: ../../using/windows.rst:563
msgid ""
"Using a specialized executable as a launcher requires some coding, but "
"provides the most transparent experience for users. With a customized "
"launcher, there are no obvious indications that the program is running on "
"Python: icons can be customized, company and version information can be "
"specified, and file associations behave properly. In most cases, a custom "
"launcher should simply be able to call ``Py_Main`` with a hard-coded command"
" line."
msgstr ""
"Використання спеціалізованого виконуваного файлу як засобу запуску вимагає "
"певного кодування, але забезпечує максимально прозорий досвід для "
"користувачів. За допомогою налаштованого засобу запуску немає очевидних "
"ознак того, що програма працює на Python: значки можна налаштувати, "
"інформацію про компанію та версію можна вказати, а асоціації файлів "
"поводяться належним чином. У більшості випадків спеціальна програма запуску "
"повинна просто мати можливість викликати ``Py_Main`` за допомогою жорстко "
"закодованого командного рядка."

#: ../../using/windows.rst:570
msgid ""
"The simpler approach is to provide a batch file or generated shortcut that "
"directly calls the ``python.exe`` or ``pythonw.exe`` with the required "
"command-line arguments. In this case, the application will appear to be "
"Python and not its actual name, and users may have trouble distinguishing it"
" from other running Python processes or file associations."
msgstr ""
"Простіший підхід полягає в тому, щоб надати пакетний файл або згенерований "
"ярлик, який безпосередньо викликає ``python.exe`` або ``pythonw.exe`` з "
"потрібними аргументами командного рядка. У цьому випадку програма "
"виглядатиме як Python, а не її справжня назва, і користувачі можуть мати "
"проблеми з відрізненням її від інших запущених процесів Python або асоціацій"
" файлів."

#: ../../using/windows.rst:576
msgid ""
"With the latter approach, packages should be installed as directories "
"alongside the Python executable to ensure they are available on the path. "
"With the specialized launcher, packages can be located in other locations as"
" there is an opportunity to specify the search path before launching the "
"application."
msgstr ""
"За останнього підходу пакунки мають бути встановлені як каталоги поряд із "
"виконуваним файлом Python, щоб забезпечити їх доступність на шляху. За "
"допомогою спеціалізованої програми запуску пакети можуть бути розташовані в "
"інших місцях, оскільки є можливість вказати шлях пошуку перед запуском "
"програми."

#: ../../using/windows.rst:582
msgid "Embedding Python"
msgstr "Вбудовування Python"

#: ../../using/windows.rst:584
msgid ""
"Applications written in native code often require some form of scripting "
"language, and the embedded Python distribution can be used for this purpose."
" In general, the majority of the application is in native code, and some "
"part will either invoke ``python.exe`` or directly use ``python3.dll``. For "
"either case, extracting the embedded distribution to a subdirectory of the "
"application installation is sufficient to provide a loadable Python "
"interpreter."
msgstr ""
"Програми, написані у рідному коді, часто вимагають певної форми мови "
"сценаріїв, і для цієї мети можна використовувати вбудований дистрибутив "
"Python. Загалом, більшість програми створено у власному коді, а деяка "
"частина або викликає ``python.exe``, або безпосередньо використовує "
"``python3.dll``. У будь-якому випадку вилучення вбудованого дистрибутива до "
"підкаталогу інсталяції програми достатньо для забезпечення завантажуваного "
"інтерпретатора Python."

#: ../../using/windows.rst:591
msgid ""
"As with the application use, packages can be installed to any location as "
"there is an opportunity to specify search paths before initializing the "
"interpreter. Otherwise, there is no fundamental differences between using "
"the embedded distribution and a regular installation."
msgstr ""
"Як і у випадку з використанням програми, пакети можна встановити в будь-яке "
"місце, оскільки є можливість вказати шляхи пошуку перед ініціалізацією "
"інтерпретатора. В іншому принципових відмінностей між використанням "
"вбудованого дистрибутива і звичайною установкою немає."

#: ../../using/windows.rst:598
msgid "Alternative bundles"
msgstr "Альтернативні пучки"

#: ../../using/windows.rst:600
msgid ""
"Besides the standard CPython distribution, there are modified packages "
"including additional functionality.  The following is a list of popular "
"versions and their key features:"
msgstr ""
"Окрім стандартного дистрибутива CPython, існують модифіковані пакети, що "
"включають додаткові функції. Нижче наведено список популярних версій та їхні"
" основні функції:"

#: ../../using/windows.rst:604
msgid "`ActivePython <https://www.activestate.com/products/python/>`_"
msgstr ""

#: ../../using/windows.rst:605
msgid "Installer with multi-platform compatibility, documentation, PyWin32"
msgstr "Інсталятор з мультиплатформенною сумісністю, документація, PyWin32"

#: ../../using/windows.rst:607
msgid "`Anaconda <https://www.anaconda.com/download/>`_"
msgstr "`Анаконда <https://www.anaconda.com/download/>`_"

#: ../../using/windows.rst:608
msgid ""
"Popular scientific modules (such as numpy, scipy and pandas) and the "
"``conda`` package manager."
msgstr ""
"Науково-популярні модулі (такі як numpy, scipy і pandas) і менеджер пакетів "
"``conda``."

#: ../../using/windows.rst:611
msgid ""
"`Enthought Deployment Manager "
"<https://assets.enthought.com/downloads/edm/>`_"
msgstr ""

#: ../../using/windows.rst:612
msgid "\"The Next Generation Python Environment and Package Manager\"."
msgstr ""

#: ../../using/windows.rst:614
msgid ""
"Previously Enthought provided Canopy, but it `reached end of life in 2016 "
"<https://support.enthought.com/hc/en-us/articles/360038600051-Canopy-GUI-"
"end-of-life-transition-to-the-Enthought-Deployment-Manager-EDM-and-Visual-"
"Studio-Code>`_."
msgstr ""

#: ../../using/windows.rst:617
msgid "`WinPython <https://winpython.github.io/>`_"
msgstr "`WinPython <https://winpython.github.io/>`_"

#: ../../using/windows.rst:618
msgid ""
"Windows-specific distribution with prebuilt scientific packages and tools "
"for building packages."
msgstr ""
"Спеціальний дистрибутив для Windows із попередньо зібраними науковими "
"пакетами та інструментами для створення пакетів."

#: ../../using/windows.rst:621
msgid ""
"Note that these packages may not include the latest versions of Python or "
"other libraries, and are not maintained or supported by the core Python "
"team."
msgstr ""
"Зауважте, що ці пакети можуть не включати останні версії Python або інші "
"бібліотеки, а також не обслуговуються та не підтримуються основною командою "
"Python."

#: ../../using/windows.rst:627
msgid "Configuring Python"
msgstr "Налаштування Python"

#: ../../using/windows.rst:629
msgid ""
"To run Python conveniently from a command prompt, you might consider "
"changing some default environment variables in Windows.  While the installer"
" provides an option to configure the PATH and PATHEXT variables for you, "
"this is only reliable for a single, system-wide installation.  If you "
"regularly use multiple versions of Python, consider using the "
":ref:`launcher`."
msgstr ""
"Щоб зручно запускати Python із командного рядка, ви можете змінити деякі "
"змінні середовища за замовчуванням у Windows. Хоча інсталятор надає "
"можливість налаштувати змінні PATH і PATHEXT для вас, це надійно лише для "
"однієї інсталяції в системі. Якщо ви регулярно використовуєте кілька версій "
"Python, подумайте про використання :ref:`launcher`."

#: ../../using/windows.rst:639
msgid "Excursus: Setting environment variables"
msgstr "Екскурс: Встановлення змінних середовища"

#: ../../using/windows.rst:641
msgid ""
"Windows allows environment variables to be configured permanently at both "
"the User level and the System level, or temporarily in a command prompt."
msgstr ""
"Windows дозволяє постійно налаштовувати змінні середовища як на рівні "
"користувача, так і на рівні системи або тимчасово в командному рядку."

#: ../../using/windows.rst:644
msgid ""
"To temporarily set environment variables, open Command Prompt and use the "
":command:`set` command:"
msgstr ""
"Щоб тимчасово встановити змінні середовища, відкрийте командний рядок і "
"скористайтеся командою :command:`set`:"

#: ../../using/windows.rst:647
msgid ""
"C:\\>set PATH=C:\\Program Files\\Python 3.9;%PATH%\n"
"C:\\>set PYTHONPATH=%PYTHONPATH%;C:\\My_python_lib\n"
"C:\\>python"
msgstr ""

#: ../../using/windows.rst:653
msgid ""
"These changes will apply to any further commands executed in that console, "
"and will be inherited by any applications started from the console."
msgstr ""
"Ці зміни застосовуватимуться до будь-яких подальших команд, що виконуються "
"на цій консолі, і будуть успадковані будь-якими програмами, запущеними з "
"консолі."

#: ../../using/windows.rst:656
msgid ""
"Including the variable name within percent signs will expand to the existing"
" value, allowing you to add your new value at either the start or the end. "
"Modifying :envvar:`PATH` by adding the directory containing "
":program:`python.exe` to the start is a common way to ensure the correct "
"version of Python is launched."
msgstr ""
"Включення назви змінної до знаків відсотка розширить наявне значення, що "
"дозволить вам додати нове значення на початку або в кінці. Змінення "
":envvar:`PATH` шляхом додавання каталогу, що містить :program:`python.exe` "
"на початок, є поширеним способом забезпечення запуску правильної версії "
"Python."

#: ../../using/windows.rst:662
msgid ""
"To permanently modify the default environment variables, click Start and "
"search for 'edit environment variables', or open System properties, "
":guilabel:`Advanced system settings` and click the :guilabel:`Environment "
"Variables` button. In this dialog, you can add or modify User and System "
"variables. To change System variables, you need non-restricted access to "
"your machine (i.e. Administrator rights)."
msgstr ""
"Щоб остаточно змінити змінні середовища за замовчуванням, клацніть \"Пуск\" "
"і знайдіть \"редагувати змінні середовища\" або відкрийте властивості "
"системи, :guilabel:`Advanced system settings` і натисніть кнопку "
":guilabel:`Environment Variables`. У цьому діалоговому вікні ви можете "
"додавати або змінювати змінні користувача та системи. Щоб змінити системні "
"змінні, вам потрібен необмежений доступ до вашої машини (тобто права "
"адміністратора)."

#: ../../using/windows.rst:671
msgid ""
"Windows will concatenate User variables *after* System variables, which may "
"cause unexpected results when modifying :envvar:`PATH`."
msgstr ""
"Windows об’єднає змінні користувача *після* системних змінних, що може "
"призвести до неочікуваних результатів під час зміни :envvar:`PATH`."

#: ../../using/windows.rst:674
msgid ""
"The :envvar:`PYTHONPATH` variable is used by all versions of Python, so you "
"should not permanently configure it unless the listed paths only include "
"code that is compatible with all of your installed Python versions."
msgstr ""
"Змінна :envvar:`PYTHONPATH` використовується всіма версіями Python, тому вам"
" не слід постійно налаштовувати її, якщо перелічені шляхи не містять лише "
"коду, сумісного з усіма встановленими версіями Python."

#: ../../using/windows.rst:681
msgid ""
"https://learn.microsoft.com/windows/win32/procthread/environment-variables"
msgstr ""

#: ../../using/windows.rst:682
msgid "Overview of environment variables on Windows"
msgstr "Огляд змінних середовища в Windows"

#: ../../using/windows.rst:684
msgid ""
"https://learn.microsoft.com/windows-server/administration/windows-"
"commands/set_1"
msgstr ""

#: ../../using/windows.rst:685
msgid "The ``set`` command, for temporarily modifying environment variables"
msgstr "Команда ``set`` для тимчасової зміни змінних середовища"

#: ../../using/windows.rst:687
msgid ""
"https://learn.microsoft.com/windows-server/administration/windows-"
"commands/setx"
msgstr ""

#: ../../using/windows.rst:688
msgid "The ``setx`` command, for permanently modifying environment variables"
msgstr "Команда ``setx`` для постійної зміни змінних середовища"

#: ../../using/windows.rst:694
msgid "Finding the Python executable"
msgstr "Пошук виконуваного файлу Python"

#: ../../using/windows.rst:698
msgid ""
"Besides using the automatically created start menu entry for the Python "
"interpreter, you might want to start Python in the command prompt. The "
"installer has an option to set that up for you."
msgstr ""
"Окрім використання автоматично створеного пункту меню \"Пуск\" для "
"інтерпретатора Python, ви можете запустити Python у командному рядку. "
"Інсталятор має можливість налаштувати це для вас."

#: ../../using/windows.rst:702
msgid ""
"On the first page of the installer, an option labelled \"Add Python to "
"PATH\" may be selected to have the installer add the install location into "
"the :envvar:`PATH`.  The location of the :file:`Scripts\\\\` folder is also "
"added. This allows you to type :command:`python` to run the interpreter, and"
" :command:`pip` for the package installer. Thus, you can also execute your "
"scripts with command line options, see :ref:`using-on-cmdline` "
"documentation."
msgstr ""
"На першій сторінці інсталятора можна вибрати опцію \"Додати Python до "
"ШЛЯХУ\", щоб інсталятор додав місце встановлення до :envvar:`PATH`. Також "
"додано розташування папки :file:`Scripts\\\\`. Це дозволяє ввести "
":command:`python` для запуску інтерпретатора та :command:`pip` для "
"інсталятора пакунків. Таким чином, ви також можете виконувати ваші сценарії "
"з параметрами командного рядка, дивіться документацію :ref:`using-on-"
"cmdline`."

#: ../../using/windows.rst:709
msgid ""
"If you don't enable this option at install time, you can always re-run the "
"installer, select Modify, and enable it.  Alternatively, you can manually "
"modify the :envvar:`PATH` using the directions in :ref:`setting-envvars`.  "
"You need to set your :envvar:`PATH` environment variable to include the "
"directory of your Python installation, delimited by a semicolon from other "
"entries.  An example variable could look like this (assuming the first two "
"entries already existed)::"
msgstr ""
"Якщо ви не ввімкнете цей параметр під час інсталяції, ви завжди можете "
"повторно запустити інсталятор, вибрати \"Змінити\" та ввімкнути його. Крім "
"того, ви можете вручну змінити :envvar:`PATH`, використовуючи вказівки в "
":ref:`setting-envvars`. Вам потрібно налаштувати змінну середовища "
":envvar:`PATH`, щоб включити каталог вашої інсталяції Python, відокремлений "
"крапкою з комою від інших записів. Приклад змінної може виглядати так (за "
"умови, що перші два записи вже існують):"

#: ../../using/windows.rst:717
msgid "C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\Program Files\\Python 3.9"
msgstr ""

#: ../../using/windows.rst:722
msgid "UTF-8 mode"
msgstr "Режим UTF-8"

#: ../../using/windows.rst:726
msgid ""
"Windows still uses legacy encodings for the system encoding (the ANSI Code "
"Page).  Python uses it for the default encoding of text files (e.g. "
":func:`locale.getencoding`)."
msgstr ""

#: ../../using/windows.rst:730
msgid ""
"This may cause issues because UTF-8 is widely used on the internet and most "
"Unix systems, including WSL (Windows Subsystem for Linux)."
msgstr ""
"Це може спричинити проблеми, оскільки UTF-8 широко використовується в "
"Інтернеті та більшості систем Unix, включаючи WSL (підсистема Windows для "
"Linux)."

#: ../../using/windows.rst:733
msgid ""
"You can use the :ref:`Python UTF-8 Mode <utf8-mode>` to change the default "
"text encoding to UTF-8. You can enable the :ref:`Python UTF-8 Mode "
"<utf8-mode>` via the ``-X utf8`` command line option, or the "
"``PYTHONUTF8=1`` environment variable.  See :envvar:`PYTHONUTF8` for "
"enabling UTF-8 mode, and :ref:`setting-envvars` for how to modify "
"environment variables."
msgstr ""
"Ви можете використати режим :ref:`Python UTF-8 Mode <utf8-mode>`, щоб "
"змінити стандартне кодування тексту на UTF-8. Ви можете ввімкнути "
":ref:`Режим Python UTF-8 <utf8-mode>` за допомогою параметра командного "
"рядка ``-X utf8`` або змінної середовища ``PYTHONUTF8=1``. Перегляньте "
":envvar:`PYTHONUTF8`, щоб увімкнути режим UTF-8, і :ref:`setting-envvars`, "
"щоб дізнатися, як змінити змінні середовища."

#: ../../using/windows.rst:739
msgid ""
"When the :ref:`Python UTF-8 Mode <utf8-mode>` is enabled, you can still use "
"the system encoding (the ANSI Code Page) via the \"mbcs\" codec."
msgstr ""
"Коли режим :ref:`Python UTF-8 Mode <utf8-mode>` увімкнено, ви все ще можете "
"використовувати системне кодування (кодову сторінку ANSI) через кодек "
"\"mbcs\"."

#: ../../using/windows.rst:742
msgid ""
"Note that adding ``PYTHONUTF8=1`` to the default environment variables will "
"affect all Python 3.7+ applications on your system. If you have any Python "
"3.7+ applications which rely on the legacy system encoding, it is "
"recommended to set the environment variable temporarily or use the ``-X "
"utf8`` command line option."
msgstr ""
"Зауважте, що додавання ``PYTHONUTF8=1`` до змінних середовища за "
"замовчуванням вплине на всі програми Python 3.7+ у вашій системі. Якщо у вас"
" є будь-які програми Python 3.7+, які покладаються на застаріле системне "
"кодування, рекомендується тимчасово встановити змінну середовища або "
"скористатися параметром командного рядка ``-X utf8``."

#: ../../using/windows.rst:749
msgid ""
"Even when UTF-8 mode is disabled, Python uses UTF-8 by default on Windows "
"for:"
msgstr ""
"Навіть якщо режим UTF-8 вимкнено, Python за замовчуванням використовує UTF-8"
" у Windows для:"

#: ../../using/windows.rst:752
msgid "Console I/O including standard I/O (see :pep:`528` for details)."
msgstr ""
"Консольний ввід-вивід, включаючи стандартний ввід-вивід (подробиці див. "
":pep:`528`)."

#: ../../using/windows.rst:753
msgid ""
"The :term:`filesystem encoding <filesystem encoding and error handler>` (see"
" :pep:`529` for details)."
msgstr ""
":term:`кодування файлової системи <filesystem encoding and error handler>` "
"(докладніше див. :pep:`529`)."

#: ../../using/windows.rst:760
msgid "Python Launcher for Windows"
msgstr "Python Launcher для Windows"

#: ../../using/windows.rst:764
msgid ""
"The Python launcher for Windows is a utility which aids in locating and "
"executing of different Python versions.  It allows scripts (or the command-"
"line) to indicate a preference for a specific Python version, and will "
"locate and execute that version."
msgstr ""
"Засіб запуску Python для Windows — це утиліта, яка допомагає знаходити та "
"запускати різні версії Python. Це дозволяє сценаріям (або командному рядку) "
"вказувати перевагу для певної версії Python, а також знаходити та виконувати"
" цю версію."

#: ../../using/windows.rst:769
msgid ""
"Unlike the :envvar:`PATH` variable, the launcher will correctly select the "
"most appropriate version of Python. It will prefer per-user installations "
"over system-wide ones, and orders by language version rather than using the "
"most recently installed version."
msgstr ""
"На відміну від змінної :envvar:`PATH`, програма запуску правильно вибере "
"найбільш відповідну версію Python. Він віддасть перевагу інсталяціям для "
"кожного користувача, а не загальносистемним, і впорядковуватиметься за "
"мовною версією, а не з використанням останньої встановленої версії."

#: ../../using/windows.rst:774
msgid "The launcher was originally specified in :pep:`397`."
msgstr "Засіб запуску спочатку було зазначено в :pep:`397`."

#: ../../using/windows.rst:777
msgid "Getting started"
msgstr "Починаємо"

#: ../../using/windows.rst:780
msgid "From the command-line"
msgstr "З командного рядка"

#: ../../using/windows.rst:784
msgid ""
"System-wide installations of Python 3.3 and later will put the launcher on "
"your :envvar:`PATH`. The launcher is compatible with all available versions "
"of Python, so it does not matter which version is installed. To check that "
"the launcher is available, execute the following command in Command Prompt::"
msgstr ""
"Загальносистемні інсталяції Python 3.3 і пізнішої версії розмістять засіб "
"запуску на вашому :envvar:`PATH`. Панель запуску сумісна з усіма доступними "
"версіями Python, тому не має значення, яка версія встановлена. Щоб "
"перевірити, чи доступна програма запуску, виконайте таку команду в "
"командному рядку:"

#: ../../using/windows.rst:789
msgid "py"
msgstr ""

#: ../../using/windows.rst:791
msgid ""
"You should find that the latest version of Python you have installed is "
"started - it can be exited as normal, and any additional command-line "
"arguments specified will be sent directly to Python."
msgstr ""
"Ви повинні виявити, що запущено найновішу встановлену вами версію Python — "
"її можна вийти як зазвичай, і будь-які додаткові вказані аргументи "
"командного рядка будуть надіслані безпосередньо в Python."

#: ../../using/windows.rst:795
msgid ""
"If you have multiple versions of Python installed (e.g., 3.7 and |version|) "
"you will have noticed that Python |version| was started - to launch Python "
"3.7, try the command::"
msgstr ""
"Якщо у вас встановлено кілька версій Python (наприклад, 3.7 і |version|), ви"
" помітили, що Python |version| було запущено - щоб запустити Python 3.7, "
"спробуйте команду::"

#: ../../using/windows.rst:799
msgid "py -3.7"
msgstr ""

#: ../../using/windows.rst:801
msgid ""
"If you want the latest version of Python 2 you have installed, try the "
"command::"
msgstr ""
"Якщо вам потрібна остання встановлена версія Python 2, спробуйте команду::"

#: ../../using/windows.rst:804
msgid "py -2"
msgstr ""

#: ../../using/windows.rst:806
msgid ""
"If you see the following error, you do not have the launcher installed::"
msgstr "Якщо ви бачите таку помилку, у вас не встановлено програму запуску:"

#: ../../using/windows.rst:808
msgid ""
"'py' is not recognized as an internal or external command,\n"
"operable program or batch file."
msgstr ""

#: ../../using/windows.rst:811
msgid "The command::"
msgstr "Команда::"

#: ../../using/windows.rst:813
msgid "py --list"
msgstr ""

#: ../../using/windows.rst:815
msgid "displays the currently installed version(s) of Python."
msgstr "відображає поточну встановлену версію (версії) Python."

#: ../../using/windows.rst:817
msgid ""
"The ``-x.y`` argument is the short form of the ``-V:Company/Tag`` argument, "
"which allows selecting a specific Python runtime, including those that may "
"have come from somewhere other than python.org. Any runtime registered by "
"following :pep:`514` will be discoverable. The ``--list`` command lists all "
"available runtimes using the ``-V:`` format."
msgstr ""

#: ../../using/windows.rst:823
msgid ""
"When using the ``-V:`` argument, specifying the Company will limit selection"
" to runtimes from that provider, while specifying only the Tag will select "
"from all providers. Note that omitting the slash implies a tag::"
msgstr ""

#: ../../using/windows.rst:827
msgid ""
"# Select any '3.*' tagged runtime\n"
"py -V:3\n"
"\n"
"# Select any 'PythonCore' released runtime\n"
"py -V:PythonCore/\n"
"\n"
"# Select PythonCore's latest Python 3 runtime\n"
"py -V:PythonCore/3"
msgstr ""

#: ../../using/windows.rst:836
msgid ""
"The short form of the argument (``-3``) only ever selects from core Python "
"releases, and not other distributions. However, the longer form (``-V:3``) "
"will select from any."
msgstr ""

#: ../../using/windows.rst:840
msgid ""
"The Company is matched on the full string, case-insensitive. The Tag is "
"matched on either the full string, or a prefix, provided the next character "
"is a dot or a hyphen. This allows ``-V:3.1`` to match ``3.1-32``, but not "
"``3.10``. Tags are sorted using numerical ordering (``3.10`` is newer than "
"``3.1``), but are compared using text (``-V:3.01`` does not match ``3.1``)."
msgstr ""

#: ../../using/windows.rst:848
msgid "Virtual environments"
msgstr "Віртуальні середовища"

#: ../../using/windows.rst:852
msgid ""
"If the launcher is run with no explicit Python version specification, and a "
"virtual environment (created with the standard library :mod:`venv` module or"
" the external ``virtualenv`` tool) active, the launcher will run the virtual"
" environment's interpreter rather than the global one.  To run the global "
"interpreter, either deactivate the virtual environment, or explicitly "
"specify the global Python version."
msgstr ""
"Якщо програму запуску запускають без явної специфікації версії Python і "
"активне віртуальне середовище (створене за допомогою модуля стандартної "
"бібліотеки :mod:`venv` або зовнішнього інструменту ``virtualenv``), програма"
" запуску швидше запустить інтерпретатор віртуального середовища ніж "
"глобальна. Щоб запустити глобальний інтерпретатор, деактивуйте віртуальне "
"середовище або явно вкажіть глобальну версію Python."

#: ../../using/windows.rst:860
msgid "From a script"
msgstr "Зі сценарію"

#: ../../using/windows.rst:862
msgid ""
"Let's create a test Python script - create a file called ``hello.py`` with "
"the following contents"
msgstr ""
"Давайте створимо тестовий сценарій Python - створіть файл під назвою "
"``hello.py`` з таким вмістом"

#: ../../using/windows.rst:865
msgid ""
"#! python\n"
"import sys\n"
"sys.stdout.write(\"hello from Python %s\\n\" % (sys.version,))"
msgstr ""

#: ../../using/windows.rst:871
msgid "From the directory in which hello.py lives, execute the command::"
msgstr "З каталогу, в якому знаходиться hello.py, виконайте команду::"

#: ../../using/windows.rst:873
msgid "py hello.py"
msgstr ""

#: ../../using/windows.rst:875
msgid ""
"You should notice the version number of your latest Python 2.x installation "
"is printed.  Now try changing the first line to be:"
msgstr ""
"Слід помітити, що надруковано номер версії вашої останньої інсталяції Python"
" 2.x. Тепер спробуйте змінити перший рядок на:"

#: ../../using/windows.rst:878
msgid "#! python3"
msgstr ""

#: ../../using/windows.rst:882
msgid ""
"Re-executing the command should now print the latest Python 3.x information."
" As with the above command-line examples, you can specify a more explicit "
"version qualifier.  Assuming you have Python 3.7 installed, try changing the"
" first line to ``#! python3.7`` and you should find the 3.7 version "
"information printed."
msgstr ""

#: ../../using/windows.rst:888
msgid ""
"Note that unlike interactive use, a bare \"python\" will use the latest "
"version of Python 2.x that you have installed.  This is for backward "
"compatibility and for compatibility with Unix, where the command ``python`` "
"typically refers to Python 2."
msgstr ""
"Зауважте, що на відміну від інтерактивного використання, голий \"python\" "
"використовуватиме останню версію Python 2.x, яку ви встановили. Це для "
"зворотної сумісності та сумісності з Unix, де команда ``python`` зазвичай "
"відноситься до Python 2."

#: ../../using/windows.rst:894
msgid "From file associations"
msgstr "З асоціацій файлів"

#: ../../using/windows.rst:896
msgid ""
"The launcher should have been associated with Python files (i.e. ``.py``, "
"``.pyw``, ``.pyc`` files) when it was installed.  This means that when you "
"double-click on one of these files from Windows explorer the launcher will "
"be used, and therefore you can use the same facilities described above to "
"have the script specify the version which should be used."
msgstr ""
"Під час інсталяції програма запуску мала бути пов’язана з файлами Python "
"(тобто файлами ``.py``, ``.pyw``, ``.pyc``). Це означає, що коли ви двічі "
"клацаєте один із цих файлів у провіднику Windows, буде використано програму "
"запуску, і тому ви можете використовувати ті самі засоби, які описані вище, "
"щоб сценарій вказав версію, яку слід використовувати."

#: ../../using/windows.rst:902
msgid ""
"The key benefit of this is that a single launcher can support multiple "
"Python versions at the same time depending on the contents of the first "
"line."
msgstr ""
"Основною перевагою цього є те, що одна програма запуску може підтримувати "
"кілька версій Python одночасно залежно від вмісту першого рядка."

#: ../../using/windows.rst:906
msgid "Shebang Lines"
msgstr "Лінії Shebang"

#: ../../using/windows.rst:908
msgid ""
"If the first line of a script file starts with ``#!``, it is known as a "
"\"shebang\" line.  Linux and other Unix like operating systems have native "
"support for such lines and they are commonly used on such systems to "
"indicate how a script should be executed.  This launcher allows the same "
"facilities to be used with Python scripts on Windows and the examples above "
"demonstrate their use."
msgstr ""
"Якщо перший рядок файлу сценарію починається з ``#!``, він відомий як рядок "
"\"shebang\". Linux та інші Unix-подібні операційні системи мають власну "
"підтримку таких рядків, і вони зазвичай використовуються в таких системах, "
"щоб вказати, як повинен виконуватися сценарій. Цей засіб запуску дозволяє "
"використовувати ті самі можливості зі сценаріями Python у Windows, і "
"наведені вище приклади демонструють їх використання."

#: ../../using/windows.rst:915
msgid ""
"To allow shebang lines in Python scripts to be portable between Unix and "
"Windows, this launcher supports a number of 'virtual' commands to specify "
"which interpreter to use.  The supported virtual commands are:"
msgstr ""
"Щоб дозволити перенесення рядків shebang у сценаріях Python між Unix і "
"Windows, цей засіб запуску підтримує низку \"віртуальних\" команд, щоб "
"вказати, який інтерпретатор використовувати. Підтримувані віртуальні "
"команди:"

#: ../../using/windows.rst:919
msgid "``/usr/bin/env``"
msgstr ""

#: ../../using/windows.rst:920
msgid "``/usr/bin/python``"
msgstr "``/usr/bin/python``"

#: ../../using/windows.rst:921
msgid "``/usr/local/bin/python``"
msgstr "``/usr/local/bin/python``"

#: ../../using/windows.rst:922
msgid "``python``"
msgstr "``python``"

#: ../../using/windows.rst:924
msgid "For example, if the first line of your script starts with"
msgstr "Наприклад, якщо перший рядок вашого сценарію починається з"

#: ../../using/windows.rst:926
msgid "#! /usr/bin/python"
msgstr ""

#: ../../using/windows.rst:930
msgid ""
"The default Python or an active virtual environment will be located and "
"used. As many Python scripts written to work on Unix will already have this "
"line, you should find these scripts can be used by the launcher without "
"modification. If you are writing a new script on Windows which you hope will"
" be useful on Unix, you should use one of the shebang lines starting with "
"``/usr``."
msgstr ""

#: ../../using/windows.rst:936
msgid ""
"Any of the above virtual commands can be suffixed with an explicit version "
"(either just the major version, or the major and minor version). Furthermore"
" the 32-bit version can be requested by adding \"-32\" after the minor "
"version. I.e. ``/usr/bin/python3.7-32`` will request usage of the 32-bit "
"Python 3.7. If a virtual environment is active, the version will be ignored "
"and the environment will be used."
msgstr ""

#: ../../using/windows.rst:945
msgid ""
"Beginning with python launcher 3.7 it is possible to request 64-bit version "
"by the \"-64\" suffix. Furthermore it is possible to specify a major and "
"architecture without minor (i.e. ``/usr/bin/python3-64``)."
msgstr ""
"Починаючи з python launcher 3.7, можна запитувати 64-розрядну версію за "
"допомогою суфікса \"-64\". Крім того, можна вказати основну та архітектуру "
"без другорядної (тобто ``/usr/bin/python3-64``)."

#: ../../using/windows.rst:951
msgid ""
"The \"-64\" suffix is deprecated, and now implies \"any architecture that is"
" not provably i386/32-bit\". To request a specific environment, use the new "
":samp:`-V:{TAG}` argument with the complete tag."
msgstr ""

#: ../../using/windows.rst:957
msgid ""
"Virtual commands referencing ``python`` now prefer an active virtual "
"environment rather than searching :envvar:`PATH`. This handles cases where "
"the shebang specifies ``/usr/bin/env python3`` but :file:`python3.exe` is "
"not present in the active environment."
msgstr ""

#: ../../using/windows.rst:962
msgid ""
"The ``/usr/bin/env`` form of shebang line has one further special property. "
"Before looking for installed Python interpreters, this form will search the "
"executable :envvar:`PATH` for a Python executable matching the name provided"
" as the first argument. This corresponds to the behaviour of the Unix "
"``env`` program, which performs a :envvar:`PATH` search. If an executable "
"matching the first argument after the ``env`` command cannot be found, but "
"the argument starts with ``python``, it will be handled as described for the"
" other virtual commands. The environment variable "
":envvar:`PYLAUNCHER_NO_SEARCH_PATH` may be set (to any value) to skip this "
"search of :envvar:`PATH`."
msgstr ""

#: ../../using/windows.rst:973
msgid ""
"Shebang lines that do not match any of these patterns are looked up in the "
"``[commands]`` section of the launcher's :ref:`.INI file <launcher-ini>`. "
"This may be used to handle certain commands in a way that makes sense for "
"your system. The name of the command must be a single argument (no spaces in"
" the shebang executable), and the value substituted is the full path to the "
"executable (additional arguments specified in the .INI will be quoted as "
"part of the filename)."
msgstr ""

#: ../../using/windows.rst:981
msgid ""
"[commands]\n"
"/bin/xpython=C:\\Program Files\\XPython\\python.exe"
msgstr ""

#: ../../using/windows.rst:986
msgid ""
"Any commands not found in the .INI file are treated as **Windows** "
"executable paths that are absolute or relative to the directory containing "
"the script file. This is a convenience for Windows-only scripts, such as "
"those generated by an installer, since the behavior is not compatible with "
"Unix-style shells. These paths may be quoted, and may include multiple "
"arguments, after which the path to the script and any additional arguments "
"will be appended."
msgstr ""

#: ../../using/windows.rst:995
msgid "Arguments in shebang lines"
msgstr "Аргументи в рядках shebang"

#: ../../using/windows.rst:997
msgid ""
"The shebang lines can also specify additional options to be passed to the "
"Python interpreter.  For example, if you have a shebang line:"
msgstr ""
"Рядки shebang також можуть вказувати додаткові параметри, які передаються "
"інтерпретатору Python. Наприклад, якщо у вас є лінія шибенг:"

#: ../../using/windows.rst:1000
msgid "#! /usr/bin/python -v"
msgstr ""

#: ../../using/windows.rst:1004
msgid "Then Python will be started with the ``-v`` option"
msgstr "Тоді Python буде запущено з опцією ``-v``"

#: ../../using/windows.rst:1007
msgid "Customization"
msgstr "Налаштування"

#: ../../using/windows.rst:1012
msgid "Customization via INI files"
msgstr "Налаштування за допомогою файлів INI"

#: ../../using/windows.rst:1014
msgid ""
"Two .ini files will be searched by the launcher - ``py.ini`` in the current "
"user's application data directory (``%LOCALAPPDATA%`` or "
"``$env:LocalAppData``) and ``py.ini`` in the same directory as the launcher."
" The same .ini files are used for both the 'console' version of the launcher"
" (i.e. py.exe) and for the 'windows' version (i.e. pyw.exe)."
msgstr ""

#: ../../using/windows.rst:1020
msgid ""
"Customization specified in the \"application directory\" will have "
"precedence over the one next to the executable, so a user, who may not have "
"write access to the .ini file next to the launcher, can override commands in"
" that global .ini file."
msgstr ""
"Налаштування, указані в \"каталозі програми\", матимуть перевагу над "
"налаштуваннями поруч із виконуваним файлом, тому користувач, який може не "
"мати права запису до файлу .ini поруч із засобом запуску, може замінити "
"команди в цьому глобальному файлі .ini."

#: ../../using/windows.rst:1025
msgid "Customizing default Python versions"
msgstr "Налаштування версій Python за замовчуванням"

#: ../../using/windows.rst:1027
msgid ""
"In some cases, a version qualifier can be included in a command to dictate "
"which version of Python will be used by the command. A version qualifier "
"starts with a major version number and can optionally be followed by a "
"period ('.') and a minor version specifier. Furthermore it is possible to "
"specify if a 32 or 64 bit implementation shall be requested by adding "
"\"-32\" or \"-64\"."
msgstr ""
"У деяких випадках у команду можна включити кваліфікатор версії, щоб вказати,"
" яку версію Python використовуватиме команда. Специфікатор версії "
"починається з основного номера версії та за бажанням може супроводжуватися "
"крапкою ('.') і другорядним специфікатором версії. Крім того, можна вказати,"
" чи потрібно запитувати 32- або 64-бітну реалізацію, додавши \"-32\" або "
"\"-64\"."

#: ../../using/windows.rst:1033
msgid ""
"For example, a shebang line of ``#!python`` has no version qualifier, while "
"``#!python3`` has a version qualifier which specifies only a major version."
msgstr ""
"Наприклад, рядок shebang ``#!python`` не має кваліфікатора версії, тоді як "
"``#!python3`` має кваліфікатор версії, який визначає лише основну версію."

#: ../../using/windows.rst:1036
msgid ""
"If no version qualifiers are found in a command, the environment variable "
":envvar:`PY_PYTHON` can be set to specify the default version qualifier. If "
"it is not set, the default is \"3\". The variable can specify any value that"
" may be passed on the command line, such as \"3\", \"3.7\", \"3.7-32\" or "
"\"3.7-64\". (Note that the \"-64\" option is only available with the "
"launcher included with Python 3.7 or newer.)"
msgstr ""
"Якщо в команді не знайдено кваліфікаторів версії, змінну середовища "
":envvar:`PY_PYTHON` можна встановити для визначення кваліфікатора версії за "
"замовчуванням. Якщо його не встановлено, за замовчуванням буде \"3\". Змінна"
" може вказувати будь-яке значення, яке можна передати в командному рядку, "
"наприклад \"3\", \"3.7\", \"3.7-32\" або \"3.7-64\". (Зауважте, що параметр "
"\"-64\" доступний лише з програмою запуску, яка входить до складу Python 3.7"
" або новішої версії.)"

#: ../../using/windows.rst:1043
msgid ""
"If no minor version qualifiers are found, the environment variable "
"``PY_PYTHON{major}`` (where ``{major}`` is the current major version "
"qualifier as determined above) can be set to specify the full version. If no"
" such option is found, the launcher will enumerate the installed Python "
"versions and use the latest minor release found for the major version, which"
" is likely, although not guaranteed, to be the most recently installed "
"version in that family."
msgstr ""
"Якщо кваліфікаторів другорядної версії не знайдено, змінну середовища "
"``PY_PYTHON{major}`` (де ``{major}`` є поточним кваліфікатором основної "
"версії, як визначено вище) можна встановити для визначення повної версії. "
"Якщо такий параметр не знайдено, програма запуску перерахує встановлені "
"версії Python і використає останній другорядний випуск, знайдений для "
"основної версії, який, імовірно, хоча й не гарантовано, буде останньою "
"встановленою версією в цьому сімействі."

#: ../../using/windows.rst:1051
msgid ""
"On 64-bit Windows with both 32-bit and 64-bit implementations of the same "
"(major.minor) Python version installed, the 64-bit version will always be "
"preferred. This will be true for both 32-bit and 64-bit implementations of "
"the launcher - a 32-bit launcher will prefer to execute a 64-bit Python "
"installation of the specified version if available. This is so the behavior "
"of the launcher can be predicted knowing only what versions are installed on"
" the PC and without regard to the order in which they were installed (i.e., "
"without knowing whether a 32 or 64-bit version of Python and corresponding "
"launcher was installed last). As noted above, an optional \"-32\" or \"-64\""
" suffix can be used on a version specifier to change this behaviour."
msgstr ""
"У 64-розрядній Windows з інстальованою 32-розрядною та 64-розрядною "
"реалізаціями однієї (major.minor) версії Python 64-розрядна версія завжди "
"матиме перевагу. Це буде вірно як для 32-розрядної, так і для 64-розрядної "
"реалізації програми запуску - 32-розрядна програма запуску віддасть перевагу"
" виконанню 64-розрядної інсталяції Python зазначеної версії, якщо вона "
"доступна. Тому можна передбачити поведінку програми запуску, знаючи лише те,"
" які версії встановлено на ПК, і незалежно від порядку їх інсталяції (тобто "
"не знаючи, 32- чи 64-бітну версію Python і відповідну програму запуску було "
"встановлено). встановлено останнім). Як зазначалося вище, необов’язковий "
"суфікс \"-32\" або \"-64\" можна використовувати у специфікаторі версії, щоб"
" змінити цю поведінку."

#: ../../using/windows.rst:1062
msgid "Examples:"
msgstr "приклади:"

#: ../../using/windows.rst:1064
msgid ""
"If no relevant options are set, the commands ``python`` and ``python2`` will"
" use the latest Python 2.x version installed and the command ``python3`` "
"will use the latest Python 3.x installed."
msgstr ""
"Якщо відповідні параметри не встановлено, команди ``python`` і ``python2`` "
"використовуватимуть останню встановлену версію Python 2.x, а команда "
"``python3`` використовуватиме останню встановлену версію Python 3.x."

#: ../../using/windows.rst:1068
msgid ""
"The command ``python3.7`` will not consult any options at all as the "
"versions are fully specified."
msgstr ""
"Команда ``python3.7`` взагалі не перевірятиме жодних параметрів, оскільки "
"версії вказано повністю."

#: ../../using/windows.rst:1071
msgid ""
"If ``PY_PYTHON=3``, the commands ``python`` and ``python3`` will both use "
"the latest installed Python 3 version."
msgstr ""
"Якщо ``PY_PYTHON=3``, обидві команди ``python`` і ``python3`` "
"використовуватимуть останню встановлену версію Python 3."

#: ../../using/windows.rst:1074
msgid ""
"If ``PY_PYTHON=3.7-32``, the command ``python`` will use the 32-bit "
"implementation of 3.7 whereas the command ``python3`` will use the latest "
"installed Python (PY_PYTHON was not considered at all as a major version was"
" specified.)"
msgstr ""
"Якщо ``PY_PYTHON=3.7-32``, команда ``python`` використовуватиме 32-розрядну "
"реалізацію 3.7, тоді як команда ``python3`` використовуватиме останній "
"встановлений Python (PY_PYTHON взагалі не розглядався як була вказана "
"основна версія.)"

#: ../../using/windows.rst:1079
msgid ""
"If ``PY_PYTHON=3`` and ``PY_PYTHON3=3.7``, the commands ``python`` and "
"``python3`` will both use specifically 3.7"
msgstr ""
"Якщо ``PY_PYTHON=3`` і ``PY_PYTHON3=3.7``, обидві команди ``python`` і "
"``python3`` використовуватимуть саме 3.7"

#: ../../using/windows.rst:1082
msgid ""
"In addition to environment variables, the same settings can be configured in"
" the .INI file used by the launcher.  The section in the INI file is called "
"``[defaults]`` and the key name will be the same as the environment "
"variables without the leading ``PY_`` prefix (and note that the key names in"
" the INI file are case insensitive.)  The contents of an environment "
"variable will override things specified in the INI file."
msgstr ""
"Окрім змінних середовища, ті самі параметри можна налаштувати у файлі .INI, "
"який використовується програмою запуску. Розділ у файлі INI називається "
"``[defaults]``, і назва ключа буде такою ж, як і змінні середовища, без "
"початкового префікса ``PY_`` (і зауважте, що назви ключа у файлі INI "
"нечутливі до регістру .) Вміст змінної середовища перевизначає речі, вказані"
" у файлі INI."

#: ../../using/windows.rst:1089
msgid "For example:"
msgstr "Наприклад:"

#: ../../using/windows.rst:1091
msgid "Setting ``PY_PYTHON=3.7`` is equivalent to the INI file containing:"
msgstr "Параметр ``PY_PYTHON=3.7`` еквівалентний файлу INI, який містить:"

#: ../../using/windows.rst:1093
msgid ""
"[defaults]\n"
"python=3.7"
msgstr ""

#: ../../using/windows.rst:1098
msgid ""
"Setting ``PY_PYTHON=3`` and ``PY_PYTHON3=3.7`` is equivalent to the INI file"
" containing:"
msgstr ""
"Параметри ``PY_PYTHON=3`` і ``PY_PYTHON3=3.7`` еквівалентні файлу INI, який "
"містить:"

#: ../../using/windows.rst:1101
msgid ""
"[defaults]\n"
"python=3\n"
"python3=3.7"
msgstr ""

#: ../../using/windows.rst:1108
msgid "Diagnostics"
msgstr "діагностика"

#: ../../using/windows.rst:1110
msgid ""
"If an environment variable :envvar:`PYLAUNCHER_DEBUG` is set (to any value),"
" the launcher will print diagnostic information to stderr (i.e. to the "
"console). While this information manages to be simultaneously verbose *and* "
"terse, it should allow you to see what versions of Python were located, why "
"a particular version was chosen and the exact command-line used to execute "
"the target Python. It is primarily intended for testing and debugging."
msgstr ""

#: ../../using/windows.rst:1118
msgid "Dry Run"
msgstr ""

#: ../../using/windows.rst:1120
msgid ""
"If an environment variable :envvar:`PYLAUNCHER_DRYRUN` is set (to any "
"value), the launcher will output the command it would have run, but will not"
" actually launch Python. This may be useful for tools that want to use the "
"launcher to detect and then launch Python directly. Note that the command "
"written to standard output is always encoded using UTF-8, and may not render"
" correctly in the console."
msgstr ""

#: ../../using/windows.rst:1128
msgid "Install on demand"
msgstr ""

#: ../../using/windows.rst:1130
msgid ""
"If an environment variable :envvar:`PYLAUNCHER_ALLOW_INSTALL` is set (to any"
" value), and the requested Python version is not installed but is available "
"on the Microsoft Store, the launcher will attempt to install it. This may "
"require user interaction to complete, and you may need to run the command "
"again."
msgstr ""

#: ../../using/windows.rst:1135
msgid ""
"An additional :envvar:`PYLAUNCHER_ALWAYS_INSTALL` variable causes the "
"launcher to always try to install Python, even if it is detected. This is "
"mainly intended for testing (and should be used with "
":envvar:`PYLAUNCHER_DRYRUN`)."
msgstr ""

#: ../../using/windows.rst:1140
msgid "Return codes"
msgstr ""

#: ../../using/windows.rst:1142
msgid ""
"The following exit codes may be returned by the Python launcher. "
"Unfortunately, there is no way to distinguish these from the exit code of "
"Python itself."
msgstr ""

#: ../../using/windows.rst:1145
msgid ""
"The names of codes are as used in the sources, and are only for reference. "
"There is no way to access or resolve them apart from reading this page. "
"Entries are listed in alphabetical order of names."
msgstr ""

#: ../../using/windows.rst:1150
msgid "Value"
msgstr "Значення"

#: ../../using/windows.rst:1152
msgid "RC_BAD_VENV_CFG"
msgstr ""

#: ../../using/windows.rst:1152
msgid "107"
msgstr ""

#: ../../using/windows.rst:1152
msgid "A :file:`pyvenv.cfg` was found but is corrupt."
msgstr ""

#: ../../using/windows.rst:1154
msgid "RC_CREATE_PROCESS"
msgstr ""

#: ../../using/windows.rst:1154
msgid "101"
msgstr ""

#: ../../using/windows.rst:1154
msgid "Failed to launch Python."
msgstr ""

#: ../../using/windows.rst:1156
msgid "RC_INSTALLING"
msgstr ""

#: ../../using/windows.rst:1156
msgid "111"
msgstr ""

#: ../../using/windows.rst:1156
msgid ""
"An install was started, but the command will need to be re-run after it "
"completes."
msgstr ""

#: ../../using/windows.rst:1159
msgid "RC_INTERNAL_ERROR"
msgstr ""

#: ../../using/windows.rst:1159
msgid "109"
msgstr ""

#: ../../using/windows.rst:1159
msgid "Unexpected error. Please report a bug."
msgstr ""

#: ../../using/windows.rst:1161
msgid "RC_NO_COMMANDLINE"
msgstr ""

#: ../../using/windows.rst:1161
msgid "108"
msgstr ""

#: ../../using/windows.rst:1161
msgid "Unable to obtain command line from the operating system."
msgstr ""

#: ../../using/windows.rst:1164
msgid "RC_NO_PYTHON"
msgstr ""

#: ../../using/windows.rst:1164
msgid "103"
msgstr ""

#: ../../using/windows.rst:1164
msgid "Unable to locate the requested version."
msgstr ""

#: ../../using/windows.rst:1166
msgid "RC_NO_VENV_CFG"
msgstr ""

#: ../../using/windows.rst:1166
msgid "106"
msgstr ""

#: ../../using/windows.rst:1166
msgid "A :file:`pyvenv.cfg` was required but not found."
msgstr ""

#: ../../using/windows.rst:1174
msgid "Finding modules"
msgstr "Пошук модулів"

#: ../../using/windows.rst:1176
msgid ""
"These notes supplement the description at :ref:`sys-path-init` with detailed"
" Windows notes."
msgstr ""

#: ../../using/windows.rst:1179
msgid ""
"When no ``._pth`` file is found, this is how :data:`sys.path` is populated "
"on Windows:"
msgstr ""
"Якщо файл ``._pth`` не знайдено, :data:`sys.path` заповнюється у Windows "
"таким чином:"

#: ../../using/windows.rst:1182
msgid ""
"An empty entry is added at the start, which corresponds to the current "
"directory."
msgstr ""
"На початку додається порожній запис, який відповідає поточному каталогу."

#: ../../using/windows.rst:1185
msgid ""
"If the environment variable :envvar:`PYTHONPATH` exists, as described in "
":ref:`using-on-envvars`, its entries are added next.  Note that on Windows, "
"paths in this variable must be separated by semicolons, to distinguish them "
"from the colon used in drive identifiers (``C:\\`` etc.)."
msgstr ""
"Якщо змінна середовища :envvar:`PYTHONPATH` існує, як описано в :ref:`using-"
"on-envvars`, її записи додаються наступними. Зауважте, що в Windows шляхи в "
"цій змінній мають бути розділені крапкою з комою, щоб відрізнити їх від "
"двокрапки, яка використовується в ідентифікаторах дисків (``C:\\`` тощо)."

#: ../../using/windows.rst:1190
msgid ""
"Additional \"application paths\" can be added in the registry as subkeys of "
":samp:`\\\\SOFTWARE\\\\Python\\\\PythonCore\\\\{version}\\\\PythonPath` "
"under both the ``HKEY_CURRENT_USER`` and ``HKEY_LOCAL_MACHINE`` hives.  "
"Subkeys which have semicolon-delimited path strings as their default value "
"will cause each path to be added to :data:`sys.path`.  (Note that all known "
"installers only use HKLM, so HKCU is typically empty.)"
msgstr ""
"Додаткові \"шляхи до програм\" можна додати до реєстру як підрозділи "
":samp:`\\\\SOFTWARE\\\\Python\\\\PythonCore\\\\{version}\\\\PythonPath` як у"
" ``HKEY_CURRENT_USER``, так і в ``HKEY_LOCAL_MACHINE`` вулики. Підключі, які"
" мають рядки шляху, розділені крапкою з комою як значення за замовчуванням, "
"спричинять додавання кожного шляху до :data:`sys.path`. (Зверніть увагу, що "
"всі відомі інсталятори використовують лише HKLM, тому HKCU зазвичай "
"порожній.)"

#: ../../using/windows.rst:1197
msgid ""
"If the environment variable :envvar:`PYTHONHOME` is set, it is assumed as "
"\"Python Home\".  Otherwise, the path of the main Python executable is used "
"to locate a \"landmark file\" (either ``Lib\\os.py`` or ``pythonXY.zip``) to"
" deduce the \"Python Home\".  If a Python home is found, the relevant sub-"
"directories added to :data:`sys.path` (``Lib``, ``plat-win``, etc) are based"
" on that folder.  Otherwise, the core Python path is constructed from the "
"PythonPath stored in the registry."
msgstr ""
"Якщо встановлено змінну середовища :envvar:`PYTHONHOME`, вона вважається "
"\"Python Home\". В іншому випадку шлях основного виконуваного файлу Python "
"використовується для пошуку \"файлу орієнтира\" (або ``Lib\\os.py``, або "
"``pythonXY.zip``), щоб вивести \"Домашню сторінку Python\". Якщо домашню "
"сторінку Python знайдено, відповідні підкаталоги, додані до :data:`sys.path`"
" (``Lib``, ``plat-win`` тощо), базуються на цій папці. В іншому випадку "
"основний шлях Python створюється з PythonPath, що зберігається в реєстрі."

#: ../../using/windows.rst:1205
msgid ""
"If the Python Home cannot be located, no :envvar:`PYTHONPATH` is specified "
"in the environment, and no registry entries can be found, a default path "
"with relative entries is used (e.g. ``.\\Lib;.\\plat-win``, etc)."
msgstr ""
"Якщо не вдається знайти домашню сторінку Python, у середовищі не вказано "
":envvar:`PYTHONPATH` і не можна знайти записи реєстру, використовується шлях"
" за замовчуванням із відносними записами (наприклад, ``.\\Lib;.\\plat-win`` "
"тощо)."

#: ../../using/windows.rst:1209
msgid ""
"If a ``pyvenv.cfg`` file is found alongside the main executable or in the "
"directory one level above the executable, the following variations apply:"
msgstr ""
"Якщо файл ``pyvenv.cfg`` знайдено поряд з основним виконуваним файлом або в "
"каталозі на один рівень вище виконуваного файлу, застосовуються такі "
"варіанти:"

#: ../../using/windows.rst:1212
msgid ""
"If ``home`` is an absolute path and :envvar:`PYTHONHOME` is not set, this "
"path is used instead of the path to the main executable when deducing the "
"home location."
msgstr ""
"Якщо ``home`` є абсолютним шляхом і :envvar:`PYTHONHOME` не встановлено, цей"
" шлях використовується замість шляху до основного виконуваного файлу під час"
" визначення домашнього розташування."

#: ../../using/windows.rst:1216
msgid "The end result of all this is:"
msgstr "Кінцевим результатом всього цього є:"

#: ../../using/windows.rst:1218
msgid ""
"When running :file:`python.exe`, or any other .exe in the main Python "
"directory (either an installed version, or directly from the PCbuild "
"directory), the core path is deduced, and the core paths in the registry are"
" ignored.  Other \"application paths\" in the registry are always read."
msgstr ""
"Під час запуску :file:`python.exe` або будь-якого іншого .exe в головному "
"каталозі Python (у встановленій версії або безпосередньо з каталогу PCbuild)"
" виводиться основний шлях, а основні шляхи в реєстрі ігноруються . Інші "
"\"шляхи програми\" в реєстрі завжди читаються."

#: ../../using/windows.rst:1223
msgid ""
"When Python is hosted in another .exe (different directory, embedded via "
"COM, etc), the \"Python Home\" will not be deduced, so the core path from "
"the registry is used.  Other \"application paths\" in the registry are "
"always read."
msgstr ""
"Коли Python розміщено в іншому .exe (іншому каталозі, вбудованому через COM "
"тощо), \"Домашня сторінка Python\" не буде виведена, тому використовується "
"основний шлях із реєстру. Інші \"шляхи програми\" в реєстрі завжди "
"читаються."

#: ../../using/windows.rst:1227
msgid ""
"If Python can't find its home and there are no registry value (frozen .exe, "
"some very strange installation setup) you get a path with some default, but "
"relative, paths."
msgstr ""
"Якщо Python не може знайти свій дім і немає значення реєстру (заморожений "
".exe, якісь дуже дивні налаштування встановлення), ви отримаєте шлях із "
"деякими типовими, але відносними шляхами."

#: ../../using/windows.rst:1231
msgid ""
"For those who want to bundle Python into their application or distribution, "
"the following advice will prevent conflicts with other installations:"
msgstr ""
"Для тих, хто хоче включити Python у свою програму чи дистрибутив, наступна "
"порада запобіжить конфліктам з іншими інсталяціями:"

#: ../../using/windows.rst:1234
msgid ""
"Include a ``._pth`` file alongside your executable containing the "
"directories to include. This will ignore paths listed in the registry and "
"environment variables, and also ignore :mod:`site` unless ``import site`` is"
" listed."
msgstr ""
"Додайте файл ``._pth`` разом із виконуваним файлом, який містить каталоги "
"для включення. Це ігноруватиме шляхи, вказані в реєстрі та змінних "
"середовища, а також ігноруватиме :mod:`site`, якщо ``імпортувати сайт`` не "
"зазначено."

#: ../../using/windows.rst:1239
msgid ""
"If you are loading :file:`python3.dll` or :file:`python37.dll` in your own "
"executable, explicitly set :c:member:`PyConfig.module_search_paths` before "
":c:func:`Py_InitializeFromConfig`."
msgstr ""

#: ../../using/windows.rst:1243
msgid ""
"Clear and/or overwrite :envvar:`PYTHONPATH` and set :envvar:`PYTHONHOME` "
"before launching :file:`python.exe` from your application."
msgstr ""
"Очистіть та/або перезапишіть :envvar:`PYTHONPATH` і встановіть "
":envvar:`PYTHONHOME` перед запуском :file:`python.exe` із вашої програми."

#: ../../using/windows.rst:1246
msgid ""
"If you cannot use the previous suggestions (for example, you are a "
"distribution that allows people to run :file:`python.exe` directly), ensure "
"that the landmark file (:file:`Lib\\\\os.py`) exists in your install "
"directory. (Note that it will not be detected inside a ZIP file, but a "
"correctly named ZIP file will be detected instead.)"
msgstr ""
"Якщо ви не можете використати попередні пропозиції (наприклад, ви є "
"дистрибутивом, який дозволяє людям запускати :file:`python.exe` "
"безпосередньо), переконайтеся, що файл орієнтира (:file:`Lib\\\\os.py`) "
"існує у вашому каталозі встановлення. (Зауважте, що його не буде виявлено "
"всередині ZIP-файлу, натомість буде виявлено ZIP-файл із правильною назвою.)"

#: ../../using/windows.rst:1252
msgid ""
"These will ensure that the files in a system-wide installation will not take"
" precedence over the copy of the standard library bundled with your "
"application. Otherwise, your users may experience problems using your "
"application. Note that the first suggestion is the best, as the others may "
"still be susceptible to non-standard paths in the registry and user site-"
"packages."
msgstr ""
"Це гарантує, що файли загальносистемної інсталяції не матимуть пріоритету "
"над копією стандартної бібліотеки, яка постачається разом із вашою "
"програмою. Інакше у ваших користувачів можуть виникнути проблеми з "
"використанням вашої програми. Зауважте, що перша пропозиція є найкращою, "
"оскільки інші все ще можуть бути чутливими до нестандартних шляхів у реєстрі"
" та пакетах сайтів користувачів."

#: ../../using/windows.rst:1260
msgid ""
"Add ``._pth`` file support and removes ``applocal`` option from "
"``pyvenv.cfg``."
msgstr ""

#: ../../using/windows.rst:1265
msgid ""
"Add :file:`python{XX}.zip` as a potential landmark when directly adjacent to"
" the executable."
msgstr ""

#: ../../using/windows.rst:1270
msgid ""
"Modules specified in the registry under ``Modules`` (not ``PythonPath``) may"
" be imported by :class:`importlib.machinery.WindowsRegistryFinder`. This "
"finder is enabled on Windows in 3.6.0 and earlier, but may need to be "
"explicitly added to :data:`sys.meta_path` in the future."
msgstr ""

#: ../../using/windows.rst:1276
msgid "Additional modules"
msgstr "Додаткові модулі"

#: ../../using/windows.rst:1278
msgid ""
"Even though Python aims to be portable among all platforms, there are "
"features that are unique to Windows.  A couple of modules, both in the "
"standard library and external, and snippets exist to use these features."
msgstr ""
"Незважаючи на те, що Python прагне бути переносним на всі платформи, є "
"функції, які є унікальними для Windows. Існує кілька модулів, як у "
"стандартній бібліотеці, так і зовнішніх, а також фрагменти для використання "
"цих функцій."

#: ../../using/windows.rst:1282
msgid ""
"The Windows-specific standard modules are documented in :ref:`mswin-"
"specific-services`."
msgstr ""
"Стандартні модулі для Windows задокументовані в :ref:`mswin-specific-"
"services`."

#: ../../using/windows.rst:1286
msgid "PyWin32"
msgstr "PyWin32"

#: ../../using/windows.rst:1288
msgid ""
"The :pypi:`PyWin32` module by Mark Hammond is a collection of modules for "
"advanced Windows-specific support.  This includes utilities for:"
msgstr ""

#: ../../using/windows.rst:1292
msgid ""
"`Component Object Model "
"<https://learn.microsoft.com/windows/win32/com/component-object-model--com--"
"portal>`_ (COM)"
msgstr ""

#: ../../using/windows.rst:1295
msgid "Win32 API calls"
msgstr "Виклики API Win32"

#: ../../using/windows.rst:1296
msgid "Registry"
msgstr "Реєстр"

#: ../../using/windows.rst:1297
msgid "Event log"
msgstr "Журнал подій"

#: ../../using/windows.rst:1298
msgid ""
"`Microsoft Foundation Classes <https://learn.microsoft.com/cpp/mfc/mfc-"
"desktop-applications>`_ (MFC) user interfaces"
msgstr ""

#: ../../using/windows.rst:1302
msgid ""
"`PythonWin <https://web.archive.org/web/20060524042422/ "
"https://www.python.org/windows/pythonwin/>`_ is a sample MFC application "
"shipped with PyWin32.  It is an embeddable IDE with a built-in debugger."
msgstr ""
"`PythonWin <https://web.archive.org/web/20060524042422/ "
"https://www.python.org/windows/pythonwin/>`_ — це зразок програми MFC, що "
"постачається разом із PyWin32. Це вбудована IDE із вбудованим "
"налагоджувачем."

#: ../../using/windows.rst:1308
msgid ""
"`Win32 How Do I...? <https://timgolden.me.uk/python/win32_how_do_i.html>`_"
msgstr ""

#: ../../using/windows.rst:1309
msgid "by Tim Golden"
msgstr "Тім Голден"

#: ../../using/windows.rst:1311
msgid "`Python and COM <https://www.boddie.org.uk/python/COM.html>`_"
msgstr "`Python і COM <https://www.boddie.org.uk/python/COM.html>`_"

#: ../../using/windows.rst:1312
msgid "by David and Paul Boddie"
msgstr "Девід і Пол Бодді"

#: ../../using/windows.rst:1316
msgid "cx_Freeze"
msgstr "cx_Freeze"

#: ../../using/windows.rst:1318
msgid ""
"`cx_Freeze <https://cx-freeze.readthedocs.io/en/latest/>`_ wraps Python "
"scripts into executable Windows programs (:file:`{*}.exe` files).  When you "
"have done this, you can distribute your application without requiring your "
"users to install Python."
msgstr ""

#: ../../using/windows.rst:1325
msgid "Compiling Python on Windows"
msgstr "Компіляція Python у Windows"

#: ../../using/windows.rst:1327
msgid ""
"If you want to compile CPython yourself, first thing you should do is get "
"the `source <https://www.python.org/downloads/source/>`_. You can download "
"either the latest release's source or just grab a fresh `checkout "
"<https://devguide.python.org/setup/#get-the-source-code>`_."
msgstr ""

#: ../../using/windows.rst:1332
msgid ""
"The source tree contains a build solution and project files for Microsoft "
"Visual Studio, which is the compiler used to build the official Python "
"releases. These files are in the :file:`PCbuild` directory."
msgstr ""
"Дерево вихідних кодів містить рішення для збірки та файли проекту для "
"Microsoft Visual Studio, яка є компілятором, який використовується для "
"створення офіційних випусків Python. Ці файли знаходяться в каталозі "
":file:`PCbuild`."

#: ../../using/windows.rst:1336
msgid ""
"Check :file:`PCbuild/readme.txt` for general information on the build "
"process."
msgstr ""
"Перегляньте :file:`PCbuild/readme.txt` для отримання загальної інформації "
"про процес збірки."

#: ../../using/windows.rst:1338
msgid "For extension modules, consult :ref:`building-on-windows`."
msgstr "Для модулів розширення зверніться до :ref:`building-on-windows`."

#: ../../using/windows.rst:1342
msgid "Other Platforms"
msgstr "Інші платформи"

#: ../../using/windows.rst:1344
msgid ""
"With ongoing development of Python, some platforms that used to be supported"
" earlier are no longer supported (due to the lack of users or developers). "
"Check :pep:`11` for details on all unsupported platforms."
msgstr ""
"Оскільки Python продовжується, деякі платформи, які підтримувалися раніше, "
"більше не підтримуються (через відсутність користувачів або розробників). "
"Перевірте :pep:`11`, щоб дізнатися більше про всі непідтримувані платформи."

#: ../../using/windows.rst:1348
msgid ""
"`Windows CE <https://pythonce.sourceforge.net/>`_ is `no longer supported "
"<https://github.com/python/cpython/issues/71542>`__ since Python 3 (if it "
"ever was)."
msgstr ""

#: ../../using/windows.rst:1351
msgid ""
"The `Cygwin <https://cygwin.com/>`_ installer offers to install the `Python "
"interpreter <https://cygwin.com/packages/summary/python3.html>`__ as well"
msgstr ""
"Інсталятор `Cygwin <https://cygwin.com/>`_ також пропонує встановити "
"`Інтерпретатор Python <https://cygwin.com/packages/summary/python3.html>`__"

#: ../../using/windows.rst:1355
msgid ""
"See `Python for Windows <https://www.python.org/downloads/windows/>`_ for "
"detailed information about platforms with pre-compiled installers."
msgstr ""
"Перегляньте `Python для Windows "
"<https://www.python.org/downloads/windows/>`_, щоб отримати детальну "
"інформацію про платформи з попередньо скомпільованими інсталяторами."
