# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Yuliia Shevchenko, 2024
# Dmytro Kazanzhy, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-08 14:16+0000\n"
"PO-Revision-Date: 2021-06-28 01:49+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2024\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../reference/lexical_analysis.rst:6
msgid "Lexical analysis"
msgstr "Лексичний аналіз"

#: ../../reference/lexical_analysis.rst:10
msgid ""
"A Python program is read by a *parser*.  Input to the parser is a stream of "
"*tokens*, generated by the *lexical analyzer*.  This chapter describes how "
"the lexical analyzer breaks a file into tokens."
msgstr ""
"Програма Python читається *парсером*. Вхідними даними для аналізатора є "
"потік *токенів*, згенерованих *лексичним аналізатором*. У цьому розділі "
"описано, як лексичний аналізатор розбиває файл на токени."

#: ../../reference/lexical_analysis.rst:14
msgid ""
"Python reads program text as Unicode code points; the encoding of a source "
"file can be given by an encoding declaration and defaults to UTF-8, see "
":pep:`3120` for details.  If the source file cannot be decoded, a "
":exc:`SyntaxError` is raised."
msgstr ""
"Python читає текст програми як кодові точки Unicode; кодування вихідного "
"файлу може бути задано декларацією кодування та за замовчуванням UTF-8, "
"подробиці див. :pep:`3120`. Якщо вихідний файл не може бути декодований, "
"виникає :exc:`SyntaxError`."

#: ../../reference/lexical_analysis.rst:23
msgid "Line structure"
msgstr "Лінійна структура"

#: ../../reference/lexical_analysis.rst:27
msgid "A Python program is divided into a number of *logical lines*."
msgstr "Програма Python розділена на кілька *логічних рядків*."

#: ../../reference/lexical_analysis.rst:33
msgid "Logical lines"
msgstr "Логічні лінії"

#: ../../reference/lexical_analysis.rst:37
msgid ""
"The end of a logical line is represented by the token NEWLINE.  Statements "
"cannot cross logical line boundaries except where NEWLINE is allowed by the "
"syntax (e.g., between statements in compound statements). A logical line is "
"constructed from one or more *physical lines* by following the explicit or "
"implicit *line joining* rules."
msgstr ""
"Кінець логічного рядка представлено маркером NEWLINE. Інструкції не можуть "
"перетинати межі логічного рядка, за винятком випадків, коли синтаксис "
"дозволяє NEWLINE (наприклад, між операторами в складених операторах). "
"Логічна лінія складається з однієї або кількох *фізичних ліній* за "
"дотриманням явних або неявних правил *об’єднання ліній*."

#: ../../reference/lexical_analysis.rst:47
msgid "Physical lines"
msgstr "Фізичні лінії"

#: ../../reference/lexical_analysis.rst:49
msgid ""
"A physical line is a sequence of characters terminated by an end-of-line "
"sequence.  In source files and strings, any of the standard platform line "
"termination sequences can be used - the Unix form using ASCII LF (linefeed),"
" the Windows form using the ASCII sequence CR LF (return followed by "
"linefeed), or the old Macintosh form using the ASCII CR (return) character."
"  All of these forms can be used equally, regardless of platform. The end of"
" input also serves as an implicit terminator for the final physical line."
msgstr ""
"Фізичний рядок — це послідовність символів, що завершується послідовністю в "
"кінці рядка. У вихідних файлах і рядках можна використовувати будь-яку зі "
"стандартних послідовностей завершення рядків платформи – форму Unix із "
"використанням ASCII LF (переведення рядка), форму Windows із використанням "
"послідовності ASCII CR LF (повернення з наступним переходом рядка) або стару"
" форму Macintosh із використанням символ ASCII CR (повернення). Усі ці форми"
" можна використовувати однаково, незалежно від платформи. Кінець введення "
"також служить неявним термінатором для останнього фізичного рядка."

#: ../../reference/lexical_analysis.rst:57
msgid ""
"When embedding Python, source code strings should be passed to Python APIs "
"using the standard C conventions for newline characters (the ``\\n`` "
"character, representing ASCII LF, is the line terminator)."
msgstr ""
"Під час вбудовування Python рядки вихідного коду слід передавати в API "
"Python, використовуючи стандартні угоди C для символів нового рядка (символ "
"``\\n``, що представляє ASCII LF, є символом закінчення рядка)."

#: ../../reference/lexical_analysis.rst:65
msgid "Comments"
msgstr "Коментарі"

#: ../../reference/lexical_analysis.rst:70
msgid ""
"A comment starts with a hash character (``#``) that is not part of a string "
"literal, and ends at the end of the physical line.  A comment signifies the "
"end of the logical line unless the implicit line joining rules are invoked. "
"Comments are ignored by the syntax."
msgstr ""
"Коментар починається з символу решетки (``#``), який не є частиною рядкового"
" літералу, і закінчується в кінці фізичного рядка. Коментар означає кінець "
"логічного рядка, якщо не викликаються неявні правила з’єднання рядків. "
"Коментарі ігноруються синтаксисом."

#: ../../reference/lexical_analysis.rst:79
msgid "Encoding declarations"
msgstr "Оголошення кодування"

#: ../../reference/lexical_analysis.rst:84
msgid ""
"If a comment in the first or second line of the Python script matches the "
"regular expression ``coding[=:]\\s*([-\\w.]+)``, this comment is processed "
"as an encoding declaration; the first group of this expression names the "
"encoding of the source code file. The encoding declaration must appear on a "
"line of its own. If it is the second line, the first line must also be a "
"comment-only line. The recommended forms of an encoding expression are ::"
msgstr ""
"Якщо коментар у першому чи другому рядку сценарію Python відповідає "
"регулярному виразу ``coding[=:]\\s*([-\\w.]+)``, цей коментар обробляється "
"як оголошення кодування; перша група цього виразу називає кодування файлу "
"вихідного коду. Оголошення кодування має з’являтися в окремому рядку. Якщо "
"це другий рядок, перший рядок також має бути рядком лише для коментарів. "
"Рекомендовані форми виразу кодування:"

#: ../../reference/lexical_analysis.rst:91
msgid "# -*- coding: <encoding-name> -*-"
msgstr ""

#: ../../reference/lexical_analysis.rst:93
msgid "which is recognized also by GNU Emacs, and ::"
msgstr "який також розпізнається GNU Emacs і ::"

#: ../../reference/lexical_analysis.rst:95
msgid "# vim:fileencoding=<encoding-name>"
msgstr ""

#: ../../reference/lexical_analysis.rst:97
msgid "which is recognized by Bram Moolenaar's VIM."
msgstr "який розпізнається VIM Брема Муленаара."

#: ../../reference/lexical_analysis.rst:99
msgid ""
"If no encoding declaration is found, the default encoding is UTF-8.  If the "
"implicit or explicit encoding of a file is UTF-8, an initial UTF-8 byte-"
"order mark (b'\\xef\\xbb\\xbf') is ignored rather than being a syntax error."
msgstr ""

#: ../../reference/lexical_analysis.rst:103
msgid ""
"If an encoding is declared, the encoding name must be recognized by Python "
"(see :ref:`standard-encodings`). The encoding is used for all lexical "
"analysis, including string literals, comments and identifiers."
msgstr ""
"Якщо оголошено кодування, Python має розпізнавати назву кодування (див. "
":ref:`standard-encodings`). Кодування використовується для всього лексичного"
" аналізу, включаючи рядкові літерали, коментарі та ідентифікатори."

#: ../../reference/lexical_analysis.rst:112
msgid "Explicit line joining"
msgstr "Явне з'єднання рядків"

#: ../../reference/lexical_analysis.rst:116
msgid ""
"Two or more physical lines may be joined into logical lines using backslash "
"characters (``\\``), as follows: when a physical line ends in a backslash "
"that is not part of a string literal or comment, it is joined with the "
"following forming a single logical line, deleting the backslash and the "
"following end-of-line character.  For example::"
msgstr ""
"Два або більше фізичних рядків можна об’єднати в логічні рядки за допомогою "
"символів зворотної похилої риски (``\\``), таким чином: коли фізичний рядок "
"закінчується зворотною похилою рискою, яка не є частиною рядкового літералу "
"чи коментаря, він об’єднується за допомогою наступного: утворюючи один "
"логічний рядок, видаляючи зворотну косу риску та наступний символ кінця "
"рядка. Наприклад::"

#: ../../reference/lexical_analysis.rst:122
msgid ""
"if 1900 < year < 2100 and 1 <= month <= 12 \\\n"
"   and 1 <= day <= 31 and 0 <= hour < 24 \\\n"
"   and 0 <= minute < 60 and 0 <= second < 60:   # Looks like a valid date\n"
"        return 1"
msgstr ""

#: ../../reference/lexical_analysis.rst:127
msgid ""
"A line ending in a backslash cannot carry a comment.  A backslash does not "
"continue a comment.  A backslash does not continue a token except for string"
" literals (i.e., tokens other than string literals cannot be split across "
"physical lines using a backslash).  A backslash is illegal elsewhere on a "
"line outside a string literal."
msgstr ""
"Рядок, який закінчується зворотною скісною рискою, не може містити "
"коментаря. Зворотна коса риска не продовжує коментар. Зворотний слеш не "
"продовжує лексему, за винятком рядкових літералів (тобто лексеми, окрім "
"рядкових літералів, не можна розділити на фізичні рядки за допомогою "
"зворотної похилої риски). Зворотний слеш неприпустимий в іншому місці рядка "
"за межами рядкового літералу."

#: ../../reference/lexical_analysis.rst:137
msgid "Implicit line joining"
msgstr "Неявне з'єднання ліній"

#: ../../reference/lexical_analysis.rst:139
msgid ""
"Expressions in parentheses, square brackets or curly braces can be split "
"over more than one physical line without using backslashes. For example::"
msgstr ""
"Вирази в дужках, квадратних або фігурних дужках можна розділити на кілька "
"фізичних рядків без використання зворотних скісних риск. Наприклад::"

#: ../../reference/lexical_analysis.rst:142
msgid ""
"month_names = ['Januari', 'Februari', 'Maart',      # These are the\n"
"               'April',   'Mei',      'Juni',       # Dutch names\n"
"               'Juli',    'Augustus', 'September',  # for the months\n"
"               'Oktober', 'November', 'December']   # of the year"
msgstr ""

#: ../../reference/lexical_analysis.rst:147
msgid ""
"Implicitly continued lines can carry comments.  The indentation of the "
"continuation lines is not important.  Blank continuation lines are allowed. "
"There is no NEWLINE token between implicit continuation lines.  Implicitly "
"continued lines can also occur within triple-quoted strings (see below); in "
"that case they cannot carry comments."
msgstr ""
"Неявно продовжені рядки можуть містити коментарі. Відступ рядків продовження"
" не важливий. Допускаються порожні рядки продовження. Немає маркера NEWLINE "
"між рядками неявного продовження. Неявно продовжені рядки також можуть "
"зустрічатися в рядках із потрійними лапками (див. нижче); у цьому випадку "
"вони не можуть нести коментарі."

#: ../../reference/lexical_analysis.rst:157
msgid "Blank lines"
msgstr "Порожні рядки"

#: ../../reference/lexical_analysis.rst:161
msgid ""
"A logical line that contains only spaces, tabs, formfeeds and possibly a "
"comment, is ignored (i.e., no NEWLINE token is generated).  During "
"interactive input of statements, handling of a blank line may differ "
"depending on the implementation of the read-eval-print loop.  In the "
"standard interactive interpreter, an entirely blank logical line (i.e. one "
"containing not even whitespace or a comment) terminates a multi-line "
"statement."
msgstr ""
"Логічний рядок, який містить лише пробіли, табуляції, канали форми та, "
"можливо, коментар, ігнорується (тобто маркер NEWLINE не генерується). Під "
"час інтерактивного введення операторів обробка порожнього рядка може "
"відрізнятися залежно від реалізації циклу читання-оцінки-друку. У "
"стандартному інтерактивному інтерпретаторі повністю порожній логічний рядок "
"(тобто такий, що не містить навіть пробілів або коментаря) завершує "
"багаторядковий оператор."

#: ../../reference/lexical_analysis.rst:172
msgid "Indentation"
msgstr "Відступ"

#: ../../reference/lexical_analysis.rst:176
msgid ""
"Leading whitespace (spaces and tabs) at the beginning of a logical line is "
"used to compute the indentation level of the line, which in turn is used to "
"determine the grouping of statements."
msgstr ""
"Пробіли (пробіли та табуляції) на початку логічного рядка використовуються "
"для обчислення рівня відступу рядка, який, у свою чергу, використовується "
"для визначення групування операторів."

#: ../../reference/lexical_analysis.rst:180
msgid ""
"Tabs are replaced (from left to right) by one to eight spaces such that the "
"total number of characters up to and including the replacement is a multiple"
" of eight (this is intended to be the same rule as used by Unix).  The total"
" number of spaces preceding the first non-blank character then determines "
"the line's indentation.  Indentation cannot be split over multiple physical "
"lines using backslashes; the whitespace up to the first backslash determines"
" the indentation."
msgstr ""
"Табуляції замінюються (зліва направо) на один-вісім пробілів, щоб загальна "
"кількість символів до заміни включно була кратною восьми (це те саме "
"правило, яке використовується в Unix). Тоді загальна кількість пробілів "
"перед першим символом, що не є пробілом, визначає відступ рядка. Відступи не"
" можна розділити на кілька фізичних рядків за допомогою зворотної косої "
"риски; пробіл до першої зворотної скісної риски визначає відступ."

#: ../../reference/lexical_analysis.rst:188
msgid ""
"Indentation is rejected as inconsistent if a source file mixes tabs and "
"spaces in a way that makes the meaning dependent on the worth of a tab in "
"spaces; a :exc:`TabError` is raised in that case."
msgstr ""
"Відступи відхиляються як непослідовні, якщо вихідний файл змішує табуляції "
"та пробіли таким чином, що робить значення залежним від цінності табуляції в"
" пробілах; У цьому випадку виникає :exc:`TabError`."

#: ../../reference/lexical_analysis.rst:192
msgid ""
"**Cross-platform compatibility note:** because of the nature of text editors"
" on non-UNIX platforms, it is unwise to use a mixture of spaces and tabs for"
" the indentation in a single source file.  It should also be noted that "
"different platforms may explicitly limit the maximum indentation level."
msgstr ""
"**Примітка щодо крос-платформної сумісності:** через характер текстових "
"редакторів на платформах, відмінних від UNIX, нерозумно використовувати "
"суміш пробілів і табуляції для відступу в одному вихідному файлі. Слід також"
" зазначити, що різні платформи можуть явно обмежувати максимальний рівень "
"відступу."

#: ../../reference/lexical_analysis.rst:197
msgid ""
"A formfeed character may be present at the start of the line; it will be "
"ignored for the indentation calculations above.  Formfeed characters "
"occurring elsewhere in the leading whitespace have an undefined effect (for "
"instance, they may reset the space count to zero)."
msgstr ""
"Символ переходу форми може бути присутнім на початку рядка; він буде "
"проігнорований для обчислень відступів вище. Символи передачі форми, що "
"зустрічаються в інших місцях у першому пробілі, мають невизначений ефект "
"(наприклад, вони можуть скинути кількість пробілів до нуля)."

#: ../../reference/lexical_analysis.rst:204
msgid ""
"The indentation levels of consecutive lines are used to generate INDENT and "
"DEDENT tokens, using a stack, as follows."
msgstr ""
"Рівні відступів послідовних рядків використовуються для створення токенів "
"INDENT і DEDENT за допомогою стека, як показано нижче."

#: ../../reference/lexical_analysis.rst:207
msgid ""
"Before the first line of the file is read, a single zero is pushed on the "
"stack; this will never be popped off again.  The numbers pushed on the stack"
" will always be strictly increasing from bottom to top.  At the beginning of"
" each logical line, the line's indentation level is compared to the top of "
"the stack. If it is equal, nothing happens. If it is larger, it is pushed on"
" the stack, and one INDENT token is generated.  If it is smaller, it *must* "
"be one of the numbers occurring on the stack; all numbers on the stack that "
"are larger are popped off, and for each number popped off a DEDENT token is "
"generated.  At the end of the file, a DEDENT token is generated for each "
"number remaining on the stack that is larger than zero."
msgstr ""
"Перш ніж буде зчитано перший рядок файлу, у стек вставляється один нуль; це "
"ніколи більше не вискочить. Числа в стеку завжди суворо зростатимуть знизу "
"вгору. На початку кожного логічного рядка рівень відступу рядка порівнюється"
" з верхньою частиною стека. Якщо воно рівне, нічого не відбувається. Якщо "
"він більший, він поміщається в стек і генерується один токен INDENT. Якщо "
"воно менше, воно *повинно* бути одним із чисел, які зустрічаються в стеку; "
"усі номери зі стеку, які є більшими, вилучаються, і для кожного числа, що "
"виривається, генерується маркер DEDENT. У кінці файлу генерується маркер "
"DEDENT для кожного числа, що залишилося в стеку і є більшим за нуль."

#: ../../reference/lexical_analysis.rst:218
msgid ""
"Here is an example of a correctly (though confusingly) indented piece of "
"Python code::"
msgstr ""
"Ось приклад правильного (хоча і заплутаного) фрагмента коду Python з "
"відступом:"

#: ../../reference/lexical_analysis.rst:221
msgid ""
"def perm(l):\n"
"        # Compute the list of all permutations of l\n"
"    if len(l) <= 1:\n"
"                  return [l]\n"
"    r = []\n"
"    for i in range(len(l)):\n"
"             s = l[:i] + l[i+1:]\n"
"             p = perm(s)\n"
"             for x in p:\n"
"              r.append(l[i:i+1] + x)\n"
"    return r"
msgstr ""

#: ../../reference/lexical_analysis.rst:233
msgid "The following example shows various indentation errors::"
msgstr "У наступному прикладі показано різні помилки відступів:"

#: ../../reference/lexical_analysis.rst:235
msgid ""
" def perm(l):                       # error: first line indented\n"
"for i in range(len(l)):             # error: not indented\n"
"    s = l[:i] + l[i+1:]\n"
"        p = perm(l[:i] + l[i+1:])   # error: unexpected indent\n"
"        for x in p:\n"
"                r.append(l[i:i+1] + x)\n"
"            return r                # error: inconsistent dedent"
msgstr ""

#: ../../reference/lexical_analysis.rst:243
msgid ""
"(Actually, the first three errors are detected by the parser; only the last "
"error is found by the lexical analyzer --- the indentation of ``return r`` "
"does not match a level popped off the stack.)"
msgstr ""
"(Насправді, перші три помилки виявляються синтаксичним аналізатором; лише "
"остання помилка знаходить лексичний аналізатор --- відступ ``return r`` не "
"відповідає рівню, витягненому зі стеку.)"

#: ../../reference/lexical_analysis.rst:251
msgid "Whitespace between tokens"
msgstr "Пробіли між маркерами"

#: ../../reference/lexical_analysis.rst:253
msgid ""
"Except at the beginning of a logical line or in string literals, the "
"whitespace characters space, tab and formfeed can be used interchangeably to"
" separate tokens.  Whitespace is needed between two tokens only if their "
"concatenation could otherwise be interpreted as a different token (e.g., ab "
"is one token, but a b is two tokens)."
msgstr ""
"За винятком початку логічного рядка або в рядкових літералах, символи "
"пропуску, символи табуляції та переходу форми можуть використовуватися як "
"взаємозамінні для розділення токенів. Пробіл потрібен між двома лексемами, "
"лише якщо їх конкатенація інакше може бути інтерпретована як інша лексема "
"(наприклад, ab — одна лексема, а b — це дві лексеми)."

#: ../../reference/lexical_analysis.rst:263
msgid "Other tokens"
msgstr "Інші жетони"

#: ../../reference/lexical_analysis.rst:265
msgid ""
"Besides NEWLINE, INDENT and DEDENT, the following categories of tokens "
"exist: *identifiers*, *keywords*, *literals*, *operators*, and *delimiters*."
" Whitespace characters (other than line terminators, discussed earlier) are "
"not tokens, but serve to delimit tokens. Where ambiguity exists, a token "
"comprises the longest possible string that forms a legal token, when read "
"from left to right."
msgstr ""
"Окрім NEWLINE, INDENT і DEDENT, існують такі категорії токенів: "
"*ідентифікатори*, *ключові слова*, *літерали*, *оператори* та *роздільники*."
" Пробільні символи (окрім символів закінчення рядків, які обговорювалися "
"раніше) не є маркерами, але служать для розмежування маркерів. Якщо існує "
"неоднозначність, токен містить найдовший можливий рядок, який утворює "
"законний токен, коли читається зліва направо."

#: ../../reference/lexical_analysis.rst:275
msgid "Identifiers and keywords"
msgstr "Ідентифікатори та ключові слова"

#: ../../reference/lexical_analysis.rst:279
msgid ""
"Identifiers (also referred to as *names*) are described by the following "
"lexical definitions."
msgstr ""
"Ідентифікатори (також згадувані як *імена*) описуються наступними лексичними"
" визначеннями."

#: ../../reference/lexical_analysis.rst:282
msgid ""
"The syntax of identifiers in Python is based on the Unicode standard annex "
"UAX-31, with elaboration and changes as defined below; see also :pep:`3131` "
"for further details."
msgstr ""
"Синтаксис ідентифікаторів у Python базується на стандартному додатку Unicode"
" UAX-31 із уточненнями та змінами, як визначено нижче; див. також "
":pep:`3131` для отримання додаткової інформації."

#: ../../reference/lexical_analysis.rst:286
msgid ""
"Within the ASCII range (U+0001..U+007F), the valid characters for "
"identifiers include the uppercase and lowercase letters ``A`` through ``Z``,"
" the underscore ``_`` and, except for the first character, the digits ``0`` "
"through ``9``. Python 3.0 introduced additional characters from outside the "
"ASCII range (see :pep:`3131`).  For these characters, the classification "
"uses the version of the Unicode Character Database as included in the "
":mod:`unicodedata` module."
msgstr ""

#: ../../reference/lexical_analysis.rst:294
msgid "Identifiers are unlimited in length.  Case is significant."
msgstr "Довжина ідентифікаторів необмежена. Справа знакова."

#: ../../reference/lexical_analysis.rst:303
msgid "The Unicode category codes mentioned above stand for:"
msgstr "Зазначені вище коди категорій Unicode означають:"

#: ../../reference/lexical_analysis.rst:305
msgid "*Lu* - uppercase letters"
msgstr "*Lu* - великі літери"

#: ../../reference/lexical_analysis.rst:306
msgid "*Ll* - lowercase letters"
msgstr "*Ll* - малі літери"

#: ../../reference/lexical_analysis.rst:307
msgid "*Lt* - titlecase letters"
msgstr "*Lt* - заголовні літери"

#: ../../reference/lexical_analysis.rst:308
msgid "*Lm* - modifier letters"
msgstr "*Lm* - літери-модифікатори"

#: ../../reference/lexical_analysis.rst:309
msgid "*Lo* - other letters"
msgstr "*Lo* - інші букви"

#: ../../reference/lexical_analysis.rst:310
msgid "*Nl* - letter numbers"
msgstr "*Nl* - цифри літер"

#: ../../reference/lexical_analysis.rst:311
msgid "*Mn* - nonspacing marks"
msgstr "*Mn* - непробільні знаки"

#: ../../reference/lexical_analysis.rst:312
msgid "*Mc* - spacing combining marks"
msgstr "*Mc* - знаки поєднання інтервалів"

#: ../../reference/lexical_analysis.rst:313
msgid "*Nd* - decimal numbers"
msgstr "*Nd* - десяткові числа"

#: ../../reference/lexical_analysis.rst:314
msgid "*Pc* - connector punctuations"
msgstr "*Pc* - розділові знаки сполучника"

#: ../../reference/lexical_analysis.rst:315
msgid ""
"*Other_ID_Start* - explicit list of characters in `PropList.txt "
"<https://www.unicode.org/Public/15.1.0/ucd/PropList.txt>`_ to support "
"backwards compatibility"
msgstr ""

#: ../../reference/lexical_analysis.rst:318
msgid "*Other_ID_Continue* - likewise"
msgstr "*Other_ID_Continue* - так само"

#: ../../reference/lexical_analysis.rst:320
msgid ""
"All identifiers are converted into the normal form NFKC while parsing; "
"comparison of identifiers is based on NFKC."
msgstr ""
"Під час синтаксичного аналізу всі ідентифікатори перетворюються в нормальну "
"форму NFKC; порівняння ідентифікаторів базується на NFKC."

#: ../../reference/lexical_analysis.rst:323
msgid ""
"A non-normative HTML file listing all valid identifier characters for "
"Unicode 15.1.0 can be found at "
"https://www.unicode.org/Public/15.1.0/ucd/DerivedCoreProperties.txt"
msgstr ""

#: ../../reference/lexical_analysis.rst:331
msgid "Keywords"
msgstr "Ключові слова"

#: ../../reference/lexical_analysis.rst:337
msgid ""
"The following identifiers are used as reserved words, or *keywords* of the "
"language, and cannot be used as ordinary identifiers.  They must be spelled "
"exactly as written here:"
msgstr ""
"Наступні ідентифікатори використовуються як зарезервовані слова або *ключові"
" слова* мови, і їх не можна використовувати як звичайні ідентифікатори. Вони"
" мають бути написані точно так, як тут написано:"

#: ../../reference/lexical_analysis.rst:341
msgid ""
"False      await      else       import     pass\n"
"None       break      except     in         raise\n"
"True       class      finally    is         return\n"
"and        continue   for        lambda     try\n"
"as         def        from       nonlocal   while\n"
"assert     del        global     not        with\n"
"async      elif       if         or         yield"
msgstr ""

#: ../../reference/lexical_analysis.rst:355
msgid "Soft Keywords"
msgstr "М'які ключові слова"

#: ../../reference/lexical_analysis.rst:361
msgid ""
"Some identifiers are only reserved under specific contexts. These are known "
"as *soft keywords*.  The identifiers ``match``, ``case``, ``type`` and ``_``"
" can syntactically act as keywords in certain contexts, but this distinction"
" is done at the parser level, not when tokenizing."
msgstr ""

#: ../../reference/lexical_analysis.rst:366
msgid ""
"As soft keywords, their use in the grammar is possible while still "
"preserving compatibility with existing code that uses these names as "
"identifier names."
msgstr ""

#: ../../reference/lexical_analysis.rst:370
msgid ""
"``match``, ``case``, and ``_`` are used in the :keyword:`match` statement. "
"``type`` is used in the :keyword:`type` statement."
msgstr ""

#: ../../reference/lexical_analysis.rst:373
msgid "``type`` is now a soft keyword."
msgstr ""

#: ../../reference/lexical_analysis.rst:382
msgid "Reserved classes of identifiers"
msgstr "Зарезервовані класи ідентифікаторів"

#: ../../reference/lexical_analysis.rst:384
msgid ""
"Certain classes of identifiers (besides keywords) have special meanings.  "
"These classes are identified by the patterns of leading and trailing "
"underscore characters:"
msgstr ""
"Певні класи ідентифікаторів (крім ключових слів) мають спеціальні значення. "
"Ці класи ідентифікуються шаблонами початкових і кінцевих символів "
"підкреслення:"

#: ../../reference/lexical_analysis.rst:388
msgid "``_*``"
msgstr "``_*``"

#: ../../reference/lexical_analysis.rst:389
msgid "Not imported by ``from module import *``."
msgstr "Не імпортовано ``з імпорту модуля *``."

#: ../../reference/lexical_analysis.rst:391
msgid "``_``"
msgstr "``_``"

#: ../../reference/lexical_analysis.rst:392
msgid ""
"In a ``case`` pattern within a :keyword:`match` statement, ``_`` is a "
":ref:`soft keyword <soft-keywords>` that denotes a :ref:`wildcard <wildcard-"
"patterns>`."
msgstr ""
"У шаблоні ``case`` в операторі :keyword:`match`, ``_`` є :ref:`м'яким "
"ключовим словом <soft-keywords>`, яке позначає :ref:`знак підстановки "
"<wildcard-patterns>`."

#: ../../reference/lexical_analysis.rst:396
msgid ""
"Separately, the interactive interpreter makes the result of the last "
"evaluation available in the variable ``_``. (It is stored in the "
":mod:`builtins` module, alongside built-in functions like ``print``.)"
msgstr ""
"Окремо інтерактивний інтерпретатор робить результат останньої оцінки "
"доступним у змінній ``_``. (Він зберігається в модулі :mod:`builtins` разом "
"із вбудованими функціями, такими як ``print``.)"

#: ../../reference/lexical_analysis.rst:401
msgid ""
"Elsewhere, ``_`` is a regular identifier. It is often used to name "
"\"special\" items, but it is not special to Python itself."
msgstr ""
"В інших місцях ``_`` є звичайним ідентифікатором. Його часто використовують "
"для назви \"особливих\" елементів, але це не є особливим для самого Python."

#: ../../reference/lexical_analysis.rst:406
msgid ""
"The name ``_`` is often used in conjunction with internationalization; refer"
" to the documentation for the :mod:`gettext` module for more information on "
"this convention."
msgstr ""
"Назва ``_`` часто використовується в поєднанні з інтернаціоналізацією; "
"зверніться до документації для модуля :mod:`gettext` для отримання "
"додаткової інформації про цю угоду."

#: ../../reference/lexical_analysis.rst:410
msgid "It is also commonly used for unused variables."
msgstr "Він також зазвичай використовується для невикористаних змінних."

#: ../../reference/lexical_analysis.rst:412
msgid "``__*__``"
msgstr "``__*__``"

#: ../../reference/lexical_analysis.rst:413
msgid ""
"System-defined names, informally known as \"dunder\" names. These names are "
"defined by the interpreter and its implementation (including the standard "
"library). Current system names are discussed in the :ref:`specialnames` "
"section and elsewhere. More will likely be defined in future versions of "
"Python.  *Any* use of ``__*__`` names, in any context, that does not follow "
"explicitly documented use, is subject to breakage without warning."
msgstr ""
"Імена, визначені системою, неофіційно відомі як імена \"дундерів\". Ці імена"
" визначаються інтерпретатором і його реалізацією (включаючи стандартну "
"бібліотеку). Поточні назви систем обговорюються в розділі "
":ref:`specialnames` та в інших місцях. Більше можливо буде визначено в "
"майбутніх версіях Python. *Будь-яке* використання імен ``__*__`` у будь-"
"якому контексті, яке не відповідає явно задокументованому використанню, може"
" бути порушено без попередження."

#: ../../reference/lexical_analysis.rst:420
msgid "``__*``"
msgstr "``__*``"

#: ../../reference/lexical_analysis.rst:421
msgid ""
"Class-private names.  Names in this category, when used within the context "
"of a class definition, are re-written to use a mangled form to help avoid "
"name clashes between \"private\" attributes of base and derived classes. See"
" section :ref:`atom-identifiers`."
msgstr ""
"Приватні імена класів. Імена в цій категорії, якщо вони використовуються в "
"контексті визначення класу, переписуються, щоб використовувати спотворену "
"форму, щоб уникнути зіткнень імен між \"приватними\" атрибутами базового та "
"похідних класів. Дивіться розділ :ref:`atom-identifiers`."

#: ../../reference/lexical_analysis.rst:430
msgid "Literals"
msgstr "Літерали"

#: ../../reference/lexical_analysis.rst:434
msgid "Literals are notations for constant values of some built-in types."
msgstr "Літерали — це позначення постійних значень деяких вбудованих типів."

#: ../../reference/lexical_analysis.rst:445
msgid "String and Bytes literals"
msgstr "Рядкові та байтові літерали"

#: ../../reference/lexical_analysis.rst:447
msgid "String literals are described by the following lexical definitions:"
msgstr "Рядкові літерали описуються такими лексичними визначеннями:"

#: ../../reference/lexical_analysis.rst:472
msgid ""
"One syntactic restriction not indicated by these productions is that "
"whitespace is not allowed between the :token:`~python-grammar:stringprefix` "
"or :token:`~python-grammar:bytesprefix` and the rest of the literal. The "
"source character set is defined by the encoding declaration; it is UTF-8 if "
"no encoding declaration is given in the source file; see section "
":ref:`encodings`."
msgstr ""
"Одне синтаксичне обмеження, яке не вказується цими продуктами, полягає в "
"тому, що пробіли не допускаються між :token:`~python-grammar:stringprefix` "
"або :token:`~python-grammar:bytesprefix` та рештою літералу. Вихідний набір "
"символів визначається оголошенням кодування; це UTF-8, якщо у вихідному "
"файлі не вказано кодування; див. розділ :ref:`encodings`."

#: ../../reference/lexical_analysis.rst:482
msgid ""
"In plain English: Both types of literals can be enclosed in matching single "
"quotes (``'``) or double quotes (``\"``).  They can also be enclosed in "
"matching groups of three single or double quotes (these are generally "
"referred to as *triple-quoted strings*). The backslash (``\\``) character is"
" used to give special meaning to otherwise ordinary characters like ``n``, "
"which means 'newline' when escaped (``\\n``). It can also be used to escape "
"characters that otherwise have a special meaning, such as newline, backslash"
" itself, or the quote character. See :ref:`escape sequences <escape-"
"sequences>` below for examples."
msgstr ""

#: ../../reference/lexical_analysis.rst:495
msgid ""
"Bytes literals are always prefixed with ``'b'`` or ``'B'``; they produce an "
"instance of the :class:`bytes` type instead of the :class:`str` type.  They "
"may only contain ASCII characters; bytes with a numeric value of 128 or "
"greater must be expressed with escapes."
msgstr ""
"Байтові літерали завжди мають префікс ``'b'`` або ``'B'``; вони створюють "
"екземпляр типу :class:`bytes` замість типу :class:`str`. Вони можуть містити"
" лише символи ASCII; байти з числовим значенням 128 або більше повинні бути "
"виражені за допомогою екранованих символів."

#: ../../reference/lexical_analysis.rst:504
msgid ""
"Both string and bytes literals may optionally be prefixed with a letter "
"``'r'`` or ``'R'``; such constructs are called :dfn:`raw string literals` "
"and :dfn:`raw bytes literals` respectively and treat backslashes as literal "
"characters.  As a result, in raw string literals, ``'\\U'`` and ``'\\u'`` "
"escapes are not treated specially."
msgstr ""

#: ../../reference/lexical_analysis.rst:510
msgid ""
"The ``'rb'`` prefix of raw bytes literals has been added as a synonym of "
"``'br'``."
msgstr ""
"Префікс ``'rb`` до літералів із необробленими байтами було додано як синонім"
" ``'br'``."

#: ../../reference/lexical_analysis.rst:514
msgid ""
"Support for the unicode legacy literal (``u'value'``) was reintroduced to "
"simplify the maintenance of dual Python 2.x and 3.x codebases. See "
":pep:`414` for more information."
msgstr ""
"Підтримку застарілого літералу Unicode (``u'value``) було знову запроваджено"
" для спрощення обслуговування подвійних кодових баз Python 2.x і 3.x. "
"Перегляньте :pep:`414` для отримання додаткової інформації."

#: ../../reference/lexical_analysis.rst:522
msgid ""
"A string literal with ``'f'`` or ``'F'`` in its prefix is a :dfn:`formatted "
"string literal`; see :ref:`f-strings`.  The ``'f'`` may be combined with "
"``'r'``, but not with ``'b'`` or ``'u'``, therefore raw formatted strings "
"are possible, but formatted bytes literals are not."
msgstr ""
"Рядковий літерал із ``'f''`` або ``'F''`` у своєму префіксі є "
":dfn:`formatted string literal`; див. :ref:`f-strings`. ``'f'`` можна "
"поєднувати з ``'r'``, але не з ``'b''`` або ``'u''``, тому можливі "
"необроблені форматовані рядки, але форматовані байтові літерали не є."

#: ../../reference/lexical_analysis.rst:527
msgid ""
"In triple-quoted literals, unescaped newlines and quotes are allowed (and "
"are retained), except that three unescaped quotes in a row terminate the "
"literal.  (A \"quote\" is the character used to open the literal, i.e. "
"either ``'`` or ``\"``.)"
msgstr ""
"У літералах із потрійними лапками дозволені (і зберігаються) неекрановані "
"нові рядки та лапки, за винятком того, що три неекрановані лапки поспіль "
"завершують літерал. (\"Лапка\" - це символ, який використовується для "
"відкриття літералу, тобто ``'`` або ``\"``.)"

#: ../../reference/lexical_analysis.rst:550
msgid "Escape sequences"
msgstr ""

#: ../../reference/lexical_analysis.rst:552
msgid ""
"Unless an ``'r'`` or ``'R'`` prefix is present, escape sequences in string "
"and bytes literals are interpreted according to rules similar to those used "
"by Standard C.  The recognized escape sequences are:"
msgstr ""
"Якщо немає префікса ``'r'`` або ``'R'``, керуючі послідовності в рядкових і "
"байтових літералах інтерпретуються відповідно до правил, подібних до тих, що"
" використовуються стандартом C. Розпізнаними керуючими послідовностями є:"

#: ../../reference/lexical_analysis.rst:557
#: ../../reference/lexical_analysis.rst:590
msgid "Escape Sequence"
msgstr "Ескейп-послідовність"

#: ../../reference/lexical_analysis.rst:557
#: ../../reference/lexical_analysis.rst:590
msgid "Meaning"
msgstr "Значення"

#: ../../reference/lexical_analysis.rst:557
#: ../../reference/lexical_analysis.rst:590
msgid "Notes"
msgstr "Примітки"

#: ../../reference/lexical_analysis.rst:559
msgid "``\\``\\ <newline>"
msgstr ""

#: ../../reference/lexical_analysis.rst:559
msgid "Backslash and newline ignored"
msgstr "Зворотна коса риска та новий рядок ігноруються"

#: ../../reference/lexical_analysis.rst:559
msgid "\\(1)"
msgstr "\\(1)"

#: ../../reference/lexical_analysis.rst:561
msgid "``\\\\``"
msgstr "``\\\\``"

#: ../../reference/lexical_analysis.rst:561
msgid "Backslash (``\\``)"
msgstr "Зворотна коса риска (``\\``)"

#: ../../reference/lexical_analysis.rst:563
msgid "``\\'``"
msgstr "``\\''``"

#: ../../reference/lexical_analysis.rst:563
msgid "Single quote (``'``)"
msgstr "Одинарні лапки (``'``)"

#: ../../reference/lexical_analysis.rst:565
msgid "``\\\"``"
msgstr "``\\\"``"

#: ../../reference/lexical_analysis.rst:565
msgid "Double quote (``\"``)"
msgstr "Подвійні лапки (``\"``)"

#: ../../reference/lexical_analysis.rst:567
msgid "``\\a``"
msgstr "``\\a``"

#: ../../reference/lexical_analysis.rst:567
msgid "ASCII Bell (BEL)"
msgstr "ASCII Bell (BEL)"

#: ../../reference/lexical_analysis.rst:569
msgid "``\\b``"
msgstr "``\\b``"

#: ../../reference/lexical_analysis.rst:569
msgid "ASCII Backspace (BS)"
msgstr "ASCII Backspace (BS)"

#: ../../reference/lexical_analysis.rst:571
msgid "``\\f``"
msgstr "``\\f``"

#: ../../reference/lexical_analysis.rst:571
msgid "ASCII Formfeed (FF)"
msgstr "ASCII Formfeed (FF)"

#: ../../reference/lexical_analysis.rst:573
msgid "``\\n``"
msgstr "``\\n``"

#: ../../reference/lexical_analysis.rst:573
msgid "ASCII Linefeed (LF)"
msgstr "ASCII Linefeed (LF)"

#: ../../reference/lexical_analysis.rst:575
msgid "``\\r``"
msgstr "``\\r``"

#: ../../reference/lexical_analysis.rst:575
msgid "ASCII Carriage Return (CR)"
msgstr "ASCII повернення каретки (CR)"

#: ../../reference/lexical_analysis.rst:577
msgid "``\\t``"
msgstr "``\\t``"

#: ../../reference/lexical_analysis.rst:577
msgid "ASCII Horizontal Tab (TAB)"
msgstr "Горизонтальна вкладка ASCII (TAB)"

#: ../../reference/lexical_analysis.rst:579
msgid "``\\v``"
msgstr "``\\v``"

#: ../../reference/lexical_analysis.rst:579
msgid "ASCII Vertical Tab (VT)"
msgstr "Вертикальна вкладка ASCII (VT)"

#: ../../reference/lexical_analysis.rst:581
msgid ":samp:`\\\\\\\\{ooo}`"
msgstr ""

#: ../../reference/lexical_analysis.rst:581
msgid "Character with octal value *ooo*"
msgstr "Символ із вісімковим значенням *ooo*"

#: ../../reference/lexical_analysis.rst:581
msgid "(2,4)"
msgstr ""

#: ../../reference/lexical_analysis.rst:584
msgid ":samp:`\\\\x{hh}`"
msgstr ""

#: ../../reference/lexical_analysis.rst:584
msgid "Character with hex value *hh*"
msgstr "Символ із шістнадцятковим значенням *hh*"

#: ../../reference/lexical_analysis.rst:584
msgid "(3,4)"
msgstr ""

#: ../../reference/lexical_analysis.rst:587
msgid "Escape sequences only recognized in string literals are:"
msgstr "Екран-послідовності, розпізнані лише в рядкових літералах:"

#: ../../reference/lexical_analysis.rst:592
msgid ":samp:`\\\\N\\\\{{name}\\\\}`"
msgstr ""

#: ../../reference/lexical_analysis.rst:592
msgid "Character named *name* in the Unicode database"
msgstr "Символ із назвою *name* у базі даних Unicode"

#: ../../reference/lexical_analysis.rst:592
msgid "\\(5)"
msgstr "\\(5)"

#: ../../reference/lexical_analysis.rst:595
msgid ":samp:`\\\\u{xxxx}`"
msgstr ""

#: ../../reference/lexical_analysis.rst:595
msgid "Character with 16-bit hex value *xxxx*"
msgstr "Символ із 16-бітним шістнадцятковим значенням *xxxx*"

#: ../../reference/lexical_analysis.rst:595
msgid "\\(6)"
msgstr "\\(6)"

#: ../../reference/lexical_analysis.rst:598
msgid ":samp:`\\\\U{xxxxxxxx}`"
msgstr ""

#: ../../reference/lexical_analysis.rst:598
msgid "Character with 32-bit hex value *xxxxxxxx*"
msgstr "Символ із 32-розрядним шістнадцятковим значенням *xxxxxxx*"

#: ../../reference/lexical_analysis.rst:598
msgid "\\(7)"
msgstr "\\(7)"

#: ../../reference/lexical_analysis.rst:602
msgid "Notes:"
msgstr "Примітки:"

#: ../../reference/lexical_analysis.rst:605
msgid "A backslash can be added at the end of a line to ignore the newline::"
msgstr ""

#: ../../reference/lexical_analysis.rst:607
msgid ""
">>> 'This string will not include \\\n"
"... backslashes or newline characters.'\n"
"'This string will not include backslashes or newline characters.'"
msgstr ""

#: ../../reference/lexical_analysis.rst:611
msgid ""
"The same result can be achieved using :ref:`triple-quoted strings "
"<strings>`, or parentheses and :ref:`string literal concatenation <string-"
"concatenation>`."
msgstr ""

#: ../../reference/lexical_analysis.rst:616
msgid "As in Standard C, up to three octal digits are accepted."
msgstr "Як і в стандарті C, допускається до трьох вісімкових цифр."

#: ../../reference/lexical_analysis.rst:618
msgid ""
"Octal escapes with value larger than ``0o377`` produce a "
":exc:`DeprecationWarning`."
msgstr ""

#: ../../reference/lexical_analysis.rst:622
msgid ""
"Octal escapes with value larger than ``0o377`` produce a "
":exc:`SyntaxWarning`. In a future Python version they will be eventually a "
":exc:`SyntaxError`."
msgstr ""

#: ../../reference/lexical_analysis.rst:628
msgid "Unlike in Standard C, exactly two hex digits are required."
msgstr "На відміну від стандарту C, потрібні рівно дві шістнадцяткові цифри."

#: ../../reference/lexical_analysis.rst:631
msgid ""
"In a bytes literal, hexadecimal and octal escapes denote the byte with the "
"given value. In a string literal, these escapes denote a Unicode character "
"with the given value."
msgstr ""
"У байтовому літералі шістнадцяткове та вісімкове екранування позначають байт"
" із заданим значенням. У рядковому літералі ці екрановані символи позначають"
" символ Unicode із заданим значенням."

#: ../../reference/lexical_analysis.rst:636
msgid "Support for name aliases [#]_ has been added."
msgstr "Додано підтримку псевдонімів [#]_."

#: ../../reference/lexical_analysis.rst:640
msgid "Exactly four hex digits are required."
msgstr "Потрібні рівно чотири шістнадцяткові цифри."

#: ../../reference/lexical_analysis.rst:643
msgid ""
"Any Unicode character can be encoded this way.  Exactly eight hex digits are"
" required."
msgstr ""
"Таким чином можна закодувати будь-який символ Unicode. Необхідно рівно вісім"
" шістнадцяткових цифр."

#: ../../reference/lexical_analysis.rst:649
msgid ""
"Unlike Standard C, all unrecognized escape sequences are left in the string "
"unchanged, i.e., *the backslash is left in the result*.  (This behavior is "
"useful when debugging: if an escape sequence is mistyped, the resulting "
"output is more easily recognized as broken.)  It is also important to note "
"that the escape sequences only recognized in string literals fall into the "
"category of unrecognized escapes for bytes literals."
msgstr ""
"На відміну від стандартного C, усі нерозпізнані керуючі послідовності "
"залишаються в рядку без змін, тобто *зворотний слеш залишається в "
"результаті*. (Ця поведінка корисна під час налагодження: якщо escape-"
"послідовність введена неправильно, результат легше розпізнати як "
"несправний.) Важливо також зазначити, що escape-послідовності, розпізнані "
"лише в рядкових літералах, належать до категорії нерозпізнаних escape-"
"сигналів для байтів. літерали."

#: ../../reference/lexical_analysis.rst:656
msgid "Unrecognized escape sequences produce a :exc:`DeprecationWarning`."
msgstr ""

#: ../../reference/lexical_analysis.rst:659
msgid ""
"Unrecognized escape sequences produce a :exc:`SyntaxWarning`. In a future "
"Python version they will be eventually a :exc:`SyntaxError`."
msgstr ""

#: ../../reference/lexical_analysis.rst:663
msgid ""
"Even in a raw literal, quotes can be escaped with a backslash, but the "
"backslash remains in the result; for example, ``r\"\\\"\"`` is a valid "
"string literal consisting of two characters: a backslash and a double quote;"
" ``r\"\\\"`` is not a valid string literal (even a raw string cannot end in "
"an odd number of backslashes).  Specifically, *a raw literal cannot end in a"
" single backslash* (since the backslash would escape the following quote "
"character).  Note also that a single backslash followed by a newline is "
"interpreted as those two characters as part of the literal, *not* as a line "
"continuation."
msgstr ""
"Навіть у необробленому літералі лапки можна екранувати за допомогою "
"зворотної косої риски, але зворотна коса риска залишається в результаті; "
"наприклад, ``r\"\\\"\"`` є дійсним рядковим літералом, що складається з двох"
" символів: зворотної косої риски та подвійних лапок; ``r\"\\\"`` не є "
"дійсним рядковим літералом (навіть необроблений рядок не може закінчуватися "
"у непарній кількості зворотних скісних рисок). Зокрема, *необроблений "
"літерал не може закінчуватися однією зворотною скісною рискою* (оскільки "
"зворотна скісна риска виключатиме наступний символ лапок). Зауважте також, "
"що одна зворотна скісна риска, за якою йде новий рядок, інтерпретується як "
"ці два символи як частина літералу, *не* як продовження рядка."

#: ../../reference/lexical_analysis.rst:676
msgid "String literal concatenation"
msgstr "Конкатенація рядкового літералу"

#: ../../reference/lexical_analysis.rst:678
msgid ""
"Multiple adjacent string or bytes literals (delimited by whitespace), "
"possibly using different quoting conventions, are allowed, and their meaning"
" is the same as their concatenation.  Thus, ``\"hello\" 'world'`` is "
"equivalent to ``\"helloworld\"``.  This feature can be used to reduce the "
"number of backslashes needed, to split long strings conveniently across long"
" lines, or even to add comments to parts of strings, for example::"
msgstr ""
"Кілька суміжних рядкових або байтових літералів (розмежованих пробілами), "
"можливо, з використанням різних угод про цитування, дозволено, і їхнє "
"значення таке ж, як і їх об’єднання. Таким чином, ``\"hello\" 'world'`` "
"еквівалентно ``\"helloworld\"``. Цю функцію можна використати, щоб зменшити "
"кількість потрібних зворотних похилих рис, щоб зручно розділити довгі рядки "
"на довгі рядки або навіть додати коментарі до частин рядків, наприклад::"

#: ../../reference/lexical_analysis.rst:685
msgid ""
"re.compile(\"[A-Za-z_]\"       # letter or underscore\n"
"           \"[A-Za-z0-9_]*\"   # letter, digit or underscore\n"
"          )"
msgstr ""

#: ../../reference/lexical_analysis.rst:689
msgid ""
"Note that this feature is defined at the syntactical level, but implemented "
"at compile time.  The '+' operator must be used to concatenate string "
"expressions at run time.  Also note that literal concatenation can use "
"different quoting styles for each component (even mixing raw strings and "
"triple quoted strings), and formatted string literals may be concatenated "
"with plain string literals."
msgstr ""
"Зауважте, що ця функція визначена на синтаксичному рівні, але реалізована "
"під час компіляції. Для об’єднання рядкових виразів під час виконання "
"необхідно використовувати оператор \"+\". Також зауважте, що конкатенація "
"літералів може використовувати різні стилі лапок для кожного компонента "
"(навіть змішування необроблених рядків і рядків у потрійних лапках), а "
"форматовані рядкові літерали можуть бути об’єднані з простими рядковими "
"літералами."

#: ../../reference/lexical_analysis.rst:712
msgid "f-strings"
msgstr ""

#: ../../reference/lexical_analysis.rst:716
msgid ""
"A :dfn:`formatted string literal` or :dfn:`f-string` is a string literal "
"that is prefixed with ``'f'`` or ``'F'``.  These strings may contain "
"replacement fields, which are expressions delimited by curly braces ``{}``. "
"While other string literals always have a constant value, formatted strings "
"are really expressions evaluated at run time."
msgstr ""
":dfn:`formatted string literal` або :dfn:`f-string` — це рядковий літерал, "
"який має префікс ``'f'`` або ``'F'``. Ці рядки можуть містити поля заміни, "
"які є виразами, розділеними фігурними дужками ``{}``. Хоча інші рядкові "
"літерали завжди мають постійне значення, форматовані рядки насправді є "
"виразами, які обчислюються під час виконання."

#: ../../reference/lexical_analysis.rst:722
msgid ""
"Escape sequences are decoded like in ordinary string literals (except when a"
" literal is also marked as a raw string).  After decoding, the grammar for "
"the contents of the string is:"
msgstr ""
"Екран-послідовності декодуються як у звичайних рядкових літералах (за "
"винятком випадків, коли літерал також позначено як необроблений рядок). "
"Після декодування граматика вмісту рядка така:"

#: ../../reference/lexical_analysis.rst:736
msgid ""
"The parts of the string outside curly braces are treated literally, except "
"that any doubled curly braces ``'{{'`` or ``'}}'`` are replaced with the "
"corresponding single curly brace.  A single opening curly bracket ``'{'`` "
"marks a replacement field, which starts with a Python expression. To display"
" both the expression text and its value after evaluation, (useful in "
"debugging), an equal sign ``'='`` may be added after the expression. A "
"conversion field, introduced by an exclamation point ``'!'`` may follow.  A "
"format specifier may also be appended, introduced by a colon ``':'``. A "
"replacement field ends with a closing curly bracket ``'}'``."
msgstr ""
"Частини рядка поза фігурними дужками трактуються буквально, за винятком "
"того, що будь-які подвоєні фігурні дужки ``'{{'`` або ``'}}'`` замінюються "
"відповідною одинарною фігурною дужкою. Одна відкривна фігурна дужка ``'{'`` "
"позначає поле заміни, яке починається з виразу Python. Щоб відобразити як "
"текст виразу, так і його значення після оцінки (корисно під час "
"налагодження), після виразу можна додати знак рівності ``'='``. Поле "
"перетворення, введене знаком оклику ``'!'`` може слідувати за ним. "
"Специфікатор формату також може бути доданий двокрапкою ``':''``. Поле "
"заміни закінчується фігурною дужкою, що закривається, ``'}''``."

#: ../../reference/lexical_analysis.rst:746
msgid ""
"Expressions in formatted string literals are treated like regular Python "
"expressions surrounded by parentheses, with a few exceptions. An empty "
"expression is not allowed, and both :keyword:`lambda`  and assignment "
"expressions ``:=`` must be surrounded by explicit parentheses. Each "
"expression is evaluated in the context where the formatted string literal "
"appears, in order from left to right.  Replacement expressions can contain "
"newlines in both single-quoted and triple-quoted f-strings and they can "
"contain comments.  Everything that comes after a ``#`` inside a replacement "
"field is a comment (even closing braces and quotes). In that case, "
"replacement fields must be closed in a different line."
msgstr ""

#: ../../reference/lexical_analysis.rst:757
msgid ""
">>> f\"abc{a # This is a comment }\"\n"
"... + 3}\"\n"
"'abc5'"
msgstr ""

#: ../../reference/lexical_analysis.rst:763
msgid ""
"Prior to Python 3.7, an :keyword:`await` expression and comprehensions "
"containing an :keyword:`async for` clause were illegal in the expressions in"
" formatted string literals due to a problem with the implementation."
msgstr ""
"До Python 3.7 вираз :keyword:`await` і розуміння, що містять пропозицію "
":keyword:`async for`, були незаконними у виразах у форматованих рядкових "
"літералах через проблему з реалізацією."

#: ../../reference/lexical_analysis.rst:768
msgid ""
"Prior to Python 3.12, comments were not allowed inside f-string replacement "
"fields."
msgstr ""

#: ../../reference/lexical_analysis.rst:772
msgid ""
"When the equal sign ``'='`` is provided, the output will have the expression"
" text, the ``'='`` and the evaluated value. Spaces after the opening brace "
"``'{'``, within the expression and after the ``'='`` are all retained in the"
" output. By default, the ``'='`` causes the :func:`repr` of the expression "
"to be provided, unless there is a format specified. When a format is "
"specified it defaults to the :func:`str` of the expression unless a "
"conversion ``'!r'`` is declared."
msgstr ""
"Якщо вказано знак рівності ``'='``, вихідні дані матимуть текст виразу, "
"``'='`` і обчислене значення. Пробіли після відкриваючої фігурної дужки "
"``'{'`` у виразі та після ``'='`` зберігаються у виводі. За замовчуванням "
"``'='`` надає :func:`repr` виразу, якщо не вказано формат. Коли вказано "
"формат, за замовчуванням використовується :func:`str` виразу, якщо не "
"оголошено перетворення ``'!r''``."

#: ../../reference/lexical_analysis.rst:780
msgid "The equal sign ``'='``."
msgstr "Знак рівності ``'='``."

#: ../../reference/lexical_analysis.rst:783
msgid ""
"If a conversion is specified, the result of evaluating the expression is "
"converted before formatting.  Conversion ``'!s'`` calls :func:`str` on the "
"result, ``'!r'`` calls :func:`repr`, and ``'!a'`` calls :func:`ascii`."
msgstr ""
"Якщо вказано перетворення, результат обчислення виразу перетворюється перед "
"форматуванням. Перетворення ``'!s'`` викликає :func:`str` результату, "
"``'!r''`` викликає :func:`repr`, а ``'!a'`` викликає :func:`ascii`."

#: ../../reference/lexical_analysis.rst:787
msgid ""
"The result is then formatted using the :func:`format` protocol.  The format "
"specifier is passed to the :meth:`~object.__format__` method of the "
"expression or conversion result.  An empty string is passed when the format "
"specifier is omitted.  The formatted result is then included in the final "
"value of the whole string."
msgstr ""

#: ../../reference/lexical_analysis.rst:793
msgid ""
"Top-level format specifiers may include nested replacement fields. These "
"nested fields may include their own conversion fields and :ref:`format "
"specifiers <formatspec>`, but may not include more deeply nested replacement"
" fields. The :ref:`format specifier mini-language <formatspec>` is the same "
"as that used by the :meth:`str.format` method."
msgstr ""

#: ../../reference/lexical_analysis.rst:799
msgid ""
"Formatted string literals may be concatenated, but replacement fields cannot"
" be split across literals."
msgstr ""
"Відформатовані рядкові літерали можуть бути об’єднані, але поля заміни не "
"можуть бути розділені на літерали."

#: ../../reference/lexical_analysis.rst:802
msgid "Some examples of formatted string literals::"
msgstr "Деякі приклади відформатованих рядкових літералів::"

#: ../../reference/lexical_analysis.rst:804
msgid ""
">>> name = \"Fred\"\n"
">>> f\"He said his name is {name!r}.\"\n"
"\"He said his name is 'Fred'.\"\n"
">>> f\"He said his name is {repr(name)}.\"  # repr() is equivalent to !r\n"
"\"He said his name is 'Fred'.\"\n"
">>> width = 10\n"
">>> precision = 4\n"
">>> value = decimal.Decimal(\"12.34567\")\n"
">>> f\"result: {value:{width}.{precision}}\"  # nested fields\n"
"'result:      12.35'\n"
">>> today = datetime(year=2017, month=1, day=27)\n"
">>> f\"{today:%B %d, %Y}\"  # using date format specifier\n"
"'January 27, 2017'\n"
">>> f\"{today=:%B %d, %Y}\" # using date format specifier and debugging\n"
"'today=January 27, 2017'\n"
">>> number = 1024\n"
">>> f\"{number:#0x}\"  # using integer format specifier\n"
"'0x400'\n"
">>> foo = \"bar\"\n"
">>> f\"{ foo = }\" # preserves whitespace\n"
"\" foo = 'bar'\"\n"
">>> line = \"The mill's closed\"\n"
">>> f\"{line = }\"\n"
"'line = \"The mill\\'s closed\"'\n"
">>> f\"{line = :20}\"\n"
"\"line = The mill's closed   \"\n"
">>> f\"{line = !r:20}\"\n"
"'line = \"The mill\\'s closed\" '"
msgstr ""

#: ../../reference/lexical_analysis.rst:834
msgid ""
"Reusing the outer f-string quoting type inside a replacement field is "
"permitted::"
msgstr ""

#: ../../reference/lexical_analysis.rst:837
msgid ""
">>> a = dict(x=2)\n"
">>> f\"abc {a[\"x\"]} def\"\n"
"'abc 2 def'"
msgstr ""

#: ../../reference/lexical_analysis.rst:841
msgid ""
"Prior to Python 3.12, reuse of the same quoting type of the outer f-string "
"inside a replacement field was not possible."
msgstr ""

#: ../../reference/lexical_analysis.rst:845
msgid ""
"Backslashes are also allowed in replacement fields and are evaluated the "
"same way as in any other context::"
msgstr ""

#: ../../reference/lexical_analysis.rst:848
msgid ""
">>> a = [\"a\", \"b\", \"c\"]\n"
">>> print(f\"List a contains:\\n{\"\\n\".join(a)}\")\n"
"List a contains:\n"
"a\n"
"b\n"
"c"
msgstr ""

#: ../../reference/lexical_analysis.rst:855
msgid ""
"Prior to Python 3.12, backslashes were not permitted inside an f-string "
"replacement field."
msgstr ""

#: ../../reference/lexical_analysis.rst:859
msgid ""
"Formatted string literals cannot be used as docstrings, even if they do not "
"include expressions."
msgstr ""
"Відформатовані рядкові літерали не можна використовувати як рядки "
"документації, навіть якщо вони не містять виразів."

#: ../../reference/lexical_analysis.rst:864
msgid ""
">>> def foo():\n"
"...     f\"Not a docstring\"\n"
"...\n"
">>> foo.__doc__ is None\n"
"True"
msgstr ""

#: ../../reference/lexical_analysis.rst:870
msgid ""
"See also :pep:`498` for the proposal that added formatted string literals, "
"and :meth:`str.format`, which uses a related format string mechanism."
msgstr ""
"Дивіться також :pep:`498` для пропозиції, яка додала відформатовані рядкові "
"літерали, і :meth:`str.format`, який використовує пов’язаний механізм "
"форматування рядків."

#: ../../reference/lexical_analysis.rst:877
msgid "Numeric literals"
msgstr "Числові літерали"

#: ../../reference/lexical_analysis.rst:883
msgid ""
"There are three types of numeric literals: integers, floating-point numbers,"
" and imaginary numbers.  There are no complex literals (complex numbers can "
"be formed by adding a real number and an imaginary number)."
msgstr ""

#: ../../reference/lexical_analysis.rst:887
msgid ""
"Note that numeric literals do not include a sign; a phrase like ``-1`` is "
"actually an expression composed of the unary operator '``-``' and the "
"literal ``1``."
msgstr ""
"Зауважте, що числові літерали не містять знака; така фраза, як ``-1``, "
"насправді є виразом, що складається з унарного оператора '``-``' і літерала "
"``1``."

#: ../../reference/lexical_analysis.rst:901
msgid "Integer literals"
msgstr "Цілі літерали"

#: ../../reference/lexical_analysis.rst:903
msgid "Integer literals are described by the following lexical definitions:"
msgstr "Цілі літерали описуються такими лексичними визначеннями:"

#: ../../reference/lexical_analysis.rst:917
msgid ""
"There is no limit for the length of integer literals apart from what can be "
"stored in available memory."
msgstr ""
"Немає обмежень щодо довжини цілочисельних літералів, крім того, що може "
"зберігатися у доступній пам’яті."

#: ../../reference/lexical_analysis.rst:920
msgid ""
"Underscores are ignored for determining the numeric value of the literal.  "
"They can be used to group digits for enhanced readability.  One underscore "
"can occur between digits, and after base specifiers like ``0x``."
msgstr ""
"Підкреслення ігноруються для визначення числового значення літералу. Їх "
"можна використовувати для групування цифр для кращої читабельності. Одне "
"підкреслення може бути між цифрами та після основних специфікаторів, таких "
"як ``0x``."

#: ../../reference/lexical_analysis.rst:924
msgid ""
"Note that leading zeros in a non-zero decimal number are not allowed. This "
"is for disambiguation with C-style octal literals, which Python used before "
"version 3.0."
msgstr ""
"Зауважте, що нулі на початку ненульового десяткового числа не допускаються. "
"Це для усунення неоднозначності з вісімковими літералами у стилі C, які "
"Python використовував до версії 3.0."

#: ../../reference/lexical_analysis.rst:928
msgid "Some examples of integer literals::"
msgstr "Деякі приклади цілих літералів::"

#: ../../reference/lexical_analysis.rst:930
msgid ""
"7     2147483647                        0o177    0b100110111\n"
"3     79228162514264337593543950336     0o377    0xdeadbeef\n"
"      100_000_000_000                   0b_1110_0101"
msgstr ""

#: ../../reference/lexical_analysis.rst:934
#: ../../reference/lexical_analysis.rst:966
msgid "Underscores are now allowed for grouping purposes in literals."
msgstr "Підкреслення тепер дозволено для цілей групування в літералах."

#: ../../reference/lexical_analysis.rst:945
msgid "Floating-point literals"
msgstr ""

#: ../../reference/lexical_analysis.rst:947
msgid ""
"Floating-point literals are described by the following lexical definitions:"
msgstr ""

#: ../../reference/lexical_analysis.rst:957
msgid ""
"Note that the integer and exponent parts are always interpreted using radix "
"10. For example, ``077e010`` is legal, and denotes the same number as "
"``77e10``. The allowed range of floating-point literals is implementation-"
"dependent.  As in integer literals, underscores are supported for digit "
"grouping."
msgstr ""

#: ../../reference/lexical_analysis.rst:962
msgid "Some examples of floating-point literals::"
msgstr ""

#: ../../reference/lexical_analysis.rst:964
msgid "3.14    10.    .001    1e100    3.14e-10    0e0    3.14_15_93"
msgstr ""

#: ../../reference/lexical_analysis.rst:975
msgid "Imaginary literals"
msgstr "Уявні літерали"

#: ../../reference/lexical_analysis.rst:977
msgid "Imaginary literals are described by the following lexical definitions:"
msgstr "Уявні літерали описуються такими лексичними визначеннями:"

#: ../../reference/lexical_analysis.rst:982
msgid ""
"An imaginary literal yields a complex number with a real part of 0.0.  "
"Complex numbers are represented as a pair of floating-point numbers and have"
" the same restrictions on their range.  To create a complex number with a "
"nonzero real part, add a floating-point number to it, e.g., ``(3+4j)``.  "
"Some examples of imaginary literals::"
msgstr ""

#: ../../reference/lexical_analysis.rst:988
msgid "3.14j   10.j    10j     .001j   1e100j   3.14e-10j   3.14_15_93j"
msgstr ""

#: ../../reference/lexical_analysis.rst:994
msgid "Operators"
msgstr "Оператори"

#: ../../reference/lexical_analysis.rst:998
msgid "The following tokens are operators:"
msgstr "Наступні токени є операторами:"

#: ../../reference/lexical_analysis.rst:1000
msgid ""
"+       -       *       **      /       //      %      @\n"
"<<      >>      &       |       ^       ~       :=\n"
"<       >       <=      >=      ==      !="
msgstr ""

#: ../../reference/lexical_analysis.rst:1011
msgid "Delimiters"
msgstr "Роздільники"

#: ../../reference/lexical_analysis.rst:1015
msgid "The following tokens serve as delimiters in the grammar:"
msgstr "Наступні лексеми служать роздільниками в граматиці:"

#: ../../reference/lexical_analysis.rst:1017
msgid ""
"(       )       [       ]       {       }\n"
",       :       !       .       ;       @       =\n"
"->      +=      -=      *=      /=      //=     %=\n"
"@=      &=      |=      ^=      >>=     <<=     **="
msgstr ""

#: ../../reference/lexical_analysis.rst:1024
msgid ""
"The period can also occur in floating-point and imaginary literals.  A "
"sequence of three periods has a special meaning as an ellipsis literal. The "
"second half of the list, the augmented assignment operators, serve lexically"
" as delimiters, but also perform an operation."
msgstr ""
"Крапка також може зустрічатися в літералах із плаваючою комою та уявних "
"літералах. Послідовність із трьох періодів має особливе значення як літерали"
" еліпсису. Друга половина списку, розширені оператори присвоєння, лексично "
"служать роздільниками, але також виконують операції."

#: ../../reference/lexical_analysis.rst:1029
msgid ""
"The following printing ASCII characters have special meaning as part of "
"other tokens or are otherwise significant to the lexical analyzer:"
msgstr ""
"Наступні друковані символи ASCII мають спеціальне значення як частина інших "
"токенів або іншим чином важливі для лексичного аналізатора:"

#: ../../reference/lexical_analysis.rst:1032
msgid "'       \"       #       \\"
msgstr ""

#: ../../reference/lexical_analysis.rst:1036
msgid ""
"The following printing ASCII characters are not used in Python.  Their "
"occurrence outside string literals and comments is an unconditional error:"
msgstr ""
"Наступні друковані символи ASCII не використовуються в Python. Їх поява поза"
" рядковими літералами та коментарями є безумовною помилкою:"

#: ../../reference/lexical_analysis.rst:1039
msgid "$       ?       `"
msgstr ""

#: ../../reference/lexical_analysis.rst:1045
msgid "Footnotes"
msgstr "Виноски"

#: ../../reference/lexical_analysis.rst:1046
msgid "https://www.unicode.org/Public/15.1.0/ucd/NameAliases.txt"
msgstr ""

#: ../../reference/lexical_analysis.rst:8
msgid "lexical analysis"
msgstr ""

#: ../../reference/lexical_analysis.rst:8
msgid "parser"
msgstr ""

#: ../../reference/lexical_analysis.rst:8
msgid "token"
msgstr ""

#: ../../reference/lexical_analysis.rst:25
msgid "line structure"
msgstr ""

#: ../../reference/lexical_analysis.rst:35
msgid "logical line"
msgstr ""

#: ../../reference/lexical_analysis.rst:35
#: ../../reference/lexical_analysis.rst:114
#: ../../reference/lexical_analysis.rst:531
msgid "physical line"
msgstr ""

#: ../../reference/lexical_analysis.rst:35
#: ../../reference/lexical_analysis.rst:114
msgid "line joining"
msgstr ""

#: ../../reference/lexical_analysis.rst:35
msgid "NEWLINE token"
msgstr ""

#: ../../reference/lexical_analysis.rst:67
msgid "comment"
msgstr "коментар"

#: ../../reference/lexical_analysis.rst:67
msgid "hash character"
msgstr ""

#: ../../reference/lexical_analysis.rst:67
#: ../../reference/lexical_analysis.rst:81
msgid "# (hash)"
msgstr "# (хеш)"

#: ../../reference/lexical_analysis.rst:81
msgid "source character set"
msgstr ""

#: ../../reference/lexical_analysis.rst:81
msgid "encoding declarations (source file)"
msgstr ""

#: ../../reference/lexical_analysis.rst:81
msgid "source encoding declaration"
msgstr ""

#: ../../reference/lexical_analysis.rst:114
msgid "line continuation"
msgstr ""

#: ../../reference/lexical_analysis.rst:114
msgid "backslash character"
msgstr ""

#: ../../reference/lexical_analysis.rst:159
msgid "blank line"
msgstr ""

#: ../../reference/lexical_analysis.rst:174
msgid "indentation"
msgstr ""

#: ../../reference/lexical_analysis.rst:174
msgid "leading whitespace"
msgstr ""

#: ../../reference/lexical_analysis.rst:174
msgid "space"
msgstr "простір"

#: ../../reference/lexical_analysis.rst:174
msgid "tab"
msgstr ""

#: ../../reference/lexical_analysis.rst:174
msgid "grouping"
msgstr ""

#: ../../reference/lexical_analysis.rst:174
msgid "statement grouping"
msgstr ""

#: ../../reference/lexical_analysis.rst:202
msgid "INDENT token"
msgstr ""

#: ../../reference/lexical_analysis.rst:202
msgid "DEDENT token"
msgstr ""

#: ../../reference/lexical_analysis.rst:277
msgid "identifier"
msgstr ""

#: ../../reference/lexical_analysis.rst:277
msgid "name"
msgstr "name"

#: ../../reference/lexical_analysis.rst:333
#: ../../reference/lexical_analysis.rst:357
msgid "keyword"
msgstr ""

#: ../../reference/lexical_analysis.rst:333
msgid "reserved word"
msgstr ""

#: ../../reference/lexical_analysis.rst:357
msgid "soft keyword"
msgstr ""

#: ../../reference/lexical_analysis.rst:376
msgid "_, identifiers"
msgstr ""

#: ../../reference/lexical_analysis.rst:376
msgid "__, identifiers"
msgstr ""

#: ../../reference/lexical_analysis.rst:432
msgid "literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:432
msgid "constant"
msgstr ""

#: ../../reference/lexical_analysis.rst:437
#: ../../reference/lexical_analysis.rst:478
msgid "string literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:437
#: ../../reference/lexical_analysis.rst:491
msgid "bytes literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:437
msgid "ASCII"
msgstr ""

#: ../../reference/lexical_analysis.rst:437
msgid "' (single quote)"
msgstr ""

#: ../../reference/lexical_analysis.rst:437
msgid "\" (double quote)"
msgstr ""

#: ../../reference/lexical_analysis.rst:437
msgid "u'"
msgstr ""

#: ../../reference/lexical_analysis.rst:437
msgid "u\""
msgstr ""

#: ../../reference/lexical_analysis.rst:478
msgid "triple-quoted string"
msgstr "рядок із потрійними лапками"

#: ../../reference/lexical_analysis.rst:478
msgid "Unicode Consortium"
msgstr ""

#: ../../reference/lexical_analysis.rst:478
msgid "raw string"
msgstr ""

#: ../../reference/lexical_analysis.rst:478
msgid "\"\"\""
msgstr ""

#: ../../reference/lexical_analysis.rst:478
msgid "'''"
msgstr ""

#: ../../reference/lexical_analysis.rst:491
msgid "b'"
msgstr ""

#: ../../reference/lexical_analysis.rst:491
msgid "b\""
msgstr ""

#: ../../reference/lexical_analysis.rst:500
msgid "r'"
msgstr ""

#: ../../reference/lexical_analysis.rst:500
msgid "raw string literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:500
msgid "r\""
msgstr ""

#: ../../reference/lexical_analysis.rst:518
msgid "f'"
msgstr ""

#: ../../reference/lexical_analysis.rst:518
#: ../../reference/lexical_analysis.rst:696
msgid "formatted string literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:518
msgid "f\""
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "escape sequence"
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "Standard C"
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "C"
msgstr "C"

#: ../../reference/lexical_analysis.rst:531
msgid "\\ (backslash)"
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "\\\\"
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "\\a"
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "\\b"
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "\\f"
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "\\n"
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "\\r"
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "\\t"
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "\\v"
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "\\x"
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "\\u"
msgstr ""

#: ../../reference/lexical_analysis.rst:531
msgid "\\U"
msgstr ""

#: ../../reference/lexical_analysis.rst:647
msgid "unrecognized escape sequence"
msgstr ""

#: ../../reference/lexical_analysis.rst:696
msgid "interpolated string literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:696
msgid "string"
msgstr "рядок"

#: ../../reference/lexical_analysis.rst:696
msgid "formatted literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:696
msgid "interpolated literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:696
msgid "f-string"
msgstr "f-рядок"

#: ../../reference/lexical_analysis.rst:696
msgid "fstring"
msgstr ""

#: ../../reference/lexical_analysis.rst:696
msgid "{} (curly brackets)"
msgstr ""

#: ../../reference/lexical_analysis.rst:696
msgid "in formatted string literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:696
msgid "! (exclamation)"
msgstr "! (знак оклику)"

#: ../../reference/lexical_analysis.rst:696
msgid ": (colon)"
msgstr ""

#: ../../reference/lexical_analysis.rst:696
msgid "= (equals)"
msgstr ""

#: ../../reference/lexical_analysis.rst:696
msgid "for help in debugging using string literals"
msgstr ""

#: ../../reference/lexical_analysis.rst:879
msgid "number"
msgstr "номер"

#: ../../reference/lexical_analysis.rst:879
msgid "numeric literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:879
#: ../../reference/lexical_analysis.rst:892
msgid "integer literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:879
msgid "floating-point literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:879
msgid "hexadecimal literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:879
msgid "octal literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:879
msgid "binary literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:879
msgid "decimal literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:879
msgid "imaginary literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:879
msgid "complex literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:892
msgid "0b"
msgstr ""

#: ../../reference/lexical_analysis.rst:892
msgid "0o"
msgstr ""

#: ../../reference/lexical_analysis.rst:892
msgid "0x"
msgstr ""

#: ../../reference/lexical_analysis.rst:892
#: ../../reference/lexical_analysis.rst:938
msgid "_ (underscore)"
msgstr ""

#: ../../reference/lexical_analysis.rst:892
#: ../../reference/lexical_analysis.rst:938
#: ../../reference/lexical_analysis.rst:970
msgid "in numeric literal"
msgstr ""

#: ../../reference/lexical_analysis.rst:938
msgid ". (dot)"
msgstr ""

#: ../../reference/lexical_analysis.rst:938
msgid "e"
msgstr ""

#: ../../reference/lexical_analysis.rst:970
msgid "j"
msgstr ""

#: ../../reference/lexical_analysis.rst:996
msgid "operators"
msgstr ""

#: ../../reference/lexical_analysis.rst:1013
msgid "delimiters"
msgstr ""
