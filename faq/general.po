# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# Vadim Kashirny, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-22 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 00:52+0000\n"
"Last-Translator: Vadim Kashirny, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../faq/general.rst:5
msgid "General Python FAQ"
msgstr "Загальні поширені запитання щодо Python"

#: ../../faq/general.rst:8
msgid "Contents"
msgstr "Зміст"

#: ../../faq/general.rst:13
msgid "General Information"
msgstr "Загальна інформація"

#: ../../faq/general.rst:16
msgid "What is Python?"
msgstr "Що таке Python?"

#: ../../faq/general.rst:18
msgid ""
"Python is an interpreted, interactive, object-oriented programming language."
"  It incorporates modules, exceptions, dynamic typing, very high level "
"dynamic data types, and classes.  It supports multiple programming paradigms"
" beyond object-oriented programming, such as procedural and functional "
"programming. Python combines remarkable power with very clear syntax. It has"
" interfaces to many system calls and libraries, as well as to various window"
" systems, and is extensible in C or C++.  It is also usable as an extension "
"language for applications that need a programmable interface. Finally, "
"Python is portable: it runs on many Unix variants including Linux and macOS,"
" and on Windows."
msgstr ""
"Python — це інтерпретована, інтерактивна, об’єктно-орієнтована мова "
"програмування. Він містить модулі, винятки, динамічну типізацію, динамічні "
"типи даних дуже високого рівня та класи. Він підтримує кілька парадигм "
"програмування, окрім об’єктно-орієнтованого програмування, наприклад "
"процедурне та функціональне програмування. Python поєднує в собі надзвичайну"
" потужність із дуже чітким синтаксисом. Він має інтерфейси для багатьох "
"системних викликів і бібліотек, а також для різних віконних систем і "
"розширюється на C або C++. Його також можна використовувати як мову "
"розширення для програм, яким потрібен програмований інтерфейс. Нарешті, "
"Python портативний: він працює на багатьох варіантах Unix, включаючи Linux і"
" macOS, а також на Windows."

#: ../../faq/general.rst:28
msgid ""
"To find out more, start with :ref:`tutorial-index`.  The `Beginner's Guide "
"to Python <https://wiki.python.org/moin/BeginnersGuide>`_ links to other "
"introductory tutorials and resources for learning Python."
msgstr ""
"Щоб дізнатися більше, почніть з :ref:`tutorial-index`. `Посібник для "
"початківців з Python <https://wiki.python.org/moin/BeginnersGuide>`_ містить"
" посилання на інші вступні посібники та ресурси для вивчення Python."

#: ../../faq/general.rst:34
msgid "What is the Python Software Foundation?"
msgstr "Що таке Python Software Foundation?"

#: ../../faq/general.rst:36
msgid ""
"The Python Software Foundation is an independent non-profit organization "
"that holds the copyright on Python versions 2.1 and newer.  The PSF's "
"mission is to advance open source technology related to the Python "
"programming language and to publicize the use of Python.  The PSF's home "
"page is at https://www.python.org/psf/."
msgstr ""
"Python Software Foundation — це незалежна некомерційна організація, яка "
"володіє авторськими правами на Python версії 2.1 і новіших. Місія PSF "
"полягає в тому, щоб просувати технологію з відкритим кодом, пов’язану з "
"мовою програмування Python, і оприлюднювати використання Python. Домашня "
"сторінка PSF знаходиться за адресою https://www.python.org/psf/."

#: ../../faq/general.rst:42
msgid ""
"Donations to the PSF are tax-exempt in the US.  If you use Python and find "
"it helpful, please contribute via `the PSF donation page "
"<https://www.python.org/psf/donations/>`_."
msgstr ""
"Пожертви на користь PSF звільняються від податків у США. Якщо ви "
"використовуєте Python і вважаєте його корисним, зробіть свій внесок через "
"`сторінку пожертв PSF <https://www.python.org/psf/donations/>`_."

#: ../../faq/general.rst:48
msgid "Are there copyright restrictions on the use of Python?"
msgstr "Чи існують обмеження авторського права на використання Python?"

#: ../../faq/general.rst:50
msgid ""
"You can do anything you want with the source, as long as you leave the "
"copyrights in and display those copyrights in any documentation about Python"
" that you produce.  If you honor the copyright rules, it's OK to use Python "
"for commercial use, to sell copies of Python in source or binary form "
"(modified or unmodified), or to sell products that incorporate Python in "
"some form.  We would still like to know about all commercial use of Python, "
"of course."
msgstr ""
"Ви можете робити з вихідним кодом усе, що завгодно, за умови, що ви залишите"
" авторські права та відобразите ці авторські права в будь-якій документації "
"щодо Python, яку ви створюєте. Якщо ви дотримуєтеся правил авторського "
"права, можна використовувати Python для комерційного використання, продавати"
" копії Python у вихідній чи двійковій формі (модифікованій чи "
"немодифікованій) або продавати продукти, які в тій чи іншій формі містять "
"Python. Звичайно, ми все ще хотіли б знати про комерційне використання "
"Python."

#: ../../faq/general.rst:57
msgid ""
"See `the license page <https://docs.python.org/3/license.html>`_ to find "
"further explanations and the full text of the PSF License."
msgstr ""

#: ../../faq/general.rst:60
msgid ""
"The Python logo is trademarked, and in certain cases permission is required "
"to use it.  Consult `the Trademark Usage Policy "
"<https://www.python.org/psf/trademarks/>`__ for more information."
msgstr ""
"Логотип Python є торговою маркою, і в деяких випадках для його використання "
"потрібен дозвіл. Зверніться до `Політики використання торговельних марок "
"<https://www.python.org/psf/trademarks/>`__ для отримання додаткової "
"інформації."

#: ../../faq/general.rst:66
msgid "Why was Python created in the first place?"
msgstr "Чому взагалі був створений Python?"

#: ../../faq/general.rst:68
msgid ""
"Here's a *very* brief summary of what started it all, written by Guido van "
"Rossum:"
msgstr ""
"Ось *дуже* короткий виклад того, з чого все почалося, написаний Гвідо ван "
"Россумом:"

#: ../../faq/general.rst:71
msgid ""
"I had extensive experience with implementing an interpreted language in the "
"ABC group at CWI, and from working with this group I had learned a lot about"
" language design.  This is the origin of many Python features, including the"
" use of indentation for statement grouping and the inclusion of very-high-"
"level data types (although the details are all different in Python)."
msgstr ""
"У мене був великий досвід впровадження мови інтерпретації в групі ABC у CWI,"
" і, працюючи з цією групою, я багато чого дізнався про мовний дизайн. Це "
"походження багатьох функцій Python, включаючи використання відступів для "
"групування операторів і включення типів даних дуже високого рівня (хоча всі "
"деталі в Python різні)."

#: ../../faq/general.rst:78
msgid ""
"I had a number of gripes about the ABC language, but also liked many of its "
"features.  It was impossible to extend the ABC language (or its "
"implementation) to remedy my complaints -- in fact its lack of extensibility"
" was one of its biggest problems.  I had some experience with using "
"Modula-2+ and talked with the designers of Modula-3 and read the Modula-3 "
"report. Modula-3 is the origin of the syntax and semantics used for "
"exceptions, and some other Python features."
msgstr ""
"У мене було кілька нарікань щодо мови ABC, але мені також сподобалися багато"
" її функцій. Неможливо було розширити мову ABC (або її реалізацію), щоб "
"виправити мої скарги - насправді її відсутність розширюваності була однією з"
" найбільших проблем. У мене був певний досвід використання Modula-2+, я "
"поспілкувався з розробниками Modula-3 і прочитав звіт Modula-3. Modula-3 є "
"джерелом синтаксису та семантики, які використовуються для винятків, а також"
" деяких інших функцій Python."

#: ../../faq/general.rst:86
msgid ""
"I was working in the Amoeba distributed operating system group at CWI.  We "
"needed a better way to do system administration than by writing either C "
"programs or Bourne shell scripts, since Amoeba had its own system call "
"interface which wasn't easily accessible from the Bourne shell.  My "
"experience with error handling in Amoeba made me acutely aware of the "
"importance of exceptions as a programming language feature."
msgstr ""
"Я працював у групі розподілених операційних систем Amoeba в CWI. Нам "
"потрібен був кращий спосіб адміністрування системи, ніж написання програм на"
" C або сценаріїв оболонки Bourne, оскільки Amoeba мала власний інтерфейс "
"системних викликів, до якого було важко отримати доступ із оболонки Bourne. "
"Мій досвід обробки помилок в Amoeba дав мені чітке усвідомлення важливості "
"винятків як функції мови програмування."

#: ../../faq/general.rst:93
msgid ""
"It occurred to me that a scripting language with a syntax like ABC but with "
"access to the Amoeba system calls would fill the need.  I realized that it "
"would be foolish to write an Amoeba-specific language, so I decided that I "
"needed a language that was generally extensible."
msgstr ""
"Мені спало на думку, що мова сценаріїв із синтаксисом, подібним до ABC, але "
"з доступом до системних викликів Amoeba, задовольнить цю потребу. Я "
"зрозумів, що було б нерозумно писати мову, специфічну для Amoeba, тому я "
"вирішив, що мені потрібна мова, яка загалом розширювана."

#: ../../faq/general.rst:98
msgid ""
"During the 1989 Christmas holidays, I had a lot of time on my hand, so I "
"decided to give it a try.  During the next year, while still mostly working "
"on it in my own time, Python was used in the Amoeba project with increasing "
"success, and the feedback from colleagues made me add many early "
"improvements."
msgstr ""
"Під час різдвяних свят 1989 року в мене було багато часу, тож я вирішив "
"спробувати. Протягом наступного року, хоча я все ще здебільшого працював над"
" ним у свій час, Python використовувався в проекті Amoeba з дедалі більшим "
"успіхом, і відгуки колег змусили мене додати багато перших покращень."

#: ../../faq/general.rst:104
msgid ""
"In February 1991, after just over a year of development, I decided to post "
"to USENET.  The rest is in the ``Misc/HISTORY`` file."
msgstr ""
"У лютому 1991 року, після трохи більше ніж року розробки, я вирішив "
"опублікувати повідомлення в USENET. Решта у файлі ``Misc/HISTORY``."

#: ../../faq/general.rst:109
msgid "What is Python good for?"
msgstr "Чим корисний Python?"

#: ../../faq/general.rst:111
msgid ""
"Python is a high-level general-purpose programming language that can be "
"applied to many different classes of problems."
msgstr ""
"Python — це мова програмування високого рівня загального призначення, яку "
"можна застосовувати до багатьох різних класів задач."

#: ../../faq/general.rst:114
msgid ""
"The language comes with a large standard library that covers areas such as "
"string processing (regular expressions, Unicode, calculating differences "
"between files), internet protocols (HTTP, FTP, SMTP, XML-RPC, POP, IMAP), "
"software engineering (unit testing, logging, profiling, parsing Python "
"code), and operating system interfaces (system calls, filesystems, TCP/IP "
"sockets).  Look at the table of contents for :ref:`library-index` to get an "
"idea of what's available.  A wide variety of third-party extensions are also"
" available.  Consult `the Python Package Index <https://pypi.org>`_ to find "
"packages of interest to you."
msgstr ""

#: ../../faq/general.rst:128
msgid "How does the Python version numbering scheme work?"
msgstr "Як працює схема нумерації версій Python?"

#: ../../faq/general.rst:130
msgid "Python versions are numbered \"A.B.C\" or \"A.B\":"
msgstr ""

#: ../../faq/general.rst:132
msgid ""
"*A* is the major version number -- it is only incremented for really major "
"changes in the language."
msgstr ""

#: ../../faq/general.rst:134
msgid ""
"*B* is the minor version number -- it is incremented for less earth-"
"shattering changes."
msgstr ""

#: ../../faq/general.rst:136
msgid ""
"*C* is the micro version number -- it is incremented for each bugfix "
"release."
msgstr ""

#: ../../faq/general.rst:138
msgid ""
"Not all releases are bugfix releases.  In the run-up to a new feature "
"release, a series of development releases are made, denoted as alpha, beta, "
"or release candidate.  Alphas are early releases in which interfaces aren't "
"yet finalized; it's not unexpected to see an interface change between two "
"alpha releases. Betas are more stable, preserving existing interfaces but "
"possibly adding new modules, and release candidates are frozen, making no "
"changes except as needed to fix critical bugs."
msgstr ""

#: ../../faq/general.rst:146
msgid "Alpha, beta and release candidate versions have an additional suffix:"
msgstr ""

#: ../../faq/general.rst:148
msgid "The suffix for an alpha version is \"aN\" for some small number *N*."
msgstr ""

#: ../../faq/general.rst:149
msgid "The suffix for a beta version is \"bN\" for some small number *N*."
msgstr ""

#: ../../faq/general.rst:150
msgid ""
"The suffix for a release candidate version is \"rcN\" for some small number "
"*N*."
msgstr ""

#: ../../faq/general.rst:152
msgid ""
"In other words, all versions labeled *2.0aN* precede the versions labeled "
"*2.0bN*, which precede versions labeled *2.0rcN*, and *those* precede 2.0."
msgstr ""

#: ../../faq/general.rst:155
msgid ""
"You may also find version numbers with a \"+\" suffix, e.g. \"2.2+\".  These"
" are unreleased versions, built directly from the CPython development "
"repository.  In practice, after a final minor release is made, the version "
"is incremented to the next minor version, which becomes the \"a0\" version, "
"e.g. \"2.4a0\"."
msgstr ""
"Ви також можете знайти номери версій із суфіксом \"+\", напр. \"2,2+\". Це "
"неопубліковані версії, створені безпосередньо з репозиторію розробки "
"CPython. На практиці, після створення остаточного мінорного випуску, версія "
"збільшується до наступної мінорної версії, яка стає версією \"a0\", напр. "
"\"2.4a0\"."

#: ../../faq/general.rst:160
msgid ""
"See the `Developer's Guide <https://devguide.python.org/developer-"
"workflow/development-cycle/>`__ for more information about the development "
"cycle, and :pep:`387` to learn more about Python's backward compatibility "
"policy.  See also the documentation for :data:`sys.version`, "
":data:`sys.hexversion`, and :data:`sys.version_info`."
msgstr ""

#: ../../faq/general.rst:169
msgid "How do I obtain a copy of the Python source?"
msgstr "Як отримати копію вихідного коду Python?"

#: ../../faq/general.rst:171
msgid ""
"The latest Python source distribution is always available from python.org, "
"at https://www.python.org/downloads/.  The latest development sources can be"
" obtained at https://github.com/python/cpython/."
msgstr ""
"Найновіший вихідний код Python завжди доступний на сайті python.org за "
"адресою https://www.python.org/downloads/. Останні джерела розробки можна "
"отримати на https://github.com/python/cpython/."

#: ../../faq/general.rst:175
msgid ""
"The source distribution is a gzipped tar file containing the complete C "
"source, Sphinx-formatted documentation, Python library modules, example "
"programs, and several useful pieces of freely distributable software.  The "
"source will compile and run out of the box on most UNIX platforms."
msgstr ""
"Дистрибутив вихідного коду — це файл tar у форматі gzip, що містить повний "
"вихідний код C, документацію у форматі Sphinx, модулі бібліотеки Python, "
"приклади програм і кілька корисних частин програмного забезпечення, яке "
"вільно розповсюджується. Джерело компілюється та запускається з коробки на "
"більшості платформ UNIX."

#: ../../faq/general.rst:180
msgid ""
"Consult the `Getting Started section of the Python Developer's Guide "
"<https://devguide.python.org/setup/>`__ for more information on getting the "
"source code and compiling it."
msgstr ""
"Зверніться до розділу `Початок роботи` `Посібника розробника Python "
"<https://devguide.python.org/setup/>`__, щоб дізнатися більше про отримання "
"вихідного коду та його компіляцію."

#: ../../faq/general.rst:186
msgid "How do I get documentation on Python?"
msgstr "Як отримати документацію на Python?"

#: ../../faq/general.rst:188
msgid ""
"The standard documentation for the current stable version of Python is "
"available at https://docs.python.org/3/.  PDF, plain text, and downloadable "
"HTML versions are also available at https://docs.python.org/3/download.html."
msgstr ""
"Стандартна документація для поточної стабільної версії Python доступна за "
"адресою https://docs.python.org/3/. PDF, звичайний текст і HTML-версії для "
"завантаження також доступні за адресою "
"https://docs.python.org/3/download.html."

#: ../../faq/general.rst:192
msgid ""
"The documentation is written in reStructuredText and processed by `the "
"Sphinx documentation tool <https://www.sphinx-doc.org/>`__.  The "
"reStructuredText source for the documentation is part of the Python source "
"distribution."
msgstr ""

#: ../../faq/general.rst:198
msgid "I've never programmed before. Is there a Python tutorial?"
msgstr "Я ніколи раніше не програмував. Чи є підручник з Python?"

#: ../../faq/general.rst:200
msgid ""
"There are numerous tutorials and books available.  The standard "
"documentation includes :ref:`tutorial-index`."
msgstr ""
"Доступно багато підручників і книг. Стандартна документація включає "
":ref:`tutorial-index`."

#: ../../faq/general.rst:203
msgid ""
"Consult `the Beginner's Guide "
"<https://wiki.python.org/moin/BeginnersGuide>`_ to find information for "
"beginning Python programmers, including lists of tutorials."
msgstr ""
"Зверніться до `Посібника для початківців "
"<https://wiki.python.org/moin/BeginnersGuide>`_, щоб знайти інформацію для "
"початківців програмістів Python, включаючи списки навчальних посібників."

#: ../../faq/general.rst:208
msgid "Is there a newsgroup or mailing list devoted to Python?"
msgstr "Чи існує група новин або список розсилки, присвячений Python?"

#: ../../faq/general.rst:210
msgid ""
"There is a newsgroup, :newsgroup:`comp.lang.python`, and a mailing list, "
"`python-list <https://mail.python.org/mailman/listinfo/python-list>`_.  The "
"newsgroup and mailing list are gatewayed into each other -- if you can read "
"news it's unnecessary to subscribe to the mailing list. "
":newsgroup:`comp.lang.python` is high-traffic, receiving hundreds of "
"postings every day, and Usenet readers are often more able to cope with this"
" volume."
msgstr ""
"Є група новин :newsgroup:`comp.lang.python` і список розсилки `python-list "
"<https://mail.python.org/mailman/listinfo/python-list>`_. Група новин і "
"список розсилки пов’язані один з одним — якщо ви можете читати новини, немає"
" необхідності підписуватися на список розсилки. "
":newsgroup:`comp.lang.python` має високий трафік, отримує сотні публікацій "
"щодня, і читачам Usenet часто легше впоратися з цим обсягом."

#: ../../faq/general.rst:217
msgid ""
"Announcements of new software releases and events can be found in "
"comp.lang.python.announce, a low-traffic moderated list that receives about "
"five postings per day.  It's available as `the python-announce mailing list "
"<https://mail.python.org/mailman3/lists/python-announce-list.python.org/>`_."
msgstr ""

#: ../../faq/general.rst:222
msgid ""
"More info about other mailing lists and newsgroups can be found at "
"https://www.python.org/community/lists/."
msgstr ""
"Додаткову інформацію про інші списки розсилки та групи новин можна знайти на"
" https://www.python.org/community/lists/."

#: ../../faq/general.rst:227
msgid "How do I get a beta test version of Python?"
msgstr "Як отримати тестову бета-версію Python?"

#: ../../faq/general.rst:229
msgid ""
"Alpha and beta releases are available from "
"https://www.python.org/downloads/.  All releases are announced on the "
"comp.lang.python and comp.lang.python.announce newsgroups and on the Python "
"home page at https://www.python.org/; an RSS feed of news is available."
msgstr ""
"Альфа- та бета-версії доступні за адресою https://www.python.org/downloads/."
" Усі випуски оголошуються в групах новин comp.lang.python і "
"comp.lang.python.announce, а також на домашній сторінці Python за адресою "
"https://www.python.org/; доступна RSS-канал новин."

#: ../../faq/general.rst:234
msgid ""
"You can also access the development version of Python through Git.  See `The"
" Python Developer's Guide <https://devguide.python.org/>`_ for details."
msgstr ""
"Ви також можете отримати доступ до версії Python для розробки через Git. "
"Перегляньте `Посібник розробника Python <https://devguide.python.org/>`_ для"
" отримання додаткової інформації."

#: ../../faq/general.rst:239
msgid "How do I submit bug reports and patches for Python?"
msgstr "Як надіслати звіти про помилки та виправлення для Python?"

#: ../../faq/general.rst:241
msgid ""
"To report a bug or submit a patch, use the issue tracker at "
"https://github.com/python/cpython/issues."
msgstr ""

#: ../../faq/general.rst:244
msgid ""
"For more information on how Python is developed, consult `the Python "
"Developer's Guide <https://devguide.python.org/>`_."
msgstr ""
"Щоб дізнатися більше про те, як розробляється Python, зверніться до "
"`Посібника розробника Python <https://devguide.python.org/>`_."

#: ../../faq/general.rst:249
msgid "Are there any published articles about Python that I can reference?"
msgstr "Чи є опубліковані статті про Python, на які я можу посилатися?"

#: ../../faq/general.rst:251
msgid "It's probably best to cite your favorite book about Python."
msgstr "Мабуть, найкраще процитувати вашу улюблену книгу про Python."

#: ../../faq/general.rst:253
msgid ""
"The `very first article <https://ir.cwi.nl/pub/18204>`_ about Python was "
"written in 1991 and is now quite outdated."
msgstr ""

#: ../../faq/general.rst:256
msgid ""
"Guido van Rossum and Jelke de Boer, \"Interactively Testing Remote Servers "
"Using the Python Programming Language\", CWI Quarterly, Volume 4, Issue 4 "
"(December 1991), Amsterdam, pp 283--303."
msgstr ""
"Гвідо ван Россум і Джелке де Бур, \"Інтерактивне тестування віддалених "
"серверів за допомогою мови програмування Python\", CWI Quarterly, том 4, "
"випуск 4 (грудень 1991), Амстердам, стор. 283--303."

#: ../../faq/general.rst:262
msgid "Are there any books on Python?"
msgstr "Чи є книги про Python?"

#: ../../faq/general.rst:264
msgid ""
"Yes, there are many, and more are being published.  See the python.org wiki "
"at https://wiki.python.org/moin/PythonBooks for a list."
msgstr ""
"Так, їх багато, і публікується більше. Перегляньте список у вікі python.org "
"за адресою https://wiki.python.org/moin/PythonBooks."

#: ../../faq/general.rst:267
msgid ""
"You can also search online bookstores for \"Python\" and filter out the "
"Monty Python references; or perhaps search for \"Python\" and \"language\"."
msgstr ""
"Ви також можете шукати в книжкових онлайн-магазинах \"Python\" і "
"відфільтрувати посилання на Monty Python; або, можливо, шукайте \"Python\" і"
" \"мова\"."

#: ../../faq/general.rst:272
msgid "Where in the world is www.python.org located?"
msgstr "Де у світі знаходиться www.python.org?"

#: ../../faq/general.rst:274
msgid ""
"The Python project's infrastructure is located all over the world and is "
"managed by the Python Infrastructure Team. Details `here "
"<https://infra.psf.io>`__."
msgstr ""

#: ../../faq/general.rst:279
msgid "Why is it called Python?"
msgstr "Чому він називається Python?"

#: ../../faq/general.rst:281
msgid ""
"When he began implementing Python, Guido van Rossum was also reading the "
"published scripts from `\"Monty Python's Flying Circus\" "
"<https://en.wikipedia.org/wiki/Monty_Python>`__, a BBC comedy series from "
"the 1970s.  Van Rossum thought he needed a name that was short, unique, and "
"slightly mysterious, so he decided to call the language Python."
msgstr ""
"Коли Гвідо ван Россум почав впроваджувати Python,  він також читав "
"опубліковані сценарії з `\"Летючого цирку Монті Пайтона\" "
"<https://en.wikipedia.org/wiki/Monty_Python>`__, комедійного серіалу BBC "
"1970-х років. Ван Россум подумав, що йому потрібна коротка, унікальна та "
"трохи загадкова назва, тому він вирішив назвати мову Python."

#: ../../faq/general.rst:289
msgid "Do I have to like \"Monty Python's Flying Circus\"?"
msgstr "Чи обов’язково мені повинен подобатись  \"Летючий цирк Монті Пайтона\"?"

#: ../../faq/general.rst:291
msgid "No, but it helps.  :)"
msgstr "Ні, але допомагає. :)"

#: ../../faq/general.rst:295
msgid "Python in the real world"
msgstr "Python у реальному світі"

#: ../../faq/general.rst:298
msgid "How stable is Python?"
msgstr "Наскільки стабільний Python?"

#: ../../faq/general.rst:300
msgid ""
"Very stable.  New, stable releases have been coming out roughly every 6 to "
"18 months since 1991, and this seems likely to continue.  As of version 3.9,"
" Python will have a new feature release every 12 months (:pep:`602`)."
msgstr ""

#: ../../faq/general.rst:304
msgid ""
"The developers issue bugfix releases of older versions, so the stability of "
"existing releases gradually improves.  Bugfix releases, indicated by a third"
" component of the version number (e.g. 3.5.3, 3.6.2), are managed for "
"stability; only fixes for known problems are included in a bugfix release, "
"and it's guaranteed that interfaces will remain the same throughout a series"
" of bugfix releases."
msgstr ""

#: ../../faq/general.rst:311
msgid ""
"The latest stable releases can always be found on the `Python download page "
"<https://www.python.org/downloads/>`_. Python 3.x is the recommended version"
" and supported by most widely used libraries. Python 2.x :pep:`is not "
"maintained anymore <373>`."
msgstr ""

#: ../../faq/general.rst:318
msgid "How many people are using Python?"
msgstr "Скільки людей використовують Python?"

#: ../../faq/general.rst:320
msgid ""
"There are probably millions of users, though it's difficult to obtain an "
"exact count."
msgstr ""
"Ймовірно, є мільйони користувачів, хоча важко отримати точну кількість."

#: ../../faq/general.rst:323
msgid ""
"Python is available for free download, so there are no sales figures, and "
"it's available from many different sites and packaged with many Linux "
"distributions, so download statistics don't tell the whole story either."
msgstr ""
"Python доступний для безкоштовного завантаження, тому немає даних про "
"продажі, і він доступний на багатьох різних сайтах і входить до складу "
"багатьох дистрибутивів Linux, тому статистика завантажень також не говорить "
"усієї історії."

#: ../../faq/general.rst:327
msgid ""
"The comp.lang.python newsgroup is very active, but not all Python users post"
" to the group or even read it."
msgstr ""
"Група новин comp.lang.python дуже активна, але не всі користувачі Python "
"пишають у групі або навіть читають її."

#: ../../faq/general.rst:332
msgid "Have any significant projects been done in Python?"
msgstr "Чи були якісь значні проекти виконані на Python?"

#: ../../faq/general.rst:334
msgid ""
"See https://www.python.org/about/success for a list of projects that use "
"Python. Consulting the proceedings for `past Python conferences "
"<https://www.python.org/community/workshops/>`_ will reveal contributions "
"from many different companies and organizations."
msgstr ""
"Див. https://www.python.org/about/success, щоб переглянути список проектів, "
"які використовують Python. Перегляд матеріалів `минулих конференцій Python "
"<https://www.python.org/community/workshops/>`_ покаже внески багатьох "
"різних компаній і організацій."

#: ../../faq/general.rst:339
msgid ""
"High-profile Python projects include `the Mailman mailing list manager "
"<https://www.list.org>`_ and `the Zope application server "
"<https://www.zope.dev>`_.  Several Linux distributions, most notably `Red "
"Hat <https://www.redhat.com>`_, have written part or all of their installer "
"and system administration software in Python.  Companies that use Python "
"internally include Google, Yahoo, and Lucasfilm Ltd."
msgstr ""

#: ../../faq/general.rst:348
msgid "What new developments are expected for Python in the future?"
msgstr "Які нові розробки очікуються для Python у майбутньому?"

#: ../../faq/general.rst:350
msgid ""
"See https://peps.python.org/ for the Python Enhancement Proposals (PEPs). "
"PEPs are design documents describing a suggested new feature for Python, "
"providing a concise technical specification and a rationale.  Look for a PEP"
" titled \"Python X.Y Release Schedule\", where X.Y is a version that hasn't "
"been publicly released yet."
msgstr ""

#: ../../faq/general.rst:356
msgid ""
"New development is discussed on `the python-dev mailing list "
"<https://mail.python.org/mailman3/lists/python-dev.python.org/>`_."
msgstr ""

#: ../../faq/general.rst:361
msgid "Is it reasonable to propose incompatible changes to Python?"
msgstr "Чи розумно пропонувати несумісні зміни в Python?"

#: ../../faq/general.rst:363
msgid ""
"In general, no.  There are already millions of lines of Python code around "
"the world, so any change in the language that invalidates more than a very "
"small fraction of existing programs has to be frowned upon.  Even if you can"
" provide a conversion program, there's still the problem of updating all "
"documentation; many books have been written about Python, and we don't want "
"to invalidate them all at a single stroke."
msgstr ""
"Загалом ні. По всьому світу вже існують мільйони рядків коду Python, тому "
"будь-яку зміну в мові, яка робить недійсною більш ніж дуже малу частину "
"існуючих програм, слід сприймати несхвально. Навіть якщо ви можете надати "
"програму перетворення, все одно залишається проблема оновлення всієї "
"документації; Про Python написано багато книжок, і ми не хочемо скасувати їх"
" усі одним ударом."

#: ../../faq/general.rst:370
msgid ""
"Providing a gradual upgrade path is necessary if a feature has to be "
"changed. :pep:`5` describes the procedure followed for introducing backward-"
"incompatible changes while minimizing disruption for users."
msgstr ""
"Надання поступового шляху оновлення є необхідним, якщо функцію потрібно "
"змінити. :pep:`5` описує процедуру введення змін, несумісних із попередніми "
"версіями, мінімізуючи перешкоди для користувачів."

#: ../../faq/general.rst:376
msgid "Is Python a good language for beginning programmers?"
msgstr "Чи є Python хорошою мовою для програмістів-початківців?"

#: ../../faq/general.rst:378
msgid "Yes."
msgstr "Так."

#: ../../faq/general.rst:380
msgid ""
"It is still common to start students with a procedural and statically typed "
"language such as Pascal, C, or a subset of C++ or Java.  Students may be "
"better served by learning Python as their first language.  Python has a very"
" simple and consistent syntax and a large standard library and, most "
"importantly, using Python in a beginning programming course lets students "
"concentrate on important programming skills such as problem decomposition "
"and data type design.  With Python, students can be quickly introduced to "
"basic concepts such as loops and procedures.  They can probably even work "
"with user-defined objects in their very first course."
msgstr ""
"Досі прийнято починати студентів із процедурної та статично типізованої "
"мови, такої як Pascal, C або підмножини C++ чи Java. Студентам краще буде "
"вивчати Python як першу мову. Python має дуже простий і послідовний "
"синтаксис і велику стандартну бібліотеку, і, що найважливіше, використання "
"Python на початковому курсі програмування дозволяє студентам зосередитися на"
" важливих навичках програмування, таких як декомпозиція задачі та "
"проектування типів даних. За допомогою Python студенти можуть швидко "
"познайомитися з основними поняттями, такими як цикли та процедури. Ймовірно,"
" вони навіть можуть працювати з об’єктами, визначеними користувачем, у "
"своєму першому курсі."

#: ../../faq/general.rst:390
msgid ""
"For a student who has never programmed before, using a statically typed "
"language seems unnatural.  It presents additional complexity that the "
"student must master and slows the pace of the course.  The students are "
"trying to learn to think like a computer, decompose problems, design "
"consistent interfaces, and encapsulate data.  While learning to use a "
"statically typed language is important in the long term, it is not "
"necessarily the best topic to address in the students' first programming "
"course."
msgstr ""
"Для студента, який ніколи раніше не програмував, використання статично "
"типізованої мови виглядає неприродним. Це створює додаткову складність, яку "
"студент повинен освоїти, і уповільнює темп курсу. Студенти намагаються "
"навчитися мислити як комп’ютер, декомпонувати проблеми, проектувати "
"послідовні інтерфейси та інкапсулювати дані. Хоча навчитися використовувати "
"статично типізовану мову є важливим у довгостроковій перспективі, це не "
"обов’язково найкраща тема для вивчення в першому курсі програмування "
"студентів."

#: ../../faq/general.rst:398
msgid ""
"Many other aspects of Python make it a good first language.  Like Java, "
"Python has a large standard library so that students can be assigned "
"programming projects very early in the course that *do* something.  "
"Assignments aren't restricted to the standard four-function calculator and "
"check balancing programs.  By using the standard library, students can gain "
"the satisfaction of working on realistic applications as they learn the "
"fundamentals of programming. Using the standard library also teaches "
"students about code reuse.  Third-party modules such as PyGame are also "
"helpful in extending the students' reach."
msgstr ""
"Багато інших аспектів Python роблять його хорошою першою мовою. Подібно до "
"Java, Python має велику стандартну бібліотеку, тому студентам можна "
"призначати проекти програмування на початку курсу, які *роблять* щось. "
"Завдання не обмежуються стандартним чотирифункціональним калькулятором і "
"програмами перевірки балансу. Використовуючи стандартну бібліотеку, студенти"
" можуть отримати задоволення від роботи над реалістичними програмами, "
"вивчаючи основи програмування. Використання стандартної бібліотеки також "
"навчає студентів повторному використанню коду. Сторонні модулі, такі як "
"PyGame, також допомагають розширити охоплення студентів."

#: ../../faq/general.rst:407
msgid ""
"Python's interactive interpreter enables students to test language features "
"while they're programming.  They can keep a window with the interpreter "
"running while they enter their program's source in another window.  If they "
"can't remember the methods for a list, they can do something like this::"
msgstr ""
"Інтерактивний інтерпретатор Python дозволяє студентам тестувати функції мови"
" під час програмування. Вони можуть тримати вікно з запущеним "
"інтерпретатором, поки вони вводять код своєї програми в інше вікно. Якщо "
"вони не можуть згадати методи для списку, вони можуть зробити щось подібне:"

#: ../../faq/general.rst:412
msgid ""
">>> L = []\n"
">>> dir(L) \n"
"['__add__', '__class__', '__contains__', '__delattr__', '__delitem__',\n"
"'__dir__', '__doc__', '__eq__', '__format__', '__ge__',\n"
"'__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__',\n"
"'__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__',\n"
"'__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__',\n"
"'__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__',\n"
"'__sizeof__', '__str__', '__subclasshook__', 'append', 'clear',\n"
"'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove',\n"
"'reverse', 'sort']\n"
">>> [d for d in dir(L) if '__' not in d]\n"
"['append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']\n"
"\n"
">>> help(L.append)\n"
"Help on built-in function append:\n"
"\n"
"append(...)\n"
"    L.append(object) -> None -- append object to end\n"
"\n"
">>> L.append(1)\n"
">>> L\n"
"[1]"
msgstr ""

#: ../../faq/general.rst:436
msgid ""
"With the interpreter, documentation is never far from the student as they "
"are programming."
msgstr ""
"З інтерпретатором документація завжди є доступною для студента, оскільки він"
" програмує."

#: ../../faq/general.rst:439
msgid ""
"There are also good IDEs for Python.  IDLE is a cross-platform IDE for "
"Python that is written in Python using Tkinter. Emacs users will be happy to"
" know that there is a very good Python mode for Emacs.  All of these "
"programming environments provide syntax highlighting, auto-indenting, and "
"access to the interactive interpreter while coding.  Consult `the Python "
"wiki <https://wiki.python.org/moin/PythonEditors>`_ for a full list of "
"Python editing environments."
msgstr ""

#: ../../faq/general.rst:447
msgid ""
"If you want to discuss Python's use in education, you may be interested in "
"joining `the edu-sig mailing list "
"<https://www.python.org/community/sigs/current/edu-sig>`_."
msgstr ""
"Якщо ви хочете обговорити використання Python в освіті, вам може бути цікаво"
" приєднатися до `списку розсилки edu-sig "
"<https://www.python.org/community/sigs/current/edu-sig>`_."
