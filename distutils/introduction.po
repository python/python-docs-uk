# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-19 14:13+0000\n"
"PO-Revision-Date: 2021-06-28 00:51+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../distutils/introduction.rst:5
msgid "An Introduction to Distutils"
msgstr "Вступ до Distutils"

#: ../../distutils/_setuptools_disclaimer.rst:3
msgid ""
"This document is being retained solely until the ``setuptools`` "
"documentation at https://setuptools.readthedocs.io/en/latest/setuptools.html"
" independently covers all of the relevant information currently included "
"here."
msgstr ""
"Цей документ зберігається лише до тих пір, поки документація ``setuptools`` "
"за адресою https://setuptools.readthedocs.io/en/latest/setuptools.html "
"окремо не охопить всю відповідну інформацію, яка зараз включена тут."

#: ../../distutils/introduction.rst:9
msgid ""
"This document covers using the Distutils to distribute your Python modules, "
"concentrating on the role of developer/distributor: if you're looking for "
"information on installing Python modules, you should refer to the "
":ref:`install-index` chapter."
msgstr ""
"Цей документ описує використання Distutils для розповсюдження ваших модулів "
"Python, зосереджуючись на ролі розробника/розповсюджувача: якщо ви шукаєте "
"інформацію про встановлення модулів Python, вам слід звернутися до розділу "
":ref:`install-index`."

#: ../../distutils/introduction.rst:18
msgid "Concepts & Terminology"
msgstr "Поняття та термінологія"

#: ../../distutils/introduction.rst:20
msgid ""
"Using the Distutils is quite simple, both for module developers and for "
"users/administrators installing third-party modules.  As a developer, your "
"responsibilities (apart from writing solid, well-documented and well-tested "
"code, of course!) are:"
msgstr ""
"Користуватися Distutils досить просто як для розробників модулів, так і для "
"користувачів/адміністраторів, які встановлюють модулі сторонніх розробників."
" Як розробник, ваші обов’язки (крім написання надійного, добре "
"задокументованого та перевіреного коду, звичайно!) такі:"

#: ../../distutils/introduction.rst:25
msgid "write a setup script (:file:`setup.py` by convention)"
msgstr "написати сценарій налаштування (:file:`setup.py` за угодою)"

#: ../../distutils/introduction.rst:27
msgid "(optional) write a setup configuration file"
msgstr "(необов’язково) написати файл конфігурації налаштування"

#: ../../distutils/introduction.rst:29
msgid "create a source distribution"
msgstr "створити вихідний розподіл"

#: ../../distutils/introduction.rst:31
msgid "(optional) create one or more built (binary) distributions"
msgstr ""
"(необов’язково) створити один або кілька вбудованих (бінарних) дистрибутивів"

#: ../../distutils/introduction.rst:33
msgid "Each of these tasks is covered in this document."
msgstr "Кожне з цих завдань описано в цьому документі."

#: ../../distutils/introduction.rst:35
msgid ""
"Not all module developers have access to a multitude of platforms, so it's "
"not always feasible to expect them to create a multitude of built "
"distributions.  It is hoped that a class of intermediaries, called "
"*packagers*, will arise to address this need.  Packagers will take source "
"distributions released by module developers, build them on one or more "
"platforms, and release the resulting built distributions.  Thus, users on "
"the most popular platforms will be able to install most popular Python "
"module distributions in the most natural way for their platform, without "
"having to run a single setup script or compile a line of code."
msgstr ""
"Не всі розробники модулів мають доступ до безлічі платформ, тому не завжди "
"можна очікувати, що вони створять безліч вбудованих дистрибутивів. Є надія, "
"що для задоволення цієї потреби виникне клас посередників, які називаються "
"*пакувальниками*. Розробники пакувальників візьмуть дистрибутиви вихідного "
"коду, випущені розробниками модулів, створять їх на одній або кількох "
"платформах і випустять отримані складені дистрибутиви. Таким чином, "
"користувачі на найпопулярніших платформах зможуть інсталювати більшість "
"популярних дистрибутивів модулів Python найбільш природним способом для "
"своєї платформи, без необхідності запускати один сценарій налаштування або "
"компілювати рядок коду."

#: ../../distutils/introduction.rst:49
msgid "A Simple Example"
msgstr "Простий приклад"

#: ../../distutils/introduction.rst:51
msgid ""
"The setup script is usually quite simple, although since it's written in "
"Python, there are no arbitrary limits to what you can do with it, though you"
" should be careful about putting arbitrarily expensive operations in your "
"setup script. Unlike, say, Autoconf-style configure scripts, the setup "
"script may be run multiple times in the course of building and installing "
"your module distribution."
msgstr ""
"Сценарій налаштування, як правило, досить простий, хоча, оскільки він "
"написаний на Python, немає довільних обмежень на те, що ви можете робити з "
"ним, хоча ви повинні бути обережними щодо розміщення довільно дорогих "
"операцій у вашому сценарії налаштування. На відміну, скажімо, від сценаріїв "
"налаштування у стилі Autoconf, сценарій налаштування можна запускати кілька "
"разів під час збирання та встановлення вашого дистрибутива модуля."

#: ../../distutils/introduction.rst:58
msgid ""
"If all you want to do is distribute a module called :mod:`foo`, contained in"
" a file :file:`foo.py`, then your setup script can be as simple as this::"
msgstr ""
"Якщо все, що ви хочете зробити, це розповсюдити модуль під назвою "
":mod:`foo`, який міститься у файлі :file:`foo.py`, тоді ваш сценарій "
"налаштування може бути таким простим, як це:"

#: ../../distutils/introduction.rst:67
msgid "Some observations:"
msgstr "Деякі спостереження:"

#: ../../distutils/introduction.rst:69
msgid ""
"most information that you supply to the Distutils is supplied as keyword "
"arguments to the :func:`setup` function"
msgstr ""
"Більшість інформації, яку ви надаєте Distutils, надається як ключові "
"аргументи функції :func:`setup`"

#: ../../distutils/introduction.rst:72
msgid ""
"those keyword arguments fall into two categories: package metadata (name, "
"version number) and information about what's in the package (a list of pure "
"Python modules, in this case)"
msgstr ""
"ці аргументи ключових слів поділяються на дві категорії: метадані пакета "
"(назва, номер версії) та інформація про те, що міститься в пакеті (у цьому "
"випадку список чистих модулів Python)"

#: ../../distutils/introduction.rst:76
msgid ""
"modules are specified by module name, not filename (the same will hold true "
"for packages and extensions)"
msgstr ""
"модулі вказуються назвою модуля, а не назвою файлу (те саме стосується "
"пакетів і розширень)"

#: ../../distutils/introduction.rst:79
msgid ""
"it's recommended that you supply a little more metadata, in particular your "
"name, email address and a URL for the project (see section :ref:`setup-"
"script` for an example)"
msgstr ""
"рекомендується надати трохи більше метаданих, зокрема ваше ім’я, адресу "
"електронної пошти та URL-адресу проекту (див. розділ :ref:`setup-script` для"
" прикладу)"

#: ../../distutils/introduction.rst:83
msgid ""
"To create a source distribution for this module, you would create a setup "
"script, :file:`setup.py`, containing the above code, and run this command "
"from a terminal::"
msgstr ""
"Щоб створити дистрибутив вихідного коду для цього модуля, вам слід створити "
"сценарій налаштування :file:`setup.py`, який містить наведений вище код, і "
"виконати цю команду з терміналу::"

#: ../../distutils/introduction.rst:89
msgid ""
"For Windows, open a command prompt window (:menuselection:`Start --> "
"Accessories`) and change the command to::"
msgstr ""
"Для Windows відкрийте вікно командного рядка (:menuselection:`Пуск --> "
"Аксесуари`) і змініть команду на:"

#: ../../distutils/introduction.rst:94
msgid ""
":command:`sdist` will create an archive file (e.g., tarball on Unix, ZIP "
"file on Windows) containing your setup script :file:`setup.py`, and your "
"module :file:`foo.py`. The archive file will be named :file:`foo-1.0.tar.gz`"
" (or :file:`.zip`), and will unpack into a directory :file:`foo-1.0`."
msgstr ""
":command:`sdist` створить архівний файл (наприклад, tar-архів в Unix, ZIP-"
"файл у Windows), що містить ваш сценарій налаштування :file:`setup.py` і ваш"
" модуль :file:`foo.py`. Архівний файл матиме назву :file:`foo-1.0.tar.gz` "
"(або :file:`.zip`) і буде розпаковано в каталог :file:`foo-1.0`."

#: ../../distutils/introduction.rst:99
msgid ""
"If an end-user wishes to install your :mod:`foo` module, all they have to do"
" is download :file:`foo-1.0.tar.gz` (or :file:`.zip`), unpack it, and---from"
" the :file:`foo-1.0` directory---run ::"
msgstr ""
"Якщо кінцевий користувач бажає встановити ваш модуль :mod:`foo`, усе, що "
"йому потрібно зробити, це завантажити :file:`foo-1.0.tar.gz` (або "
":file:`.zip`), розпакувати його, і---з каталогу :file:`foo-1.0`---запустіть "
"::"

#: ../../distutils/introduction.rst:105
msgid ""
"which will ultimately copy :file:`foo.py` to the appropriate directory for "
"third-party modules in their Python installation."
msgstr ""
"який зрештою скопіює :file:`foo.py` у відповідний каталог для сторонніх "
"модулів у їхній установці Python."

#: ../../distutils/introduction.rst:108
msgid ""
"This simple example demonstrates some fundamental concepts of the Distutils."
" First, both developers and installers have the same basic user interface, "
"i.e. the setup script.  The difference is which Distutils *commands* they "
"use: the :command:`sdist` command is almost exclusively for module "
"developers, while :command:`install` is more often for installers (although "
"most developers will want to install their own code occasionally)."
msgstr ""
"Цей простий приклад демонструє деякі фундаментальні концепції Distutils. По-"
"перше, і розробники, і інсталятори мають однаковий базовий інтерфейс "
"користувача, тобто сценарій налаштування. Різниця полягає в тому, які "
"*команди* Distutils вони використовують: команда :command:`sdist` призначена"
" майже виключно для розробників модулів, тоді як :command:`install` частіше "
"для встановлювачів (хоча більшість розробників захочуть час від часу "
"встановлювати власний код). )."

#: ../../distutils/introduction.rst:115
msgid ""
"Other useful built distribution formats are RPM, implemented by the "
":command:`bdist_rpm` command, Solaris :program:`pkgtool` "
"(:command:`bdist_pkgtool`), and HP-UX :program:`swinstall` "
"(:command:`bdist_sdux`).  For example, the following command will create an "
"RPM file called :file:`foo-1.0.noarch.rpm`::"
msgstr ""
"Іншими корисними вбудованими форматами розповсюдження є RPM, реалізований "
"командою :command:`bdist_rpm`, Solaris :program:`pkgtool` "
"(:command:`bdist_pkgtool`) і HP-UX :program:`swinstall` "
"(:command:`bdist_sdux`). Наприклад, наступна команда створить файл RPM під "
"назвою :file:`foo-1.0.noarch.rpm`::"

#: ../../distutils/introduction.rst:123
msgid ""
"(The :command:`bdist_rpm` command uses the :command:`rpm` executable, "
"therefore this has to be run on an RPM-based system such as Red Hat Linux, "
"SuSE Linux, or Mandrake Linux.)"
msgstr ""
"(Команда :command:`bdist_rpm` використовує виконуваний файл :command:`rpm`, "
"тому її потрібно запускати в системі на основі RPM, наприклад Red Hat Linux,"
" SuSE Linux або Mandrake Linux.)"

#: ../../distutils/introduction.rst:127
msgid ""
"You can find out what distribution formats are available at any time by "
"running ::"
msgstr ""
"Ви можете будь-коли дізнатися, які формати розповсюдження доступні, "
"запустивши:"

#: ../../distutils/introduction.rst:136
msgid "General Python terminology"
msgstr "Загальна термінологія Python"

#: ../../distutils/introduction.rst:138
msgid ""
"If you're reading this document, you probably have a good idea of what "
"modules, extensions, and so forth are.  Nevertheless, just to be sure that "
"everyone is operating from a common starting point, we offer the following "
"glossary of common Python terms:"
msgstr ""
"Якщо ви читаєте цей документ, ви, мабуть, добре розумієте, що таке модулі, "
"розширення тощо. Проте, щоб переконатися, що всі працюють із спільної "
"початкової точки, ми пропонуємо наступний глосарій загальних термінів "
"Python:"

#: ../../distutils/introduction.rst:146
msgid "module"
msgstr "модуль"

#: ../../distutils/introduction.rst:144
msgid ""
"the basic unit of code reusability in Python: a block of code imported by "
"some other code.  Three types of modules concern us here: pure Python "
"modules, extension modules, and packages."
msgstr ""
"основна одиниця багаторазового використання коду в Python: блок коду, "
"імпортований іншим кодом. Тут нас цікавлять три типи модулів: чисті модулі "
"Python, модулі розширення та пакунки."

#: ../../distutils/introduction.rst:151
msgid "pure Python module"
msgstr "чистий модуль Python"

#: ../../distutils/introduction.rst:149
msgid ""
"a module written in Python and contained in a single :file:`.py` file (and "
"possibly associated :file:`.pyc` files).  Sometimes referred to as a \"pure "
"module.\""
msgstr ""
"модуль, написаний на Python і міститься в одному файлі :file:`.py` (і, "
"можливо, пов’язаних файлах :file:`.pyc`). Іноді його називають \"чистим "
"модулем\"."

#: ../../distutils/introduction.rst:159
msgid "extension module"
msgstr "модуль розширення"

#: ../../distutils/introduction.rst:154
msgid ""
"a module written in the low-level language of the Python implementation: "
"C/C++ for Python, Java for Jython. Typically contained in a single "
"dynamically loadable pre-compiled file, e.g. a shared object (:file:`.so`) "
"file for Python extensions on Unix, a DLL (given the :file:`.pyd` extension)"
" for Python extensions on Windows, or a Java class file for Jython "
"extensions.  (Note that currently, the Distutils only handles C/C++ "
"extensions for Python.)"
msgstr ""
"модуль, написаний на мові низького рівня реалізації Python: C/C++ для "
"Python, Java для Jython. Зазвичай міститься в одному динамічно "
"завантажуваному попередньо скомпільованому файлі, напр. файл спільного "
"об’єкта (:file:`.so`) для розширень Python в Unix, DLL (з урахуванням "
"розширення :file:`.pyd`) для розширень Python у Windows або файл класу Java "
"для розширень Jython. (Зверніть увагу, що наразі Distutils обробляє лише "
"розширення C/C++ для Python.)"

#: ../../distutils/introduction.rst:164
msgid "package"
msgstr "пакет"

#: ../../distutils/introduction.rst:162
msgid ""
"a module that contains other modules; typically contained in a directory in "
"the filesystem and distinguished from other directories by the presence of a"
" file :file:`__init__.py`."
msgstr ""
"модуль, який містить інші модулі; зазвичай міститься в каталозі файлової "
"системи та відрізняється від інших каталогів наявністю файлу "
":file:`__init__.py`."

#: ../../distutils/introduction.rst:174
msgid "root package"
msgstr "кореневий пакет"

#: ../../distutils/introduction.rst:167
msgid ""
"the root of the hierarchy of packages.  (This isn't really a package, since "
"it doesn't have an :file:`__init__.py` file.  But we have to call it "
"something.) The vast majority of the standard library is in the root "
"package, as are many small, standalone third-party modules that don't belong"
" to a larger module collection. Unlike regular packages, modules in the root"
" package can be found in many directories: in fact, every directory listed "
"in ``sys.path`` contributes modules to the root package."
msgstr ""
"корінь ієрархії пакетів. (Це насправді не пакунок, оскільки він не має файлу"
" :file:`__init__.py`. Але ми повинні якось це назвати.) Переважна більшість "
"стандартної бібліотеки міститься в кореневому пакунку, як і багато невеликих"
" окремих модулів сторонніх розробників, які не належать до більшої колекції "
"модулів. На відміну від звичайних пакетів, модулі в кореневому пакеті можна "
"знайти в багатьох каталогах: фактично кожен каталог, перерахований у "
"``sys.path``, вносить модулі в кореневий пакет."

#: ../../distutils/introduction.rst:179
msgid "Distutils-specific terminology"
msgstr "Спеціальна термінологія Distutils"

#: ../../distutils/introduction.rst:181
msgid ""
"The following terms apply more specifically to the domain of distributing "
"Python modules using the Distutils:"
msgstr ""
"Наступні терміни більш конкретно стосуються домену розповсюдження модулів "
"Python за допомогою Distutils:"

#: ../../distutils/introduction.rst:190
msgid "module distribution"
msgstr "розподіл модулів"

#: ../../distutils/introduction.rst:185
msgid ""
"a collection of Python modules distributed together as a single downloadable"
" resource and meant to be installed *en masse*.  Examples of some well-known"
" module distributions are NumPy, SciPy, Pillow, or mxBase.  (This would be "
"called a *package*, except that term is already taken in the Python context:"
" a single module distribution may contain zero, one, or many Python "
"packages.)"
msgstr ""
"колекція модулів Python, які розповсюджуються разом як єдиний ресурс для "
"завантаження та призначені для масового встановлення. Прикладами деяких "
"відомих дистрибутивів модулів є NumPy, SciPy, Pillow або mxBase. (Це буде "
"називатися *пакетом*, за винятком того, що цей термін уже використано в "
"контексті Python: дистрибутив одного модуля може містити нуль, один або "
"багато пакетів Python.)"

#: ../../distutils/introduction.rst:194
msgid "pure module distribution"
msgstr "чистий модульний розподіл"

#: ../../distutils/introduction.rst:193
msgid ""
"a module distribution that contains only pure Python modules and packages. "
"Sometimes referred to as a \"pure distribution.\""
msgstr ""
"дистрибутив модулів, який містить лише чисті модулі та пакунки Python. Іноді"
" його називають \"чистим розподілом\"."

#: ../../distutils/introduction.rst:198
msgid "non-pure module distribution"
msgstr "нечистий модульний розподіл"

#: ../../distutils/introduction.rst:197
msgid ""
"a module distribution that contains at least one extension module.  "
"Sometimes referred to as a \"non-pure distribution.\""
msgstr ""
"дистрибутив модуля, який містить принаймні один модуль розширення. Іноді "
"його називають \"нечистим розподілом\"."

#: ../../distutils/introduction.rst:202
msgid "distribution root"
msgstr "розподільчий корінь"

#: ../../distutils/introduction.rst:201
msgid ""
"the top-level directory of your source tree (or  source distribution); the "
"directory where :file:`setup.py` exists.  Generally  :file:`setup.py` will "
"be run from this directory."
msgstr ""
"каталог верхнього рівня вашого вихідного дерева (або вихідного "
"дистрибутива); каталог, де існує :file:`setup.py`. Зазвичай :file:`setup.py`"
" запускатиметься з цього каталогу."
