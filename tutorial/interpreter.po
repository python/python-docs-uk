# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-19 01:00+0000\n"
"PO-Revision-Date: 2021-06-28 01:50+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../tutorial/interpreter.rst:5
msgid "Using the Python Interpreter"
msgstr "Використання інтерпретатора Python"

#: ../../tutorial/interpreter.rst:11
msgid "Invoking the Interpreter"
msgstr "Виклик Інтерпретатора"

#: ../../tutorial/interpreter.rst:13
msgid ""
"The Python interpreter is usually installed as "
"|usr_local_bin_python_x_dot_y_literal| on those machines where it is "
"available; putting :file:`/usr/local/bin` in your Unix shell's search path "
"makes it possible to start it by typing the command:"
msgstr ""

#: ../../tutorial/interpreter.rst:17
msgid "python3.13"
msgstr ""

#: ../../tutorial/interpreter.rst:21
msgid ""
"to the shell. [#]_ Since the choice of the directory where the interpreter "
"lives is an installation option, other places are possible; check with your "
"local Python guru or system administrator.  (E.g., :file:`/usr/local/python`"
" is a popular alternative location.)"
msgstr ""
"до оболонки. [#]_ Оскільки вибір каталогу, де знаходиться інтерпретатор, є "
"опцією встановлення, можливі інші місця; зверніться до місцевого гуру Python"
" або системного адміністратора. (Наприклад, :file:`/usr/local/python` є "
"популярним альтернативним розташуванням.)"

#: ../../tutorial/interpreter.rst:26
msgid ""
"On Windows machines where you have installed Python from the :ref:`Microsoft"
" Store <windows-store>`, the |python_x_dot_y_literal| command will be "
"available. If you have the :ref:`py.exe launcher <launcher>` installed, you "
"can use the :file:`py` command. See :ref:`setting-envvars` for other ways to"
" launch Python."
msgstr ""

#: ../../tutorial/interpreter.rst:31
msgid ""
"Typing an end-of-file character (:kbd:`Control-D` on Unix, :kbd:`Control-Z` "
"on Windows) at the primary prompt causes the interpreter to exit with a zero"
" exit status.  If that doesn't work, you can exit the interpreter by typing "
"the following command: ``quit()``."
msgstr ""
"Введення символу кінця файлу (:kbd:`Control-D` в Unix, :kbd:`Control-Z` в "
"Windows) у первинному запиті призводить до виходу інтерпретатора з нульовим "
"статусом виходу. Якщо це не спрацює, ви можете вийти з інтерпретатора, "
"ввівши таку команду: ``quit()``."

#: ../../tutorial/interpreter.rst:36
msgid ""
"The interpreter's line-editing features include interactive editing, history"
" substitution and code completion on systems that support the `GNU Readline "
"<https://tiswww.case.edu/php/chet/readline/rltop.html>`_ library. Perhaps "
"the quickest check to see whether command line editing is supported is "
"typing :kbd:`Control-P` to the first Python prompt you get.  If it beeps, "
"you have command line editing; see Appendix :ref:`tut-interacting` for an "
"introduction to the keys.  If nothing appears to happen, or if ``^P`` is "
"echoed, command line editing isn't available; you'll only be able to use "
"backspace to remove characters from the current line."
msgstr ""
"Функції рядкового редагування інтерпретатора включають інтерактивне "
"редагування, заміну історії та завершення коду в системах, які підтримують "
"бібліотеку `GNU Readline "
"<https://tiswww.case.edu/php/chet/readline/rltop.html>`_. Можливо, "
"найшвидший спосіб перевірити, чи підтримується редагування командного рядка,"
" це ввести :kbd:`Control-P` у перше запрошення Python, яке ви отримаєте. "
"Якщо він подає звуковий сигнал, у вас є редагування командного рядка; "
"дивіться Додаток :ref:`tut-interacting` для ознайомлення з ключами. Якщо "
"нічого не відбувається або відображається ``^P``, редагування командного "
"рядка недоступне; Ви зможете використовувати клавішу Backspace лише для "
"видалення символів із поточного рядка."

#: ../../tutorial/interpreter.rst:46
msgid ""
"The interpreter operates somewhat like the Unix shell: when called with "
"standard input connected to a tty device, it reads and executes commands "
"interactively; when called with a file name argument or with a file as "
"standard input, it reads and executes a *script* from that file."
msgstr ""
"Інтерпретатор працює дещо подібно до оболонки Unix: при виклику зі "
"стандартним введенням, підключеним до пристрою tty, він читає та виконує "
"команди в інтерактивному режимі; при виклику з аргументом імені файлу або з "
"файлом як стандартним введенням він читає та виконує *сценарій* із цього "
"файлу."

#: ../../tutorial/interpreter.rst:51
msgid ""
"A second way of starting the interpreter is ``python -c command [arg] ...``,"
" which executes the statement(s) in *command*, analogous to the shell's "
":option:`-c` option.  Since Python statements often contain spaces or other "
"characters that are special to the shell, it is usually advised to quote "
"*command* in its entirety."
msgstr ""

#: ../../tutorial/interpreter.rst:57
msgid ""
"Some Python modules are also useful as scripts.  These can be invoked using "
"``python -m module [arg] ...``, which executes the source file for *module* "
"as if you had spelled out its full name on the command line."
msgstr ""
"Деякі модулі Python також корисні як сценарії. Їх можна викликати за "
"допомогою ``python -m module [arg] ...``, яка виконує вихідний файл для "
"*module* так, ніби ви ввели його повне ім’я в командному рядку."

#: ../../tutorial/interpreter.rst:61
msgid ""
"When a script file is used, it is sometimes useful to be able to run the "
"script and enter interactive mode afterwards.  This can be done by passing "
":option:`-i` before the script."
msgstr ""
"Коли використовується файл сценарію, іноді корисно мати можливість запустити"
" сценарій і перейти в інтерактивний режим після цього. Це можна зробити, "
"передавши :option:`-i` перед сценарієм."

#: ../../tutorial/interpreter.rst:65
msgid "All command line options are described in :ref:`using-on-general`."
msgstr "Усі параметри командного рядка описані в :ref:`using-on-general`."

#: ../../tutorial/interpreter.rst:71
msgid "Argument Passing"
msgstr "Передача аргументу"

#: ../../tutorial/interpreter.rst:73
msgid ""
"When known to the interpreter, the script name and additional arguments "
"thereafter are turned into a list of strings and assigned to the ``argv`` "
"variable in the ``sys`` module.  You can access this list by executing "
"``import sys``.  The length of the list is at least one; when no script and "
"no arguments are given, ``sys.argv[0]`` is an empty string.  When the script"
" name is given as ``'-'`` (meaning  standard input), ``sys.argv[0]`` is set "
"to ``'-'``.  When :option:`-c` *command* is used, ``sys.argv[0]`` is set to "
"``'-c'``.  When :option:`-m` *module* is used, ``sys.argv[0]``  is set to "
"the full name of the located module.  Options found after  :option:`-c` "
"*command* or :option:`-m` *module* are not consumed  by the Python "
"interpreter's option processing but left in ``sys.argv`` for  the command or"
" module to handle."
msgstr ""
"Якщо ім’я сценарію та додаткові аргументи відомі інтерпретатору, вони "
"перетворюються на список рядків і призначаються змінній ``argv`` у модулі "
"``sys``. Ви можете отримати доступ до цього списку, виконавши ``import "
"sys``. Довжина списку принаймні одна; якщо сценарій і аргументи не задані, "
"sys.argv[0] є порожнім рядком. Якщо ім’я сценарію вказано як ``'-''`` (що "
"означає стандартний ввід), ``sys.argv[0]`` має значення ``'-'``. Коли "
":option:`-c` *команда* використовується, ``sys.argv[0]`` має значення "
"``'-c'``. Коли :option:`-m` *module* використовується, ``sys.argv[0]`` "
"встановлюється на повну назву розташованого модуля. Параметри, знайдені "
"після :option:`-c` *command* або :option:`-m` *module*, не використовуються "
"обробкою параметрів інтерпретатора Python, а залишаються в ``sys.argv`` для "
"обробки команди або модуля ."

#: ../../tutorial/interpreter.rst:89
msgid "Interactive Mode"
msgstr "Інтерактивний режим"

#: ../../tutorial/interpreter.rst:91
msgid ""
"When commands are read from a tty, the interpreter is said to be in "
"*interactive mode*.  In this mode it prompts for the next command with the "
"*primary prompt*, usually three greater-than signs (``>>>``); for "
"continuation lines it prompts with the *secondary prompt*, by default three "
"dots (``...``). The interpreter prints a welcome message stating its version"
" number and a copyright notice before printing the first prompt:"
msgstr ""
"Коли команди читаються з tty, кажуть, що інтерпретатор перебуває в "
"*інтерактивному режимі*. У цьому режимі він запитує наступну команду за "
"допомогою *основного підказки*, як правило, трьох знаків \"більше\" "
"(``>>>``); для рядків продовження він запитує *другорядним запитом*, за "
"замовчуванням три крапки (``...``). Інтерпретатор друкує вітальне "
"повідомлення із зазначенням номера версії та повідомлення про авторські "
"права перед друком першого запиту:"

#: ../../tutorial/interpreter.rst:98
msgid ""
"$ python3.13\n"
"Python 3.13 (default, April 4 2023, 09:25:04)\n"
"[GCC 10.2.0] on linux\n"
"Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n"
">>>"
msgstr ""

#: ../../tutorial/interpreter.rst:108
msgid ""
"Continuation lines are needed when entering a multi-line construct. As an "
"example, take a look at this :keyword:`if` statement::"
msgstr ""
"Під час введення багаторядкової конструкції потрібні рядки продовження. Як "
"приклад, подивіться на цей оператор :keyword:`if`::"

#: ../../tutorial/interpreter.rst:111
msgid ""
">>> the_world_is_flat = True\n"
">>> if the_world_is_flat:\n"
"...     print(\"Be careful not to fall off!\")\n"
"...\n"
"Be careful not to fall off!"
msgstr ""

#: ../../tutorial/interpreter.rst:118
msgid "For more on interactive mode, see :ref:`tut-interac`."
msgstr ""
"Щоб дізнатися більше про інтерактивний режим, перегляньте :ref:`tut-"
"interac`."

#: ../../tutorial/interpreter.rst:124
msgid "The Interpreter and Its Environment"
msgstr "Інтерпретатор і його середовище"

#: ../../tutorial/interpreter.rst:130
msgid "Source Code Encoding"
msgstr "Кодування вихідного коду"

#: ../../tutorial/interpreter.rst:132
msgid ""
"By default, Python source files are treated as encoded in UTF-8.  In that "
"encoding, characters of most languages in the world can be used "
"simultaneously in string literals, identifiers and comments --- although the"
" standard library only uses ASCII characters for identifiers, a convention "
"that any portable code should follow.  To display all these characters "
"properly, your editor must recognize that the file is UTF-8, and it must use"
" a font that supports all the characters in the file."
msgstr ""
"За замовчуванням вихідні файли Python розглядаються як закодовані в UTF-8. У"
" цьому кодуванні символи більшості мов світу можуть використовуватися "
"одночасно в рядкових літералах, ідентифікаторах і коментарях --- хоча "
"стандартна бібліотека використовує лише символи ASCII для ідентифікаторів, "
"угоду, якої повинен дотримуватися будь-який портативний код. Щоб правильно "
"відобразити всі ці символи, ваш редактор має розпізнати, що файл має UTF-8, "
"і він має використовувати шрифт, який підтримує всі символи у файлі."

#: ../../tutorial/interpreter.rst:140
msgid ""
"To declare an encoding other than the default one, a special comment line "
"should be added as the *first* line of the file.  The syntax is as follows::"
msgstr ""
"Щоб оголосити кодування, відмінне від кодування за замовчуванням, слід "
"додати спеціальний рядок коментаря як *перший* рядок файлу. Синтаксис "
"такий::"

#: ../../tutorial/interpreter.rst:143
msgid "# -*- coding: encoding -*-"
msgstr ""

#: ../../tutorial/interpreter.rst:145
msgid ""
"where *encoding* is one of the valid :mod:`codecs` supported by Python."
msgstr ""
"де *кодування* є одним із дійсних :mod:`codecs`, які підтримуються Python."

#: ../../tutorial/interpreter.rst:147
msgid ""
"For example, to declare that Windows-1252 encoding is to be used, the first "
"line of your source code file should be::"
msgstr ""
"Наприклад, щоб оголосити, що потрібно використовувати кодування "
"Windows-1252, перший рядок вашого файлу вихідного коду має бути::"

#: ../../tutorial/interpreter.rst:150
msgid "# -*- coding: cp1252 -*-"
msgstr ""

#: ../../tutorial/interpreter.rst:152
msgid ""
"One exception to the *first line* rule is when the source code starts with a"
" :ref:`UNIX \"shebang\" line <tut-scripts>`.  In this case, the encoding "
"declaration should be added as the second line of the file.  For example::"
msgstr ""
"Одним винятком із правила *першого рядка* є випадки, коли вихідний код "
"починається з рядка :ref:`UNIX \"shebang\" <tut-scripts>`. У цьому випадку "
"оголошення кодування має бути додано як другий рядок файлу. Наприклад::"

#: ../../tutorial/interpreter.rst:156
msgid ""
"#!/usr/bin/env python3\n"
"# -*- coding: cp1252 -*-"
msgstr ""

#: ../../tutorial/interpreter.rst:160
msgid "Footnotes"
msgstr "Виноски"

#: ../../tutorial/interpreter.rst:161
msgid ""
"On Unix, the Python 3.x interpreter is by default not installed with the "
"executable named ``python``, so that it does not conflict with a "
"simultaneously installed Python 2.x executable."
msgstr ""
"В Unix інтерпретатор Python 3.x за замовчуванням не встановлюється з "
"виконуваним файлом під назвою ``python``, тому він не конфліктує з одночасно"
" встановленим виконуваним файлом Python 2.x."
