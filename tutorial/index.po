# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# Nadiia Gorash <nmaiboroda@gmail.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-22 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:50+0000\n"
"Last-Translator: Nadiia Gorash <nmaiboroda@gmail.com>, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../tutorial/index.rst:5
msgid "The Python Tutorial"
msgstr "Підручник з Python"

#: ../../tutorial/index.rst:7
msgid ""
"Python is an easy to learn, powerful programming language. It has efficient "
"high-level data structures and a simple but effective approach to object-"
"oriented programming. Python's elegant syntax and dynamic typing, together "
"with its interpreted nature, make it an ideal language for scripting and "
"rapid application development in many areas on most platforms."
msgstr ""
"Python — це потужна мова програмування, яка проста у вивченні. Він має "
"ефективні структури даних високого рівня та простий, але ефективний підхід "
"до об’єктно-орієнтованого програмування. Елегантний синтаксис і динамічна "
"типізація Python разом з його інтерпретованим характером роблять його "
"ідеальною мовою для створення сценаріїв і швидкої розробки додатків у "
"багатьох сферах на більшості платформ."

#: ../../tutorial/index.rst:13
msgid ""
"The Python interpreter and the extensive standard library are freely "
"available in source or binary form for all major platforms from the Python "
"web site, https://www.python.org/, and may be freely distributed. The same "
"site also contains distributions of and pointers to many free third party "
"Python modules, programs and tools, and additional documentation."
msgstr ""
"Інтерпретатор Python і обширна стандартна бібліотека доступні у вихідному "
"або двійковому вигляді для всіх основних платформ на веб-сайті Python "
"https://www.python.org/ і можуть вільно поширюватися. Цей же сайт також "
"містить дистрибутиви та вказівники на багато безкоштовних сторонніх модулів "
"Python, програм і інструментів, а також додаткову документацію."

#: ../../tutorial/index.rst:19
msgid ""
"The Python interpreter is easily extended with new functions and data types "
"implemented in C or C++ (or other languages callable from C). Python is also"
" suitable as an extension language for customizable applications."
msgstr ""
"Інтерпретатор Python легко розширюється за допомогою нових функцій і типів "
"даних, реалізованих у C або C++ (або інших мовах, які можна викликати з C). "
"Python також підходить як мова розширення для настроюваних програм."

#: ../../tutorial/index.rst:23
msgid ""
"This tutorial introduces the reader informally to the basic concepts and "
"features of the Python language and system. It helps to have a Python "
"interpreter handy for hands-on experience, but all examples are self-"
"contained, so the tutorial can be read off-line as well."
msgstr ""
"Цей підручник неформально знайомить читача з основними концепціями та "
"функціями мови та системи Python. Вам допоможе мати під рукою інтерпретатор "
"Python для практичного досвіду, але всі приклади є самодостатніми, тому "
"підручник також можна читати офлайн."

#: ../../tutorial/index.rst:28
msgid ""
"For a description of standard objects and modules, see :ref:`library-index`."
" :ref:`reference-index` gives a more formal definition of the language.  To "
"write extensions in C or C++, read :ref:`extending-index` and :ref:`c-api-"
"index`. There are also several books covering Python in depth."
msgstr ""
"Опис стандартних об’єктів і модулів див. :ref:`library-index`. "
":ref:`reference-index` дає більш формальне визначення мови. Щоб написати "
"розширення на C або C++, прочитайте :ref:`extending-index` і :ref:`c-api-"
"index`. Є також кілька книг, які детально описують Python."

#: ../../tutorial/index.rst:33
msgid ""
"This tutorial does not attempt to be comprehensive and cover every single "
"feature, or even every commonly used feature. Instead, it introduces many of"
" Python's most noteworthy features, and will give you a good idea of the "
"language's flavor and style. After reading it, you will be able to read and "
"write Python modules and programs, and you will be ready to learn more about"
" the various Python library modules described in :ref:`library-index`."
msgstr ""
"Цей підручник не намагається бути вичерпним і охопити кожну окрему функцію "
"чи навіть кожну функцію, що часто використовується. Натомість він "
"представляє багато найбільш вартих уваги функцій Python і дасть вам гарне "
"уявлення про смак і стиль мови. Прочитавши його, ви зможете читати та писати"
" модулі та програми Python, а також будете готові дізнатися більше про різні"
" модулі бібліотеки Python, описані в :ref:`library-index`."

#: ../../tutorial/index.rst:40
msgid "The :ref:`glossary` is also worth going through."
msgstr ":ref:`glossary` також варто переглянути."
