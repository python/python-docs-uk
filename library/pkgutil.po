# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-19 01:00+0000\n"
"PO-Revision-Date: 2021-06-28 01:11+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2023\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/pkgutil.rst:2
msgid ":mod:`!pkgutil` --- Package extension utility"
msgstr ""

#: ../../library/pkgutil.rst:7
msgid "**Source code:** :source:`Lib/pkgutil.py`"
msgstr "**Вихідний код:** :source:`Lib/pkgutil.py`"

#: ../../library/pkgutil.rst:11
msgid ""
"This module provides utilities for the import system, in particular package "
"support."
msgstr ""
"Цей модуль надає утиліти для системи імпорту, зокрема підтримку пакетів."

#: ../../library/pkgutil.rst:16
msgid "A namedtuple that holds a brief summary of a module's info."
msgstr "Іменований кортеж, який містить короткий опис інформації про модуль."

#: ../../library/pkgutil.rst:22
msgid ""
"Extend the search path for the modules which comprise a package.  Intended "
"use is to place the following code in a package's :file:`__init__.py`::"
msgstr ""
"Розширте шлях пошуку для модулів, які складають пакет. Цільове використання "
"– розмістити наступний код у :file:`__init__.py`::"

#: ../../library/pkgutil.rst:25
msgid ""
"from pkgutil import extend_path\n"
"__path__ = extend_path(__path__, __name__)"
msgstr ""

#: ../../library/pkgutil.rst:28
msgid ""
"For each directory on :data:`sys.path` that has a subdirectory that matches "
"the package name, add the subdirectory to the package's "
":attr:`~module.__path__`. This is useful if one wants to distribute "
"different parts of a single logical package as multiple directories."
msgstr ""

#: ../../library/pkgutil.rst:34
msgid ""
"It also looks for :file:`\\*.pkg` files beginning where ``*`` matches the "
"*name* argument.  This feature is similar to :file:`\\*.pth` files (see the "
":mod:`site` module for more information), except that it doesn't special-"
"case lines starting with ``import``.  A :file:`\\*.pkg` file is trusted at "
"face value: apart from skipping blank lines and ignoring comments, all "
"entries found in a :file:`\\*.pkg` file are added to the path, regardless of"
" whether they exist on the filesystem (this is a feature)."
msgstr ""

#: ../../library/pkgutil.rst:42
msgid ""
"If the input path is not a list (as is the case for frozen packages) it is "
"returned unchanged.  The input path is not modified; an extended copy is "
"returned.  Items are only appended to the copy at the end."
msgstr ""
"Якщо шлях введення не є списком (як у випадку заморожених пакунків), він "
"повертається без змін. Вхідний шлях не змінено; повертається розширена "
"копія. Елементи додаються до копії лише в кінці."

#: ../../library/pkgutil.rst:46
msgid ""
"It is assumed that :data:`sys.path` is a sequence.  Items of "
":data:`sys.path` that are not strings referring to existing directories are "
"ignored. Unicode items on :data:`sys.path` that cause errors when used as "
"filenames may cause this function to raise an exception (in line with "
":func:`os.path.isdir` behavior)."
msgstr ""
"Передбачається, що :data:`sys.path` є послідовністю. Елементи "
":data:`sys.path`, які не є рядками, що посилаються на існуючі каталоги, "
"ігноруються. Елементи Юнікоду в :data:`sys.path`, які спричиняють помилки, "
"коли використовуються як імена файлів, можуть викликати виняток у цій "
"функції (відповідно до поведінки :func:`os.path.isdir`)."

#: ../../library/pkgutil.rst:54
msgid "Retrieve a module :term:`loader` for the given *fullname*."
msgstr "Отримати модуль :term:`loader` для вказаного *повного імені*."

#: ../../library/pkgutil.rst:56
msgid ""
"This is a backwards compatibility wrapper around "
":func:`importlib.util.find_spec` that converts most failures to "
":exc:`ImportError` and only returns the loader rather than the full "
":class:`importlib.machinery.ModuleSpec`."
msgstr ""

#: ../../library/pkgutil.rst:61 ../../library/pkgutil.rst:82
#: ../../library/pkgutil.rst:97 ../../library/pkgutil.rst:121
#: ../../library/pkgutil.rst:142 ../../library/pkgutil.rst:181
msgid ""
"Updated to be based directly on :mod:`importlib` rather than relying on the "
"package internal :pep:`302` import emulation."
msgstr ""
"Оновлено, щоб базуватися безпосередньо на :mod:`importlib`, а не на "
"внутрішній емуляції імпорту :pep:`302` пакета."

#: ../../library/pkgutil.rst:65 ../../library/pkgutil.rst:101
msgid "Updated to be based on :pep:`451`"
msgstr "Оновлено на основі :pep:`451`"

#: ../../library/pkgutil.rst:68 ../../library/pkgutil.rst:104
msgid "Use :func:`importlib.util.find_spec` instead."
msgstr "Натомість використовуйте :func:`importlib.util.find_spec`."

#: ../../library/pkgutil.rst:74
msgid "Retrieve a :term:`finder` for the given *path_item*."
msgstr "Отримати :term:`finder` для заданого *path_item*."

#: ../../library/pkgutil.rst:76
msgid ""
"The returned finder is cached in :data:`sys.path_importer_cache` if it was "
"newly created by a path hook."
msgstr ""
"Повернений засіб пошуку зберігається в :data:`sys.path_importer_cache`, якщо"
" він був щойно створений за допомогою перехоплювача шляху."

#: ../../library/pkgutil.rst:79
msgid ""
"The cache (or part of it) can be cleared manually if a rescan of "
":data:`sys.path_hooks` is necessary."
msgstr ""
"Кеш (або його частину) можна очистити вручну, якщо потрібно повторне "
"сканування :data:`sys.path_hooks`."

#: ../../library/pkgutil.rst:89
msgid "Get a :term:`loader` object for *module_or_name*."
msgstr "Отримайте об’єкт :term:`loader` для *module_or_name*."

#: ../../library/pkgutil.rst:91
msgid ""
"If the module or package is accessible via the normal import mechanism, a "
"wrapper around the relevant part of that machinery is returned.  Returns "
"``None`` if the module cannot be found or imported.  If the named module is "
"not already imported, its containing package (if any) is imported, in order "
"to establish the package ``__path__``."
msgstr ""
"Якщо модуль або пакет доступні через звичайний механізм імпорту, "
"повертається обгортка навколо відповідної частини цього механізму. Повертає "
"``None``, якщо модуль неможливо знайти або імпортувати. Якщо вказаний модуль"
" ще не імпортовано, його пакет (якщо є) імпортується, щоб створити пакет "
"``__path__``."

#: ../../library/pkgutil.rst:110
msgid "Yield :term:`finder` objects for the given module name."
msgstr "Видає об’єкти :term:`finder` для вказаного імені модуля."

#: ../../library/pkgutil.rst:112
msgid ""
"If fullname contains a ``'.'``, the finders will be for the package "
"containing fullname, otherwise they will be all registered top level finders"
" (i.e. those on both :data:`sys.meta_path` and :data:`sys.path_hooks`)."
msgstr ""
"Якщо повне ім’я містить ``'.'``, the finders will be for the package "
"containing fullname, otherwise they will be all registered top level finders"
" (i.e. those on both :data:`sys.meta_path` and :data:`sys.path_hooks`)."

#: ../../library/pkgutil.rst:116
msgid ""
"If the named module is in a package, that package is imported as a side "
"effect of invoking this function."
msgstr ""
"Якщо вказаний модуль міститься в пакеті, цей пакет імпортується як побічний "
"ефект виклику цієї функції."

#: ../../library/pkgutil.rst:119
msgid "If no module name is specified, all top level finders are produced."
msgstr "Якщо ім’я модуля не вказано, створюються всі шукачі верхнього рівня."

#: ../../library/pkgutil.rst:128
msgid ""
"Yields :class:`ModuleInfo` for all submodules on *path*, or, if *path* is "
"``None``, all top-level modules on :data:`sys.path`."
msgstr ""
"Видає :class:`ModuleInfo` для всіх підмодулів на *path* або, якщо *path* має"
" значення ``None``, усі модулі верхнього рівня на :data:`sys.path`."

#: ../../library/pkgutil.rst:131 ../../library/pkgutil.rst:152
msgid ""
"*path* should be either ``None`` or a list of paths to look for modules in."
msgstr "*path* має бути або ``None``, або список шляхів для пошуку модулів."

#: ../../library/pkgutil.rst:133 ../../library/pkgutil.rst:154
msgid ""
"*prefix* is a string to output on the front of every module name on output."
msgstr ""
"*префікс* — це рядок, який виводиться на початку кожного імені модуля при "
"виведенні."

#: ../../library/pkgutil.rst:137 ../../library/pkgutil.rst:176
msgid ""
"Only works for a :term:`finder` which defines an ``iter_modules()`` method. "
"This interface is non-standard, so the module also provides implementations "
"for :class:`importlib.machinery.FileFinder` and "
":class:`zipimport.zipimporter`."
msgstr ""
"Працює лише для :term:`finder`, який визначає метод ``iter_modules()``. Цей "
"інтерфейс є нестандартним, тому модуль також забезпечує реалізації для "
":class:`importlib.machinery.FileFinder` і :class:`zipimport.zipimporter`."

#: ../../library/pkgutil.rst:149
msgid ""
"Yields :class:`ModuleInfo` for all modules recursively on *path*, or, if "
"*path* is ``None``, all accessible modules."
msgstr ""
"Видає :class:`ModuleInfo` для всіх модулів рекурсивно за *шляхом* або, якщо "
"*шлях* має значення ``None``, усі доступні модулі."

#: ../../library/pkgutil.rst:156
msgid ""
"Note that this function must import all *packages* (*not* all modules!) on "
"the given *path*, in order to access the ``__path__`` attribute to find "
"submodules."
msgstr ""
"Зауважте, що ця функція має імпортувати всі *пакети* (*не* всі модулі!) за "
"вказаним *шляхом*, щоб отримати доступ до атрибута ``__path__`` для пошуку "
"підмодулів."

#: ../../library/pkgutil.rst:160
msgid ""
"*onerror* is a function which gets called with one argument (the name of the"
" package which was being imported) if any exception occurs while trying to "
"import a package.  If no *onerror* function is supplied, "
":exc:`ImportError`\\s are caught and ignored, while all other exceptions are"
" propagated, terminating the search."
msgstr ""
"*onerror* — це функція, яка викликається з одним аргументом (назва пакета, "
"який імпортувався), якщо під час спроби імпортувати пакет виникає будь-яка "
"виняткова ситуація. Якщо функція *onerror* не надається, "
":exc:`ImportError`\\s перехоплюються та ігноруються, тоді як усі інші "
"винятки поширюються, припиняючи пошук."

#: ../../library/pkgutil.rst:166
msgid "Examples::"
msgstr "Приклади::"

#: ../../library/pkgutil.rst:168
msgid ""
"# list all modules python can access\n"
"walk_packages()\n"
"\n"
"# list all submodules of ctypes\n"
"walk_packages(ctypes.__path__, ctypes.__name__ + '.')"
msgstr ""

#: ../../library/pkgutil.rst:188
msgid "Get a resource from a package."
msgstr "Отримати ресурс із пакету."

#: ../../library/pkgutil.rst:190
msgid ""
"This is a wrapper for the :term:`loader` :meth:`get_data "
"<importlib.abc.ResourceLoader.get_data>` API.  The *package* argument should"
" be the name of a package, in standard module format (``foo.bar``).  The "
"*resource* argument should be in the form of a relative filename, using "
"``/`` as the path separator.  The parent directory name ``..`` is not "
"allowed, and nor is a rooted name (starting with a ``/``)."
msgstr ""
"Це оболонка для API :term:`loader` :meth:`get_data "
"<importlib.abc.ResourceLoader.get_data>`. Аргумент *package* має бути назвою"
" пакета в стандартному форматі модуля (``foo.bar``). Аргумент *resource* має"
" бути у формі відносного імені файлу, використовуючи ``/`` як роздільник "
"шляху. Ім’я батьківського каталогу ``..`` не допускається, а також коренева "
"назва (починається з ``/``)."

#: ../../library/pkgutil.rst:197
msgid ""
"The function returns a binary string that is the contents of the specified "
"resource."
msgstr "Функція повертає двійковий рядок, який є вмістом зазначеного ресурсу."

#: ../../library/pkgutil.rst:200
msgid ""
"For packages located in the filesystem, which have already been imported, "
"this is the rough equivalent of::"
msgstr ""
"Для пакетів, розташованих у файловій системі, які вже були імпортовані, це "
"приблизний еквівалент::"

#: ../../library/pkgutil.rst:203
msgid ""
"d = os.path.dirname(sys.modules[package].__file__)\n"
"data = open(os.path.join(d, resource), 'rb').read()"
msgstr ""

#: ../../library/pkgutil.rst:206
msgid ""
"If the package cannot be located or loaded, or it uses a :term:`loader` "
"which does not support :meth:`get_data "
"<importlib.abc.ResourceLoader.get_data>`, then ``None`` is returned.  In "
"particular, the :term:`loader` for :term:`namespace packages <namespace "
"package>` does not support :meth:`get_data "
"<importlib.abc.ResourceLoader.get_data>`."
msgstr ""
"Якщо пакет не вдається знайти або завантажити, або він використовує "
":term:`loader`, який не підтримує :meth:`get_data "
"<importlib.abc.ResourceLoader.get_data>`, повертається ``None``. Зокрема, "
":term:`loader` для :term:`пакетів простору імен <namespace package>` не "
"підтримує :meth:`get_data <importlib.abc.ResourceLoader.get_data>`."

#: ../../library/pkgutil.rst:215
msgid "Resolve a name to an object."
msgstr "Розв’яжіть ім’я з об’єктом."

#: ../../library/pkgutil.rst:217
msgid ""
"This functionality is used in numerous places in the standard library (see "
":issue:`12915`) - and equivalent functionality is also in widely used third-"
"party packages such as setuptools, Django and Pyramid."
msgstr ""
"Ця функціональність використовується в багатьох місцях у стандартній "
"бібліотеці (див. :issue:`12915`), а еквівалентна функціональність також є в "
"широко використовуваних пакетах сторонніх розробників, таких як setuptools, "
"Django та Pyramid."

#: ../../library/pkgutil.rst:221
msgid ""
"It is expected that *name* will be a string in one of the following formats,"
" where W is shorthand for a valid Python identifier and dot stands for a "
"literal period in these pseudo-regexes:"
msgstr ""
"Очікується, що *ім’я* буде рядком в одному з таких форматів, де W є "
"скороченням дійсного ідентифікатора Python, а крапка означає крапку в цих "
"псевдорегулярних виразах:"

#: ../../library/pkgutil.rst:225
msgid "``W(.W)*``"
msgstr "``W(.W)*``"

#: ../../library/pkgutil.rst:226
msgid "``W(.W)*:(W(.W)*)?``"
msgstr "``W(.W)*:(W(.W)*)?``"

#: ../../library/pkgutil.rst:228
msgid ""
"The first form is intended for backward compatibility only. It assumes that "
"some part of the dotted name is a package, and the rest is an object "
"somewhere within that package, possibly nested inside other objects. Because"
" the place where the package stops and the object hierarchy starts can't be "
"inferred by inspection, repeated attempts to import must be done with this "
"form."
msgstr ""
"Перша форма призначена лише для зворотної сумісності. Припускається, що "
"деяка частина назви з крапками є пакетом, а решта є об’єктом десь у цьому "
"пакеті, можливо, вкладеним в інші об’єкти. Оскільки місце, де зупиняється "
"пакет і починається ієрархія об’єктів, не може бути встановлено шляхом "
"перевірки, повторні спроби імпорту потрібно робити за допомогою цієї форми."

#: ../../library/pkgutil.rst:235
msgid ""
"In the second form, the caller makes the division point clear through the "
"provision of a single colon: the dotted name to the left of the colon is a "
"package to be imported, and the dotted name to the right is the object "
"hierarchy within that package. Only one import is needed in this form. If it"
" ends with the colon, then a module object is returned."
msgstr ""
"У другій формі абонент чітко пояснює точку розділення за допомогою однієї "
"двокрапки: назва з крапками ліворуч від двокрапки означає пакет, який "
"потрібно імпортувати, а назва з крапками праворуч — це ієрархія об’єктів у "
"цьому пакеті. . У цій формі потрібен лише один імпорт. Якщо він закінчується"
" двокрапкою, повертається об’єкт модуля."

#: ../../library/pkgutil.rst:241
msgid ""
"The function will return an object (which might be a module), or raise one "
"of the following exceptions:"
msgstr ""
"Функція поверне об’єкт (який може бути модулем) або викличе одне з таких "
"винятків:"

#: ../../library/pkgutil.rst:244
msgid ":exc:`ValueError` -- if *name* isn't in a recognised format."
msgstr ":exc:`ValueError` -- якщо *ім'я* не в розпізнаному форматі."

#: ../../library/pkgutil.rst:246
msgid ":exc:`ImportError` -- if an import failed when it shouldn't have."
msgstr ":exc:`ImportError` -- якщо імпорт не вдався, а не мав бути."

#: ../../library/pkgutil.rst:248
msgid ""
":exc:`AttributeError` -- If a failure occurred when traversing the object "
"hierarchy within the imported package to get to the desired object."
msgstr ""
":exc:`AttributeError` -- Якщо сталася помилка під час проходження ієрархії "
"об’єктів в імпортованому пакеті, щоб дістатися до потрібного об’єкта."
