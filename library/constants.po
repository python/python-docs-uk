# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-22 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 00:57+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/constants.rst:4
msgid "Built-in Constants"
msgstr "Вбудовані константи"

#: ../../library/constants.rst:6
msgid "A small number of constants live in the built-in namespace.  They are:"
msgstr "Невелика кількість констант живе у вбудованому просторі імен. Вони є:"

#: ../../library/constants.rst:10
msgid ""
"The false value of the :class:`bool` type. Assignments to ``False`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ""
"Помилкове значення типу :class:`bool`. Присвоєння ``False`` є незаконним і "
"викликає :exc:`SyntaxError`."

#: ../../library/constants.rst:16
msgid ""
"The true value of the :class:`bool` type. Assignments to ``True`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ""
"Справжнє значення типу :class:`bool`. Присвоєння ``True`` є незаконним і "
"викликає :exc:`SyntaxError`."

#: ../../library/constants.rst:22
msgid ""
"An object frequently used to represent the absence of a value, as when "
"default arguments are not passed to a function. Assignments to ``None`` are "
"illegal and raise a :exc:`SyntaxError`. ``None`` is the sole instance of the"
" :data:`~types.NoneType` type."
msgstr ""

#: ../../library/constants.rst:30
msgid ""
"A special value which should be returned by the binary special methods (e.g."
" :meth:`~object.__eq__`, :meth:`~object.__lt__`, :meth:`~object.__add__`, "
":meth:`~object.__rsub__`, etc.) to indicate that the operation is not "
"implemented with respect to the other type; may be returned by the in-place "
"binary special methods (e.g. :meth:`~object.__imul__`, "
":meth:`~object.__iand__`, etc.) for the same purpose. It should not be "
"evaluated in a boolean context. :data:`!NotImplemented` is the sole instance"
" of the :data:`types.NotImplementedType` type."
msgstr ""

#: ../../library/constants.rst:40
msgid ""
"When a binary (or in-place) method returns :data:`!NotImplemented` the "
"interpreter will try the reflected operation on the other type (or some "
"other fallback, depending on the operator).  If all attempts return "
":data:`!NotImplemented`, the interpreter will raise an appropriate "
"exception. Incorrectly returning :data:`!NotImplemented` will result in a "
"misleading error message or the :data:`!NotImplemented` value being returned"
" to Python code."
msgstr ""

#: ../../library/constants.rst:47
msgid "See :ref:`implementing-the-arithmetic-operations` for examples."
msgstr "Перегляньте приклади :ref:`implementing-the-arithmetic-operations`."

#: ../../library/constants.rst:51
msgid ""
"``NotImplementedError`` and :data:`!NotImplemented` are not interchangeable,"
" even though they have similar names and purposes. See "
":exc:`NotImplementedError` for details on when to use it."
msgstr ""

#: ../../library/constants.rst:55
msgid ""
"Evaluating :data:`!NotImplemented` in a boolean context is deprecated. While"
" it currently evaluates as true, it will emit a :exc:`DeprecationWarning`. "
"It will raise a :exc:`TypeError` in a future version of Python."
msgstr ""

#: ../../library/constants.rst:64
msgid ""
"The same as the ellipsis literal \"``...``\". Special value used mostly in "
"conjunction with extended slicing syntax for user-defined container data "
"types. ``Ellipsis`` is the sole instance of the :data:`types.EllipsisType` "
"type."
msgstr ""
"Те саме, що літерал з крапками \"``...``\". Спеціальне значення, яке "
"використовується переважно разом із розширеним синтаксисом нарізки для "
"визначених користувачем типів даних контейнера. ``Ellipsis`` є єдиним "
"екземпляром типу :data:`types.EllipsisType`."

#: ../../library/constants.rst:71
msgid ""
"This constant is true if Python was not started with an :option:`-O` option."
" See also the :keyword:`assert` statement."
msgstr ""
"Ця константа є істинною, якщо Python не було запущено з параметром "
":option:`-O`. Дивіться також оператор :keyword:`assert`."

#: ../../library/constants.rst:77
msgid ""
"The names :data:`None`, :data:`False`, :data:`True` and :data:`__debug__` "
"cannot be reassigned (assignments to them, even as an attribute name, raise "
":exc:`SyntaxError`), so they can be considered \"true\" constants."
msgstr ""
"Імена :data:`None`, :data:`False`, :data:`True` і :data:`__debug__` не можна"
" перепризначити (присвоєння їм, навіть як імені атрибута, викликає "
":exc:`SyntaxError` ), тому їх можна вважати \"справжніми\" константами."

#: ../../library/constants.rst:85
msgid "Constants added by the :mod:`site` module"
msgstr "Константи, додані модулем :mod:`site`"

#: ../../library/constants.rst:87
msgid ""
"The :mod:`site` module (which is imported automatically during startup, "
"except if the :option:`-S` command-line option is given) adds several "
"constants to the built-in namespace.  They are useful for the interactive "
"interpreter shell and should not be used in programs."
msgstr ""
"Модуль :mod:`site` (який імпортується автоматично під час запуску, за "
"винятком випадків, коли задано параметр командного рядка :option:`-S`) додає"
" кілька констант до вбудованого простору імен. Вони корисні для "
"інтерактивної оболонки інтерпретатора і не повинні використовуватися в "
"програмах."

#: ../../library/constants.rst:95
msgid ""
"Objects that when printed, print a message like \"Use quit() or Ctrl-D (i.e."
" EOF) to exit\", and when called, raise :exc:`SystemExit` with the specified"
" exit code."
msgstr ""
"Об’єкти, які під час друку друкують повідомлення на зразок \"Використовуйте "
"quit() або Ctrl-D (тобто EOF) для виходу\", а під час виклику викликають "
":exc:`SystemExit` із зазначеним кодом виходу."

#: ../../library/constants.rst:102
msgid ""
"Object that when printed, prints the message \"Type help() for interactive "
"help, or help(object) for help about object.\", and when called, acts as "
"described :func:`elsewhere <help>`."
msgstr ""

#: ../../library/constants.rst:109
msgid ""
"Objects that when printed or called, print the text of copyright or credits,"
" respectively."
msgstr ""
"Об'єкти, які під час друку або виклику друкують текст авторських прав або "
"кредитів відповідно."

#: ../../library/constants.rst:114
msgid ""
"Object that when printed, prints the message \"Type license() to see the "
"full license text\", and when called, displays the full license text in a "
"pager-like fashion (one screen at a time)."
msgstr ""
"Об’єкт, який під час друку друкує повідомлення \"Введіть licence(), щоб "
"побачити повний текст ліцензії\", а під час виклику відображає повний текст "
"ліцензії у вигляді пейджера (по одному екрану)."

#: ../../library/constants.rst:61
msgid "..."
msgstr ""

#: ../../library/constants.rst:61
msgid "ellipsis literal"
msgstr ""
