# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-19 01:00+0000\n"
"PO-Revision-Date: 2021-06-28 01:08+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2023\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/linecache.rst:2
msgid ":mod:`!linecache` --- Random access to text lines"
msgstr ""

#: ../../library/linecache.rst:9
msgid "**Source code:** :source:`Lib/linecache.py`"
msgstr "**Вихідний код:** :source:`Lib/linecache.py`"

#: ../../library/linecache.rst:13
msgid ""
"The :mod:`linecache` module allows one to get any line from a Python source "
"file, while attempting to optimize internally, using a cache, the common "
"case where many lines are read from a single file.  This is used by the "
":mod:`traceback` module to retrieve source lines for inclusion in  the "
"formatted traceback."
msgstr ""
"Модуль :mod:`linecache` дозволяє отримати будь-який рядок із вихідного файлу"
" Python, одночасно намагаючись оптимізувати внутрішню систему, "
"використовуючи кеш, типовий випадок, коли багато рядків зчитується з одного "
"файлу. Це використовується модулем :mod:`traceback` для отримання вихідних "
"рядків для включення у відформатовану трасування."

#: ../../library/linecache.rst:18
msgid ""
"The :func:`tokenize.open` function is used to open files. This function uses"
" :func:`tokenize.detect_encoding` to get the encoding of the file; in the "
"absence of an encoding token, the file encoding defaults to UTF-8."
msgstr ""
"Функція :func:`tokenize.open` використовується для відкриття файлів. Ця "
"функція використовує :func:`tokenize.detect_encoding`, щоб отримати "
"кодування файлу; за відсутності маркера кодування, кодування файлу за "
"замовчуванням — UTF-8."

#: ../../library/linecache.rst:22
msgid "The :mod:`linecache` module defines the following functions:"
msgstr "Модуль :mod:`linecache` визначає такі функції:"

#: ../../library/linecache.rst:27
msgid ""
"Get line *lineno* from file named *filename*. This function will never raise"
" an exception --- it will return ``''`` on errors (the terminating newline "
"character will be included for lines that are found)."
msgstr ""
"Отримати рядок *lineno* з файлу з назвою *filename*. Ця функція ніколи не "
"викличе виняток --- вона повертатиме ``''`` у разі помилки (кінцевий символ "
"нового рядка буде включено для знайдених рядків)."

#: ../../library/linecache.rst:33
msgid ""
"If a file named *filename* is not found, the function first checks for a "
":pep:`302` ``__loader__`` in *module_globals*. If there is such a loader and"
" it defines a ``get_source`` method, then that determines the source lines "
"(if ``get_source()`` returns ``None``, then ``''`` is returned). Finally, if"
" *filename* is a relative filename, it is looked up relative to the entries "
"in the module search path, ``sys.path``."
msgstr ""
"Якщо файл із назвою *filename* не знайдено, функція спочатку перевіряє "
"наявність :pep:`302` ``__loader__`` у *module_globals*. Якщо такий "
"завантажувач існує і він визначає метод get_source, то він визначає вихідні "
"рядки (якщо get_source() повертає None, тоді повертається ``''``). Нарешті, "
"якщо *filename* є відносною назвою файлу, вона шукається відносно записів у "
"шляху пошуку модуля, ``sys.path``."

#: ../../library/linecache.rst:44
msgid ""
"Clear the cache.  Use this function if you no longer need lines from files "
"previously read using :func:`getline`."
msgstr ""
"Очистити кеш. Використовуйте цю функцію, якщо вам більше не потрібні рядки з"
" файлів, які раніше були прочитані за допомогою :func:`getline`."

#: ../../library/linecache.rst:50
msgid ""
"Check the cache for validity.  Use this function if files in the cache  may "
"have changed on disk, and you require the updated version.  If *filename* is"
" omitted, it will check all the entries in the cache."
msgstr ""
"Перевірте кеш на дійсність. Використовуйте цю функцію, якщо файли в кеші "
"могли змінитися на диску, і вам потрібна оновлена версія. Якщо *ім’я файлу* "
"опущено, буде перевірено всі записи в кеші."

#: ../../library/linecache.rst:56
msgid ""
"Capture enough detail about a non-file-based module to permit getting its "
"lines later via :func:`getline` even if *module_globals* is ``None`` in the "
"later call. This avoids doing I/O until a line is actually needed, without "
"having to carry the module globals around indefinitely."
msgstr ""
"Зберіть достатньо деталей про нефайловий модуль, щоб дозволити отримати його"
" рядки пізніше через :func:`getline`, навіть якщо *module_globals* має "
"значення ``None`` у наступному виклику. Це дозволяє уникнути "
"введення/виведення, доки рядок дійсно не знадобиться, без необхідності "
"носити глобальні модулі безкінечно."

#: ../../library/linecache.rst:63
msgid "Example::"
msgstr "Приклад::"

#: ../../library/linecache.rst:65
msgid ""
">>> import linecache\n"
">>> linecache.getline(linecache.__file__, 8)\n"
"'import sys\\n'"
msgstr ""

#: ../../library/linecache.rst:31
msgid "module"
msgstr "модуль"

#: ../../library/linecache.rst:31
msgid "search"
msgstr ""

#: ../../library/linecache.rst:31
msgid "path"
msgstr ""
