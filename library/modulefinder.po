# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-19 01:00+0000\n"
"PO-Revision-Date: 2021-06-28 01:09+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/modulefinder.rst:2
msgid ":mod:`!modulefinder` --- Find modules used by a script"
msgstr ""

#: ../../library/modulefinder.rst:9
msgid "**Source code:** :source:`Lib/modulefinder.py`"
msgstr "**Вихідний код:** :source:`Lib/modulefinder.py`"

#: ../../library/modulefinder.rst:13
msgid ""
"This module provides a :class:`ModuleFinder` class that can be used to "
"determine the set of modules imported by a script. ``modulefinder.py`` can "
"also be run as a script, giving the filename of a Python script as its "
"argument, after which a report of the imported modules will be printed."
msgstr ""
"Цей модуль надає клас :class:`ModuleFinder`, який можна використовувати для "
"визначення набору модулів, імпортованих сценарієм. ``modulefinder.py`` також"
" можна запустити як сценарій, надаючи назву файлу сценарію Python як "
"аргумент, після чого буде надруковано звіт про імпортовані модулі."

#: ../../library/modulefinder.rst:21
msgid ""
"Record that the package named *pkg_name* can be found in the specified "
"*path*."
msgstr ""
"Запишіть, що пакет із назвою *pkg_name* можна знайти у вказаному *шляху*."

#: ../../library/modulefinder.rst:26
msgid ""
"Allows specifying that the module named *oldname* is in fact the package "
"named *newname*."
msgstr ""
"Дозволяє вказати, що модуль з назвою *oldname* насправді є пакетом з назвою "
"*newname*."

#: ../../library/modulefinder.rst:32
msgid ""
"This class provides :meth:`run_script` and :meth:`report` methods to "
"determine the set of modules imported by a script. *path* can be a list of "
"directories to search for modules; if not specified, ``sys.path`` is used.  "
"*debug* sets the debugging level; higher values make the class print "
"debugging messages about what it's doing. *excludes* is a list of module "
"names to exclude from the analysis. *replace_paths* is a list of ``(oldpath,"
" newpath)`` tuples that will be replaced in module paths."
msgstr ""
"Цей клас надає методи :meth:`run_script` і :meth:`report` для визначення "
"набору модулів, імпортованих сценарієм. *шлях* може бути списком каталогів "
"для пошуку модулів; якщо не вказано, використовується ``sys.path``. *debug* "
"встановлює рівень налагодження; вищі значення змушують клас друкувати "
"повідомлення про те, що він робить. *excludes* — список імен модулів, які "
"потрібно виключити з аналізу. *replace_paths* — це список кортежів "
"``(oldpath, newpath)``, які будуть замінені в шляхах модуля."

#: ../../library/modulefinder.rst:43
msgid ""
"Print a report to standard output that lists the modules imported by the "
"script and their paths, as well as modules that are missing or seem to be "
"missing."
msgstr ""
"Роздрукуйте звіт у стандартний вихід із переліком модулів, імпортованих "
"сценарієм, і їхніх шляхів, а також модулів, які відсутні або здаються "
"відсутніми."

#: ../../library/modulefinder.rst:49
msgid ""
"Analyze the contents of the *pathname* file, which must contain Python code."
msgstr ""
"Проаналізуйте вміст файлу *pathname*, який повинен містити код Python."

#: ../../library/modulefinder.rst:54
msgid ""
"A dictionary mapping module names to modules. See :ref:`modulefinder-"
"example`."
msgstr ""
"Словник зіставляє імена модулів із модулями. Див. :ref:`modulefinder-"
"example`."

#: ../../library/modulefinder.rst:61
msgid "Example usage of :class:`ModuleFinder`"
msgstr "Приклад використання :class:`ModuleFinder`"

#: ../../library/modulefinder.rst:63
msgid "The script that is going to get analyzed later on (bacon.py)::"
msgstr "Сценарій, який буде проаналізовано пізніше (bacon.py):"

#: ../../library/modulefinder.rst:65
msgid ""
"import re, itertools\n"
"\n"
"try:\n"
"    import baconhameggs\n"
"except ImportError:\n"
"    pass\n"
"\n"
"try:\n"
"    import guido.python.ham\n"
"except ImportError:\n"
"    pass"
msgstr ""

#: ../../library/modulefinder.rst:78
msgid "The script that will output the report of bacon.py::"
msgstr "Сценарій, який виведе звіт bacon.py::"

#: ../../library/modulefinder.rst:80
msgid ""
"from modulefinder import ModuleFinder\n"
"\n"
"finder = ModuleFinder()\n"
"finder.run_script('bacon.py')\n"
"\n"
"print('Loaded modules:')\n"
"for name, mod in finder.modules.items():\n"
"    print('%s: ' % name, end='')\n"
"    print(','.join(list(mod.globalnames.keys())[:3]))\n"
"\n"
"print('-'*50)\n"
"print('Modules not imported:')\n"
"print('\\n'.join(finder.badmodules.keys()))"
msgstr ""

#: ../../library/modulefinder.rst:94
msgid "Sample output (may vary depending on the architecture)::"
msgstr "Зразок вихідних даних (може відрізнятися залежно від архітектури):"

#: ../../library/modulefinder.rst:96
msgid ""
"Loaded modules:\n"
"_types:\n"
"copyreg:  _inverted_registry,_slotnames,__all__\n"
"re._compiler:  isstring,_sre,_optimize_unicode\n"
"_sre:\n"
"re._constants:  REPEAT_ONE,makedict,AT_END_LINE\n"
"sys:\n"
"re:  __module__,finditer,_expand\n"
"itertools:\n"
"__main__:  re,itertools,baconhameggs\n"
"re._parser:  _PATTERNENDERS,SRE_FLAG_UNICODE\n"
"array:\n"
"types:  __module__,IntType,TypeType\n"
"---------------------------------------------------\n"
"Modules not imported:\n"
"guido.python.ham\n"
"baconhameggs"
msgstr ""
