# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Olga Tomakhina, 2022
# Dmytro Kazanzhy, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-19 01:00+0000\n"
"PO-Revision-Date: 2021-06-28 01:09+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2024\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/mmap.rst:2
msgid ":mod:`!mmap` --- Memory-mapped file support"
msgstr ""

#: ../../includes/wasm-notavail.rst:3
msgid "Availability"
msgstr ""

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly. See "
":ref:`wasm-availability` for more information."
msgstr ""

#: ../../library/mmap.rst:11
msgid ""
"Memory-mapped file objects behave like both :class:`bytearray` and like "
":term:`file objects <file object>`.  You can use mmap objects in most places"
" where :class:`bytearray` are expected; for example, you can use the "
":mod:`re` module to search through a memory-mapped file.  You can also "
"change a single byte by doing ``obj[index] = 97``, or change a subsequence "
"by assigning to a slice: ``obj[i1:i2] = b'...'``.  You can also read and "
"write data starting at the current file position, and :meth:`seek` through "
"the file to different positions."
msgstr ""
"Файлові об’єкти, відображені в пам’яті, поводяться як :class:`bytearray` і "
"як :term:`файлові об’єкти <file object>`. Ви можете використовувати об’єкти "
"mmap у більшості місць, де очікується :class:`bytearray`; наприклад, ви "
"можете використовувати модуль :mod:`re` для пошуку у файлі, відображеному в "
"пам’яті. Ви також можете змінити один байт, виконавши ``obj[index] = 97``, "
"або змінити підпослідовність, призначивши зрізу: ``obj[i1:i2] = b'...'``. Ви"
" також можете читати та записувати дані, починаючи з поточної позиції файлу,"
" і :meth:`seek` по файлу до різних позицій."

#: ../../library/mmap.rst:19
msgid ""
"A memory-mapped file is created by the :class:`~mmap.mmap` constructor, "
"which is different on Unix and on Windows.  In either case you must provide "
"a file descriptor for a file opened for update. If you wish to map an "
"existing Python file object, use its :meth:`~io.IOBase.fileno` method to "
"obtain the correct value for the *fileno* parameter.  Otherwise, you can "
"open the file using the :func:`os.open` function, which returns a file "
"descriptor directly (the file still needs to be closed when done)."
msgstr ""

#: ../../library/mmap.rst:28
msgid ""
"If you want to create a memory-mapping for a writable, buffered file, you "
"should :func:`~io.IOBase.flush` the file first.  This is necessary to ensure"
" that local modifications to the buffers are actually available to the "
"mapping."
msgstr ""
"Якщо ви хочете створити відображення пам’яті для змінюваного буферизованого "
"файлу, вам слід спочатку зробити для файлу :func:`~io.IOBase.flush`. Це "
"необхідно для того, щоб локальні модифікації буферів фактично були доступні "
"для відображення."

#: ../../library/mmap.rst:33
msgid ""
"For both the Unix and Windows versions of the constructor, *access* may be "
"specified as an optional keyword parameter. *access* accepts one of four "
"values: :const:`ACCESS_READ`, :const:`ACCESS_WRITE`, or :const:`ACCESS_COPY`"
" to specify read-only, write-through or copy-on-write memory respectively, "
"or :const:`ACCESS_DEFAULT` to defer to *prot*.  *access* can be used on both"
" Unix and Windows.  If *access* is not specified, Windows mmap returns a "
"write-through mapping.  The initial memory values for all three access types"
" are taken from the specified file.  Assignment to an :const:`ACCESS_READ` "
"memory map raises a :exc:`TypeError` exception.  Assignment to an "
":const:`ACCESS_WRITE` memory map affects both memory and the underlying "
"file. Assignment to an :const:`ACCESS_COPY` memory map affects memory but "
"does not update the underlying file."
msgstr ""
"Для версій конструктора як для Unix, так і для Windows, *access* можна "
"вказати як необов’язковий keyword параметр. *access* приймає одне з чотирьох"
" значень: :const:`ACCESS_READ`, :const:`ACCESS_WRITE` або "
":const:`ACCESS_COPY`, щоб вказати пам’ять лише для читання, для запису або "
"для копіювання відповідно, або :const:`ACCESS_DEFAULT` для замовчування на "
"*prot*. *access* можна використовувати як в Unix, так і в Windows. Якщо "
"*access* не вказано, Windows mmap повертає мапінг для запису. Початкові "
"значення пам'яті для всіх трьох типів доступу беруться з указаного файлу. "
"Присвоєння :const:`ACCESS_READ` для мапінгу викликає виняток "
":exc:`TypeError`. Присвоєння :const:`ACCESS_WRITE` мапінгу призводить до "
"змін як в пам’яті, так і в основному файлі. Примвоєння мапінгу "
":const:`ACCESS_COPY` змінює пам’ять, але не оновлює основний файл."

#: ../../library/mmap.rst:46
msgid "Added :const:`ACCESS_DEFAULT` constant."
msgstr "Додано константу :const:`ACCESS_DEFAULT`."

#: ../../library/mmap.rst:49
msgid ""
"To map anonymous memory, -1 should be passed as the fileno along with the "
"length."
msgstr ""
"Щоб замапити (відобразити) анонімну пам'ять, -1 слід передати як fileno "
"разом із довжиною."

#: ../../library/mmap.rst:53
msgid ""
"**(Windows version)** Maps *length* bytes from the file specified by the "
"file handle *fileno*, and creates a mmap object.  If *length* is larger than"
" the current size of the file, the file is extended to contain *length* "
"bytes.  If *length* is ``0``, the maximum length of the map is the current "
"size of the file, except that if the file is empty Windows raises an "
"exception (you cannot create an empty mapping on Windows)."
msgstr ""
"**(Версія для Windows)** Відображає *length* байт з файлу, указаного "
"дескриптором файлу *fileno*, і створює об’єкт mmap. Якщо *length* більший за"
" поточний розмір файлу, файл розширюється, щоб містити *length* байтів. Якщо"
" *length* дорівнює ``0``, максимальна довжина мапінгу дорівнює поточному "
"розміру файлу, за винятком коли файл порожній - тоді Windows стригерує "
"виключення (ви не можете створити порожній мапінг у Windows)."

#: ../../library/mmap.rst:60
msgid ""
"*tagname*, if specified and not ``None``, is a string giving a tag name for "
"the mapping.  Windows allows you to have many different mappings against the"
" same file.  If you specify the name of an existing tag, that tag is opened,"
" otherwise a new tag of this name is created.  If this parameter is omitted "
"or ``None``, the mapping is created without a name.  Avoiding the use of the"
" *tagname* parameter will assist in keeping your code portable between Unix "
"and Windows."
msgstr ""

#: ../../library/mmap.rst:68
msgid ""
"*offset* may be specified as a non-negative integer offset. mmap references "
"will be relative to the offset from the beginning of the file. *offset* "
"defaults to 0.  *offset* must be a multiple of the "
":const:`ALLOCATIONGRANULARITY`."
msgstr ""
"*offset* можна вказати як невід’ємне ціле зміщення. посилання mmap будуть "
"відносними до зміщення від початку файлу. *offset* за умовчанням дорівнює 0."
" *offset* має бути кратним :const:`ALLOCATIONGRANULARITY`."

#: ../../library/mmap.rst:72 ../../library/mmap.rst:174
msgid ""
"Raises an :ref:`auditing event <auditing>` ``mmap.__new__`` with arguments "
"``fileno``, ``length``, ``access``, ``offset``."
msgstr ""
"Викликає :ref:`подію аудиту <auditing>` ``mmap.__new__`` з аргументами "
"``fileno``, ``length``, ``access``, ``offset``."

#: ../../library/mmap.rst:78
msgid ""
"**(Unix version)** Maps *length* bytes from the file specified by the file "
"descriptor *fileno*, and returns a mmap object.  If *length* is ``0``, the "
"maximum length of the map will be the current size of the file when "
":class:`~mmap.mmap` is called."
msgstr ""
"**(версія Unix)** Відображає *length* байтів з файлу, указаного дескриптором"
" файлу *fileno*, і повертає об’єкт mmap. Якщо *length* дорівнює ``0``, "
"максимальна довжина відображення(мапінгу) буде поточним розміром файлу під "
"час виклику :class:`~mmap.mmap`."

#: ../../library/mmap.rst:83
msgid ""
"*flags* specifies the nature of the mapping. :const:`MAP_PRIVATE` creates a "
"private copy-on-write mapping, so changes to the contents of the mmap object"
" will be private to this process, and :const:`MAP_SHARED` creates a mapping "
"that's shared with all other processes mapping the same areas of the file.  "
"The default value is :const:`MAP_SHARED`. Some systems have additional "
"possible flags with the full list specified in :ref:`MAP_* constants <map-"
"constants>`."
msgstr ""
"*flags* визначає характер відображення. :const:`MAP_PRIVATE` створює "
"приватне відображення(мапінг), що копіюється під час запису, тому зміни до "
"вмісту об’єкта mmap будуть приватними для цього процесу, а "
":const:`MAP_SHARED` створює відображення, яке використовується спільно з "
"усіма іншими процесами, що відображають однакові області файлу. Значення за "
"замовчуванням: :const:`MAP_SHARED`. Деякі системи мають додаткові можливі "
"прапорці з повним списком, указаним у константах :ref:`MAP_* <map-"
"constants>`."

#: ../../library/mmap.rst:91
msgid ""
"*prot*, if specified, gives the desired memory protection; the two most "
"useful values are :const:`PROT_READ` and :const:`PROT_WRITE`, to specify "
"that the pages may be read or written.  *prot* defaults to :const:`PROT_READ"
" \\| PROT_WRITE`."
msgstr ""
"*prot*, якщо вказано, надає бажаний захист пам’яті; двома найбільш корисними"
" значеннями є :const:`PROT_READ` і :const:`PROT_WRITE`, щоб вказати, що "
"сторінки можна читати або записувати. *prot* за замовчуванням "
":const:`PROT_READ \\| PROT_WRITE`."

#: ../../library/mmap.rst:96
msgid ""
"*access* may be specified in lieu of *flags* and *prot* as an optional "
"keyword parameter.  It is an error to specify both *flags*, *prot* and "
"*access*.  See the description of *access* above for information on how to "
"use this parameter."
msgstr ""
"*access* можна вказати замість *flags* і *prot* як необов’язковий keyword "
"параметр.  Є помилкою вказувати одночасно *flags*, *prot* і *access*. "
"Перегляньте опис *access* вище, щоб дізнатися, як використовувати цей "
"параметр."

#: ../../library/mmap.rst:101
msgid ""
"*offset* may be specified as a non-negative integer offset. mmap references "
"will be relative to the offset from the beginning of the file. *offset* "
"defaults to 0. *offset* must be a multiple of :const:`ALLOCATIONGRANULARITY`"
" which is equal to :const:`PAGESIZE` on Unix systems."
msgstr ""
"*offset* можна вказати як невід’ємне ціле зміщення. посилання mmap будуть "
"відносними до зміщення від початку файлу. *offset* за умовчанням дорівнює 0."
" *offset* має бути кратним :const:`ALLOCATIONGRANULARITY`, що дорівнює "
":const:`PAGESIZE` в системах Unix."

#: ../../library/mmap.rst:106
msgid ""
"If *trackfd* is ``False``, the file descriptor specified by *fileno* will "
"not be duplicated, and the resulting :class:`!mmap` object will not be "
"associated with the map's underlying file. This means that the "
":meth:`~mmap.mmap.size` and :meth:`~mmap.mmap.resize` methods will fail. "
"This mode is useful to limit the number of open file descriptors."
msgstr ""

#: ../../library/mmap.rst:113
msgid ""
"To ensure validity of the created memory mapping the file specified by the "
"descriptor *fileno* is internally automatically synchronized with the "
"physical backing store on macOS."
msgstr ""
"Щоб забезпечити дійсність створеного відображення пам’яті, файл, указаний "
"дескриптором *fileno*, внутрішньо автоматично синхронізується з фізичним "
"резервним сховищем у macOS."

#: ../../library/mmap.rst:117
msgid "The *trackfd* parameter was added."
msgstr ""

#: ../../library/mmap.rst:120
msgid "This example shows a simple way of using :class:`~mmap.mmap`::"
msgstr ""
"У цьому прикладі показано простий спосіб використання :class:`~mmap.mmap`::"

#: ../../library/mmap.rst:122
msgid ""
"import mmap\n"
"\n"
"# write a simple example file\n"
"with open(\"hello.txt\", \"wb\") as f:\n"
"    f.write(b\"Hello Python!\\n\")\n"
"\n"
"with open(\"hello.txt\", \"r+b\") as f:\n"
"    # memory-map the file, size 0 means whole file\n"
"    mm = mmap.mmap(f.fileno(), 0)\n"
"    # read content via standard file methods\n"
"    print(mm.readline())  # prints b\"Hello Python!\\n\"\n"
"    # read content via slice notation\n"
"    print(mm[:5])  # prints b\"Hello\"\n"
"    # update content using slice notation;\n"
"    # note that new content must have same size\n"
"    mm[6:] = b\" world!\\n\"\n"
"    # ... and read again using standard file methods\n"
"    mm.seek(0)\n"
"    print(mm.readline())  # prints b\"Hello  world!\\n\"\n"
"    # close the map\n"
"    mm.close()"
msgstr ""

#: ../../library/mmap.rst:145
msgid ""
":class:`~mmap.mmap` can also be used as a context manager in a "
":keyword:`with` statement::"
msgstr ""
":class:`~mmap.mmap` також можна використовувати як менеджер контексту в "
"операторі :keyword:`with`::"

#: ../../library/mmap.rst:148
msgid ""
"import mmap\n"
"\n"
"with mmap.mmap(-1, 13) as mm:\n"
"    mm.write(b\"Hello world!\")"
msgstr ""

#: ../../library/mmap.rst:153
msgid "Context manager support."
msgstr "Підтримка контекстного менеджера."

#: ../../library/mmap.rst:157
msgid ""
"The next example demonstrates how to create an anonymous map and exchange "
"data between the parent and child processes::"
msgstr ""
"Наступний приклад демонструє, як створити анонімне відображення(мапінг) та "
"обмінюватися даними між батьківським і дочірнім процесами:"

#: ../../library/mmap.rst:160
msgid ""
"import mmap\n"
"import os\n"
"\n"
"mm = mmap.mmap(-1, 13)\n"
"mm.write(b\"Hello world!\")\n"
"\n"
"pid = os.fork()\n"
"\n"
"if pid == 0:  # In a child process\n"
"    mm.seek(0)\n"
"    print(mm.readline())\n"
"\n"
"    mm.close()"
msgstr ""

#: ../../library/mmap.rst:176
msgid "Memory-mapped file objects support the following methods:"
msgstr "Файлові об’єкти, відображені в пам’яті, підтримують такі методи:"

#: ../../library/mmap.rst:180
msgid ""
"Closes the mmap. Subsequent calls to other methods of the object will result"
" in a ValueError exception being raised. This will not close the open file."
msgstr ""
"Закриває mmap. Подальші виклики інших методів об’єкта призведуть до "
"виникнення винятку ValueError. Це не закриє відкритий файл."

#: ../../library/mmap.rst:187
msgid "``True`` if the file is closed."
msgstr "``True``, якщо файл закрито."

#: ../../library/mmap.rst:194
msgid ""
"Returns the lowest index in the object where the subsequence *sub* is found,"
" such that *sub* is contained in the range [*start*, *end*]. Optional "
"arguments *start* and *end* are interpreted as in slice notation. Returns "
"``-1`` on failure."
msgstr ""
"Повертає найменший індекс в об’єкті, де знайдено підпослідовність *sub*, так"
" що *sub* міститься в діапазоні [*start*, *end*]. Необов’язкові аргументи "
"*start* і *end* інтерпретуються як у slice нотації (нотації зрізів). "
"Повертає ``-1`` у разі помилки."

#: ../../library/mmap.rst:199 ../../library/mmap.rst:291
#: ../../library/mmap.rst:331
msgid "Writable :term:`bytes-like object` is now accepted."
msgstr "Записуваний :term:`bytes-like object` тепер приймається."

#: ../../library/mmap.rst:205
msgid ""
"Flushes changes made to the in-memory copy of a file back to disk. Without "
"use of this call there is no guarantee that changes are written back before "
"the object is destroyed.  If *offset* and *size* are specified, only changes"
" to the given range of bytes will be flushed to disk; otherwise, the whole "
"extent of the mapping is flushed.  *offset* must be a multiple of the "
":const:`PAGESIZE` or :const:`ALLOCATIONGRANULARITY`."
msgstr ""
"Скидає зміни, внесені до копії файлу в пам’яті, назад на диск. Без "
"використання цього виклику немає гарантії, що зміни будуть записані назад до"
" того, як об’єкт буде знищено. Якщо вказано *offset* і *size*, на диск буде "
"скинуто лише зміни в заданому діапазоні байтів; інакше весь контент "
"відображення скидається. *offset* має бути кратним :const:`PAGESIZE` або "
":const:`ALLOCATIONGRANULARITY`."

#: ../../library/mmap.rst:212
msgid ""
"``None`` is returned to indicate success.  An exception is raised when the "
"call failed."
msgstr ""
"``None`` повертається, щоб вказати успішний результат. У разі невдачі "
"виклику виникає виняток."

#: ../../library/mmap.rst:215
msgid ""
"Previously, a nonzero value was returned on success; zero was returned on "
"error under Windows.  A zero value was returned on success; an exception was"
" raised on error under Unix."
msgstr ""
"Раніше в разі успіху поверталося ненульове значення; нуль повертався на "
"помилку у Windows. У разі успіху поверталось нульове значення; виняток "
"викликався на помилку під Unix."

#: ../../library/mmap.rst:223
msgid ""
"Send advice *option* to the kernel about the memory region beginning at "
"*start* and extending *length* bytes.  *option* must be one of the "
":ref:`MADV_* constants <madvise-constants>` available on the system.  If "
"*start* and *length* are omitted, the entire mapping is spanned.  On some "
"systems (including Linux), *start* must be a multiple of the "
":const:`PAGESIZE`."
msgstr ""
"Надіслати пораду *option* ядру щодо області пам’яті, яка починається з "
"*start* і має довжину *length*. *option* має бути однією з констант "
":ref:`MADV_* <madvise-constants>`, доступних у системі. Якщо *start* і *end*"
" опущені, охоплюється все відображення. У деяких системах (включаючи Linux) "
"*start* має бути кратним :const:`PAGESIZE`."

#: ../../library/mmap.rst:230
msgid "Availability: Systems with the ``madvise()`` system call."
msgstr "Доступність: системи з системним викликом ``madvise()``."

#: ../../library/mmap.rst:237
msgid ""
"Copy the *count* bytes starting at offset *src* to the destination index "
"*dest*.  If the mmap was created with :const:`ACCESS_READ`, then calls to "
"move will raise a :exc:`TypeError` exception."
msgstr ""
"Копіювання *count* байтів, починаючи із зміщення *src*, до індексу "
"призначення *dest*. Якщо mmap було створено за допомогою "
":const:`ACCESS_READ`, тоді виклик переміщення призведе до винятку "
":exc:`TypeError`."

#: ../../library/mmap.rst:244
msgid ""
"Return a :class:`bytes` containing up to *n* bytes starting from the current"
" file position. If the argument is omitted, ``None`` or negative, return all"
" bytes from the current file position to the end of the mapping. The file "
"position is updated to point after the bytes that were returned."
msgstr ""
"Повертає :class:`bytes`, що містить до *n* байтів, починаючи з поточної "
"позиції файлу. Якщо аргумент пропущений, ``None`` або негативний, "
"повертаються всі байти від поточної позиції файлу до кінця відображення. "
"Позиція файлу оновлюється, щоб вказувати одразу після байтів, які були "
"повернуті."

#: ../../library/mmap.rst:250
msgid "Argument can be omitted or ``None``."
msgstr "Аргумент можна опустити або бути ``None``."

#: ../../library/mmap.rst:255
msgid ""
"Returns a byte at the current file position as an integer, and advances the "
"file position by 1."
msgstr ""
"Повертає байт у поточній позиції файлу як ціле число integer та переміщує "
"позицію у файлі на 1."

#: ../../library/mmap.rst:261
msgid ""
"Returns a single line, starting at the current file position and up to the "
"next newline. The file position is updated to point after the bytes that "
"were returned."
msgstr ""
"Повертає один рядок, починаючи з поточної позиції файлу й до наступного "
"нового рядка. Позиція файлу оновлюється, щоб вказувати після байтів, які "
"були повернуті."

#: ../../library/mmap.rst:268
msgid "Resizes the map and the underlying file, if any."
msgstr ""

#: ../../library/mmap.rst:270
msgid ""
"Resizing a map created with *access* of :const:`ACCESS_READ` or "
":const:`ACCESS_COPY`, will raise a :exc:`TypeError` exception. Resizing a "
"map created with with *trackfd* set to ``False``, will raise a "
":exc:`ValueError` exception."
msgstr ""

#: ../../library/mmap.rst:275
msgid ""
"**On Windows**: Resizing the map will raise an :exc:`OSError` if there are "
"other maps against the same named file. Resizing an anonymous map (ie "
"against the pagefile) will silently create a new map with the original data "
"copied over up to the length of the new size."
msgstr ""

#: ../../library/mmap.rst:280
msgid ""
"Correctly fails if attempting to resize when another map is held Allows "
"resize against an anonymous map on Windows"
msgstr ""

#: ../../library/mmap.rst:286
msgid ""
"Returns the highest index in the object where the subsequence *sub* is "
"found, such that *sub* is contained in the range [*start*, *end*]. Optional "
"arguments *start* and *end* are interpreted as in slice notation. Returns "
"``-1`` on failure."
msgstr ""
"Повертає останній індекс в об’єкті, де знайдено підпослідовність *sub*, так "
"що *sub* міститься в діапазоні [*start*, *end*]. Необов’язкові аргументи "
"*start* та *end* інтерпретуються як у нотації зрізів (slice нотація). "
"Повертає ``-1`` у разі помилки."

#: ../../library/mmap.rst:297
msgid ""
"Set the file's current position.  *whence* argument is optional and defaults"
" to ``os.SEEK_SET`` or ``0`` (absolute file positioning); other values are "
"``os.SEEK_CUR`` or ``1`` (seek relative to the current position) and "
"``os.SEEK_END`` or ``2`` (seek relative to the file's end)."
msgstr ""
"Встановлює поточну позицію в файлі. Аргумент *whence* є необов’язковим і за "
"замовчуванням має значення ``os.SEEK_SET`` або ``0`` (абсолютне розташування"
" файлу); іншими значеннями є ``os.SEEK_CUR`` або ``1`` (пошук відносно "
"поточної позиції) і ``os.SEEK_END`` або ``2`` (пошук відносно кінця файлу)."

#: ../../library/mmap.rst:302
msgid "Return the new absolute position instead of ``None``."
msgstr ""

#: ../../library/mmap.rst:307
msgid ""
"Return whether the file supports seeking, and the return value is always "
"``True``."
msgstr ""

#: ../../library/mmap.rst:313
msgid ""
"Return the length of the file, which can be larger than the size of the "
"memory-mapped area."
msgstr ""
"Повертає довжину файлу, яка може перевищувати розмір відображеної області "
"пам’яті."

#: ../../library/mmap.rst:319
msgid "Returns the current position of the file pointer."
msgstr "Повертає поточну позицію покажчика файлу."

#: ../../library/mmap.rst:324
msgid ""
"Write the bytes in *bytes* into memory at the current position of the file "
"pointer and return the number of bytes written (never less than "
"``len(bytes)``, since if the write fails, a :exc:`ValueError` will be "
"raised).  The file position is updated to point after the bytes that were "
"written.  If the mmap was created with :const:`ACCESS_READ`, then writing to"
" it will raise a :exc:`TypeError` exception."
msgstr ""
"Записує байти в *bytes* у пам’ять у поточній позиції вказівника файлу та "
"повертає кількість записаних байтів (ніколи не менше ніж ``len(bytes)``, але"
" якщо запис не вдається то це призведе до винятку :exc:`ValueError` ). "
"Позиція файлу оновлюється, щоб вказувати після записаних байтів. Якщо mmap "
"було створено за допомогою :const:`ACCESS_READ`, то запис у нього призведе "
"до виключення :exc:`TypeError`."

#: ../../library/mmap.rst:334
msgid "The number of bytes written is now returned."
msgstr "Додано повернення кількості записаних байтів."

#: ../../library/mmap.rst:340
msgid ""
"Write the integer *byte* into memory at the current position of the file "
"pointer; the file position is advanced by ``1``. If the mmap was created "
"with :const:`ACCESS_READ`, then writing to it will raise a :exc:`TypeError` "
"exception."
msgstr ""
"Записує ціле *byte* у пам'ять у поточній позиції покажчика файлу; позиція "
"файлу просувається вперед на ``1``. Якщо mmap було створено за допомогою "
":const:`ACCESS_READ`, то запис у нього призведе до виключення "
":exc:`TypeError`."

#: ../../library/mmap.rst:348
msgid "MADV_* Constants"
msgstr "Константи MADV_*"

#: ../../library/mmap.rst:375
msgid ""
"These options can be passed to :meth:`mmap.madvise`.  Not every option will "
"be present on every system."
msgstr ""
"Ці параметри можна передати в :meth:`mmap.madvise`. Не кожен параметр буде "
"присутній у кожній системі."

#: ../../library/mmap.rst:378
msgid "Availability: Systems with the madvise() system call."
msgstr "Доступність: системи з системним викликом madvise()."

#: ../../library/mmap.rst:385
msgid "MAP_* Constants"
msgstr "Константи MAP_*"

#: ../../library/mmap.rst:409
msgid ""
"These are the various flags that can be passed to :meth:`mmap.mmap`.  "
":data:`MAP_ALIGNED_SUPER` is only available at FreeBSD and "
":data:`MAP_CONCEAL` is only available at OpenBSD.  Note that some options "
"might not be present on some systems."
msgstr ""

#: ../../library/mmap.rst:413
msgid "Added :data:`MAP_POPULATE` constant."
msgstr ""

#: ../../library/mmap.rst:416
msgid "Added :data:`MAP_STACK` constant."
msgstr ""

#: ../../library/mmap.rst:419
msgid "Added :data:`MAP_ALIGNED_SUPER` and :data:`MAP_CONCEAL` constants."
msgstr ""

#: ../../library/mmap.rst:422
msgid ""
"Added :data:`MAP_32BIT`, :data:`MAP_HASSEMAPHORE`, :data:`MAP_JIT`, "
":data:`MAP_NOCACHE`, :data:`MAP_NOEXTEND`, :data:`MAP_NORESERVE`, "
":data:`MAP_RESILIENT_CODESIGN`, :data:`MAP_RESILIENT_MEDIA`, "
":data:`MAP_TPRO`, :data:`MAP_TRANSLATED_ALLOW_EXECUTE`, and "
":data:`MAP_UNIX03` constants."
msgstr ""
