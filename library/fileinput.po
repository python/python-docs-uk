# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-19 01:00+0000\n"
"PO-Revision-Date: 2021-06-28 01:06+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/fileinput.rst:2
msgid ":mod:`!fileinput` --- Iterate over lines from multiple input streams"
msgstr ""

#: ../../library/fileinput.rst:10
msgid "**Source code:** :source:`Lib/fileinput.py`"
msgstr "**Вихідний код:** :source:`Lib/fileinput.py`"

#: ../../library/fileinput.rst:14
msgid ""
"This module implements a helper class and functions to quickly write a loop "
"over standard input or a list of files. If you just want to read or write "
"one file see :func:`open`."
msgstr ""
"Цей модуль реалізує допоміжний клас і функції для швидкого запису циклу "
"через стандартний ввід або список файлів. Якщо ви просто хочете прочитати "
"або записати один файл, перегляньте :func:`open`."

#: ../../library/fileinput.rst:18
msgid "The typical use is::"
msgstr "Типове використання:"

#: ../../library/fileinput.rst:20
msgid ""
"import fileinput\n"
"for line in fileinput.input(encoding=\"utf-8\"):\n"
"    process(line)"
msgstr ""

#: ../../library/fileinput.rst:24
msgid ""
"This iterates over the lines of all files listed in ``sys.argv[1:]``, "
"defaulting to ``sys.stdin`` if the list is empty.  If a filename is ``'-'``,"
" it is also replaced by ``sys.stdin`` and the optional arguments *mode* and "
"*openhook* are ignored.  To specify an alternative list of filenames, pass "
"it as the first argument to :func:`.input`.  A single file name is also "
"allowed."
msgstr ""
"Це повторює рядки всіх файлів, перелічених у ``sys.argv[1:]``, за умовчанням"
" ``sys.stdin``, якщо список порожній. Якщо ім’я файлу ``'-'``, воно також "
"замінюється на ``sys.stdin``, а додаткові аргументи *mode* і *openhook* "
"ігноруються. Щоб вказати альтернативний список імен файлів, передайте його "
"як перший аргумент у :func:`.input`. Допускається також одне ім’я файлу."

#: ../../library/fileinput.rst:30
msgid ""
"All files are opened in text mode by default, but you can override this by "
"specifying the *mode* parameter in the call to :func:`.input` or "
":class:`FileInput`.  If an I/O error occurs during opening or reading a "
"file, :exc:`OSError` is raised."
msgstr ""
"За замовчуванням усі файли відкриваються в текстовому режимі, але ви можете "
"змінити це, вказавши параметр *mode* у виклику :func:`.input` або "
":class:`FileInput`. Якщо під час відкриття або читання файлу виникає помилка"
" введення-виведення, виникає :exc:`OSError`."

#: ../../library/fileinput.rst:35
msgid ""
":exc:`IOError` used to be raised; it is now an alias of :exc:`OSError`."
msgstr ":exc:`IOError` використовувався; тепер це псевдонім :exc:`OSError`."

#: ../../library/fileinput.rst:38
msgid ""
"If ``sys.stdin`` is used more than once, the second and further use will "
"return no lines, except perhaps for interactive use, or if it has been "
"explicitly reset (e.g. using ``sys.stdin.seek(0)``)."
msgstr ""
"Якщо ``sys.stdin`` використовується більше одного разу, друге і подальше "
"використання не поверне жодних рядків, за винятком, можливо, для "
"інтерактивного використання, або якщо його було явно скинуто (наприклад, за "
"допомогою ``sys.stdin.seek(0))``)."

#: ../../library/fileinput.rst:42
msgid ""
"Empty files are opened and immediately closed; the only time their presence "
"in the list of filenames is noticeable at all is when the last file opened "
"is empty."
msgstr ""
"Порожні файли відкриваються і негайно закриваються; єдиний раз, коли їх "
"присутність у списку імен файлів взагалі помітна, це коли останній відкритий"
" файл порожній."

#: ../../library/fileinput.rst:46
msgid ""
"Lines are returned with any newlines intact, which means that the last line "
"in a file may not have one."
msgstr ""
"Рядки повертаються з усіма новими рядками, що означає, що останній рядок у "
"файлі може їх не мати."

#: ../../library/fileinput.rst:49
msgid ""
"You can control how files are opened by providing an opening hook via the "
"*openhook* parameter to :func:`fileinput.input` or :func:`FileInput`. The "
"hook must be a function that takes two arguments, *filename* and *mode*, and"
" returns an accordingly opened file-like object. If *encoding* and/or "
"*errors* are specified, they will be passed to the hook as additional "
"keyword arguments. This module provides a :func:`hook_compressed` to support"
" compressed files."
msgstr ""

#: ../../library/fileinput.rst:56
msgid "The following function is the primary interface of this module:"
msgstr "Наступна функція є основним інтерфейсом цього модуля:"

#: ../../library/fileinput.rst:61
msgid ""
"Create an instance of the :class:`FileInput` class.  The instance will be "
"used as global state for the functions of this module, and is also returned "
"to use during iteration.  The parameters to this function will be passed "
"along to the constructor of the :class:`FileInput` class."
msgstr ""
"Створіть екземпляр класу :class:`FileInput`. Примірник використовуватиметься"
" як глобальний стан для функцій цього модуля, а також повертатиметься до "
"використання під час ітерації. Параметри цієї функції будуть передані "
"конструктору класу :class:`FileInput`."

#: ../../library/fileinput.rst:66
msgid ""
"The :class:`FileInput` instance can be used as a context manager in the "
":keyword:`with` statement.  In this example, *input* is closed after the "
":keyword:`!with` statement is exited, even if an exception occurs::"
msgstr ""
"Екземпляр :class:`FileInput` можна використовувати як менеджер контексту в "
"операторі :keyword:`with`. У цьому прикладі *input* закривається після "
"завершення оператора :keyword:`!with`, навіть якщо виникає виняткова "
"ситуація::"

#: ../../library/fileinput.rst:70
msgid ""
"with fileinput.input(files=('spam.txt', 'eggs.txt'), encoding=\"utf-8\") as f:\n"
"    for line in f:\n"
"        process(line)"
msgstr ""

#: ../../library/fileinput.rst:74 ../../library/fileinput.rst:170
msgid "Can be used as a context manager."
msgstr "Може використовуватися як контекстний менеджер."

#: ../../library/fileinput.rst:77
msgid "The keyword parameters *mode* and *openhook* are now keyword-only."
msgstr ""
"Параметри ключових слів *mode* і *openhook* тепер є лише ключовими словами."

#: ../../library/fileinput.rst:80 ../../library/fileinput.rst:176
#: ../../library/fileinput.rst:210
msgid "The keyword-only parameter *encoding* and *errors* are added."
msgstr "Додано лише ключове слово *кодування* та *помилки*."

#: ../../library/fileinput.rst:84
msgid ""
"The following functions use the global state created by "
":func:`fileinput.input`; if there is no active state, :exc:`RuntimeError` is"
" raised."
msgstr ""
"Наступні функції використовують глобальний стан, створений "
":func:`fileinput.input`; якщо активного стану немає, виникає "
":exc:`RuntimeError`."

#: ../../library/fileinput.rst:90
msgid ""
"Return the name of the file currently being read.  Before the first line has"
" been read, returns ``None``."
msgstr ""
"Повертає назву файлу, який зараз читається. До того, як буде прочитано "
"перший рядок, повертає ``None``."

#: ../../library/fileinput.rst:96
msgid ""
"Return the integer \"file descriptor\" for the current file. When no file is"
" opened (before the first line and between files), returns ``-1``."
msgstr ""
"Повертає ціле число \"дескриптор файлу\" для поточного файлу. Якщо файл не "
"відкрито (перед першим рядком і між файлами), повертає ``-1``."

#: ../../library/fileinput.rst:102
msgid ""
"Return the cumulative line number of the line that has just been read.  "
"Before the first line has been read, returns ``0``.  After the last line of "
"the last file has been read, returns the line number of that line."
msgstr ""
"Повертає кумулятивний номер рядка, який щойно було прочитано. До прочитання "
"першого рядка повертає ``0``. Після прочитання останнього рядка останнього "
"файлу повертає номер цього рядка."

#: ../../library/fileinput.rst:109
msgid ""
"Return the line number in the current file.  Before the first line has been "
"read, returns ``0``.  After the last line of the last file has been read, "
"returns the line number of that line within the file."
msgstr ""
"Повертає номер рядка в поточному файлі. До прочитання першого рядка повертає"
" ``0``. Після прочитання останнього рядка останнього файлу повертає номер "
"рядка цього рядка у файлі."

#: ../../library/fileinput.rst:116
msgid ""
"Return ``True`` if the line just read is the first line of its file, "
"otherwise return ``False``."
msgstr ""
"Повертає ``True``, якщо щойно прочитаний рядок є першим рядком його файлу, "
"інакше повертає ``False``."

#: ../../library/fileinput.rst:122
msgid ""
"Return ``True`` if the last line was read from ``sys.stdin``, otherwise "
"return ``False``."
msgstr ""
"Повертає ``True``, якщо останній рядок було прочитано з ``sys.stdin``, "
"інакше повертає ``False``."

#: ../../library/fileinput.rst:128
msgid ""
"Close the current file so that the next iteration will read the first line "
"from the next file (if any); lines not read from the file will not count "
"towards the cumulative line count.  The filename is not changed until after "
"the first line of the next file has been read.  Before the first line has "
"been read, this function has no effect; it cannot be used to skip the first "
"file.  After the last line of the last file has been read, this function has"
" no effect."
msgstr ""
"Закрийте поточний файл, щоб наступна ітерація прочитала перший рядок із "
"наступного файлу (якщо такий є); рядки, не прочитані з файлу, не "
"враховуватимуться до загальної кількості рядків. Ім'я файлу не змінюється, "
"доки не буде прочитано перший рядок наступного файлу. До прочитання першого "
"рядка ця функція не діє; його не можна використовувати для пропуску першого "
"файлу. Після прочитання останнього рядка останнього файлу ця функція не діє."

#: ../../library/fileinput.rst:138
msgid "Close the sequence."
msgstr "Закрийте послідовність."

#: ../../library/fileinput.rst:140
msgid ""
"The class which implements the sequence behavior provided by the module is "
"available for subclassing as well:"
msgstr ""
"Клас, який реалізує поведінку послідовності, надану модулем, також доступний"
" для підкласів:"

#: ../../library/fileinput.rst:146
msgid ""
"Class :class:`FileInput` is the implementation; its methods "
":meth:`filename`, :meth:`fileno`, :meth:`lineno`, :meth:`filelineno`, "
":meth:`isfirstline`, :meth:`isstdin`, :meth:`nextfile` and :meth:`close` "
"correspond to the functions of the same name in the module. In addition it "
"is :term:`iterable` and has a :meth:`~io.TextIOBase.readline` method which "
"returns the next input line. The sequence must be accessed in strictly "
"sequential order; random access and :meth:`~io.TextIOBase.readline` cannot "
"be mixed."
msgstr ""

#: ../../library/fileinput.rst:154
msgid ""
"With *mode* you can specify which file mode will be passed to :func:`open`. "
"It must be one of ``'r'`` and ``'rb'``."
msgstr ""

#: ../../library/fileinput.rst:157
msgid ""
"The *openhook*, when given, must be a function that takes two arguments, "
"*filename* and *mode*, and returns an accordingly opened file-like object. "
"You cannot use *inplace* and *openhook* together."
msgstr ""
"*Openhook*, якщо його надано, має бути функцією, яка приймає два аргументи, "
"*filename* і *mode*, і повертає відповідний відкритий файлоподібний об’єкт. "
"Ви не можете використовувати *inplace* і *openhook* разом."

#: ../../library/fileinput.rst:161
msgid ""
"You can specify *encoding* and *errors* that is passed to :func:`open` or "
"*openhook*."
msgstr ""
"Ви можете вказати *кодування* та *помилки*, які передаються в :func:`open` "
"або *openhook*."

#: ../../library/fileinput.rst:163
msgid ""
"A :class:`FileInput` instance can be used as a context manager in the "
":keyword:`with` statement.  In this example, *input* is closed after the "
":keyword:`!with` statement is exited, even if an exception occurs::"
msgstr ""
"Екземпляр :class:`FileInput` можна використовувати як менеджер контексту в "
"операторі :keyword:`with`. У цьому прикладі *input* закривається після "
"завершення оператора :keyword:`!with`, навіть якщо виникає виняткова "
"ситуація::"

#: ../../library/fileinput.rst:167
msgid ""
"with FileInput(files=('spam.txt', 'eggs.txt')) as input:\n"
"    process(input)"
msgstr ""

#: ../../library/fileinput.rst:173
msgid "The keyword parameter *mode* and *openhook* are now keyword-only."
msgstr "Ключові параметри *mode* і *openhook* тепер є лише ключовими словами."

#: ../../library/fileinput.rst:179
msgid ""
"The ``'rU'`` and ``'U'`` modes and the :meth:`!__getitem__` method have been"
" removed."
msgstr ""

#: ../../library/fileinput.rst:184
msgid ""
"**Optional in-place filtering:** if the keyword argument ``inplace=True`` is"
" passed to :func:`fileinput.input` or to the :class:`FileInput` constructor,"
" the file is moved to a backup file and standard output is directed to the "
"input file (if a file of the same name as the backup file already exists, it"
" will be replaced silently).  This makes it possible to write a filter that "
"rewrites its input file in place.  If the *backup* parameter is given "
"(typically as ``backup='.<some extension>'``), it specifies the extension "
"for the backup file, and the backup file remains around; by default, the "
"extension is ``'.bak'`` and it is deleted when the output file is closed.  "
"In-place filtering is disabled when standard input is read."
msgstr ""
"**Додаткова фільтрація на місці:** якщо ключовий аргумент ``inplace=True`` "
"передається до :func:`fileinput.input` або до конструктора "
":class:`FileInput`, файл переміщується до резервної копії файл, а "
"стандартний вивід спрямовується до вхідного файлу (якщо файл із такою ж "
"назвою, як і файл резервної копії, уже існує, його буде замінено мовчки). Це"
" дає змогу написати фільтр, який перезаписує свій вхідний файл на місці. "
"Якщо вказано параметр *backup* (зазвичай як ``backup='. <some extension> "
"''``), він визначає розширення файлу резервної копії, і файл резервної копії"
" залишається; за замовчуванням розширення має ``'.bak'`` і воно видаляється,"
" коли вихідний файл закривається. Фільтрування на місці вимкнено, коли "
"зчитується стандартний ввід."

#: ../../library/fileinput.rst:196
msgid "The two following opening hooks are provided by this module:"
msgstr "Цей модуль забезпечує два наступних відкриваючі гачки:"

#: ../../library/fileinput.rst:200
msgid ""
"Transparently opens files compressed with gzip and bzip2 (recognized by the "
"extensions ``'.gz'`` and ``'.bz2'``) using the :mod:`gzip` and :mod:`bz2` "
"modules.  If the filename extension is not ``'.gz'`` or ``'.bz2'``, the file"
" is opened normally (ie, using :func:`open` without any decompression)."
msgstr ""
"Прозоро відкриває файли, стиснуті за допомогою gzip і bzip2 (розпізнаються "
"за розширеннями ``'.gz''`` і ``'.bz2``) за допомогою модулів :mod:`gzip` і "
":mod:`bz2`. Якщо розширення назви файлу не є ``'.gz''`` або ``'.bz2''``, "
"файл відкривається нормально (тобто за допомогою :func:`open` без будь-якої "
"декомпресії)."

#: ../../library/fileinput.rst:205
msgid ""
"The *encoding* and *errors* values are passed to :class:`io.TextIOWrapper` "
"for compressed files and open for normal files."
msgstr ""
"Значення *encoding* і *errors* передаються в :class:`io.TextIOWrapper` для "
"стиснутих файлів і відкриваються для звичайних файлів."

#: ../../library/fileinput.rst:208
msgid ""
"Usage example:  ``fi = "
"fileinput.FileInput(openhook=fileinput.hook_compressed, "
"encoding=\"utf-8\")``"
msgstr ""
"Приклад використання: ``fi = "
"fileinput.FileInput(openhook=fileinput.hook_compressed, "
"encoding=\"utf-8\")``"

#: ../../library/fileinput.rst:216
msgid ""
"Returns a hook which opens each file with :func:`open`, using the given "
"*encoding* and *errors* to read the file."
msgstr ""
"Повертає хук, який відкриває кожен файл за допомогою :func:`open`, "
"використовуючи задане *кодування* та *помилки* для читання файлу."

#: ../../library/fileinput.rst:219
msgid ""
"Usage example: ``fi = "
"fileinput.FileInput(openhook=fileinput.hook_encoded(\"utf-8\", "
"\"surrogateescape\"))``"
msgstr ""
"Приклад використання: ``fi = "
"fileinput.FileInput(openhook=fileinput.hook_encoded(\"utf-8\", "
"\"surrogateescape\"))``"

#: ../../library/fileinput.rst:223
msgid "Added the optional *errors* parameter."
msgstr "Додано необов’язковий параметр *errors*."

#: ../../library/fileinput.rst:226
msgid ""
"This function is deprecated since :func:`fileinput.input` and "
":class:`FileInput` now have *encoding* and *errors* parameters."
msgstr ""
"Ця функція застаріла, оскільки :func:`fileinput.input` і :class:`FileInput` "
"тепер мають параметри *encoding* і *errors*."
