# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-22 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:05+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/email.generator.rst:2
msgid ":mod:`!email.generator`: Generating MIME documents"
msgstr ""

#: ../../library/email.generator.rst:7
msgid "**Source code:** :source:`Lib/email/generator.py`"
msgstr "**Вихідний код:** :source:`Lib/email/generator.py`"

#: ../../library/email.generator.rst:11
msgid ""
"One of the most common tasks is to generate the flat (serialized) version of"
" the email message represented by a message object structure.  You will need"
" to do this if you want to send your message via "
":meth:`smtplib.SMTP.sendmail`, or print the message on the console.  Taking "
"a message object structure and producing a serialized representation is the "
"job of the generator classes."
msgstr ""

#: ../../library/email.generator.rst:18
msgid ""
"As with the :mod:`email.parser` module, you aren't limited to the "
"functionality of the bundled generator; you could write one from scratch "
"yourself.  However the bundled generator knows how to generate most email in"
" a standards-compliant way, should handle MIME and non-MIME email messages "
"just fine, and is designed so that the bytes-oriented parsing and generation"
" operations are inverses, assuming the same non-transforming "
":mod:`~email.policy` is used for both.  That is, parsing the serialized byte"
" stream via the :class:`~email.parser.BytesParser` class and then "
"regenerating the serialized byte stream using :class:`BytesGenerator` should"
" produce output identical to the input [#]_.  (On the other hand, using the "
"generator on an :class:`~email.message.EmailMessage` constructed by program "
"may result in changes to the :class:`~email.message.EmailMessage` object as "
"defaults are filled in.)"
msgstr ""
"Як і у випадку з модулем :mod:`email.parser`, ви не обмежені "
"функціональністю вбудованого генератора; ви можете написати його з нуля "
"самостійно. Однак укомплектований генератор знає, як генерувати більшість "
"електронних листів відповідно до стандартів, має добре обробляти "
"повідомлення електронної пошти MIME та не MIME та розроблено таким чином, "
"щоб операції синтаксичного аналізу та генерування, орієнтовані на байти, "
"були зворотними, припускаючи однакові не-MIME transforming "
":mod:`~email.policy` використовується для обох. Тобто розбір серіалізованого"
" потоку байтів за допомогою класу :class:`~email.parser.BytesParser`, а "
"потім регенерація серіалізованого потоку байтів за допомогою "
":class:`BytesGenerator` має давати вихідні дані, ідентичні вхідним [#]_. (З "
"іншого боку, використання генератора для "
":class:`~email.message.EmailMessage`, створеного програмою, може призвести "
"до змін в об’єкті :class:`~email.message.EmailMessage`, оскільки стандартні "
"значення заповнені.)"

#: ../../library/email.generator.rst:32
msgid ""
"The :class:`Generator` class can be used to flatten a message into a text "
"(as opposed to binary) serialized representation, but since Unicode cannot "
"represent binary data directly, the message is of necessity transformed into"
" something that contains only ASCII characters, using the standard email RFC"
" Content Transfer Encoding techniques for encoding email messages for "
"transport over channels that are not \"8 bit clean\"."
msgstr ""
"Клас :class:`Generator` можна використовувати для зведення повідомлення в "
"текстове (на відміну від двійкового) серіалізоване представлення, але "
"оскільки Юнікод не може представляти двійкові дані напряму, повідомлення "
"обов’язково перетворюється на щось, що містить лише символи ASCII, "
"використання стандартних методів кодування електронної пошти RFC Content "
"Transfer для кодування повідомлень електронної пошти для передачі через "
"канали, які не є \"8-бітними чистими\"."

#: ../../library/email.generator.rst:39
msgid ""
"To accommodate reproducible processing of SMIME-signed messages "
":class:`Generator` disables header folding for message parts of type "
"``multipart/signed`` and all subparts."
msgstr ""
"Для забезпечення відтворюваної обробки повідомлень, підписаних SMIME, "
":class:`Generator` вимикає згортання заголовків для частин повідомлення типу"
" ``multipart/signed`` та всіх підчастин."

#: ../../library/email.generator.rst:47
msgid ""
"Return a :class:`BytesGenerator` object that will write any message provided"
" to the :meth:`flatten` method, or any surrogateescape encoded text provided"
" to the :meth:`write` method, to the :term:`file-like object` *outfp*. "
"*outfp* must support a ``write`` method that accepts binary data."
msgstr ""
"Повертає об’єкт :class:`BytesGenerator`, який записуватиме будь-яке "
"повідомлення, надане методу :meth:`flatten`, або будь-який текст у кодуванні"
" surrogateescape, наданий методу :meth:`write`, у :term:`file-like object` "
"*outfp*. *outfp* повинен підтримувати метод ``write``, який приймає двійкові"
" дані."

#: ../../library/email.generator.rst:52 ../../library/email.generator.rst:153
msgid ""
"If optional *mangle_from_* is ``True``, put a ``>`` character in front of "
"any line in the body that starts with the exact string ``\"From \"``, that "
"is ``From`` followed by a space at the beginning of a line.  *mangle_from_* "
"defaults to the value of the :attr:`~email.policy.Policy.mangle_from_` "
"setting of the *policy* (which is ``True`` for the "
":data:`~email.policy.compat32` policy and ``False`` for all others). "
"*mangle_from_* is intended for use when messages are stored in Unix mbox "
"format (see :mod:`mailbox` and `WHY THE CONTENT-LENGTH FORMAT IS BAD "
"<https://www.jwz.org/doc/content-length.html>`_)."
msgstr ""

#: ../../library/email.generator.rst:62 ../../library/email.generator.rst:163
msgid ""
"If *maxheaderlen* is not ``None``, refold any header lines that are longer "
"than *maxheaderlen*, or if ``0``, do not rewrap any headers.  If "
"*manheaderlen* is ``None`` (the default), wrap headers and other message "
"lines according to the *policy* settings."
msgstr ""
"Якщо *maxheaderlen* не є ``None``, перепакуйте будь-які рядки заголовків, "
"які довші за *maxheaderlen*, або якщо ``0``, не перегортайте жодних "
"заголовків. Якщо *manheaderlen* має значення ``None`` (за замовчуванням), "
"оберніть заголовки та інші рядки повідомлень відповідно до налаштувань "
"*policy*."

#: ../../library/email.generator.rst:67 ../../library/email.generator.rst:168
msgid ""
"If *policy* is specified, use that policy to control message generation.  If"
" *policy* is ``None`` (the default), use the policy associated with the "
":class:`~email.message.Message` or :class:`~email.message.EmailMessage` "
"object passed to ``flatten`` to control the message generation.  See "
":mod:`email.policy` for details on what *policy* controls."
msgstr ""
"Якщо вказано *політику*, використовуйте цю політику для керування створенням"
" повідомлень. Якщо *policy* має значення ``None`` (за замовчуванням), "
"використовуйте політику, пов’язану з об’єктом "
":class:`~email.message.Message` або :class:`~email.message.EmailMessage`, "
"переданим у ``flatten`` для керування генерацією повідомлень. Перегляньте "
":mod:`email.policy`, щоб дізнатися більше про те, що контролює *policy*."

#: ../../library/email.generator.rst:75 ../../library/email.generator.rst:174
msgid "Added the *policy* keyword."
msgstr "Додано ключове слово *політика*."

#: ../../library/email.generator.rst:77 ../../library/email.generator.rst:176
msgid ""
"The default behavior of the *mangle_from_* and *maxheaderlen* parameters is "
"to follow the policy."
msgstr ""
"Поведінка за замовчуванням параметрів *mangle_from_* і *maxheaderlen* "
"полягає в дотриманні політики."

#: ../../library/email.generator.rst:83
msgid ""
"Print the textual representation of the message object structure rooted at "
"*msg* to the output file specified when the :class:`BytesGenerator` instance"
" was created."
msgstr ""
"Надрукуйте текстове представлення структури об’єкта повідомлення з коренем "
"*msg* у вихідний файл, указаний під час створення екземпляра "
":class:`BytesGenerator`."

#: ../../library/email.generator.rst:87
msgid ""
"If the :mod:`~email.policy` option :attr:`~email.policy.Policy.cte_type` is "
"``8bit`` (the default), copy any headers in the original parsed message that"
" have not been modified to the output with any bytes with the high bit set "
"reproduced as in the original, and preserve the non-ASCII "
":mailheader:`Content-Transfer-Encoding` of any body parts that have them. If"
" ``cte_type`` is ``7bit``, convert the bytes with the high bit set as needed"
" using an ASCII-compatible :mailheader:`Content-Transfer-Encoding`. That is,"
" transform parts with non-ASCII :mailheader:`Content-Transfer-Encoding` "
"(:mailheader:`Content-Transfer-Encoding: 8bit`) to an ASCII compatible "
":mailheader:`Content-Transfer-Encoding`, and encode RFC-invalid non-ASCII "
"bytes in headers using the MIME ``unknown-8bit`` character set, thus "
"rendering them RFC-compliant."
msgstr ""
"Якщо параметр :mod:`~email.policy` :attr:`~email.policy.Policy.cte_type` має"
" значення ``8bit`` (за замовчуванням), скопіюйте будь-які заголовки в "
"оригінальному проаналізованому повідомленні, які не були змінені на вихідні "
"дані з будь-якими байтами зі встановленим старшим бітом, відтвореним як в "
"оригіналі, і зберігають не-ASCII :mailheader:`Content-Transfer-Encoding` "
"будь-яких частин тіла, які їх мають. Якщо ``cte_type`` дорівнює ``7bit``, "
"конвертуйте байти з установленим старшим бітом за потреби за допомогою "
"ASCII-сумісного :mailheader:`Content-Transfer-Encoding`. Тобто перетворіть "
"частини з не-ASCII :mailheader:`Content-Transfer-Encoding` "
"(:mailheader:`Content-Transfer-Encoding: 8bit`) на ASCII-сумісне "
":mailheader:`Content-Transfer-Encoding` і закодуйте RFC-недійсні байти не-"
"ASCII у заголовках із використанням набору символів MIME ``unknown-8bit``, "
"що робить їх сумісними з RFC."

#: ../../library/email.generator.rst:104 ../../library/email.generator.rst:197
msgid ""
"If *unixfrom* is ``True``, print the envelope header delimiter used by the "
"Unix mailbox format (see :mod:`mailbox`) before the first of the :rfc:`5322`"
" headers of the root message object.  If the root object has no envelope "
"header, craft a standard one.  The default is ``False``. Note that for "
"subparts, no envelope header is ever printed."
msgstr ""
"Якщо *unixfrom* має значення ``True``, надрукуйте роздільник заголовка "
"конверта, який використовується форматом поштової скриньки Unix (див. "
":mod:`mailbox`) перед першим із заголовків :rfc:`5322` кореневого об’єкта "
"повідомлення. Якщо кореневий об’єкт не має заголовка конверта, створіть "
"стандартний. Типовим значенням є ``False``. Зауважте, що для підчастин "
"заголовок конверта ніколи не друкується."

#: ../../library/email.generator.rst:110 ../../library/email.generator.rst:203
msgid ""
"If *linesep* is not ``None``, use it as the separator character between all "
"the lines of the flattened message.  If *linesep* is ``None`` (the default),"
" use the value specified in the *policy*."
msgstr ""
"Якщо *linesep* не є ``None``, використовуйте його як символ роздільника між "
"усіма рядками зведеного повідомлення. Якщо *linesep* має значення ``None`` "
"(за замовчуванням), використовуйте значення, указане в *policy*."

#: ../../library/email.generator.rst:119
msgid ""
"Return an independent clone of this :class:`BytesGenerator` instance with "
"the exact same option settings, and *fp* as the new *outfp*."
msgstr ""
"Повернути незалежний клон цього екземпляра :class:`BytesGenerator` з такими "
"самими налаштуваннями параметрів і *fp* як новий *outfp*."

#: ../../library/email.generator.rst:125
msgid ""
"Encode *s* using the ``ASCII`` codec and the ``surrogateescape`` error "
"handler, and pass it to the *write* method of the *outfp* passed to the "
":class:`BytesGenerator`'s constructor."
msgstr ""
"Закодуйте *s* за допомогою кодека ``ASCII`` і обробника помилок "
"``surrogateescape`` і передайте його в метод *write* *outfp*, переданого "
"конструктору :class:`BytesGenerator`."

#: ../../library/email.generator.rst:130
msgid ""
"As a convenience, :class:`~email.message.EmailMessage` provides the methods "
":meth:`~email.message.EmailMessage.as_bytes` and ``bytes(aMessage)`` (a.k.a."
" :meth:`~email.message.EmailMessage.__bytes__`), which simplify the "
"generation of a serialized binary representation of a message object.  For "
"more detail, see :mod:`email.message`."
msgstr ""
"Для зручності :class:`~email.message.EmailMessage` надає методи "
":meth:`~email.message.EmailMessage.as_bytes` і ``bytes(aMessage)`` (він же "
":meth:`~email.message .EmailMessage.__bytes__`), які спрощують створення "
"серіалізованого двійкового представлення об’єкта повідомлення. Щоб отримати "
"докладнішу інформацію, перегляньте :mod:`email.message`."

#: ../../library/email.generator.rst:137
msgid ""
"Because strings cannot represent binary data, the :class:`Generator` class "
"must convert any binary data in any message it flattens to an ASCII "
"compatible format, by converting them to an ASCII compatible "
":mailheader:`Content-Transfer_Encoding`.  Using the terminology of the email"
" RFCs, you can think of this as :class:`Generator` serializing to an I/O "
"stream that is not \"8 bit clean\".  In other words, most applications will "
"want to be using :class:`BytesGenerator`, and not :class:`Generator`."
msgstr ""
"Оскільки рядки не можуть представляти двійкові дані, клас :class:`Generator`"
" повинен перетворювати будь-які двійкові дані в будь-якому повідомленні, яке"
" він об’єднує, у ASCII-сумісний формат, перетворюючи їх у ASCII-сумісний "
":mailheader:`Content-Transfer_Encoding`. Використовуючи термінологію RFC "
"електронної пошти, ви можете думати про це як про :class:`Generator`, що "
"серіалізується на потік вводу/виводу, який не є \"8-бітним чистим\". Іншими "
"словами, більшість програм захочуть використовувати :class:`BytesGenerator`,"
" а не :class:`Generator`."

#: ../../library/email.generator.rst:148
msgid ""
"Return a :class:`Generator` object that will write any message provided to "
"the :meth:`flatten` method, or any text provided to the :meth:`write` "
"method, to the :term:`file-like object` *outfp*.  *outfp* must support a "
"``write`` method that accepts string data."
msgstr ""
"Повертає об’єкт :class:`Generator`, який записуватиме будь-яке повідомлення,"
" надане методу :meth:`flatten`, або будь-який текст, наданий методу "
":meth:`write`, у :term:`file-like object` *outfp*. *outfp* повинен "
"підтримувати метод ``write``, який приймає рядкові дані."

#: ../../library/email.generator.rst:182
msgid ""
"Print the textual representation of the message object structure rooted at "
"*msg* to the output file specified when the :class:`Generator` instance was "
"created."
msgstr ""
"Надрукуйте текстове представлення структури об’єкта повідомлення з коренем "
"*msg* у вихідний файл, указаний під час створення екземпляра "
":class:`Generator`."

#: ../../library/email.generator.rst:186
msgid ""
"If the :mod:`~email.policy` option :attr:`~email.policy.Policy.cte_type` is "
"``8bit``, generate the message as if the option were set to ``7bit``. (This "
"is required because strings cannot represent non-ASCII bytes.) Convert any "
"bytes with the high bit set as needed using an ASCII-compatible "
":mailheader:`Content-Transfer-Encoding`.  That is, transform parts with non-"
"ASCII :mailheader:`Content-Transfer-Encoding` (:mailheader:`Content-"
"Transfer-Encoding: 8bit`) to an ASCII compatible :mailheader:`Content-"
"Transfer-Encoding`, and encode RFC-invalid non-ASCII bytes in headers using "
"the MIME ``unknown-8bit`` character set, thus rendering them RFC-compliant."
msgstr ""
"Якщо параметр :mod:`~email.policy` :attr:`~email.policy.Policy.cte_type` має"
" значення ``8bit``, згенеруйте повідомлення так, ніби для параметра "
"встановлено значення ``7bit``. (Це потрібно, оскільки рядки не можуть "
"представляти байти, відмінні від ASCII.) Перетворюйте будь-які байти зі "
"старшим бітом, якщо потрібно, за допомогою ASCII-сумісного "
":mailheader:`Content-Transfer-Encoding`. Тобто перетворіть частини з не-"
"ASCII :mailheader:`Content-Transfer-Encoding` (:mailheader:`Content-"
"Transfer-Encoding: 8bit`) на ASCII-сумісне :mailheader:`Content-Transfer-"
"Encoding` і закодуйте RFC-недійсні байти не-ASCII у заголовках із "
"використанням набору символів MIME ``unknown-8bit``, що робить їх сумісними "
"з RFC."

#: ../../library/email.generator.rst:209
msgid ""
"Added support for re-encoding ``8bit`` message bodies, and the *linesep* "
"argument."
msgstr ""
"Додано підтримку перекодування тіл повідомлень ``8bit`` і аргументу "
"*linesep*."

#: ../../library/email.generator.rst:216
msgid ""
"Return an independent clone of this :class:`Generator` instance with the "
"exact same options, and *fp* as the new *outfp*."
msgstr ""
"Повернути незалежний клон цього екземпляра :class:`Generator` з такими "
"самими параметрами та *fp*, що й новий *outfp*."

#: ../../library/email.generator.rst:222
msgid ""
"Write *s* to the *write* method of the *outfp* passed to the "
":class:`Generator`'s constructor.  This provides just enough file-like API "
"for :class:`Generator` instances to be used in the :func:`print` function."
msgstr ""
"Запишіть *s* у метод *write* *outfp*, переданого конструктору "
":class:`Generator`. Це забезпечує достатньо файлоподібного API для "
"екземплярів :class:`Generator` для використання у функції :func:`print`."

#: ../../library/email.generator.rst:228
msgid ""
"As a convenience, :class:`~email.message.EmailMessage` provides the methods "
":meth:`~email.message.EmailMessage.as_string` and ``str(aMessage)`` (a.k.a. "
":meth:`~email.message.EmailMessage.__str__`), which simplify the generation "
"of a formatted string representation of a message object.  For more detail, "
"see :mod:`email.message`."
msgstr ""
"Для зручності :class:`~email.message.EmailMessage` надає методи "
":meth:`~email.message.EmailMessage.as_string` і ``str(aMessage)`` (він же "
":meth:`~email.message .EmailMessage.__str__`), які спрощують створення "
"відформатованого рядкового представлення об’єкта повідомлення. Щоб отримати "
"докладнішу інформацію, перегляньте :mod:`email.message`."

#: ../../library/email.generator.rst:235
msgid ""
"The :mod:`email.generator` module also provides a derived class, "
":class:`DecodedGenerator`, which is like the :class:`Generator` base class, "
"except that non-\\ :mimetype:`text` parts are not serialized, but are "
"instead represented in the output stream by a string derived from a template"
" filled in with information about the part."
msgstr ""
"Модуль :mod:`email.generator` також надає похідний клас, "
":class:`DecodedGenerator`, який схожий на базовий клас :class:`Generator`, "
"за винятком того, що не\\ :mimetype:`text` частини не є серіалізовані, але "
"натомість представлені у вихідному потоці рядком, отриманим із шаблону, "
"заповненого інформацією про частину."

#: ../../library/email.generator.rst:244
msgid ""
"Act like :class:`Generator`, except that for any subpart of the message "
"passed to :meth:`Generator.flatten`, if the subpart is of main type "
":mimetype:`text`, print the decoded payload of the subpart, and if the main "
"type is not :mimetype:`text`, instead of printing it fill in the string "
"*fmt* using information from the part and print the resulting filled-in "
"string."
msgstr ""
"Дійте як :class:`Generator`, за винятком того, що для будь-якої підчастини "
"повідомлення, переданої до :meth:`Generator.flatten`, якщо підчастина має "
"основний тип :mimetype:`text`, друкується декодована корисна інформація "
"підчастини, і якщо основний тип не є :mimetype:`text`, замість друку "
"заповніть рядок *fmt*, використовуючи інформацію з частини, і надрукуйте "
"отриманий заповнений рядок."

#: ../../library/email.generator.rst:251
msgid ""
"To fill in *fmt*, execute ``fmt % part_info``, where ``part_info`` is a "
"dictionary composed of the following keys and values:"
msgstr ""
"Щоб заповнити *fmt*, виконайте ``fmt % part_info``, де ``part_info`` є "
"словником, що складається з таких ключів і значень:"

#: ../../library/email.generator.rst:254
msgid "``type`` -- Full MIME type of the non-\\ :mimetype:`text` part"
msgstr "``type`` -- повний тип MIME не\\ :mimetype:`text` частини"

#: ../../library/email.generator.rst:256
msgid "``maintype`` -- Main MIME type of the non-\\ :mimetype:`text` part"
msgstr "``maintype`` -- основний тип MIME не\\ :mimetype:`text` частини"

#: ../../library/email.generator.rst:258
msgid "``subtype`` -- Sub-MIME type of the non-\\ :mimetype:`text` part"
msgstr "``subtype`` -- Sub-MIME-тип не\\ :mimetype:`text` частини"

#: ../../library/email.generator.rst:260
msgid "``filename`` -- Filename of the non-\\ :mimetype:`text` part"
msgstr "``filename`` -- ім'я файлу не\\ :mimetype:`text` частини"

#: ../../library/email.generator.rst:262
msgid ""
"``description`` -- Description associated with the non-\\ :mimetype:`text` "
"part"
msgstr "``description`` -- Опис, пов’язаний з не\\ :mimetype:`text` частиною"

#: ../../library/email.generator.rst:264
msgid ""
"``encoding`` -- Content transfer encoding of the non-\\ :mimetype:`text` "
"part"
msgstr "``encoding`` -- кодування передачі вмісту не\\ :mimetype:`text` частини"

#: ../../library/email.generator.rst:266
msgid "If *fmt* is ``None``, use the following default *fmt*:"
msgstr ""
"Якщо *fmt* має значення ``None``, використовуйте такий *fmt* за "
"замовчуванням:"

#: ../../library/email.generator.rst:268
msgid "\"[Non-text (%(type)s) part of message omitted, filename %(filename)s]\""
msgstr ""
"\"[Нетекстова (%(type)s) частина повідомлення пропущена, ім'я файлу "
"%(filename)s]\""

#: ../../library/email.generator.rst:270
msgid ""
"Optional *_mangle_from_* and *maxheaderlen* are as with the "
":class:`Generator` base class."
msgstr ""
"Необов’язкові *_mangle_from_* і *maxheaderlen* такі ж, як у базового класу "
":class:`Generator`."

#: ../../library/email.generator.rst:275
msgid "Footnotes"
msgstr "Виноски"

#: ../../library/email.generator.rst:276
msgid ""
"This statement assumes that you use the appropriate setting for "
"``unixfrom``, and that there are no :mod:`email.policy` settings calling for"
" automatic adjustments (for example, "
":attr:`~email.policy.EmailPolicy.refold_source` must be ``none``, which is "
"*not* the default).  It is also not 100% true, since if the message does not"
" conform to the RFC standards occasionally information about the exact "
"original text is lost during parsing error recovery.  It is a goal to fix "
"these latter edge cases when possible."
msgstr ""
