# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-19 01:00+0000\n"
"PO-Revision-Date: 2021-06-28 01:05+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2023\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/exceptions.rst:4
msgid "Built-in Exceptions"
msgstr "Вбудовані винятки"

#: ../../library/exceptions.rst:10
msgid ""
"In Python, all exceptions must be instances of a class that derives from "
":class:`BaseException`.  In a :keyword:`try` statement with an "
":keyword:`except` clause that mentions a particular class, that clause also "
"handles any exception classes derived from that class (but not exception "
"classes from which *it* is derived).  Two exception classes that are not "
"related via subclassing are never equivalent, even if they have the same "
"name."
msgstr ""
"У Python усі винятки мають бути екземплярами класу, який походить від "
":class:`BaseException`. У операторі :keyword:`try` із пунктом "
":keyword:`except`, який згадує певний клас, цей пункт також обробляє будь-"
"які класи винятків, похідних від цього класу (але не класи винятків, з яких "
"*it* походить). Два класи винятків, які не пов’язані через підкласи, ніколи "
"не є еквівалентними, навіть якщо вони мають однакові назви."

#: ../../library/exceptions.rst:19
msgid ""
"The built-in exceptions listed in this chapter can be generated by the "
"interpreter or built-in functions.  Except where mentioned, they have an "
"\"associated value\" indicating the detailed cause of the error.  This may "
"be a string or a tuple of several items of information (e.g., an error code "
"and a string explaining the code).  The associated value is usually passed "
"as arguments to the exception class's constructor."
msgstr ""

#: ../../library/exceptions.rst:26
msgid ""
"User code can raise built-in exceptions.  This can be used to test an "
"exception handler or to report an error condition \"just like\" the "
"situation in which the interpreter raises the same exception; but beware "
"that there is nothing to prevent user code from raising an inappropriate "
"error."
msgstr ""
"Код користувача може викликати вбудовані винятки. Це можна використовувати "
"для перевірки обробника винятків або для повідомлення про стан помилки "
"\"подібно до\" ситуації, в якій інтерпретатор викликає той самий виняток; "
"але майте на увазі, що ніщо не завадить коду користувача викликати недоречну"
" помилку."

#: ../../library/exceptions.rst:31
msgid ""
"The built-in exception classes can be subclassed to define new exceptions; "
"programmers are encouraged to derive new exceptions from the "
":exc:`Exception` class or one of its subclasses, and not from "
":exc:`BaseException`.  More information on defining exceptions is available "
"in the Python Tutorial under :ref:`tut-userexceptions`."
msgstr ""
"Вбудовані класи винятків можуть бути підкласами для визначення нових "
"винятків; Програмістам рекомендується отримувати нові винятки з класу "
":exc:`Exception` або одного з його підкласів, а не з :exc:`BaseException`. "
"Більше інформації про визначення винятків доступно в підручнику з Python у "
"розділі :ref:`tut-userexceptions`."

#: ../../library/exceptions.rst:39
msgid "Exception context"
msgstr "Контекст винятків"

#: ../../library/exceptions.rst:46
msgid ""
"Three attributes on exception objects provide information about the context "
"in which the exception was raised:"
msgstr ""

#: ../../library/exceptions.rst:53
msgid ""
"When raising a new exception while another exception is already being "
"handled, the new exception's :attr:`!__context__` attribute is automatically"
" set to the handled exception.  An exception may be handled when an "
":keyword:`except` or :keyword:`finally` clause, or a :keyword:`with` "
"statement, is used."
msgstr ""

#: ../../library/exceptions.rst:59
msgid ""
"This implicit exception context can be supplemented with an explicit cause "
"by using :keyword:`!from` with :keyword:`raise`::"
msgstr ""
"Цей контекст неявної виняткової ситуації можна доповнити явною причиною за "
"допомогою :keyword:`!from` з :keyword:`raise`::"

#: ../../library/exceptions.rst:63
msgid "raise new_exc from original_exc"
msgstr ""

#: ../../library/exceptions.rst:65
msgid ""
"The expression following :keyword:`from<raise>` must be an exception or "
"``None``. It will be set as :attr:`!__cause__` on the raised exception. "
"Setting :attr:`!__cause__` also implicitly sets the "
":attr:`!__suppress_context__` attribute to ``True``, so that using ``raise "
"new_exc from None`` effectively replaces the old exception with the new one "
"for display purposes (e.g. converting :exc:`KeyError` to "
":exc:`AttributeError`), while leaving the old exception available in "
":attr:`!__context__` for introspection when debugging."
msgstr ""

#: ../../library/exceptions.rst:74
msgid ""
"The default traceback display code shows these chained exceptions in "
"addition to the traceback for the exception itself. An explicitly chained "
"exception in :attr:`!__cause__` is always shown when present. An implicitly "
"chained exception in :attr:`!__context__` is shown only if "
":attr:`!__cause__` is :const:`None` and :attr:`!__suppress_context__` is "
"false."
msgstr ""

#: ../../library/exceptions.rst:80
msgid ""
"In either case, the exception itself is always shown after any chained "
"exceptions so that the final line of the traceback always shows the last "
"exception that was raised."
msgstr ""
"У будь-якому випадку сам виняток завжди відображається після будь-яких "
"ланцюжкових винятків, так що останній рядок трасування завжди показує "
"останній виняток, який був викликаний."

#: ../../library/exceptions.rst:86
msgid "Inheriting from built-in exceptions"
msgstr "Успадкування від вбудованих винятків"

#: ../../library/exceptions.rst:88
msgid ""
"User code can create subclasses that inherit from an exception type. It's "
"recommended to only subclass one exception type at a time to avoid any "
"possible conflicts between how the bases handle the ``args`` attribute, as "
"well as due to possible memory layout incompatibilities."
msgstr ""
"Код користувача може створювати підкласи, які успадковуються від типу "
"винятку. Рекомендується створювати підкласи лише для одного типу винятків за"
" раз, щоб уникнути будь-яких можливих конфліктів між тим, як основи "
"обробляють атрибут ``args``, а також через можливу несумісність розташування"
" пам’яті."

#: ../../library/exceptions.rst:95
msgid ""
"Most built-in exceptions are implemented in C for efficiency, see: "
":source:`Objects/exceptions.c`.  Some have custom memory layouts which makes"
" it impossible to create a subclass that inherits from multiple exception "
"types. The memory layout of a type is an implementation detail and might "
"change between Python versions, leading to new conflicts in the future.  "
"Therefore, it's recommended to avoid subclassing multiple exception types "
"altogether."
msgstr ""
"Більшість вбудованих винятків реалізовано в C для ефективності, див.: "
":source:`Objects/exceptions.c`. Деякі мають власне розташування пам’яті, що "
"унеможливлює створення підкласу, який успадковує кілька типів винятків. "
"Розташування пам’яті типу є деталлю реалізації та може змінюватися між "
"версіями Python, що призведе до нових конфліктів у майбутньому. Тому "
"рекомендується взагалі уникати створення підкласів кількох типів винятків."

#: ../../library/exceptions.rst:105
msgid "Base classes"
msgstr "Базові класи"

#: ../../library/exceptions.rst:107
msgid ""
"The following exceptions are used mostly as base classes for other "
"exceptions."
msgstr ""
"Наступні винятки використовуються переважно як базові класи для інших "
"винятків."

#: ../../library/exceptions.rst:111
msgid ""
"The base class for all built-in exceptions.  It is not meant to be directly "
"inherited by user-defined classes (for that, use :exc:`Exception`).  If "
":func:`str` is called on an instance of this class, the representation of "
"the argument(s) to the instance are returned, or the empty string when there"
" were no arguments."
msgstr ""
"Базовий клас для всіх вбудованих винятків. Він не призначений для "
"безпосереднього успадкування класами, визначеними користувачем (для цього "
"використовуйте :exc:`Exception`). Якщо :func:`str` викликається для "
"екземпляра цього класу, повертається представлення аргументів для екземпляра"
" або порожній рядок, якщо аргументів не було."

#: ../../library/exceptions.rst:119
msgid ""
"The tuple of arguments given to the exception constructor.  Some built-in "
"exceptions (like :exc:`OSError`) expect a certain number of arguments and "
"assign a special meaning to the elements of this tuple, while others are "
"usually called only with a single string giving an error message."
msgstr ""
"Кортеж аргументів, наданий конструктору винятків. Деякі вбудовані винятки "
"(як-от :exc:`OSError`) очікують певної кількості аргументів і призначають "
"особливе значення елементам цього кортежу, тоді як інші зазвичай "
"викликаються лише з одним рядком, що дає повідомлення про помилку."

#: ../../library/exceptions.rst:126
msgid ""
"This method sets *tb* as the new traceback for the exception and returns the"
" exception object.  It was more commonly used before the exception chaining "
"features of :pep:`3134` became available.  The following example shows how "
"we can convert an instance of ``SomeException`` into an instance of "
"``OtherException`` while preserving the traceback.  Once raised, the current"
" frame is pushed onto the traceback of the ``OtherException``, as would have"
" happened to the traceback of the original ``SomeException`` had we allowed "
"it to propagate to the caller. ::"
msgstr ""
"Цей метод встановлює *tb* як нову трасування для винятку та повертає об’єкт "
"винятку. Його частіше використовували до того, як стали доступними функції "
"ланцюжка винятків :pep:`3134`. У наступному прикладі показано, як ми можемо "
"перетворити екземпляр ``SomeException`` на екземпляр ``OtherException``, "
"зберігаючи зворотне трасування. Після підняття поточний фрейм надсилається "
"на трасування ``OtherException``, як це сталося б із трасуванням "
"оригінального ``SomeException``, якби ми дозволили йому поширюватися на "
"виклик. ::"

#: ../../library/exceptions.rst:135
msgid ""
"try:\n"
"    ...\n"
"except SomeException:\n"
"    tb = sys.exception().__traceback__\n"
"    raise OtherException(...).with_traceback(tb)"
msgstr ""

#: ../../library/exceptions.rst:143
msgid ""
"A writable field that holds the :ref:`traceback object <traceback-objects>` "
"associated with this exception. See also: :ref:`raise`."
msgstr ""

#: ../../library/exceptions.rst:149
msgid ""
"Add the string ``note`` to the exception's notes which appear in the "
"standard traceback after the exception string. A :exc:`TypeError` is raised "
"if ``note`` is not a string."
msgstr ""

#: ../../library/exceptions.rst:157
msgid ""
"A list of the notes of this exception, which were added with "
":meth:`add_note`. This attribute is created when :meth:`add_note` is called."
msgstr ""

#: ../../library/exceptions.rst:165
msgid ""
"All built-in, non-system-exiting exceptions are derived from this class.  "
"All user-defined exceptions should also be derived from this class."
msgstr ""
"Усі вбудовані винятки, що не виходять із системи, походять від цього класу. "
"Усі визначені користувачем винятки також мають бути похідними від цього "
"класу."

#: ../../library/exceptions.rst:171
msgid ""
"The base class for those built-in exceptions that are raised for various "
"arithmetic errors: :exc:`OverflowError`, :exc:`ZeroDivisionError`, "
":exc:`FloatingPointError`."
msgstr ""
"Базовий клас для тих вбудованих винятків, які викликаються для різних "
"арифметичних помилок: :exc:`OverflowError`, :exc:`ZeroDivisionError`, "
":exc:`FloatingPointError`."

#: ../../library/exceptions.rst:178
msgid ""
"Raised when a :ref:`buffer <bufferobjects>` related operation cannot be "
"performed."
msgstr ""
"Викликається, коли пов’язану операцію :ref:`buffer <bufferobjects>` не можна"
" виконати."

#: ../../library/exceptions.rst:184
msgid ""
"The base class for the exceptions that are raised when a key or index used "
"on a mapping or sequence is invalid: :exc:`IndexError`, :exc:`KeyError`.  "
"This can be raised directly by :func:`codecs.lookup`."
msgstr ""
"Базовий клас для винятків, які виникають, коли ключ або індекс, використаний"
" у відображенні чи послідовності, недійсний: :exc:`IndexError`, "
":exc:`KeyError`. Це можна викликати безпосередньо за допомогою "
":func:`codecs.lookup`."

#: ../../library/exceptions.rst:190
msgid "Concrete exceptions"
msgstr "Конкретні винятки"

#: ../../library/exceptions.rst:192
msgid "The following exceptions are the exceptions that are usually raised."
msgstr "Наступні винятки є винятками, які зазвичай виникають."

#: ../../library/exceptions.rst:198
msgid "Raised when an :keyword:`assert` statement fails."
msgstr "Викликається, коли оператор :keyword:`assert` не виконується."

#: ../../library/exceptions.rst:203
msgid ""
"Raised when an attribute reference (see :ref:`attribute-references`) or "
"assignment fails.  (When an object does not support attribute references or "
"attribute assignments at all, :exc:`TypeError` is raised.)"
msgstr ""
"Викликається, коли посилання на атрибут (див. :ref:`attribute-references`) "
"або призначення не вдається. (Якщо об’єкт взагалі не підтримує посилання на "
"атрибути чи призначення атрибутів, виникає :exc:`TypeError`.)"

#: ../../library/exceptions.rst:207
msgid ""
"The :attr:`name` and :attr:`obj` attributes can be set using keyword-only "
"arguments to the constructor. When set they represent the name of the "
"attribute that was attempted to be accessed and the object that was accessed"
" for said attribute, respectively."
msgstr ""
"Атрибути :attr:`name` і :attr:`obj` можна встановити за допомогою аргументів"
" конструктора, які містять лише ключові слова. Якщо встановлено, вони "
"представляють ім’я атрибута, до якого намагалися отримати доступ, і об’єкта,"
" до якого було звернено доступ для зазначеного атрибута, відповідно."

#: ../../library/exceptions.rst:212
msgid "Added the :attr:`name` and :attr:`obj` attributes."
msgstr "Додано атрибути :attr:`name` і :attr:`obj`."

#: ../../library/exceptions.rst:217
msgid ""
"Raised when the :func:`input` function hits an end-of-file condition (EOF) "
"without reading any data. (N.B.: the :meth:`io.IOBase.read` and "
":meth:`io.IOBase.readline` methods return an empty string when they hit "
"EOF.)"
msgstr ""
"Викликається, коли функція :func:`input` досягає умови кінця файлу (EOF) без"
" читання жодних даних. (Примітка: методи :meth:`io.IOBase.read` і "
":meth:`io.IOBase.readline` повертають порожній рядок, коли вони досягають "
"EOF.)"

#: ../../library/exceptions.rst:224
msgid "Not currently used."
msgstr "Зараз не використовується."

#: ../../library/exceptions.rst:229
msgid ""
"Raised when a :term:`generator` or :term:`coroutine` is closed; see "
":meth:`generator.close` and :meth:`coroutine.close`.  It directly inherits "
"from :exc:`BaseException` instead of :exc:`Exception` since it is "
"technically not an error."
msgstr ""
"Викликається, коли :term:`generator` або :term:`coroutine` закрито; див. "
":meth:`generator.close` і :meth:`coroutine.close`. Він безпосередньо "
"успадковує :exc:`BaseException` замість :exc:`Exception`, оскільки технічно "
"це не помилка."

#: ../../library/exceptions.rst:237
msgid ""
"Raised when the :keyword:`import` statement has troubles trying to load a "
"module.  Also raised when the \"from list\" in ``from ... import`` has a "
"name that cannot be found."
msgstr ""
"Викликається, коли оператор :keyword:`import` має проблеми при спробі "
"завантажити модуль. Також виникає, коли \"зі списку\" в ``from ... import`` "
"має назву, яку неможливо знайти."

#: ../../library/exceptions.rst:241
msgid ""
"The optional *name* and *path* keyword-only arguments set the corresponding "
"attributes:"
msgstr ""

#: ../../library/exceptions.rst:246
msgid "The name of the module that was attempted to be imported."
msgstr ""

#: ../../library/exceptions.rst:250
msgid "The path to any file which triggered the exception."
msgstr ""

#: ../../library/exceptions.rst:252
msgid "Added the :attr:`name` and :attr:`path` attributes."
msgstr "Додано атрибути :attr:`name` і :attr:`path`."

#: ../../library/exceptions.rst:257
msgid ""
"A subclass of :exc:`ImportError` which is raised by :keyword:`import` when a"
" module could not be located.  It is also raised when ``None`` is found in "
":data:`sys.modules`."
msgstr ""
"Підклас :exc:`ImportError`, який викликається :keyword:`import`, коли не "
"вдалося знайти модуль. Він також виникає, коли ``None`` знайдено в "
":data:`sys.modules`."

#: ../../library/exceptions.rst:266
msgid ""
"Raised when a sequence subscript is out of range.  (Slice indices are "
"silently truncated to fall in the allowed range; if an index is not an "
"integer, :exc:`TypeError` is raised.)"
msgstr ""
"Викликається, коли індекс послідовності виходить за межі діапазону. (Індекси"
" фрагментів мовчки скорочуються, щоб потрапити в дозволений діапазон; якщо "
"індекс не є цілим числом, виникає :exc:`TypeError`.)"

#: ../../library/exceptions.rst:275
msgid ""
"Raised when a mapping (dictionary) key is not found in the set of existing "
"keys."
msgstr ""
"Викликається, коли ключ відображення (словника) не знайдено в наборі "
"існуючих ключів."

#: ../../library/exceptions.rst:282
msgid ""
"Raised when the user hits the interrupt key (normally :kbd:`Control-C` or "
":kbd:`Delete`).  During execution, a check for interrupts is made regularly."
" The exception inherits from :exc:`BaseException` so as to not be "
"accidentally caught by code that catches :exc:`Exception` and thus prevent "
"the interpreter from exiting."
msgstr ""
"Викликається, коли користувач натискає клавішу переривання (зазвичай "
":kbd:`Control-C` або :kbd:`Delete`). Під час виконання регулярно виконується"
" перевірка на наявність переривань. Виняток успадковується від "
":exc:`BaseException`, щоб не бути випадково перехопленим кодом, який "
"перехоплює :exc:`Exception` і таким чином запобігти виходу інтерпретатора."

#: ../../library/exceptions.rst:290
msgid ""
"Catching a :exc:`KeyboardInterrupt` requires special consideration. Because "
"it can be raised at unpredictable points, it may, in some circumstances, "
"leave the running program in an inconsistent state. It is generally best to "
"allow :exc:`KeyboardInterrupt` to end the program as quickly as possible or "
"avoid raising it entirely. (See :ref:`handlers-and-exceptions`.)"
msgstr ""
"Перехоплення :exc:`KeyboardInterrupt` вимагає особливої уваги. Оскільки він "
"може виникати в непередбачуваних моментах, за деяких обставин він може "
"залишити запущену програму в неузгодженому стані. Загалом найкраще дозволити"
" :exc:`KeyboardInterrupt` завершити програму якомога швидше або повністю "
"уникати її запуску. (Див. :ref:`handlers-and-exceptions`.)"

#: ../../library/exceptions.rst:300
msgid ""
"Raised when an operation runs out of memory but the situation may still be "
"rescued (by deleting some objects).  The associated value is a string "
"indicating what kind of (internal) operation ran out of memory. Note that "
"because of the underlying memory management architecture (C's "
":c:func:`malloc` function), the interpreter may not always be able to "
"completely recover from this situation; it nevertheless raises an exception "
"so that a stack traceback can be printed, in case a run-away program was the"
" cause."
msgstr ""
"Викликається, коли для операції вичерпується пам’ять, але ситуацію можна "
"врятувати (видаливши деякі об’єкти). Пов’язане значення — це рядок, що "
"вказує, яка (внутрішня) операція вичерпала пам’ять. Зауважте, що через "
"базову архітектуру керування пам’яттю (функція C :c:func:`malloc`), "
"інтерпретатор не завжди може повністю вийти з цієї ситуації; незважаючи на "
"це, він викликає виняток, щоб можна було надрукувати зворотне трасування "
"стека, якщо причиною стала програма, що втекла."

#: ../../library/exceptions.rst:311
msgid ""
"Raised when a local or global name is not found.  This applies only to "
"unqualified names.  The associated value is an error message that includes "
"the name that could not be found."
msgstr ""
"Викликається, коли локальне чи глобальне ім’я не знайдено. Це стосується "
"лише некваліфікованих імен. Пов’язане значення – це повідомлення про "
"помилку, яке містить ім’я, яке не вдалося знайти."

#: ../../library/exceptions.rst:315
msgid ""
"The :attr:`name` attribute can be set using a keyword-only argument to the "
"constructor. When set it represent the name of the variable that was "
"attempted to be accessed."
msgstr ""
"Атрибут :attr:`name` можна встановити за допомогою лише ключового аргументу "
"для конструктора. Якщо встановлено, воно представляє назву змінної, до якої "
"намагалися отримати доступ."

#: ../../library/exceptions.rst:319
msgid "Added the :attr:`name` attribute."
msgstr "Додано атрибут :attr:`name`."

#: ../../library/exceptions.rst:325
msgid ""
"This exception is derived from :exc:`RuntimeError`.  In user defined base "
"classes, abstract methods should raise this exception when they require "
"derived classes to override the method, or while the class is being "
"developed to indicate that the real implementation still needs to be added."
msgstr ""
"Цей виняток походить від :exc:`RuntimeError`. У визначених користувачем "
"базових класах абстрактні методи повинні викликати цей виняток, коли вони "
"вимагають, щоб похідні класи замінили метод, або під час розробки класу, щоб"
" вказати, що справжню реалізацію все ще потрібно додати."

#: ../../library/exceptions.rst:332
msgid ""
"It should not be used to indicate that an operator or method is not meant to"
" be supported at all -- in that case either leave the operator / method "
"undefined or, if a subclass, set it to :data:`None`."
msgstr ""
"Його не слід використовувати для вказівки на те, що оператор або метод "
"взагалі не призначений для підтримки — у такому випадку або залиште "
"оператор/метод невизначеними, або, якщо це підклас, установіть для нього "
"значення :data:`None`."

#: ../../library/exceptions.rst:338
msgid ""
"``NotImplementedError`` and :data:`NotImplemented` are not interchangeable, "
"even though they have similar names and purposes.  See "
":data:`!NotImplemented` for details on when to use it."
msgstr ""

#: ../../library/exceptions.rst:347
msgid ""
"This exception is raised when a system function returns a system-related "
"error, including I/O failures such as \"file not found\" or \"disk full\" "
"(not for illegal argument types or other incidental errors)."
msgstr ""
"Цей виняток виникає, коли системна функція повертає системну помилку, "
"включаючи помилки вводу-виводу, такі як \"файл не знайдено\" або \"диск "
"заповнений\" (не для недопустимих типів аргументів або інших випадкових "
"помилок)."

#: ../../library/exceptions.rst:351
msgid ""
"The second form of the constructor sets the corresponding attributes, "
"described below.  The attributes default to :const:`None` if not specified."
"  For backwards compatibility, if three arguments are passed, the "
":attr:`~BaseException.args` attribute contains only a 2-tuple of the first "
"two constructor arguments."
msgstr ""
"Друга форма конструктора встановлює відповідні атрибути, описані нижче. "
"Атрибути за замовчуванням :const:`None`, якщо не вказано. Для зворотної "
"сумісності, якщо передано три аргументи, атрибут :attr:`~BaseException.args`"
" містить лише 2 кортежу з перших двох аргументів конструктора."

#: ../../library/exceptions.rst:357
msgid ""
"The constructor often actually returns a subclass of :exc:`OSError`, as "
"described in `OS exceptions`_ below.  The particular subclass depends on the"
" final :attr:`.errno` value.  This behaviour only occurs when constructing "
":exc:`OSError` directly or via an alias, and is not inherited when "
"subclassing."
msgstr ""
"Конструктор часто повертає підклас :exc:`OSError`, як описано в розділі `OS "
"exceptions`_ нижче. Конкретний підклас залежить від кінцевого значення "
":attr:`.errno`. Така поведінка виникає лише під час створення :exc:`OSError`"
" безпосередньо або через псевдонім і не успадковується під час створення "
"підкласу."

#: ../../library/exceptions.rst:365
msgid "A numeric error code from the C variable :c:data:`errno`."
msgstr "Числовий код помилки зі змінної C :c:data:`errno`."

#: ../../library/exceptions.rst:369
msgid ""
"Under Windows, this gives you the native Windows error code.  The "
":attr:`.errno` attribute is then an approximate translation, in POSIX terms,"
" of that native error code."
msgstr ""
"У Windows це дає вам рідний код помилки Windows. Тоді атрибут :attr:`.errno`"
" є приблизним перекладом, у термінах POSIX, цього рідного коду помилки."

#: ../../library/exceptions.rst:373
msgid ""
"Under Windows, if the *winerror* constructor argument is an integer, the "
":attr:`.errno` attribute is determined from the Windows error code, and the "
"*errno* argument is ignored.  On other platforms, the *winerror* argument is"
" ignored, and the :attr:`winerror` attribute does not exist."
msgstr ""
"У Windows, якщо аргумент конструктора *winerror* є цілим числом, атрибут "
":attr:`.errno` визначається з коду помилки Windows, а аргумент *errno* "
"ігнорується. На інших платформах аргумент *winerror* ігнорується, а атрибут "
":attr:`winerror` не існує."

#: ../../library/exceptions.rst:381
msgid ""
"The corresponding error message, as provided by the operating system.  It is"
" formatted by the C functions :c:func:`perror` under POSIX, and "
":c:func:`FormatMessage` under Windows."
msgstr ""
"Відповідне повідомлення про помилку, яке надає операційна система. Він "
"відформатований функціями C :c:func:`perror` під POSIX і "
":c:func:`FormatMessage` під Windows."

#: ../../library/exceptions.rst:389
msgid ""
"For exceptions that involve a file system path (such as :func:`open` or "
":func:`os.unlink`), :attr:`filename` is the file name passed to the "
"function. For functions that involve two file system paths (such as "
":func:`os.rename`), :attr:`filename2` corresponds to the second file name "
"passed to the function."
msgstr ""
"Для винятків, які містять шлях до файлової системи (наприклад, :func:`open` "
"або :func:`os.unlink`), :attr:`filename` — це ім’я файлу, яке передається "
"функції. Для функцій, які включають два шляхи до файлової системи "
"(наприклад, :func:`os.rename`), :attr:`filename2` відповідає другому імені "
"файлу, переданому функції."

#: ../../library/exceptions.rst:396
msgid ""
":exc:`EnvironmentError`, :exc:`IOError`, :exc:`WindowsError`, "
":exc:`socket.error`, :exc:`select.error` and :exc:`mmap.error` have been "
"merged into :exc:`OSError`, and the constructor may return a subclass."
msgstr ""
":exc:`EnvironmentError`, :exc:`IOError`, :exc:`WindowsError`, "
":exc:`socket.error`, :exc:`select.error` і :exc:`mmap.error` об’єднано у "
":exc:`OSError`, і конструктор може повернути підклас."

#: ../../library/exceptions.rst:402
msgid ""
"The :attr:`filename` attribute is now the original file name passed to the "
"function, instead of the name encoded to or decoded from the "
":term:`filesystem encoding and error handler`. Also, the *filename2* "
"constructor argument and attribute was added."
msgstr ""
"Атрибут :attr:`filename` тепер є оригінальним ім’ям файлу, переданим у "
"функцію, замість імені, закодованого або декодованого з :term:`filesystem "
"encoding and error handler`. Також було додано аргумент і атрибут "
"конструктора *filename2*."

#: ../../library/exceptions.rst:411
msgid ""
"Raised when the result of an arithmetic operation is too large to be "
"represented.  This cannot occur for integers (which would rather raise "
":exc:`MemoryError` than give up).  However, for historical reasons, "
"OverflowError is sometimes raised for integers that are outside a required "
"range.   Because of the lack of standardization of floating-point exception "
"handling in C, most floating-point operations are not checked."
msgstr ""

#: ../../library/exceptions.rst:421
msgid ""
"This exception is derived from :exc:`RuntimeError`.  It is raised when an "
"operation is blocked during interpreter shutdown also known as :term:`Python"
" finalization <interpreter shutdown>`."
msgstr ""

#: ../../library/exceptions.rst:425
msgid ""
"Examples of operations which can be blocked with a "
":exc:`PythonFinalizationError` during the Python finalization:"
msgstr ""

#: ../../library/exceptions.rst:428
msgid "Creating a new Python thread."
msgstr ""

#: ../../library/exceptions.rst:429
msgid ":func:`os.fork`."
msgstr ""

#: ../../library/exceptions.rst:431
msgid "See also the :func:`sys.is_finalizing` function."
msgstr ""

#: ../../library/exceptions.rst:433 ../../library/exceptions.rst:443
msgid "Previously, a plain :exc:`RuntimeError` was raised."
msgstr "Раніше було викликано звичайне повідомлення :exc:`RuntimeError`."

#: ../../library/exceptions.rst:439
msgid ""
"This exception is derived from :exc:`RuntimeError`.  It is raised when the "
"interpreter detects that the maximum recursion depth (see "
":func:`sys.getrecursionlimit`) is exceeded."
msgstr ""
"Цей виняток походить від :exc:`RuntimeError`. Він виникає, коли "
"інтерпретатор виявляє, що максимальна глибина рекурсії (див. "
":func:`sys.getrecursionlimit`) перевищена."

#: ../../library/exceptions.rst:449
msgid ""
"This exception is raised when a weak reference proxy, created by the "
":func:`weakref.proxy` function, is used to access an attribute of the "
"referent after it has been garbage collected. For more information on weak "
"references, see the :mod:`weakref` module."
msgstr ""
"Цей виняток виникає, коли слабкий посилальний проксі-сервер, створений "
"функцією :func:`weakref.proxy`, використовується для доступу до атрибута "
"референта після його збирання сміття. Щоб дізнатися більше про слабкі "
"посилання, перегляньте модуль :mod:`weakref`."

#: ../../library/exceptions.rst:457
msgid ""
"Raised when an error is detected that doesn't fall in any of the other "
"categories.  The associated value is a string indicating what precisely went"
" wrong."
msgstr ""
"Викликається, коли виявлено помилку, яка не підпадає під жодну з інших "
"категорій. Пов’язане значення — це рядок, який вказує, що саме пішло не так."

#: ../../library/exceptions.rst:464
msgid ""
"Raised by built-in function :func:`next` and an :term:`iterator`\\'s "
":meth:`~iterator.__next__` method to signal that there are no further items "
"produced by the iterator."
msgstr ""
"Викликається вбудованою функцією :func:`next` і методом :term:`iterator`\\'s"
" :meth:`~iterator.__next__`, щоб повідомити про те, що ітератор не створює "
"жодних елементів."

#: ../../library/exceptions.rst:470
msgid ""
"The exception object has a single attribute :attr:`!value`, which is given "
"as an argument when constructing the exception, and defaults to "
":const:`None`."
msgstr ""

#: ../../library/exceptions.rst:474
msgid ""
"When a :term:`generator` or :term:`coroutine` function returns, a new "
":exc:`StopIteration` instance is raised, and the value returned by the "
"function is used as the :attr:`value` parameter to the constructor of the "
"exception."
msgstr ""
"Коли функція :term:`generator` або :term:`coroutine` повертається, "
"створюється новий екземпляр :exc:`StopIteration`, і значення, повернуте "
"функцією, використовується як параметр :attr:`value` для конструктор "
"винятку."

#: ../../library/exceptions.rst:479
msgid ""
"If a generator code directly or indirectly raises :exc:`StopIteration`, it "
"is converted into a :exc:`RuntimeError` (retaining the :exc:`StopIteration` "
"as the new exception's cause)."
msgstr ""
"Якщо код генератора прямо чи опосередковано викликає :exc:`StopIteration`, "
"він перетворюється на :exc:`RuntimeError` (зберігаючи :exc:`StopIteration` "
"як нову причину винятку)."

#: ../../library/exceptions.rst:483
msgid ""
"Added ``value`` attribute and the ability for generator functions to use it "
"to return a value."
msgstr ""
"Додано атрибут ``value`` і можливість для функцій генератора використовувати"
" його для повернення значення."

#: ../../library/exceptions.rst:487
msgid ""
"Introduced the RuntimeError transformation via ``from __future__ import "
"generator_stop``, see :pep:`479`."
msgstr ""
"Представлено перетворення RuntimeError через ``from __future__ import "
"generator_stop``, див. :pep:`479`."

#: ../../library/exceptions.rst:491
msgid ""
"Enable :pep:`479` for all code by default: a :exc:`StopIteration` error "
"raised in a generator is transformed into a :exc:`RuntimeError`."
msgstr ""
"Увімкнути :pep:`479` для всього коду за замовчуванням: помилка "
":exc:`StopIteration`, викликана генератором, перетворюється на "
":exc:`RuntimeError`."

#: ../../library/exceptions.rst:497
msgid ""
"Must be raised by :meth:`~object.__anext__` method of an :term:`asynchronous"
" iterator` object to stop the iteration."
msgstr ""

#: ../../library/exceptions.rst:504
msgid ""
"Raised when the parser encounters a syntax error.  This may occur in an "
":keyword:`import` statement, in a call to the built-in functions "
":func:`compile`, :func:`exec`, or :func:`eval`, or when reading the initial "
"script or standard input (also interactively)."
msgstr ""
"Викликається, коли аналізатор виявляє синтаксичну помилку. Це може статися в"
" операторі :keyword:`import`, під час виклику вбудованих функцій "
":func:`compile`, :func:`exec` або :func:`eval`, або під час читання "
"початкового сценарію або стандартний ввід (також інтерактивно)."

#: ../../library/exceptions.rst:510
msgid ""
"The :func:`str` of the exception instance returns only the error message. "
"Details is a tuple whose members are also available as separate attributes."
msgstr ""
":func:`str` екземпляра винятку повертає лише повідомлення про помилку. "
"Деталі — це кортеж, члени якого також доступні як окремі атрибути."

#: ../../library/exceptions.rst:515
msgid "The name of the file the syntax error occurred in."
msgstr "Назва файлу, у якому сталася синтаксична помилка."

#: ../../library/exceptions.rst:519
msgid ""
"Which line number in the file the error occurred in. This is 1-indexed: the "
"first line in the file has a ``lineno`` of 1."
msgstr ""
"У якому номері рядка у файлі сталася помилка. Це індексовано 1: перший рядок"
" у файлі має ``lineno`` 1."

#: ../../library/exceptions.rst:524
msgid ""
"The column in the line where the error occurred. This is 1-indexed: the "
"first character in the line has an ``offset`` of 1."
msgstr ""
"Стовпець у рядку, де сталася помилка. Це індексується 1: перший символ у "
"рядку має ``зміщення`` 1."

#: ../../library/exceptions.rst:529
msgid "The source code text involved in the error."
msgstr "Текст вихідного коду, пов’язаний з помилкою."

#: ../../library/exceptions.rst:533
msgid ""
"Which line number in the file the error occurred ends in. This is 1-indexed:"
" the first line in the file has a ``lineno`` of 1."
msgstr ""
"На якому номері рядка у файлі закінчується помилка. Це індексовано 1: перший"
" рядок у файлі має ``lineno`` 1."

#: ../../library/exceptions.rst:538
msgid ""
"The column in the end line where the error occurred finishes. This is "
"1-indexed: the first character in the line has an ``offset`` of 1."
msgstr ""
"Стовпець у кінцевому рядку, де сталася помилка, завершується. Це "
"індексується 1: перший символ у рядку має ``зміщення`` 1."

#: ../../library/exceptions.rst:541
msgid ""
"For errors in f-string fields, the message is prefixed by \"f-string: \" and"
" the offsets are offsets in a text constructed from the replacement "
"expression.  For example, compiling f'Bad {a b} field' results in this args "
"attribute: ('f-string: ...', ('', 1, 2, '(a b)\\n', 1, 5))."
msgstr ""
"Для помилок у полях f-рядка повідомлення має префікс \"f-рядок: \", а зсуви "
"є зсувами в тексті, створеному з виразу заміни. Наприклад, компіляція f'Bad "
"{a b} field' призводить до такого атрибута args: ('f-string: ...', ('', 1, "
"2, '(a b)\\n', 1, 5)) ."

#: ../../library/exceptions.rst:546
msgid "Added the :attr:`end_lineno` and :attr:`end_offset` attributes."
msgstr "Додано атрибути :attr:`end_lineno` і :attr:`end_offset`."

#: ../../library/exceptions.rst:551
msgid ""
"Base class for syntax errors related to incorrect indentation.  This is a "
"subclass of :exc:`SyntaxError`."
msgstr ""
"Базовий клас для синтаксичних помилок, пов’язаних із неправильним відступом."
" Це підклас :exc:`SyntaxError`."

#: ../../library/exceptions.rst:557
msgid ""
"Raised when indentation contains an inconsistent use of tabs and spaces. "
"This is a subclass of :exc:`IndentationError`."
msgstr ""
"Піднімається, коли відступ містить непослідовне використання табуляції та "
"пробілів. Це підклас :exc:`IndentationError`."

#: ../../library/exceptions.rst:563
msgid ""
"Raised when the interpreter finds an internal error, but the situation does "
"not look so serious to cause it to abandon all hope. The associated value is"
" a string indicating what went wrong (in low-level terms)."
msgstr ""
"Виникає, коли перекладач виявляє внутрішню помилку, але ситуація не виглядає"
" настільки серйозною, щоб змусити його втратити будь-яку надію. Пов’язане "
"значення — це рядок, що вказує на те, що пішло не так (у термінах низького "
"рівня)."

#: ../../library/exceptions.rst:567
msgid ""
"You should report this to the author or maintainer of your Python "
"interpreter. Be sure to report the version of the Python interpreter "
"(``sys.version``; it is also printed at the start of an interactive Python "
"session), the exact error message (the exception's associated value) and if "
"possible the source of the program that triggered the error."
msgstr ""
"Ви повинні повідомити про це автора або супроводжуючого вашого "
"інтерпретатора Python. Обов’язково повідомте версію інтерпретатора Python "
"(``sys.version``; вона також друкується на початку інтерактивного сеансу "
"Python), точне повідомлення про помилку (пов’язане значення винятку) і, якщо"
" можливо, джерело програма, яка викликала помилку."

#: ../../library/exceptions.rst:576
msgid ""
"This exception is raised by the :func:`sys.exit` function.  It inherits from"
" :exc:`BaseException` instead of :exc:`Exception` so that it is not "
"accidentally caught by code that catches :exc:`Exception`.  This allows the "
"exception to properly propagate up and cause the interpreter to exit.  When "
"it is not handled, the Python interpreter exits; no stack traceback is "
"printed.  The constructor accepts the same optional argument passed to "
":func:`sys.exit`. If the value is an integer, it specifies the system exit "
"status (passed to C's :c:func:`exit` function); if it is ``None``, the exit "
"status is zero; if it has another type (such as a string), the object's "
"value is printed and the exit status is one."
msgstr ""
"Цей виняток викликає функція :func:`sys.exit`. Він успадковує "
":exc:`BaseException` замість :exc:`Exception`, щоб його випадково не "
"перехопив код, який перехоплює :exc:`Exception`. Це дозволяє винятку "
"належним чином поширюватися вгору та спричиняти вихід інтерпретатора. Якщо "
"він не оброблений, інтерпретатор Python завершує роботу; трасування стека не"
" друкується. Конструктор приймає той самий необов’язковий аргумент, що "
"передається в :func:`sys.exit`. Якщо значення є цілим числом, воно вказує "
"статус виходу з системи (передається функції C :c:func:`exit`); якщо "
"значення ``None``, статус виходу дорівнює нулю; якщо він має інший тип "
"(наприклад, рядок), значення об’єкта друкується, а статус виходу один."

#: ../../library/exceptions.rst:587
msgid ""
"A call to :func:`sys.exit` is translated into an exception so that clean-up "
"handlers (:keyword:`finally` clauses of :keyword:`try` statements) can be "
"executed, and so that a debugger can execute a script without running the "
"risk of losing control.  The :func:`os._exit` function can be used if it is "
"absolutely positively necessary to exit immediately (for example, in the "
"child process after a call to :func:`os.fork`)."
msgstr ""
"Виклик :func:`sys.exit` перетворюється на виняток, щоб можна було виконати "
"обробники очищення (пункти :keyword:`finally` інструкцій :keyword:`try`), а "
"також щоб налагоджувач міг виконати сценарій без ризику втратити контроль. "
"Функцію :func:`os._exit` можна використовувати, якщо є абсолютна "
"необхідність негайного виходу (наприклад, у дочірньому процесі після виклику"
" :func:`os.fork`)."

#: ../../library/exceptions.rst:596
msgid ""
"The exit status or error message that is passed to the constructor. "
"(Defaults to ``None``.)"
msgstr ""
"Статус виходу або повідомлення про помилку, яке передається конструктору. "
"(За замовчуванням ``None``.)"

#: ../../library/exceptions.rst:602
msgid ""
"Raised when an operation or function is applied to an object of "
"inappropriate type.  The associated value is a string giving details about "
"the type mismatch."
msgstr ""
"Викликається, коли операція або функція застосована до об’єкта "
"невідповідного типу. Пов’язане значення — це рядок, що містить відомості про"
" невідповідність типу."

#: ../../library/exceptions.rst:605
msgid ""
"This exception may be raised by user code to indicate that an attempted "
"operation on an object is not supported, and is not meant to be. If an "
"object is meant to support a given operation but has not yet provided an "
"implementation, :exc:`NotImplementedError` is the proper exception to raise."
msgstr ""
"Цей виняток може бути викликаний кодом користувача, щоб вказати, що спроба "
"операції з об’єктом не підтримується та не передбачається. Якщо об’єкт "
"призначений для підтримки даної операції, але ще не надав реалізацію, "
":exc:`NotImplementedError` є правильним винятком для виклику."

#: ../../library/exceptions.rst:610
msgid ""
"Passing arguments of the wrong type (e.g. passing a :class:`list` when an "
":class:`int` is expected) should result in a :exc:`TypeError`, but passing "
"arguments with the wrong value (e.g. a number outside expected boundaries) "
"should result in a :exc:`ValueError`."
msgstr ""
"Передача аргументів неправильного типу (наприклад, передача :class:`list`, "
"коли очікується :class:`int`) має призвести до :exc:`TypeError`, але "
"передача аргументів із неправильним значенням (наприклад, число за межами "
"очікувані межі) має призвести до :exc:`ValueError`."

#: ../../library/exceptions.rst:617
msgid ""
"Raised when a reference is made to a local variable in a function or method,"
" but no value has been bound to that variable.  This is a subclass of "
":exc:`NameError`."
msgstr ""
"Викликається, коли робиться посилання на локальну змінну у функції чи "
"методі, але жодне значення не прив’язано до цієї змінної. Це підклас "
":exc:`NameError`."

#: ../../library/exceptions.rst:624
msgid ""
"Raised when a Unicode-related encoding or decoding error occurs.  It is a "
"subclass of :exc:`ValueError`."
msgstr ""
"Викликається, коли виникає помилка кодування чи декодування, пов’язана з "
"Unicode. Це підклас :exc:`ValueError`."

#: ../../library/exceptions.rst:627
msgid ""
":exc:`UnicodeError` has attributes that describe the encoding or decoding "
"error.  For example, ``err.object[err.start:err.end]`` gives the particular "
"invalid input that the codec failed on."
msgstr ""
":exc:`UnicodeError` має атрибути, які описують помилку кодування або "
"декодування. Наприклад, ``err.object[err.start:err.end]`` вказує на певний "
"недійсний вхід, який не вдалося виконати кодеку."

#: ../../library/exceptions.rst:633
msgid "The name of the encoding that raised the error."
msgstr "Назва кодування, яке викликало помилку."

#: ../../library/exceptions.rst:637
msgid "A string describing the specific codec error."
msgstr "Рядок, що описує певну помилку кодека."

#: ../../library/exceptions.rst:641
msgid "The object the codec was attempting to encode or decode."
msgstr "Об’єкт, який кодек намагався закодувати або декодувати."

#: ../../library/exceptions.rst:645
msgid "The first index of invalid data in :attr:`object`."
msgstr "Перший індекс недійсних даних в :attr:`object`."

#: ../../library/exceptions.rst:649
msgid "The index after the last invalid data in :attr:`object`."
msgstr "Індекс після останніх недійсних даних у :attr:`object`."

#: ../../library/exceptions.rst:654
msgid ""
"Raised when a Unicode-related error occurs during encoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Викликається, коли під час кодування виникає помилка, пов’язана з Unicode. "
"Це підклас :exc:`UnicodeError`."

#: ../../library/exceptions.rst:660
msgid ""
"Raised when a Unicode-related error occurs during decoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Викликається, коли під час декодування виникає помилка, пов’язана з Unicode."
" Це підклас :exc:`UnicodeError`."

#: ../../library/exceptions.rst:666
msgid ""
"Raised when a Unicode-related error occurs during translating.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Викликається, коли під час перекладу виникає помилка, пов’язана з Unicode. "
"Це підклас :exc:`UnicodeError`."

#: ../../library/exceptions.rst:672
msgid ""
"Raised when an operation or function receives an argument that has the right"
" type but an inappropriate value, and the situation is not described by a "
"more precise exception such as :exc:`IndexError`."
msgstr ""
"Викликається, коли операція або функція отримує аргумент, який має "
"правильний тип, але невідповідне значення, і ситуація не описується більш "
"точним винятком, таким як :exc:`IndexError`."

#: ../../library/exceptions.rst:679
msgid ""
"Raised when the second argument of a division or modulo operation is zero.  "
"The associated value is a string indicating the type of the operands and the"
" operation."
msgstr ""
"Викликається, коли другий аргумент операції ділення або модуля дорівнює "
"нулю. Пов’язане значення — це рядок, що вказує тип операндів і операції."

#: ../../library/exceptions.rst:684
msgid ""
"The following exceptions are kept for compatibility with previous versions; "
"starting from Python 3.3, they are aliases of :exc:`OSError`."
msgstr ""
"Наступні винятки зберігаються для сумісності з попередніми версіями; "
"починаючи з Python 3.3, вони є псевдонімами :exc:`OSError`."

#: ../../library/exceptions.rst:693
msgid "Only available on Windows."
msgstr "Доступно лише для Windows."

#: ../../library/exceptions.rst:697
msgid "OS exceptions"
msgstr "Винятки ОС"

#: ../../library/exceptions.rst:699
msgid ""
"The following exceptions are subclasses of :exc:`OSError`, they get raised "
"depending on the system error code."
msgstr ""
"Наступні винятки є підкласами :exc:`OSError`, вони виникають залежно від "
"коду системної помилки."

#: ../../library/exceptions.rst:704
msgid ""
"Raised when an operation would block on an object (e.g. socket) set for non-"
"blocking operation. Corresponds to :c:data:`errno` "
":py:const:`~errno.EAGAIN`, :py:const:`~errno.EALREADY`, "
":py:const:`~errno.EWOULDBLOCK` and :py:const:`~errno.EINPROGRESS`."
msgstr ""

#: ../../library/exceptions.rst:709
msgid ""
"In addition to those of :exc:`OSError`, :exc:`BlockingIOError` can have one "
"more attribute:"
msgstr ""
"Окрім атрибутів :exc:`OSError`, :exc:`BlockingIOError` може мати ще один "
"атрибут:"

#: ../../library/exceptions.rst:714
msgid ""
"An integer containing the number of characters written to the stream before "
"it blocked.  This attribute is available when using the buffered I/O classes"
" from the :mod:`io` module."
msgstr ""
"Ціле число, що містить кількість символів, записаних у потік перед його "
"блокуванням. Цей атрибут доступний під час використання буферизованих класів"
" введення-виведення з модуля :mod:`io`."

#: ../../library/exceptions.rst:720
msgid ""
"Raised when an operation on a child process failed. Corresponds to "
":c:data:`errno` :py:const:`~errno.ECHILD`."
msgstr ""

#: ../../library/exceptions.rst:725
msgid "A base class for connection-related issues."
msgstr "Базовий клас для проблем, пов’язаних із з’єднанням."

#: ../../library/exceptions.rst:727
msgid ""
"Subclasses are :exc:`BrokenPipeError`, :exc:`ConnectionAbortedError`, "
":exc:`ConnectionRefusedError` and :exc:`ConnectionResetError`."
msgstr ""
"Підкласами є :exc:`BrokenPipeError`, :exc:`ConnectionAbortedError`, "
":exc:`ConnectionRefusedError` і :exc:`ConnectionResetError`."

#: ../../library/exceptions.rst:732
msgid ""
"A subclass of :exc:`ConnectionError`, raised when trying to write on a pipe "
"while the other end has been closed, or trying to write on a socket which "
"has been shutdown for writing. Corresponds to :c:data:`errno` "
":py:const:`~errno.EPIPE` and :py:const:`~errno.ESHUTDOWN`."
msgstr ""

#: ../../library/exceptions.rst:739
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection attempt is "
"aborted by the peer. Corresponds to :c:data:`errno` "
":py:const:`~errno.ECONNABORTED`."
msgstr ""

#: ../../library/exceptions.rst:745
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection attempt is "
"refused by the peer. Corresponds to :c:data:`errno` "
":py:const:`~errno.ECONNREFUSED`."
msgstr ""

#: ../../library/exceptions.rst:751
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection is reset by "
"the peer. Corresponds to :c:data:`errno` :py:const:`~errno.ECONNRESET`."
msgstr ""

#: ../../library/exceptions.rst:757
msgid ""
"Raised when trying to create a file or directory which already exists. "
"Corresponds to :c:data:`errno` :py:const:`~errno.EEXIST`."
msgstr ""

#: ../../library/exceptions.rst:762
msgid ""
"Raised when a file or directory is requested but doesn't exist. Corresponds "
"to :c:data:`errno` :py:const:`~errno.ENOENT`."
msgstr ""

#: ../../library/exceptions.rst:767
msgid ""
"Raised when a system call is interrupted by an incoming signal. Corresponds "
"to :c:data:`errno` :py:const:`~errno.EINTR`."
msgstr ""

#: ../../library/exceptions.rst:770
msgid ""
"Python now retries system calls when a syscall is interrupted by a signal, "
"except if the signal handler raises an exception (see :pep:`475` for the "
"rationale), instead of raising :exc:`InterruptedError`."
msgstr ""
"Тепер Python повторює системні виклики, коли системний виклик переривається "
"сигналом, за винятком випадків, коли обробник сигналу викликає виняток "
"(обґрунтування див. :pep:`475`), замість того, щоб викликати "
":exc:`InterruptedError`."

#: ../../library/exceptions.rst:777
msgid ""
"Raised when a file operation (such as :func:`os.remove`) is requested on a "
"directory. Corresponds to :c:data:`errno` :py:const:`~errno.EISDIR`."
msgstr ""

#: ../../library/exceptions.rst:783
msgid ""
"Raised when a directory operation (such as :func:`os.listdir`) is requested "
"on something which is not a directory.  On most POSIX platforms, it may also"
" be raised if an operation attempts to open or traverse a non-directory file"
" as if it were a directory. Corresponds to :c:data:`errno` "
":py:const:`~errno.ENOTDIR`."
msgstr ""

#: ../../library/exceptions.rst:791
msgid ""
"Raised when trying to run an operation without the adequate access rights - "
"for example filesystem permissions. Corresponds to :c:data:`errno` "
":py:const:`~errno.EACCES`, :py:const:`~errno.EPERM`, and "
":py:const:`~errno.ENOTCAPABLE`."
msgstr ""

#: ../../library/exceptions.rst:796
msgid ""
"WASI's :py:const:`~errno.ENOTCAPABLE` is now mapped to "
":exc:`PermissionError`."
msgstr ""

#: ../../library/exceptions.rst:802
msgid ""
"Raised when a given process doesn't exist. Corresponds to :c:data:`errno` "
":py:const:`~errno.ESRCH`."
msgstr ""

#: ../../library/exceptions.rst:807
msgid ""
"Raised when a system function timed out at the system level. Corresponds to "
":c:data:`errno` :py:const:`~errno.ETIMEDOUT`."
msgstr ""

#: ../../library/exceptions.rst:810
msgid "All the above :exc:`OSError` subclasses were added."
msgstr "Було додано всі наведені вище підкласи :exc:`OSError`."

#: ../../library/exceptions.rst:816
msgid ":pep:`3151` - Reworking the OS and IO exception hierarchy"
msgstr ":pep:`3151` - Переробка ієрархії винятків ОС та вводу-виводу"

#: ../../library/exceptions.rst:822
msgid "Warnings"
msgstr "Попередження"

#: ../../library/exceptions.rst:824
msgid ""
"The following exceptions are used as warning categories; see the "
":ref:`warning-categories` documentation for more details."
msgstr ""
"Наступні винятки використовуються як категорії попереджень; подробиці "
"дивіться в документації :ref:`warning-categories`."

#: ../../library/exceptions.rst:829
msgid "Base class for warning categories."
msgstr "Базовий клас для категорій попереджень."

#: ../../library/exceptions.rst:834
msgid "Base class for warnings generated by user code."
msgstr "Базовий клас для попереджень, створених кодом користувача."

#: ../../library/exceptions.rst:839
msgid ""
"Base class for warnings about deprecated features when those warnings are "
"intended for other Python developers."
msgstr ""
"Базовий клас для попереджень про застарілі функції, якщо ці попередження "
"призначені для інших розробників Python."

#: ../../library/exceptions.rst:842
msgid ""
"Ignored by the default warning filters, except in the ``__main__`` module "
"(:pep:`565`). Enabling the :ref:`Python Development Mode <devmode>` shows "
"this warning."
msgstr ""
"Ігнорується стандартними фільтрами попереджень, окрім модуля ``__main__`` "
"(:pep:`565`). Увімкнення режиму :ref:`Python Development Mode <devmode>` "
"показує це попередження."

#: ../../library/exceptions.rst:846 ../../library/exceptions.rst:862
msgid "The deprecation policy is described in :pep:`387`."
msgstr "Політика припинення підтримки описана в :pep:`387`."

#: ../../library/exceptions.rst:851
msgid ""
"Base class for warnings about features which are obsolete and expected to be"
" deprecated in the future, but are not deprecated at the moment."
msgstr ""
"Базовий клас для попереджень про функції, які є застарілими та які, як "
"очікується, будуть застарілими в майбутньому, але наразі не застаріли."

#: ../../library/exceptions.rst:855
msgid ""
"This class is rarely used as emitting a warning about a possible upcoming "
"deprecation is unusual, and :exc:`DeprecationWarning` is preferred for "
"already active deprecations."
msgstr ""
"Цей клас рідко використовується, оскільки випромінювання попередження про "
"можливе припинення підтримки є незвичним, а :exc:`DeprecationWarning` є "
"кращим для вже активних застарілих функцій."

#: ../../library/exceptions.rst:859 ../../library/exceptions.rst:885
#: ../../library/exceptions.rst:912
msgid ""
"Ignored by the default warning filters. Enabling the :ref:`Python "
"Development Mode <devmode>` shows this warning."
msgstr ""
"Ігнорується стандартними фільтрами попереджень. Увімкнення режиму "
":ref:`Python Development Mode <devmode>` показує це попередження."

#: ../../library/exceptions.rst:867
msgid "Base class for warnings about dubious syntax."
msgstr "Базовий клас для попереджень про сумнівний синтаксис."

#: ../../library/exceptions.rst:872
msgid "Base class for warnings about dubious runtime behavior."
msgstr ""
"Базовий клас для попереджень про сумнівну поведінку під час виконання."

#: ../../library/exceptions.rst:877
msgid ""
"Base class for warnings about deprecated features when those warnings are "
"intended for end users of applications that are written in Python."
msgstr ""
"Базовий клас для попереджень про застарілі функції, якщо ці попередження "
"призначені для кінцевих користувачів програм, написаних на Python."

#: ../../library/exceptions.rst:883
msgid "Base class for warnings about probable mistakes in module imports."
msgstr "Базовий клас для попереджень про можливі помилки при імпорті модуля."

#: ../../library/exceptions.rst:891
msgid "Base class for warnings related to Unicode."
msgstr "Базовий клас для попереджень, пов’язаних із Unicode."

#: ../../library/exceptions.rst:896
msgid "Base class for warnings related to encodings."
msgstr "Базовий клас для попереджень щодо кодувань."

#: ../../library/exceptions.rst:898
msgid "See :ref:`io-encoding-warning` for details."
msgstr "Дивіться :ref:`io-encoding-warning` для деталей."

#: ../../library/exceptions.rst:905
msgid ""
"Base class for warnings related to :class:`bytes` and :class:`bytearray`."
msgstr ""
"Базовий клас для попереджень, пов’язаних із :class:`bytes` і "
":class:`bytearray`."

#: ../../library/exceptions.rst:910
msgid "Base class for warnings related to resource usage."
msgstr "Базовий клас для попереджень щодо використання ресурсів."

#: ../../library/exceptions.rst:921
msgid "Exception groups"
msgstr ""

#: ../../library/exceptions.rst:923
msgid ""
"The following are used when it is necessary to raise multiple unrelated "
"exceptions. They are part of the exception hierarchy so they can be handled "
"with :keyword:`except` like all other exceptions. In addition, they are "
"recognised by :keyword:`except*<except_star>`, which matches their subgroups"
" based on the types of the contained exceptions."
msgstr ""

#: ../../library/exceptions.rst:932
msgid ""
"Both of these exception types wrap the exceptions in the sequence ``excs``. "
"The ``msg`` parameter must be a string. The difference between the two "
"classes is that :exc:`BaseExceptionGroup` extends :exc:`BaseException` and "
"it can wrap any exception, while :exc:`ExceptionGroup` extends "
":exc:`Exception` and it can only wrap subclasses of :exc:`Exception`. This "
"design is so that ``except Exception`` catches an :exc:`ExceptionGroup` but "
"not :exc:`BaseExceptionGroup`."
msgstr ""

#: ../../library/exceptions.rst:940
msgid ""
"The :exc:`BaseExceptionGroup` constructor returns an :exc:`ExceptionGroup` "
"rather than a :exc:`BaseExceptionGroup` if all contained exceptions are "
":exc:`Exception` instances, so it can be used to make the selection "
"automatic. The :exc:`ExceptionGroup` constructor, on the other hand, raises "
"a :exc:`TypeError` if any contained exception is not an :exc:`Exception` "
"subclass."
msgstr ""

#: ../../library/exceptions.rst:949
msgid ""
"The ``msg`` argument to the constructor. This is a read-only attribute."
msgstr ""

#: ../../library/exceptions.rst:953
msgid ""
"A tuple of the exceptions in the ``excs`` sequence given to the constructor."
" This is a read-only attribute."
msgstr ""

#: ../../library/exceptions.rst:958
msgid ""
"Returns an exception group that contains only the exceptions from the "
"current group that match *condition*, or ``None`` if the result is empty."
msgstr ""

#: ../../library/exceptions.rst:961
msgid ""
"The condition can be an exception type or tuple of exception types, in which"
" case each exception is checked for a match using the same check that is "
"used in an ``except`` clause.  The condition can also be a callable (other "
"than a type object) that accepts an exception as its single argument and "
"returns true for the exceptions that should be in the subgroup."
msgstr ""

#: ../../library/exceptions.rst:967
msgid ""
"The nesting structure of the current exception is preserved in the result, "
"as are the values of its :attr:`message`, "
":attr:`~BaseException.__traceback__`, :attr:`~BaseException.__cause__`, "
":attr:`~BaseException.__context__` and :attr:`~BaseException.__notes__` "
"fields. Empty nested groups are omitted from the result."
msgstr ""

#: ../../library/exceptions.rst:974
msgid ""
"The condition is checked for all exceptions in the nested exception group, "
"including the top-level and any nested exception groups. If the condition is"
" true for such an exception group, it is included in the result in full."
msgstr ""

#: ../../library/exceptions.rst:978
msgid "``condition`` can be any callable which is not a type object."
msgstr ""

#: ../../library/exceptions.rst:983
msgid ""
"Like :meth:`subgroup`, but returns the pair ``(match, rest)`` where "
"``match`` is ``subgroup(condition)`` and ``rest`` is the remaining non-"
"matching part."
msgstr ""

#: ../../library/exceptions.rst:989
msgid ""
"Returns an exception group with the same :attr:`message`, but which wraps "
"the exceptions in ``excs``."
msgstr ""

#: ../../library/exceptions.rst:992
msgid ""
"This method is used by :meth:`subgroup` and :meth:`split`, which are used in"
" various contexts to break up an exception group. A subclass needs to "
"override it in order to make :meth:`subgroup` and :meth:`split` return "
"instances of the subclass rather than :exc:`ExceptionGroup`."
msgstr ""

#: ../../library/exceptions.rst:998
msgid ""
":meth:`subgroup` and :meth:`split` copy the "
":attr:`~BaseException.__traceback__`, :attr:`~BaseException.__cause__`, "
":attr:`~BaseException.__context__` and :attr:`~BaseException.__notes__` "
"fields from the original exception group to the one returned by "
":meth:`derive`, so these fields do not need to be updated by :meth:`derive`."
msgstr ""

#: ../../library/exceptions.rst:1005
msgid ""
">>> class MyGroup(ExceptionGroup):\n"
"...     def derive(self, excs):\n"
"...         return MyGroup(self.message, excs)\n"
"...\n"
">>> e = MyGroup(\"eg\", [ValueError(1), TypeError(2)])\n"
">>> e.add_note(\"a note\")\n"
">>> e.__context__ = Exception(\"context\")\n"
">>> e.__cause__ = Exception(\"cause\")\n"
">>> try:\n"
"...    raise e\n"
"... except Exception as e:\n"
"...    exc = e\n"
"...\n"
">>> match, rest = exc.split(ValueError)\n"
">>> exc, exc.__context__, exc.__cause__, exc.__notes__\n"
"(MyGroup('eg', [ValueError(1), TypeError(2)]), Exception('context'), Exception('cause'), ['a note'])\n"
">>> match, match.__context__, match.__cause__, match.__notes__\n"
"(MyGroup('eg', [ValueError(1)]), Exception('context'), Exception('cause'), ['a note'])\n"
">>> rest, rest.__context__, rest.__cause__, rest.__notes__\n"
"(MyGroup('eg', [TypeError(2)]), Exception('context'), Exception('cause'), ['a note'])\n"
">>> exc.__traceback__ is match.__traceback__ is rest.__traceback__\n"
"True"
msgstr ""

#: ../../library/exceptions.rst:1031
msgid ""
"Note that :exc:`BaseExceptionGroup` defines :meth:`~object.__new__`, so "
"subclasses that need a different constructor signature need to override that"
" rather than :meth:`~object.__init__`. For example, the following defines an"
" exception group subclass which accepts an exit_code and and constructs the "
"group's message from it. ::"
msgstr ""

#: ../../library/exceptions.rst:1037
msgid ""
"class Errors(ExceptionGroup):\n"
"   def __new__(cls, errors, exit_code):\n"
"      self = super().__new__(Errors, f\"exit code: {exit_code}\", errors)\n"
"      self.exit_code = exit_code\n"
"      return self\n"
"\n"
"   def derive(self, excs):\n"
"      return Errors(excs, self.exit_code)"
msgstr ""

#: ../../library/exceptions.rst:1046
msgid ""
"Like :exc:`ExceptionGroup`, any subclass of :exc:`BaseExceptionGroup` which "
"is also a subclass of :exc:`Exception` can only wrap instances of "
":exc:`Exception`."
msgstr ""

#: ../../library/exceptions.rst:1054
msgid "Exception hierarchy"
msgstr "Ієрархія винятків"

#: ../../library/exceptions.rst:1056
msgid "The class hierarchy for built-in exceptions is:"
msgstr "Ієрархія класів для вбудованих винятків така:"

#: ../../library/exceptions.rst:1058
msgid ""
"BaseException\n"
" ├── BaseExceptionGroup\n"
" ├── GeneratorExit\n"
" ├── KeyboardInterrupt\n"
" ├── SystemExit\n"
" └── Exception\n"
"      ├── ArithmeticError\n"
"      │    ├── FloatingPointError\n"
"      │    ├── OverflowError\n"
"      │    └── ZeroDivisionError\n"
"      ├── AssertionError\n"
"      ├── AttributeError\n"
"      ├── BufferError\n"
"      ├── EOFError\n"
"      ├── ExceptionGroup [BaseExceptionGroup]\n"
"      ├── ImportError\n"
"      │    └── ModuleNotFoundError\n"
"      ├── LookupError\n"
"      │    ├── IndexError\n"
"      │    └── KeyError\n"
"      ├── MemoryError\n"
"      ├── NameError\n"
"      │    └── UnboundLocalError\n"
"      ├── OSError\n"
"      │    ├── BlockingIOError\n"
"      │    ├── ChildProcessError\n"
"      │    ├── ConnectionError\n"
"      │    │    ├── BrokenPipeError\n"
"      │    │    ├── ConnectionAbortedError\n"
"      │    │    ├── ConnectionRefusedError\n"
"      │    │    └── ConnectionResetError\n"
"      │    ├── FileExistsError\n"
"      │    ├── FileNotFoundError\n"
"      │    ├── InterruptedError\n"
"      │    ├── IsADirectoryError\n"
"      │    ├── NotADirectoryError\n"
"      │    ├── PermissionError\n"
"      │    ├── ProcessLookupError\n"
"      │    └── TimeoutError\n"
"      ├── ReferenceError\n"
"      ├── RuntimeError\n"
"      │    ├── NotImplementedError\n"
"      │    ├── PythonFinalizationError\n"
"      │    └── RecursionError\n"
"      ├── StopAsyncIteration\n"
"      ├── StopIteration\n"
"      ├── SyntaxError\n"
"      │    └── IndentationError\n"
"      │         └── TabError\n"
"      ├── SystemError\n"
"      ├── TypeError\n"
"      ├── ValueError\n"
"      │    └── UnicodeError\n"
"      │         ├── UnicodeDecodeError\n"
"      │         ├── UnicodeEncodeError\n"
"      │         └── UnicodeTranslateError\n"
"      └── Warning\n"
"           ├── BytesWarning\n"
"           ├── DeprecationWarning\n"
"           ├── EncodingWarning\n"
"           ├── FutureWarning\n"
"           ├── ImportWarning\n"
"           ├── PendingDeprecationWarning\n"
"           ├── ResourceWarning\n"
"           ├── RuntimeWarning\n"
"           ├── SyntaxWarning\n"
"           ├── UnicodeWarning\n"
"           └── UserWarning\n"
msgstr ""

#: ../../library/exceptions.rst:6 ../../library/exceptions.rst:17
#: ../../library/exceptions.rst:196
msgid "statement"
msgstr "заява"

#: ../../library/exceptions.rst:6
msgid "try"
msgstr ""

#: ../../library/exceptions.rst:6
msgid "except"
msgstr ""

#: ../../library/exceptions.rst:17
msgid "raise"
msgstr ""

#: ../../library/exceptions.rst:41
msgid "exception"
msgstr ""

#: ../../library/exceptions.rst:41
msgid "chaining"
msgstr ""

#: ../../library/exceptions.rst:41
msgid "__cause__ (exception attribute)"
msgstr ""

#: ../../library/exceptions.rst:41
msgid "__context__ (exception attribute)"
msgstr ""

#: ../../library/exceptions.rst:41
msgid "__suppress_context__ (exception attribute)"
msgstr ""

#: ../../library/exceptions.rst:196
msgid "assert"
msgstr ""

#: ../../library/exceptions.rst:345
msgid "module"
msgstr "модуль"

#: ../../library/exceptions.rst:345
msgid "errno"
msgstr ""
