# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-19 01:00+0000\n"
"PO-Revision-Date: 2021-06-28 00:54+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2024\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/array.rst:2
msgid ":mod:`!array` --- Efficient arrays of numeric values"
msgstr ""

#: ../../library/array.rst:11
msgid ""
"This module defines an object type which can compactly represent an array of"
" basic values: characters, integers, floating-point numbers.  Arrays are "
"sequence types and behave very much like lists, except that the type of "
"objects stored in them is constrained.  The type is specified at object "
"creation time by using a :dfn:`type code`, which is a single character.  The"
" following type codes are defined:"
msgstr ""

#: ../../library/array.rst:19
msgid "Type code"
msgstr "Введіть код"

#: ../../library/array.rst:19
msgid "C Type"
msgstr "C Тип"

#: ../../library/array.rst:19
msgid "Python Type"
msgstr "Тип Python"

#: ../../library/array.rst:19
msgid "Minimum size in bytes"
msgstr "Мінімальний розмір у байтах"

#: ../../library/array.rst:19
msgid "Notes"
msgstr "Примітки"

#: ../../library/array.rst:21
msgid "``'b'``"
msgstr "``'b''``"

#: ../../library/array.rst:21
msgid "signed char"
msgstr "підписаний символ"

#: ../../library/array.rst:21 ../../library/array.rst:23
#: ../../library/array.rst:29 ../../library/array.rst:31
#: ../../library/array.rst:33 ../../library/array.rst:35
#: ../../library/array.rst:37 ../../library/array.rst:39
#: ../../library/array.rst:41 ../../library/array.rst:43
msgid "int"
msgstr "внутр"

#: ../../library/array.rst:21 ../../library/array.rst:23
msgid "1"
msgstr "1"

#: ../../library/array.rst:23
msgid "``'B'``"
msgstr "``'B'``"

#: ../../library/array.rst:23
msgid "unsigned char"
msgstr "беззнаковий символ"

#: ../../library/array.rst:25
msgid "``'u'``"
msgstr "``'u''``"

#: ../../library/array.rst:25
msgid "wchar_t"
msgstr "wchar_t"

#: ../../library/array.rst:25 ../../library/array.rst:27
msgid "Unicode character"
msgstr "символ Unicode"

#: ../../library/array.rst:25 ../../library/array.rst:29
#: ../../library/array.rst:31 ../../library/array.rst:33
#: ../../library/array.rst:35
msgid "2"
msgstr "2"

#: ../../library/array.rst:25
msgid "\\(1)"
msgstr "\\(1)"

#: ../../library/array.rst:27
msgid "``'w'``"
msgstr "``'w'``"

#: ../../library/array.rst:27
msgid "Py_UCS4"
msgstr ""

#: ../../library/array.rst:27 ../../library/array.rst:37
#: ../../library/array.rst:39 ../../library/array.rst:45
msgid "4"
msgstr "4"

#: ../../library/array.rst:29
msgid "``'h'``"
msgstr "``'h''``"

#: ../../library/array.rst:29
msgid "signed short"
msgstr "підписаний короткий"

#: ../../library/array.rst:31
msgid "``'H'``"
msgstr "``'H''``"

#: ../../library/array.rst:31
msgid "unsigned short"
msgstr "непідписаний короткий"

#: ../../library/array.rst:33
msgid "``'i'``"
msgstr "``'я''``"

#: ../../library/array.rst:33
msgid "signed int"
msgstr "підписаний внутр"

#: ../../library/array.rst:35
msgid "``'I'``"
msgstr "``'Я''``"

#: ../../library/array.rst:35
msgid "unsigned int"
msgstr "unsigned int"

#: ../../library/array.rst:37
msgid "``'l'``"
msgstr "``'l'``"

#: ../../library/array.rst:37
msgid "signed long"
msgstr "підписаний довго"

#: ../../library/array.rst:39
msgid "``'L'``"
msgstr "``'L'``"

#: ../../library/array.rst:39
msgid "unsigned long"
msgstr "беззнаковий довгий"

#: ../../library/array.rst:41
msgid "``'q'``"
msgstr "``'q''``"

#: ../../library/array.rst:41
msgid "signed long long"
msgstr "підписаний довгий довгий"

#: ../../library/array.rst:41 ../../library/array.rst:43
#: ../../library/array.rst:47
msgid "8"
msgstr "8"

#: ../../library/array.rst:43
msgid "``'Q'``"
msgstr "``'Q''``"

#: ../../library/array.rst:43
msgid "unsigned long long"
msgstr "без знака довгий довгий"

#: ../../library/array.rst:45
msgid "``'f'``"
msgstr "``'f''``"

#: ../../library/array.rst:45 ../../library/array.rst:47
msgid "float"
msgstr "плавати"

#: ../../library/array.rst:47
msgid "``'d'``"
msgstr "``'d''``"

#: ../../library/array.rst:47
msgid "double"
msgstr "подвійний"

#: ../../library/array.rst:50
msgid "Notes:"
msgstr "Примітки:"

#: ../../library/array.rst:53
msgid "It can be 16 bits or 32 bits depending on the platform."
msgstr "Це може бути 16 або 32 біти залежно від платформи."

#: ../../library/array.rst:55
msgid ""
"``array('u')`` now uses :c:type:`wchar_t` as C type instead of deprecated "
"``Py_UNICODE``. This change doesn't affect its behavior because "
"``Py_UNICODE`` is alias of :c:type:`wchar_t` since Python 3.3."
msgstr ""

#: ../../library/array.rst:60
msgid "Please migrate to ``'w'`` typecode."
msgstr ""

#: ../../library/array.rst:64
msgid ""
"The actual representation of values is determined by the machine "
"architecture (strictly speaking, by the C implementation).  The actual size "
"can be accessed through the :attr:`array.itemsize` attribute."
msgstr ""

#: ../../library/array.rst:68
msgid "The module defines the following item:"
msgstr ""

#: ../../library/array.rst:73
msgid "A string with all available type codes."
msgstr "Рядок із усіма доступними кодами типів."

#: ../../library/array.rst:76
msgid "The module defines the following type:"
msgstr "Модуль визначає наступний тип:"

#: ../../library/array.rst:81
msgid ""
"A new array whose items are restricted by *typecode*, and initialized from "
"the optional *initializer* value, which must be a :class:`bytes` or "
":class:`bytearray` object, a Unicode string, or iterable over elements of "
"the appropriate type."
msgstr ""

#: ../../library/array.rst:86
msgid ""
"If given a :class:`bytes` or :class:`bytearray` object, the initializer is "
"passed to the new array's :meth:`frombytes` method; if given a Unicode "
"string, the initializer is passed to the :meth:`fromunicode` method; "
"otherwise, the initializer's iterator is passed to the :meth:`extend` method"
" to add initial items to the array."
msgstr ""

#: ../../library/array.rst:93
msgid ""
"Array objects support the ordinary sequence operations of indexing, slicing,"
" concatenation, and multiplication.  When using slice assignment, the "
"assigned value must be an array object with the same type code; in all other"
" cases, :exc:`TypeError` is raised. Array objects also implement the buffer "
"interface, and may be used wherever :term:`bytes-like objects <bytes-like "
"object>` are supported."
msgstr ""
"Об’єкти-масиви підтримують звичайні операції послідовності індексування, "
"нарізки, конкатенації та множення. Якщо використовується призначення "
"фрагментів, призначене значення має бути об’єктом масиву з таким же кодом "
"типу; у всіх інших випадках виникає :exc:`TypeError`. Об’єкти-масиви також "
"реалізують інтерфейс буфера, і їх можна використовувати скрізь, де "
"підтримуються :term:`байтоподібні об’єкти <bytes-like object>`."

#: ../../library/array.rst:99
msgid ""
"Raises an :ref:`auditing event <auditing>` ``array.__new__`` with arguments "
"``typecode``, ``initializer``."
msgstr ""
"Викликає :ref:`подію аудиту <auditing>` ``array.__new__`` з аргументами "
"``typecode``, ``initializer``."

#: ../../library/array.rst:104
msgid "The typecode character used to create the array."
msgstr "Символ коду типу, який використовується для створення масиву."

#: ../../library/array.rst:109
msgid "The length in bytes of one array item in the internal representation."
msgstr "Довжина в байтах одного елемента масиву у внутрішньому представленні."

#: ../../library/array.rst:114
msgid "Append a new item with value *x* to the end of the array."
msgstr "Додайте новий елемент зі значенням *x* у кінець масиву."

#: ../../library/array.rst:119
msgid ""
"Return a tuple ``(address, length)`` giving the current memory address and "
"the length in elements of the buffer used to hold array's contents.  The "
"size of the memory buffer in bytes can be computed as "
"``array.buffer_info()[1] * array.itemsize``.  This is occasionally useful "
"when working with low-level (and inherently unsafe) I/O interfaces that "
"require memory addresses, such as certain :c:func:`!ioctl` operations.  The "
"returned numbers are valid as long as the array exists and no length-"
"changing operations are applied to it."
msgstr ""

#: ../../library/array.rst:129
msgid ""
"When using array objects from code written in C or C++ (the only way to "
"effectively make use of this information), it makes more sense to use the "
"buffer interface supported by array objects.  This method is maintained for "
"backward compatibility and should be avoided in new code.  The buffer "
"interface is documented in :ref:`bufferobjects`."
msgstr ""
"При використанні об’єктів масиву з коду, написаного на C або C++ (єдиний "
"спосіб ефективного використання цієї інформації), має сенс використовувати "
"інтерфейс буфера, який підтримується об’єктами масиву. Цей метод "
"підтримується для зворотної сумісності, і його слід уникати в новому коді. "
"Інтерфейс буфера задокументовано в :ref:`bufferobjects`."

#: ../../library/array.rst:138
msgid ""
"\"Byteswap\" all items of the array.  This is only supported for values "
"which are 1, 2, 4, or 8 bytes in size; for other types of values, "
":exc:`RuntimeError` is raised.  It is useful when reading data from a file "
"written on a machine with a different byte order."
msgstr ""
"\"Побайтувати\" всі елементи масиву. Це підтримується лише для значень "
"розміром 1, 2, 4 або 8 байтів; для інших типів значень виникає "
":exc:`RuntimeError`. Це корисно під час читання даних із файлу, записаного "
"на машині з іншим порядком байтів."

#: ../../library/array.rst:146
msgid "Return the number of occurrences of *x* in the array."
msgstr "Повертає кількість входжень *x* в масиві."

#: ../../library/array.rst:151
msgid ""
"Append items from *iterable* to the end of the array.  If *iterable* is "
"another array, it must have *exactly* the same type code; if not, "
":exc:`TypeError` will be raised.  If *iterable* is not an array, it must be "
"iterable and its elements must be the right type to be appended to the "
"array."
msgstr ""
"Додайте елементи з *iterable* у кінець масиву. Якщо *iterable* є іншим "
"масивом, він повинен мати *точно* той самий код типу; якщо ні, буде "
"викликано :exc:`TypeError`. Якщо *iterable* не є масивом, він має бути "
"повторюваним, а його елементи мають мати правильний тип для додавання до "
"масиву."

#: ../../library/array.rst:159
msgid ""
"Appends items from the :term:`bytes-like object`, interpreting its content "
"as an array of machine values (as if it had been read from a file using the "
":meth:`fromfile` method)."
msgstr ""

#: ../../library/array.rst:163
msgid ":meth:`!fromstring` is renamed to :meth:`frombytes` for clarity."
msgstr ""

#: ../../library/array.rst:169
msgid ""
"Read *n* items (as machine values) from the :term:`file object` *f* and "
"append them to the end of the array.  If less than *n* items are available, "
":exc:`EOFError` is raised, but the items that were available are still "
"inserted into the array."
msgstr ""
"Прочитайте *n* елементів (як машинні значення) з :term:`file object` *f* і "
"додайте їх у кінець масиву. Якщо доступно менше *n* елементів, виникає "
":exc:`EOFError`, але доступні елементи все одно вставляються в масив."

#: ../../library/array.rst:177
msgid ""
"Append items from the list.  This is equivalent to ``for x in list: "
"a.append(x)`` except that if there is a type error, the array is unchanged."
msgstr ""
"Додавання елементів зі списку. Це еквівалентно ``для x у списку: "
"a.append(x)`` за винятком того, що якщо є помилка типу, масив не змінюється."

#: ../../library/array.rst:183
msgid ""
"Extends this array with data from the given Unicode string. The array must "
"have type code ``'u'`` or ``'w'``; otherwise a :exc:`ValueError` is raised. "
"Use ``array.frombytes(unicodestring.encode(enc))`` to append Unicode data to"
" an array of some other type."
msgstr ""

#: ../../library/array.rst:191
msgid ""
"Return the smallest *i* such that *i* is the index of the first occurrence "
"of *x* in the array.  The optional arguments *start* and *stop* can be "
"specified to search for *x* within a subsection of the array.  Raise "
":exc:`ValueError` if *x* is not found."
msgstr ""
"Повертає найменше *i* таке, що *i* є індексом першого входження *x* в "
"масиві. Для пошуку *x* у підрозділі масиву можна вказати необов’язкові "
"аргументи *start* і *stop*. Викликати :exc:`ValueError`, якщо *x* не "
"знайдено."

#: ../../library/array.rst:196
msgid "Added optional *start* and *stop* parameters."
msgstr "Додано додаткові параметри *start* і *stop*."

#: ../../library/array.rst:202
msgid ""
"Insert a new item with value *x* in the array before position *i*. Negative "
"values are treated as being relative to the end of the array."
msgstr ""
"Вставте новий елемент зі значенням *x* в масив перед позицією *i*. Від’ємні "
"значення розглядаються як відносні до кінця масиву."

#: ../../library/array.rst:208
msgid ""
"Removes the item with the index *i* from the array and returns it. The "
"optional argument defaults to ``-1``, so that by default the last item is "
"removed and returned."
msgstr ""
"Вилучає з масиву елемент з індексом *i* і повертає його. Необов’язковий "
"аргумент за умовчанням має значення ``-1``, тому за замовчуванням останній "
"елемент видаляється та повертається."

#: ../../library/array.rst:215
msgid "Remove the first occurrence of *x* from the array."
msgstr "Видаліть перше входження *x* з масиву."

#: ../../library/array.rst:220
msgid "Remove all elements from the array."
msgstr ""

#: ../../library/array.rst:227
msgid "Reverse the order of the items in the array."
msgstr "Змінити порядок елементів у масиві."

#: ../../library/array.rst:232
msgid ""
"Convert the array to an array of machine values and return the bytes "
"representation (the same sequence of bytes that would be written to a file "
"by the :meth:`tofile` method.)"
msgstr ""
"Перетворіть масив на масив машинних значень і поверніть представлення байтів"
" (та сама послідовність байтів, яка була б записана у файл за допомогою "
"методу :meth:`tofile`)."

#: ../../library/array.rst:236
msgid ":meth:`!tostring` is renamed to :meth:`tobytes` for clarity."
msgstr ""

#: ../../library/array.rst:242
msgid "Write all items (as machine values) to the :term:`file object` *f*."
msgstr ""
"Запишіть усі елементи (як машинні значення) в :term:`file object` *f*."

#: ../../library/array.rst:247
msgid "Convert the array to an ordinary list with the same items."
msgstr "Перетворіть масив на звичайний список з тими самими елементами."

#: ../../library/array.rst:252
msgid ""
"Convert the array to a Unicode string.  The array must have a type ``'u'`` "
"or ``'w'``; otherwise a :exc:`ValueError` is raised. Use "
"``array.tobytes().decode(enc)`` to obtain a Unicode string from an array of "
"some other type."
msgstr ""

#: ../../library/array.rst:257
msgid ""
"The string representation of array objects has the form ``array(typecode, "
"initializer)``. The *initializer* is omitted if the array is empty, "
"otherwise it is a Unicode string if the *typecode* is ``'u'`` or ``'w'``, "
"otherwise it is a list of numbers. The string representation is guaranteed "
"to be able to be converted back to an array with the same type and value "
"using :func:`eval`, so long as the :class:`~array.array` class has been "
"imported using ``from array import array``. Variables ``inf`` and ``nan`` "
"must also be defined if it contains corresponding floating-point values. "
"Examples::"
msgstr ""

#: ../../library/array.rst:269
msgid ""
"array('l')\n"
"array('w', 'hello \\u2641')\n"
"array('l', [1, 2, 3, 4, 5])\n"
"array('d', [1.0, 2.0, 3.14, -inf, nan])"
msgstr ""

#: ../../library/array.rst:277
msgid "Module :mod:`struct`"
msgstr "Модуль :mod:`struct`"

#: ../../library/array.rst:278
msgid "Packing and unpacking of heterogeneous binary data."
msgstr "Упаковка та розпакування різнорідних двійкових даних."

#: ../../library/array.rst:280
msgid "`NumPy <https://numpy.org/>`_"
msgstr "`NumPy <https://numpy.org/>`_"

#: ../../library/array.rst:281
msgid "The NumPy package defines another array type."
msgstr "Пакет NumPy визначає інший тип масиву."

#: ../../library/array.rst:7
msgid "arrays"
msgstr ""
