# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-22 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 00:56+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2023\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/cmath.rst:2
msgid ":mod:`!cmath` --- Mathematical functions for complex numbers"
msgstr ""

#: ../../library/cmath.rst:9
msgid ""
"This module provides access to mathematical functions for complex numbers.  "
"The functions in this module accept integers, floating-point numbers or "
"complex numbers as arguments. They will also accept any Python object that "
"has either a :meth:`~object.__complex__` or a :meth:`~object.__float__` "
"method: these methods are used to convert the object to a complex or "
"floating-point number, respectively, and the function is then applied to the"
" result of the conversion."
msgstr ""

#: ../../library/cmath.rst:18
msgid ""
"For functions involving branch cuts, we have the problem of deciding how to "
"define those functions on the cut itself. Following Kahan's \"Branch cuts "
"for complex elementary functions\" paper, as well as Annex G of C99 and "
"later C standards, we use the sign of zero to distinguish one side of the "
"branch cut from the other: for a branch cut along (a portion of) the real "
"axis we look at the sign of the imaginary part, while for a branch cut along"
" the imaginary axis we look at the sign of the real part."
msgstr ""

#: ../../library/cmath.rst:26
msgid ""
"For example, the :func:`cmath.sqrt` function has a branch cut along the "
"negative real axis. An argument of ``complex(-2.0, -0.0)`` is treated as "
"though it lies *below* the branch cut, and so gives a result on the negative"
" imaginary axis::"
msgstr ""

#: ../../library/cmath.rst:31
msgid ""
">>> cmath.sqrt(complex(-2.0, -0.0))\n"
"-1.4142135623730951j"
msgstr ""

#: ../../library/cmath.rst:34
msgid ""
"But an argument of ``complex(-2.0, 0.0)`` is treated as though it lies above"
" the branch cut::"
msgstr ""

#: ../../library/cmath.rst:37
msgid ""
">>> cmath.sqrt(complex(-2.0, 0.0))\n"
"1.4142135623730951j"
msgstr ""

#: ../../library/cmath.rst:42
msgid "Conversions to and from polar coordinates"
msgstr "Перетворення в і з полярних координат"

#: ../../library/cmath.rst:44
msgid ""
"A Python complex number ``z`` is stored internally using *rectangular* or "
"*Cartesian* coordinates.  It is completely determined by its *real part* "
"``z.real`` and its *imaginary part* ``z.imag``."
msgstr ""

#: ../../library/cmath.rst:48
msgid ""
"*Polar coordinates* give an alternative way to represent a complex number.  "
"In polar coordinates, a complex number *z* is defined by the modulus *r* and"
" the phase angle *phi*. The modulus *r* is the distance from *z* to the "
"origin, while the phase *phi* is the counterclockwise angle, measured in "
"radians, from the positive x-axis to the line segment that joins the origin "
"to *z*."
msgstr ""
"*Полярні координати* дають альтернативний спосіб представлення комплексного "
"числа. У полярних координатах комплексне число *z* визначається модулем *r* "
"і фазовим кутом *phi*. Модуль *r* — це відстань від *z* до початку "
"координат, тоді як фаза *phi* — це кут проти годинникової стрілки, виміряний"
" у радіанах, від додатної осі x до відрізка лінії, який з’єднує початок "
"координат із *z*."

#: ../../library/cmath.rst:55
msgid ""
"The following functions can be used to convert from the native rectangular "
"coordinates to polar coordinates and back."
msgstr ""
"Наступні функції можна використовувати для перетворення вихідних прямокутних"
" координат у полярні координати та назад."

#: ../../library/cmath.rst:60
msgid ""
"Return the phase of *x* (also known as the *argument* of *x*), as a float. "
"``phase(x)`` is equivalent to ``math.atan2(x.imag, x.real)``.  The result "
"lies in the range [-\\ *π*, *π*], and the branch cut for this operation lies"
" along the negative real axis.  The sign of the result is the same as the "
"sign of ``x.imag``, even when ``x.imag`` is zero::"
msgstr ""

#: ../../library/cmath.rst:66
msgid ""
">>> phase(complex(-1.0, 0.0))\n"
"3.141592653589793\n"
">>> phase(complex(-1.0, -0.0))\n"
"-3.141592653589793"
msgstr ""

#: ../../library/cmath.rst:74
msgid ""
"The modulus (absolute value) of a complex number *x* can be computed using "
"the built-in :func:`abs` function.  There is no separate :mod:`cmath` module"
" function for this operation."
msgstr ""
"Модуль (абсолютне значення) комплексного числа *x* можна обчислити за "
"допомогою вбудованої функції :func:`abs`. Для цієї операції немає окремої "
"функції модуля :mod:`cmath`."

#: ../../library/cmath.rst:81
msgid ""
"Return the representation of *x* in polar coordinates.  Returns a pair ``(r,"
" phi)`` where *r* is the modulus of *x* and phi is the phase of *x*.  "
"``polar(x)`` is equivalent to ``(abs(x), phase(x))``."
msgstr ""
"Повертає представлення *x* у полярних координатах. Повертає пару \"(r, "
"phi)\", де *r* — модуль *x*, а phi — фаза *x*. ``polar(x)`` еквівалентно "
"``(abs(x),phase(x))``."

#: ../../library/cmath.rst:89
msgid ""
"Return the complex number *x* with polar coordinates *r* and *phi*. "
"Equivalent to ``complex(r * math.cos(phi), r * math.sin(phi))``."
msgstr ""

#: ../../library/cmath.rst:94
msgid "Power and logarithmic functions"
msgstr "Степеневі та логарифмічні функції"

#: ../../library/cmath.rst:98
msgid ""
"Return *e* raised to the power *x*, where *e* is the base of natural "
"logarithms."
msgstr "Поверніть *e* у степені *x*, де *e* — основа натуральних логарифмів."

#: ../../library/cmath.rst:104
msgid ""
"Returns the logarithm of *x* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *x*. There is one branch cut, "
"from 0 along the negative real axis to -∞."
msgstr ""

#: ../../library/cmath.rst:111
msgid ""
"Return the base-10 logarithm of *x*. This has the same branch cut as "
":func:`log`."
msgstr ""
"Повертає логарифм *x* за основою 10. Це такий же розріз гілки, як і "
":func:`log`."

#: ../../library/cmath.rst:117
msgid ""
"Return the square root of *x*. This has the same branch cut as :func:`log`."
msgstr ""
"Повертає квадратний корінь з *x*. Це такий же розріз гілки, як і "
":func:`log`."

#: ../../library/cmath.rst:121
msgid "Trigonometric functions"
msgstr "Тригонометричні функції"

#: ../../library/cmath.rst:125
msgid ""
"Return the arc cosine of *x*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞. The other extends left from -1 along the "
"real axis to -∞."
msgstr ""

#: ../../library/cmath.rst:132
msgid ""
"Return the arc sine of *x*. This has the same branch cuts as :func:`acos`."
msgstr ""
"Повернути арксинус *x*. Це має такі самі скорочення гілок, як :func:`acos`."

#: ../../library/cmath.rst:137
msgid ""
"Return the arc tangent of *x*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``. The other extends from ``-1j`` "
"along the imaginary axis to ``-∞j``."
msgstr ""

#: ../../library/cmath.rst:144
msgid "Return the cosine of *x*."
msgstr "Повертає косинус *x*."

#: ../../library/cmath.rst:149
msgid "Return the sine of *x*."
msgstr "Повернути синус *x*."

#: ../../library/cmath.rst:154
msgid "Return the tangent of *x*."
msgstr "Поверніть тангенс *x*."

#: ../../library/cmath.rst:158
msgid "Hyperbolic functions"
msgstr "Гіперболічні функції"

#: ../../library/cmath.rst:162
msgid ""
"Return the inverse hyperbolic cosine of *x*. There is one branch cut, "
"extending left from 1 along the real axis to -∞."
msgstr ""

#: ../../library/cmath.rst:168
msgid ""
"Return the inverse hyperbolic sine of *x*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``.  The other extends "
"from ``-1j`` along the imaginary axis to ``-∞j``."
msgstr ""

#: ../../library/cmath.rst:175
msgid ""
"Return the inverse hyperbolic tangent of *x*. There are two branch cuts: One"
" extends from ``1`` along the real axis to ``∞``. The other extends from "
"``-1`` along the real axis to ``-∞``."
msgstr ""

#: ../../library/cmath.rst:182
msgid "Return the hyperbolic cosine of *x*."
msgstr "Повертає гіперболічний косинус *x*."

#: ../../library/cmath.rst:187
msgid "Return the hyperbolic sine of *x*."
msgstr "Повернути гіперболічний синус *x*."

#: ../../library/cmath.rst:192
msgid "Return the hyperbolic tangent of *x*."
msgstr "Поверніть гіперболічний тангенс *x*."

#: ../../library/cmath.rst:196
msgid "Classification functions"
msgstr "Функції класифікації"

#: ../../library/cmath.rst:200
msgid ""
"Return ``True`` if both the real and imaginary parts of *x* are finite, and "
"``False`` otherwise."
msgstr ""
"Повертає ``True``, якщо і дійсна, і уявна частини *x* скінченні, і ``False``"
" в іншому випадку."

#: ../../library/cmath.rst:208
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is an "
"infinity, and ``False`` otherwise."
msgstr ""
"Повертає ``True``, якщо дійсна чи уявна частина *x* є нескінченністю, і "
"``False`` в іншому випадку."

#: ../../library/cmath.rst:214
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is a NaN, "
"and ``False`` otherwise."
msgstr ""
"Повертає ``True``, якщо дійсна чи уявна частина *x* є NaN, і ``False`` в "
"іншому випадку."

#: ../../library/cmath.rst:220
msgid ""
"Return ``True`` if the values *a* and *b* are close to each other and "
"``False`` otherwise."
msgstr ""
"Повертає ``True``, якщо значення *a* і *b* близькі одне до одного, і "
"``False`` в іншому випадку."

#: ../../library/cmath.rst:223
msgid ""
"Whether or not two values are considered close is determined according to "
"given absolute and relative tolerances.  If no errors occur, the result will"
" be: ``abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)``."
msgstr ""

#: ../../library/cmath.rst:227
msgid ""
"*rel_tol* is the relative tolerance -- it is the maximum allowed difference "
"between *a* and *b*, relative to the larger absolute value of *a* or *b*. "
"For example, to set a tolerance of 5%, pass ``rel_tol=0.05``.  The default "
"tolerance is ``1e-09``, which assures that the two values are the same "
"within about 9 decimal digits.  *rel_tol* must be nonnegative and less than "
"``1.0``."
msgstr ""

#: ../../library/cmath.rst:234
msgid ""
"*abs_tol* is the absolute tolerance; it defaults to ``0.0`` and it must be "
"nonnegative.  When comparing ``x`` to ``0.0``, ``isclose(x, 0)`` is computed"
" as ``abs(x) <= rel_tol  * abs(x)``, which is ``False`` for any ``x`` and "
"rel_tol less than ``1.0``.  So add an appropriate positive abs_tol argument "
"to the call."
msgstr ""

#: ../../library/cmath.rst:240
msgid ""
"The IEEE 754 special values of ``NaN``, ``inf``, and ``-inf`` will be "
"handled according to IEEE rules.  Specifically, ``NaN`` is not considered "
"close to any other value, including ``NaN``.  ``inf`` and ``-inf`` are only "
"considered close to themselves."
msgstr ""
"Спеціальні значення IEEE 754 ``NaN``, ``inf`` і ``-inf`` оброблятимуться "
"відповідно до правил IEEE. Зокрема, ``NaN`` не вважається близьким до будь-"
"якого іншого значення, включаючи ``NaN``. ``inf`` і ``-inf`` вважаються лише"
" близькими до самих себе."

#: ../../library/cmath.rst:249
msgid ":pep:`485` -- A function for testing approximate equality"
msgstr ":pep:`485` -- Функція для перевірки приблизної рівності"

#: ../../library/cmath.rst:253
msgid "Constants"
msgstr "Константи"

#: ../../library/cmath.rst:257
msgid "The mathematical constant *π*, as a float."
msgstr "Математична константа *π* у вигляді числа з плаваючою точкою."

#: ../../library/cmath.rst:262
msgid "The mathematical constant *e*, as a float."
msgstr "Математична константа *e* як число з плаваючою точкою."

#: ../../library/cmath.rst:267
msgid "The mathematical constant *τ*, as a float."
msgstr "Математична константа *τ* як число з плаваючою точкою."

#: ../../library/cmath.rst:274
msgid "Floating-point positive infinity. Equivalent to ``float('inf')``."
msgstr ""
"Додатна нескінченність із плаваючою комою. Еквівалент ``float('inf')``."

#: ../../library/cmath.rst:281
msgid ""
"Complex number with zero real part and positive infinity imaginary part. "
"Equivalent to ``complex(0.0, float('inf'))``."
msgstr ""
"Комплексне число з нульовою дійсною частиною та додатною нескінченною уявною"
" частиною. Еквівалент ``complex(0.0, float('inf'))``."

#: ../../library/cmath.rst:289
msgid ""
"A floating-point \"not a number\" (NaN) value.  Equivalent to "
"``float('nan')``."
msgstr ""
"Значення з плаваючою комою \"не число\" (NaN). Еквівалент ``float('nan')``."

#: ../../library/cmath.rst:297
msgid ""
"Complex number with zero real part and NaN imaginary part. Equivalent to "
"``complex(0.0, float('nan'))``."
msgstr ""
"Комплексне число з нульовою дійсною частиною та NaN уявною частиною. "
"Еквівалент ``complex(0.0, float('nan'))``."

#: ../../library/cmath.rst:305
msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users"
" aren't interested in complex numbers, and perhaps don't even know what they"
" are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in "
":mod:`cmath` always return a complex number, even if the answer can be "
"expressed as a real number (in which case the complex number has an "
"imaginary part of zero)."
msgstr ""
"Зауважте, що вибір функцій подібний, але не ідентичний до вибору в модулі "
":mod:`math`. Причина наявності двох модулів полягає в тому, що деякі "
"користувачі не цікавляться комплексними числами і, можливо, навіть не "
"знають, що це таке. Вони радше, щоб ``math.sqrt(-1)`` викликав виняток, ніж "
"повертав комплексне число. Також зауважте, що функції, визначені в "
":mod:`cmath`, завжди повертають комплексне число, навіть якщо відповідь може"
" бути виражена як дійсне число (у цьому випадку комплексне число має уявну "
"частину нуля)."

#: ../../library/cmath.rst:313
msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the"
" following:"
msgstr ""
"Примітка щодо розрізів гілок: це криві, уздовж яких дана функція не є "
"неперервною. Вони є необхідною ознакою багатьох складних функцій. "
"Передбачається, що якщо вам потрібно обчислювати зі складними функціями, ви "
"зрозумієте про скорочення гілок. Зверніться до майже будь-якої (не надто "
"елементарної) книги про комплексні змінні для просвітлення. Щоб отримати "
"інформацію щодо правильного вибору обрізків гілок для чисельних цілей, "
"гарною довідкою має бути наступне:"

#: ../../library/cmath.rst:323
msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the"
" art in numerical analysis. Clarendon Press (1987) pp165--211."
msgstr ""
"Kahan, W: Розрізи гілок для складних елементарних функцій; або \"Багато шуму"
" з нічого\". У Ізерлес, А. та Пауелл, М. (ред.), Сучасний стан числового "
"аналізу. Clarendon Press (1987) pp165--211."

#: ../../library/cmath.rst:303
msgid "module"
msgstr "модуль"

#: ../../library/cmath.rst:303
msgid "math"
msgstr "математика"
