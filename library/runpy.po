# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-22 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:12+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2023\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/runpy.rst:2
msgid ":mod:`!runpy` --- Locating and executing Python modules"
msgstr ""

#: ../../library/runpy.rst:9
msgid "**Source code:** :source:`Lib/runpy.py`"
msgstr "**Вихідний код:** :source:`Lib/runpy.py`"

#: ../../library/runpy.rst:13
msgid ""
"The :mod:`runpy` module is used to locate and run Python modules without "
"importing them first. Its main use is to implement the :option:`-m` command "
"line switch that allows scripts to be located using the Python module "
"namespace rather than the filesystem."
msgstr ""
"Модуль :mod:`runpy` використовується для пошуку та запуску модулів Python "
"без їх попереднього імпорту. Його головне використання полягає в реалізації "
"перемикача командного рядка :option:`-m`, який дозволяє розташовувати "
"сценарії за допомогою простору імен модуля Python, а не файлової системи."

#: ../../library/runpy.rst:18
msgid ""
"Note that this is *not* a sandbox module - all code is executed in the "
"current process, and any side effects (such as cached imports of other "
"modules) will remain in place after the functions have returned."
msgstr ""
"Зауважте, що це *не* модуль пісочниці – весь код виконується в поточному "
"процесі, і будь-які побічні ефекти (такі як кешований імпорт інших модулів) "
"залишаться на місці після повернення функцій."

#: ../../library/runpy.rst:22
msgid ""
"Furthermore, any functions and classes defined by the executed code are not "
"guaranteed to work correctly after a :mod:`runpy` function has returned. If "
"that limitation is not acceptable for a given use case, :mod:`importlib` is "
"likely to be a more suitable choice than this module."
msgstr ""
"Крім того, не гарантується коректна робота будь-яких функцій і класів, "
"визначених виконуваним кодом після повернення функції :mod:`runpy`. Якщо це "
"обмеження неприйнятне для певного випадку використання, :mod:`importlib`, "
"швидше за все, буде більш прийнятним вибором, ніж цей модуль."

#: ../../library/runpy.rst:27
msgid "The :mod:`runpy` module provides two functions:"
msgstr "Модуль :mod:`runpy` забезпечує дві функції:"

#: ../../library/runpy.rst:35
msgid ""
"Execute the code of the specified module and return the resulting module's "
"globals dictionary. The module's code is first located using the standard "
"import mechanism (refer to :pep:`302` for details) and then executed in a "
"fresh module namespace."
msgstr ""

#: ../../library/runpy.rst:40
msgid ""
"The *mod_name* argument should be an absolute module name. If the module "
"name refers to a package rather than a normal module, then that package is "
"imported and the :mod:`__main__` submodule within that package is then "
"executed and the resulting module globals dictionary returned."
msgstr ""

#: ../../library/runpy.rst:46
msgid ""
"The optional dictionary argument *init_globals* may be used to pre-populate "
"the module's globals dictionary before the code is executed. *init_globals* "
"will not be modified. If any of the special global variables below are "
"defined in *init_globals*, those definitions are overridden by "
":func:`run_module`."
msgstr ""

#: ../../library/runpy.rst:52 ../../library/runpy.rst:127
msgid ""
"The special global variables ``__name__``, ``__spec__``, ``__file__``, "
"``__cached__``, ``__loader__`` and ``__package__`` are set in the globals "
"dictionary before the module code is executed. (Note that this is a minimal "
"set of variables - other variables may be set implicitly as an interpreter "
"implementation detail.)"
msgstr ""

#: ../../library/runpy.rst:58
msgid ""
"``__name__`` is set to *run_name* if this optional argument is not "
":const:`None`, to ``mod_name + '.__main__'`` if the named module is a "
"package and to the *mod_name* argument otherwise."
msgstr ""
"``__name__`` встановлено на *run_name*, якщо цей необов’язковий аргумент не "
"є :const:`None`, на ``mod_name + '.__main__``, якщо названий модуль є "
"пакетом, і на аргумент *mod_name* в іншому випадку ."

#: ../../library/runpy.rst:62
msgid ""
"``__spec__`` will be set appropriately for the *actually* imported module "
"(that is, ``__spec__.name`` will always be *mod_name* or ``mod_name + "
"'.__main__'``, never *run_name*)."
msgstr ""

#: ../../library/runpy.rst:66
msgid ""
"``__file__``, ``__cached__``, ``__loader__`` and ``__package__`` are "
":ref:`set as normal <import-mod-attrs>` based on the module spec."
msgstr ""
"``__file__``, ``__cached__``, ``__loader__`` і ``__package__`` "
":ref:`встановлені як звичайні <import-mod-attrs>` на основі специфікації "
"модуля."

#: ../../library/runpy.rst:69
msgid ""
"If the argument *alter_sys* is supplied and evaluates to :const:`True`, then"
" ``sys.argv[0]`` is updated with the value of ``__file__`` and "
"``sys.modules[__name__]`` is updated with a temporary module object for the "
"module being executed. Both ``sys.argv[0]`` and ``sys.modules[__name__]`` "
"are restored to their original values before the function returns."
msgstr ""
"Якщо вказано аргумент *alter_sys* і він має значення :const:`True`, тоді "
"``sys.argv[0]`` оновлюється значенням ``__file__`` і "
"``sys.modules[__name__]`` оновлюється тимчасовим об’єктом модуля для модуля,"
" що виконується. І ``sys.argv[0]``, і ``sys.modules[__name__]`` "
"відновлюються до своїх початкових значень перед поверненням функції."

#: ../../library/runpy.rst:75
msgid ""
"Note that this manipulation of :mod:`sys` is not thread-safe. Other threads "
"may see the partially initialised module, as well as the altered list of "
"arguments. It is recommended that the ``sys`` module be left alone when "
"invoking this function from threaded code."
msgstr ""

#: ../../library/runpy.rst:81
msgid ""
"The :option:`-m` option offering equivalent functionality from the command "
"line."
msgstr "Опція :option:`-m` пропонує еквівалентні функції з командного рядка."

#: ../../library/runpy.rst:84
msgid ""
"Added ability to execute packages by looking for a :mod:`__main__` "
"submodule."
msgstr ""

#: ../../library/runpy.rst:87
msgid "Added ``__cached__`` global variable (see :pep:`3147`)."
msgstr "Додано глобальну змінну ``__cached__`` (див. :pep:`3147`)."

#: ../../library/runpy.rst:90
msgid ""
"Updated to take advantage of the module spec feature added by :pep:`451`. "
"This allows ``__cached__`` to be set correctly for modules run this way, as "
"well as ensuring the real module name is always accessible as "
"``__spec__.name``."
msgstr ""
"Оновлено, щоб скористатися перевагами функції специфікації модуля, доданої "
":pep:`451`. Це дозволяє правильно встановити ``__cached__`` для модулів, що "
"запускаються таким чином, а також гарантує, що справжня назва модуля завжди "
"доступна як ``__spec__.name``."

#: ../../library/runpy.rst:96
msgid ""
"The setting of ``__cached__``, ``__loader__``, and ``__package__`` are "
"deprecated. See :class:`~importlib.machinery.ModuleSpec` for alternatives."
msgstr ""

#: ../../library/runpy.rst:106
msgid ""
"Execute the code at the named filesystem location and return the resulting "
"module's globals dictionary. As with a script name supplied to the CPython "
"command line, *file_path* may refer to a Python source file, a compiled "
"bytecode file or a valid :data:`sys.path` entry containing a :mod:`__main__`"
" module (e.g. a zipfile containing a top-level :file:`__main__.py` file)."
msgstr ""

#: ../../library/runpy.rst:113
msgid ""
"For a simple script, the specified code is simply executed in a fresh module"
" namespace. For a valid :data:`sys.path` entry (typically a zipfile or "
"directory), the entry is first added to the beginning of ``sys.path``. The "
"function then looks for and executes a :mod:`__main__` module using the "
"updated path. Note that there is no special protection against invoking an "
"existing ``__main__`` entry located elsewhere on ``sys.path`` if there is no"
" such module at the specified location."
msgstr ""

#: ../../library/runpy.rst:121
msgid ""
"The optional dictionary argument *init_globals* may be used to pre-populate "
"the module's globals dictionary before the code is executed. *init_globals* "
"will not be modified. If any of the special global variables below are "
"defined in *init_globals*, those definitions are overridden by "
":func:`run_path`."
msgstr ""

#: ../../library/runpy.rst:133
msgid ""
"``__name__`` is set to *run_name* if this optional argument is not "
":const:`None` and to ``'<run_path>'`` otherwise."
msgstr ""
"``__name__`` встановлено на *run_name*, якщо цей необов’язковий аргумент не "
"є :const:`None`, і на ``' <run_path> ''`` в іншому випадку."

#: ../../library/runpy.rst:136
msgid ""
"If *file_path* directly references a script file (whether as source or as "
"precompiled byte code), then ``__file__`` will be set to *file_path*, and "
"``__spec__``, ``__cached__``, ``__loader__`` and ``__package__`` will all be"
" set to :const:`None`."
msgstr ""

#: ../../library/runpy.rst:141
msgid ""
"If *file_path* is a reference to a valid :data:`sys.path` entry, then "
"``__spec__`` will be set appropriately for the imported :mod:`__main__` "
"module (that is, ``__spec__.name`` will always be ``__main__``). "
"``__file__``, ``__cached__``, ``__loader__`` and ``__package__`` will be "
":ref:`set as normal <import-mod-attrs>` based on the module spec."
msgstr ""

#: ../../library/runpy.rst:147
msgid ""
"A number of alterations are also made to the :mod:`sys` module. Firstly, "
":data:`sys.path` may be altered as described above. ``sys.argv[0]`` is "
"updated with the value of *file_path* and ``sys.modules[__name__]`` is "
"updated with a temporary module object for the module being executed. All "
"modifications to items in :mod:`sys` are reverted before the function "
"returns."
msgstr ""

#: ../../library/runpy.rst:154
msgid ""
"Note that, unlike :func:`run_module`, the alterations made to :mod:`sys` are"
" not optional in this function as these adjustments are essential to "
"allowing the execution of :data:`sys.path` entries. As the thread-safety "
"limitations still apply, use of this function in threaded code should be "
"either serialised with the import lock or delegated to a separate process."
msgstr ""

#: ../../library/runpy.rst:161
msgid ""
":ref:`using-on-interface-options` for equivalent functionality on the "
"command line (``python path/to/script``)."
msgstr ""
":ref:`using-on-interface-options` для еквівалентної функції в командному "
"рядку (``python path/to/script``)."

#: ../../library/runpy.rst:166
msgid ""
"Updated to take advantage of the module spec feature added by :pep:`451`. "
"This allows ``__cached__`` to be set correctly in the case where "
"``__main__`` is imported from a valid :data:`sys.path` entry rather than "
"being executed directly."
msgstr ""

#: ../../library/runpy.rst:172
msgid ""
"The setting of ``__cached__``, ``__loader__``, and ``__package__`` are "
"deprecated."
msgstr ""

#: ../../library/runpy.rst:178
msgid ":pep:`338` -- Executing modules as scripts"
msgstr ":pep:`338` -- Виконання модулів як скриптів"

#: ../../library/runpy.rst:179 ../../library/runpy.rst:182
msgid "PEP written and implemented by Nick Coghlan."
msgstr "PEP написав і реалізував Нік Коглан."

#: ../../library/runpy.rst:181
msgid ":pep:`366` -- Main module explicit relative imports"
msgstr ":pep:`366` -- Явний відносний імпорт основного модуля"

#: ../../library/runpy.rst:184
msgid ":pep:`451` -- A ModuleSpec Type for the Import System"
msgstr ":pep:`451` -- Тип ModuleSpec для системи імпорту"

#: ../../library/runpy.rst:185
msgid "PEP written and implemented by Eric Snow"
msgstr "PEP написав і реалізував Ерік Сноу"

#: ../../library/runpy.rst:187
msgid ":ref:`using-on-general` - CPython command line details"
msgstr ":ref:`using-on-general` - деталі командного рядка CPython"

#: ../../library/runpy.rst:189
msgid "The :func:`importlib.import_module` function"
msgstr "Функція :func:`importlib.import_module`"

#: ../../library/runpy.rst:32 ../../library/runpy.rst:103
msgid "module"
msgstr "модуль"

#: ../../library/runpy.rst:32 ../../library/runpy.rst:103
msgid "__main__"
msgstr ""
