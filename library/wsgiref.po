# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-22 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:17+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/wsgiref.rst:2
msgid ":mod:`!wsgiref` --- WSGI Utilities and Reference Implementation"
msgstr ""

#: ../../library/wsgiref.rst:10
msgid "**Source code:** :source:`Lib/wsgiref`"
msgstr ""

#: ../../library/wsgiref.rst:14
msgid ""
"The Web Server Gateway Interface (WSGI) is a standard interface between web "
"server software and web applications written in Python. Having a standard "
"interface makes it easy to use an application that supports WSGI with a "
"number of different web servers."
msgstr ""
"Інтерфейс шлюзу веб-сервера (WSGI) — це стандартний інтерфейс між програмним"
" забезпеченням веб-сервера та веб-додатками, написаними на Python. Наявність"
" стандартного інтерфейсу дозволяє легко використовувати програму, яка "
"підтримує WSGI, з кількома різними веб-серверами."

#: ../../library/wsgiref.rst:19
msgid ""
"Only authors of web servers and programming frameworks need to know every "
"detail and corner case of the WSGI design.  You don't need to understand "
"every detail of WSGI just to install a WSGI application or to write a web "
"application using an existing framework."
msgstr ""
"Лише автори веб-серверів і фреймворків програмування повинні знати кожну "
"деталь і наріжний випадок дизайну WSGI. Вам не потрібно розуміти кожну "
"деталь WSGI, щоб просто встановити програму WSGI або написати веб-програму "
"за допомогою існуючої структури."

#: ../../library/wsgiref.rst:24
msgid ""
":mod:`wsgiref` is a reference implementation of the WSGI specification that "
"can be used to add WSGI support to a web server or framework.  It provides "
"utilities for manipulating WSGI environment variables and response headers, "
"base classes for implementing WSGI servers, a demo HTTP server that serves "
"WSGI applications, types for static type checking, and a validation tool "
"that checks WSGI servers and applications for conformance to the WSGI "
"specification (:pep:`3333`)."
msgstr ""

#: ../../library/wsgiref.rst:32
msgid ""
"See `wsgi.readthedocs.io <https://wsgi.readthedocs.io/>`_ for more "
"information about WSGI, and links to tutorials and other resources."
msgstr ""
"Перегляньте `wsgi.readthedocs.io <https://wsgi.readthedocs.io/>`_ для "
"отримання додаткової інформації про WSGI, а також посилання на навчальні "
"посібники та інші ресурси."

#: ../../library/wsgiref.rst:39
msgid ":mod:`wsgiref.util` -- WSGI environment utilities"
msgstr ":mod:`wsgiref.util` -- утиліти середовища WSGI"

#: ../../library/wsgiref.rst:45
msgid ""
"This module provides a variety of utility functions for working with WSGI "
"environments.  A WSGI environment is a dictionary containing HTTP request "
"variables as described in :pep:`3333`.  All of the functions taking an "
"*environ* parameter expect a WSGI-compliant dictionary to be supplied; "
"please see :pep:`3333` for a detailed specification and "
":data:`~wsgiref.types.WSGIEnvironment` for a type alias that can be used in "
"type annotations."
msgstr ""

#: ../../library/wsgiref.rst:56
msgid ""
"Return a guess for whether ``wsgi.url_scheme`` should be \"http\" or "
"\"https\", by checking for a ``HTTPS`` environment variable in the *environ*"
" dictionary.  The return value is a string."
msgstr ""
"Поверніть припущення щодо того, чи має ``wsgi.url_scheme`` бути \"http\" чи "
"\"https\", перевіривши наявність змінної середовища ``HTTPS`` у словнику "
"*environ*. Поверненим значенням є рядок."

#: ../../library/wsgiref.rst:60
msgid ""
"This function is useful when creating a gateway that wraps CGI or a CGI-like"
" protocol such as FastCGI.  Typically, servers providing such protocols will"
" include a ``HTTPS`` variable with a value of \"1\", \"yes\", or \"on\" when"
" a request is received via SSL.  So, this function returns \"https\" if such"
" a value is found, and \"http\" otherwise."
msgstr ""
"Ця функція корисна під час створення шлюзу, який обгортає CGI або CGI-"
"подібний протокол, наприклад FastCGI. Як правило, сервери, що надають такі "
"протоколи, включатимуть змінну ``HTTPS`` зі значенням \"1\", \"yes\" або "
"\"on\", коли запит надходить через SSL. Таким чином, ця функція повертає "
"\"https\", якщо таке значення знайдено, і \"http\" в іншому випадку."

#: ../../library/wsgiref.rst:69
msgid ""
"Return the full request URI, optionally including the query string, using "
"the algorithm found in the \"URL Reconstruction\" section of :pep:`3333`.  "
"If *include_query* is false, the query string is not included in the "
"resulting URI."
msgstr ""
"Поверніть повний URI запиту, необов’язково включаючи рядок запиту, "
"використовуючи алгоритм, знайдений у розділі \"Реконструкція URL-адреси\" "
":pep:`3333`. Якщо *include_query* має значення false, рядок запиту не "
"включається в отриманий URI."

#: ../../library/wsgiref.rst:76
msgid ""
"Similar to :func:`request_uri`, except that the ``PATH_INFO`` and "
"``QUERY_STRING`` variables are ignored.  The result is the base URI of the "
"application object addressed by the request."
msgstr ""
"Подібно до :func:`request_uri`, за винятком того, що змінні ``PATH_INFO`` і "
"``QUERY_STRING`` ігноруються. Результатом є базовий URI об’єкта програми, "
"адресованого запитом."

#: ../../library/wsgiref.rst:83
msgid ""
"Shift a single name from ``PATH_INFO`` to ``SCRIPT_NAME`` and return the "
"name. The *environ* dictionary is *modified* in-place; use a copy if you "
"need to keep the original ``PATH_INFO`` or ``SCRIPT_NAME`` intact."
msgstr ""
"Перемістіть одну назву з ``PATH_INFO`` на ``SCRIPT_NAME`` і поверніть назву."
" Словник *environ* *змінено* на місці; використовуйте копію, якщо вам "
"потрібно зберегти оригінальний ``PATH_INFO`` або ``SCRIPT_NAME`` "
"недоторканим."

#: ../../library/wsgiref.rst:87
msgid ""
"If there are no remaining path segments in ``PATH_INFO``, ``None`` is "
"returned."
msgstr "Якщо в ``PATH_INFO`` немає сегментів шляху, повертається ``None``."

#: ../../library/wsgiref.rst:89
msgid ""
"Typically, this routine is used to process each portion of a request URI "
"path, for example to treat the path as a series of dictionary keys. This "
"routine modifies the passed-in environment to make it suitable for invoking "
"another WSGI application that is located at the target URI. For example, if "
"there is a WSGI application at ``/foo``, and the request URI path is "
"``/foo/bar/baz``, and the WSGI application at ``/foo`` calls "
":func:`shift_path_info`, it will receive the string \"bar\", and the "
"environment will be updated to be suitable for passing to a WSGI application"
" at ``/foo/bar``.  That is, ``SCRIPT_NAME`` will change from ``/foo`` to "
"``/foo/bar``, and ``PATH_INFO`` will change from ``/bar/baz`` to ``/baz``."
msgstr ""
"Як правило, ця підпрограма використовується для обробки кожної частини шляху"
" URI запиту, наприклад, щоб трактувати шлях як серію ключів словника. Ця "
"процедура змінює передане середовище, щоб зробити його придатним для виклику"
" іншої програми WSGI, яка розташована за цільовим URI. Наприклад, якщо за "
"адресою ``/foo`` є програма WSGI, а шлях URI запиту — ``/foo/bar/baz``, а "
"програма WSGI за адресою ``/foo`` викликає :func:`shift_path_info`, він "
"отримає рядок \"bar\", і середовище буде оновлено, щоб воно було придатним "
"для передачі до програми WSGI за адресою ``/foo/bar``. Тобто ``SCRIPT_NAME``"
" зміниться з ``/foo`` на ``/foo/bar``, а ``PATH_INFO`` зміниться з "
"``/bar/baz`` на ``/baz``."

#: ../../library/wsgiref.rst:100
msgid ""
"When ``PATH_INFO`` is just a \"/\", this routine returns an empty string and"
" appends a trailing slash to ``SCRIPT_NAME``, even though empty path "
"segments are normally ignored, and ``SCRIPT_NAME`` doesn't normally end in a"
" slash.  This is intentional behavior, to ensure that an application can "
"tell the difference between URIs ending in ``/x`` from ones ending in "
"``/x/`` when using this routine to do object traversal."
msgstr ""
"Коли ``PATH_INFO`` є просто \"/\", ця підпрограма повертає порожній рядок і "
"додає кінцеву косу риску до ``SCRIPT_NAME``, навіть якщо порожні сегменти "
"шляху зазвичай ігноруються, а ``SCRIPT_NAME`` зазвичай не закінчуються косою"
" рискою. Це навмисна поведінка, щоб гарантувати, що програма може визначити "
"різницю між URI, що закінчуються на ``/x``, від тих, що закінчуються на "
"``/x/`` під час використання цієї процедури для обходу об’єктів."

#: ../../library/wsgiref.rst:110
msgid "Update *environ* with trivial defaults for testing purposes."
msgstr ""
"Оновіть *environ* з тривіальними параметрами за замовчуванням для цілей "
"тестування."

#: ../../library/wsgiref.rst:112
msgid ""
"This routine adds various parameters required for WSGI, including "
"``HTTP_HOST``, ``SERVER_NAME``, ``SERVER_PORT``, ``REQUEST_METHOD``, "
"``SCRIPT_NAME``, ``PATH_INFO``, and all of the :pep:`3333`\\ -defined "
"``wsgi.*`` variables.  It only supplies default values, and does not replace"
" any existing settings for these variables."
msgstr ""
"Ця процедура додає різноманітні параметри, необхідні для WSGI, зокрема "
"``HTTP_HOST``, ``SERVER_NAME``, ``SERVER_PORT``, ``REQUEST_METHOD``, "
"``SCRIPT_NAME``, ``PATH_INFO`` та всі :pep:`3333`\\ -визначені змінні "
"``wsgi.*``. Він надає лише значення за замовчуванням і не замінює жодних "
"існуючих параметрів для цих змінних."

#: ../../library/wsgiref.rst:118
msgid ""
"This routine is intended to make it easier for unit tests of WSGI servers "
"and applications to set up dummy environments.  It should NOT be used by "
"actual WSGI servers or applications, since the data is fake!"
msgstr ""
"Ця процедура призначена для полегшення модульних тестів серверів і програм "
"WSGI для налаштування фіктивних середовищ. Його НЕ слід використовувати на "
"справжніх серверах або програмах WSGI, оскільки дані підроблені!"

#: ../../library/wsgiref.rst:122 ../../library/wsgiref.rst:170
#: ../../library/wsgiref.rst:293 ../../library/wsgiref.rst:426
msgid "Example usage::"
msgstr "Приклад використання::"

#: ../../library/wsgiref.rst:124
msgid ""
"from wsgiref.util import setup_testing_defaults\n"
"from wsgiref.simple_server import make_server\n"
"\n"
"# A relatively simple WSGI application. It's going to print out the\n"
"# environment dictionary after being updated by setup_testing_defaults\n"
"def simple_app(environ, start_response):\n"
"    setup_testing_defaults(environ)\n"
"\n"
"    status = '200 OK'\n"
"    headers = [('Content-type', 'text/plain; charset=utf-8')]\n"
"\n"
"    start_response(status, headers)\n"
"\n"
"    ret = [(\"%s: %s\\n\" % (key, value)).encode(\"utf-8\")\n"
"           for key, value in environ.items()]\n"
"    return ret\n"
"\n"
"with make_server('', 8000, simple_app) as httpd:\n"
"    print(\"Serving on port 8000...\")\n"
"    httpd.serve_forever()"
msgstr ""

#: ../../library/wsgiref.rst:146
msgid ""
"In addition to the environment functions above, the :mod:`wsgiref.util` "
"module also provides these miscellaneous utilities:"
msgstr ""
"На додаток до функцій середовища, наведених вище, модуль :mod:`wsgiref.util`"
" також надає такі різноманітні утиліти:"

#: ../../library/wsgiref.rst:152
msgid ""
"Return ``True`` if 'header_name' is an HTTP/1.1 \"Hop-by-Hop\" header, as "
"defined by :rfc:`2616`."
msgstr ""
"Повертає ``True``, якщо 'header_name' є заголовком HTTP/1.1 \"Hop-by-Hop\", "
"як визначено :rfc:`2616`."

#: ../../library/wsgiref.rst:158
msgid ""
"A concrete implementation of the :class:`wsgiref.types.FileWrapper` protocol"
" used to convert a file-like object to an :term:`iterator`. The resulting "
"objects are :term:`iterable`\\ s. As the object is iterated over, the "
"optional *blksize* parameter will be repeatedly passed to the *filelike* "
"object's :meth:`read` method to obtain bytestrings to yield.  When "
":meth:`read` returns an empty bytestring, iteration is ended and is not "
"resumable."
msgstr ""

#: ../../library/wsgiref.rst:166
msgid ""
"If *filelike* has a :meth:`close` method, the returned object will also have"
" a :meth:`close` method, and it will invoke the *filelike* object's "
":meth:`close` method when called."
msgstr ""
"Якщо *filelike* має метод :meth:`close`, повернутий об’єкт також матиме "
"метод :meth:`close`, і під час виклику він викличе метод :meth:`close` "
"об’єкта *filelike*."

#: ../../library/wsgiref.rst:172
msgid ""
"from io import StringIO\n"
"from wsgiref.util import FileWrapper\n"
"\n"
"# We're using a StringIO-buffer for as the file-like object\n"
"filelike = StringIO(\"This is an example file-like object\"*10)\n"
"wrapper = FileWrapper(filelike, blksize=5)\n"
"\n"
"for chunk in wrapper:\n"
"    print(chunk)"
msgstr ""

#: ../../library/wsgiref.rst:182
msgid "Support for :meth:`~object.__getitem__` method has been removed."
msgstr ""

#: ../../library/wsgiref.rst:187
msgid ":mod:`wsgiref.headers` -- WSGI response header tools"
msgstr ":mod:`wsgiref.headers` -- інструменти заголовків відповідей WSGI"

#: ../../library/wsgiref.rst:193
msgid ""
"This module provides a single class, :class:`Headers`, for convenient "
"manipulation of WSGI response headers using a mapping-like interface."
msgstr ""
"Цей модуль надає єдиний клас, :class:`Headers`, для зручного керування "
"заголовками відповідей WSGI за допомогою інтерфейсу, схожого на "
"відображення."

#: ../../library/wsgiref.rst:199
msgid ""
"Create a mapping-like object wrapping *headers*, which must be a list of "
"header name/value tuples as described in :pep:`3333`. The default value of "
"*headers* is an empty list."
msgstr ""
"Створіть *headers* об’єкт, схожий на відображення, який має бути списком "
"кортежів імені/значення заголовка, як описано в :pep:`3333`. Типовим "
"значенням *headers* є порожній список."

#: ../../library/wsgiref.rst:203
msgid ""
":class:`Headers` objects support typical mapping operations including "
":meth:`~object.__getitem__`, :meth:`~dict.get`, :meth:`~object.__setitem__`,"
" :meth:`~dict.setdefault`, :meth:`~object.__delitem__` and "
":meth:`~object.__contains__`.  For each of these methods, the key is the "
"header name (treated case-insensitively), and the value is the first value "
"associated with that header name.  Setting a header deletes any existing "
"values for that header, then adds a new value at the end of the wrapped "
"header list.  Headers' existing order is generally maintained, with new "
"headers added to the end of the wrapped list."
msgstr ""

#: ../../library/wsgiref.rst:213
msgid ""
"Unlike a dictionary, :class:`Headers` objects do not raise an error when you"
" try to get or delete a key that isn't in the wrapped header list. Getting a"
" nonexistent header just returns ``None``, and deleting a nonexistent header"
" does nothing."
msgstr ""
"На відміну від словника, об’єкти :class:`Headers` не викликають помилки, "
"коли ви намагаєтеся отримати або видалити ключ, якого немає в списку "
"заголовків. Отримання неіснуючого заголовка просто повертає ``None``, а "
"видалення неіснуючого заголовка нічого не робить."

#: ../../library/wsgiref.rst:218
msgid ""
":class:`Headers` objects also support :meth:`keys`, :meth:`values`, and "
":meth:`items` methods.  The lists returned by :meth:`keys` and :meth:`items`"
" can include the same key more than once if there is a multi-valued header."
"  The ``len()`` of a :class:`Headers` object is the same as the length of "
"its :meth:`items`, which is the same as the length of the wrapped header "
"list.  In fact, the :meth:`items` method just returns a copy of the wrapped "
"header list."
msgstr ""
"Об’єкти :class:`Headers` також підтримують методи :meth:`keys`, "
":meth:`values` і :meth:`items`. Списки, які повертаються :meth:`keys` і "
":meth:`items`, можуть містити той самий ключ більше одного разу, якщо є "
"багатозначний заголовок. ``len()`` об’єкта :class:`Headers` дорівнює довжині"
" його :meth:`items`, що дорівнює довжині оберненого списку заголовків. "
"Насправді метод :meth:`items` просто повертає копію загорнутого списку "
"заголовків."

#: ../../library/wsgiref.rst:225
msgid ""
"Calling ``bytes()`` on a :class:`Headers` object returns a formatted "
"bytestring suitable for transmission as HTTP response headers.  Each header "
"is placed on a line with its value, separated by a colon and a space. Each "
"line is terminated by a carriage return and line feed, and the bytestring is"
" terminated with a blank line."
msgstr ""
"Виклик ``bytes()`` для об’єкта :class:`Headers` повертає відформатований "
"байтовий рядок, придатний для передачі як заголовки відповіді HTTP. Кожен "
"заголовок розміщується в рядку зі своїм значенням, розділеним двокрапкою та "
"пробілом. Кожен рядок закінчується символом повернення каретки та переводом "
"рядка, а байтовий рядок завершується порожнім рядком."

#: ../../library/wsgiref.rst:231
msgid ""
"In addition to their mapping interface and formatting features, "
":class:`Headers` objects also have the following methods for querying and "
"adding multi-valued headers, and for adding headers with MIME parameters:"
msgstr ""
"Окрім інтерфейсу відображення та функцій форматування, об’єкти "
":class:`Headers` також мають такі методи для запитів і додавання "
"багатозначних заголовків, а також для додавання заголовків із параметрами "
"MIME:"

#: ../../library/wsgiref.rst:238
msgid "Return a list of all the values for the named header."
msgstr "Повертає список усіх значень для названого заголовка."

#: ../../library/wsgiref.rst:240
msgid ""
"The returned list will be sorted in the order they appeared in the original "
"header list or were added to this instance, and may contain duplicates.  Any"
" fields deleted and re-inserted are always appended to the header list.  If "
"no fields exist with the given name, returns an empty list."
msgstr ""
"Повернений список буде відсортовано в тому порядку, у якому вони з’явилися у"
" вихідному списку заголовків або були додані до цього екземпляра, і може "
"містити дублікати. Будь-які видалені та повторно вставлені поля завжди "
"додаються до списку заголовків. Якщо немає полів із заданим іменем, повертає"
" порожній список."

#: ../../library/wsgiref.rst:248
msgid ""
"Add a (possibly multi-valued) header, with optional MIME parameters "
"specified via keyword arguments."
msgstr ""
"Додайте (можливо, багатозначний) заголовок із необов’язковими параметрами "
"MIME, указаними через аргументи ключового слова."

#: ../../library/wsgiref.rst:251
msgid ""
"*name* is the header field to add.  Keyword arguments can be used to set "
"MIME parameters for the header field.  Each parameter must be a string or "
"``None``. Underscores in parameter names are converted to dashes, since "
"dashes are illegal in Python identifiers, but many MIME parameter names "
"include dashes.  If the parameter value is a string, it is added to the "
"header value parameters in the form ``name=\"value\"``. If it is ``None``, "
"only the parameter name is added. (This is used for MIME parameters without "
"a value.)  Example usage::"
msgstr ""
"*name* – поле заголовка, яке потрібно додати. Аргументи ключового слова "
"можна використовувати для встановлення параметрів MIME для поля заголовка. "
"Кожен параметр має бути рядком або ``None``. Підкреслення в назвах "
"параметрів перетворюються на тире, оскільки тире заборонені в "
"ідентифікаторах Python, але багато імен параметрів MIME містять тире. Якщо "
"значення параметра є рядком, воно додається до параметрів значення заголовка"
" у формі ``name=\"value\"``. Якщо вибрано ``None``, додається лише назва "
"параметра. (Це використовується для параметрів MIME без значення.) Приклад "
"використання::"

#: ../../library/wsgiref.rst:259
msgid "h.add_header('content-disposition', 'attachment', filename='bud.gif')"
msgstr ""

#: ../../library/wsgiref.rst:261
msgid "The above will add a header that looks like this::"
msgstr "Наведене вище додасть заголовок, який виглядає так::"

#: ../../library/wsgiref.rst:263
msgid "Content-Disposition: attachment; filename=\"bud.gif\""
msgstr ""

#: ../../library/wsgiref.rst:266
msgid "*headers* parameter is optional."
msgstr "Параметр *headers* необов’язковий."

#: ../../library/wsgiref.rst:271
msgid ":mod:`wsgiref.simple_server` -- a simple WSGI HTTP server"
msgstr ":mod:`wsgiref.simple_server` -- простий HTTP-сервер WSGI"

#: ../../library/wsgiref.rst:277
msgid ""
"This module implements a simple HTTP server (based on :mod:`http.server`) "
"that serves WSGI applications.  Each server instance serves a single WSGI "
"application on a given host and port.  If you want to serve multiple "
"applications on a single host and port, you should create a WSGI application"
" that parses ``PATH_INFO`` to select which application to invoke for each "
"request.  (E.g., using the :func:`shift_path_info` function from "
":mod:`wsgiref.util`.)"
msgstr ""
"Цей модуль реалізує простий HTTP-сервер (на основі :mod:`http.server`), який"
" обслуговує програми WSGI. Кожен екземпляр сервера обслуговує одну програму "
"WSGI на заданому хості та порту. Якщо ви хочете обслуговувати кілька програм"
" на одному хості та порту, вам слід створити програму WSGI, яка аналізує "
"``PATH_INFO``, щоб вибрати, яку програму викликати для кожного запиту. "
"(Наприклад, за допомогою функції :func:`shift_path_info` з "
":mod:`wsgiref.util`.)"

#: ../../library/wsgiref.rst:288
msgid ""
"Create a new WSGI server listening on *host* and *port*, accepting "
"connections for *app*.  The return value is an instance of the supplied "
"*server_class*, and will process requests using the specified "
"*handler_class*.  *app* must be a WSGI application object, as defined by "
":pep:`3333`."
msgstr ""
"Створіть новий сервер WSGI, який прослуховує *хост* і *порт*, приймаючи "
"з’єднання для *програми*. Повернене значення є екземпляром наданого "
"*server_class* і оброблятиме запити, використовуючи вказаний "
"*handler_class*. *app* має бути об’єктом програми WSGI, як визначено "
":pep:`3333`."

#: ../../library/wsgiref.rst:295
msgid ""
"from wsgiref.simple_server import make_server, demo_app\n"
"\n"
"with make_server('', 8000, demo_app) as httpd:\n"
"    print(\"Serving HTTP on port 8000...\")\n"
"\n"
"    # Respond to requests until process is killed\n"
"    httpd.serve_forever()\n"
"\n"
"    # Alternative: serve one request, then exit\n"
"    httpd.handle_request()"
msgstr ""

#: ../../library/wsgiref.rst:309
msgid ""
"This function is a small but complete WSGI application that returns a text "
"page containing the message \"Hello world!\" and a list of the key/value "
"pairs provided in the *environ* parameter.  It's useful for verifying that a"
" WSGI server (such as :mod:`wsgiref.simple_server`) is able to run a simple "
"WSGI application correctly."
msgstr ""
"Ця функція є невеликою, але повною програмою WSGI, яка повертає текстову "
"сторінку, що містить повідомлення \"Hello world!\" і список пар "
"ключ/значення, наданий у параметрі *environ*. Це корисно для перевірки того,"
" що сервер WSGI (наприклад, :mod:`wsgiref.simple_server`) здатний правильно "
"запускати просту програму WSGI."

#: ../../library/wsgiref.rst:318
msgid ""
"Create a :class:`WSGIServer` instance.  *server_address* should be a "
"``(host,port)`` tuple, and *RequestHandlerClass* should be the subclass of "
":class:`http.server.BaseHTTPRequestHandler` that will be used to process "
"requests."
msgstr ""
"Створіть екземпляр :class:`WSGIServer`. *server_address* має бути кортежем "
"``(host,port)``, а *RequestHandlerClass* має бути підкласом "
":class:`http.server.BaseHTTPRequestHandler`, який використовуватиметься для "
"обробки запитів."

#: ../../library/wsgiref.rst:323
msgid ""
"You do not normally need to call this constructor, as the "
":func:`make_server` function can handle all the details for you."
msgstr ""
"Зазвичай вам не потрібно викликати цей конструктор, оскільки функція "
":func:`make_server` може обробити всі деталі за вас."

#: ../../library/wsgiref.rst:326
msgid ""
":class:`WSGIServer` is a subclass of :class:`http.server.HTTPServer`, so all"
" of its methods (such as :meth:`serve_forever` and :meth:`handle_request`) "
"are available. :class:`WSGIServer` also provides these WSGI-specific "
"methods:"
msgstr ""
":class:`WSGIServer` є підкласом :class:`http.server.HTTPServer`, тому всі "
"його методи (такі як :meth:`serve_forever` і :meth:`handle_request`) "
"доступні. :class:`WSGIServer` також надає ці спеціальні методи WSGI:"

#: ../../library/wsgiref.rst:333
msgid ""
"Sets the callable *application* as the WSGI application that will receive "
"requests."
msgstr ""
"Встановлює викликану *програму* як програму WSGI, яка отримуватиме запити."

#: ../../library/wsgiref.rst:339
msgid "Returns the currently set application callable."
msgstr ""

#: ../../library/wsgiref.rst:341
msgid ""
"Normally, however, you do not need to use these additional methods, as "
":meth:`set_app` is normally called by :func:`make_server`, and the "
":meth:`get_app` exists mainly for the benefit of request handler instances."
msgstr ""
"Однак зазвичай вам не потрібно використовувати ці додаткові методи, оскільки"
" :meth:`set_app` зазвичай викликається :func:`make_server`, а "
":meth:`get_app` існує в основному для вигоди екземплярів обробника запитів."

#: ../../library/wsgiref.rst:348
msgid ""
"Create an HTTP handler for the given *request* (i.e. a socket), "
"*client_address* (a ``(host,port)`` tuple), and *server* "
"(:class:`WSGIServer` instance)."
msgstr ""
"Створіть обробник HTTP для вказаного *запиту* (тобто сокета), "
"*client_address* (кортежу ``(host,port)`` і *server* (:class:`WSGIServer` "
"екземпляр)."

#: ../../library/wsgiref.rst:351
msgid ""
"You do not need to create instances of this class directly; they are "
"automatically created as needed by :class:`WSGIServer` objects.  You can, "
"however, subclass this class and supply it as a *handler_class* to the "
":func:`make_server` function.  Some possibly relevant methods for overriding"
" in subclasses:"
msgstr ""
"Вам не потрібно створювати екземпляри цього класу безпосередньо; вони "
"автоматично створюються за потреби об’єктами :class:`WSGIServer`. Однак ви "
"можете створити підклас цього класу та надати його як *handler_class* для "
"функції :func:`make_server`. Деякі можливі релевантні методи перевизначення "
"в підкласах:"

#: ../../library/wsgiref.rst:360
msgid ""
"Return a :data:`~wsgiref.types.WSGIEnvironment` dictionary for a request.  "
"The default implementation copies the contents of the :class:`WSGIServer` "
"object's :attr:`base_environ` dictionary attribute and then adds various "
"headers derived from the HTTP request.  Each call to this method should "
"return a new dictionary containing all of the relevant CGI environment "
"variables as specified in :pep:`3333`."
msgstr ""

#: ../../library/wsgiref.rst:371
msgid ""
"Return the object that should be used as the ``wsgi.errors`` stream. The "
"default implementation just returns ``sys.stderr``."
msgstr ""
"Повертає об’єкт, який слід використовувати як потік ``wsgi.errors``. "
"Реалізація за замовчуванням просто повертає ``sys.stderr``."

#: ../../library/wsgiref.rst:377
msgid ""
"Process the HTTP request.  The default implementation creates a handler "
"instance using a :mod:`wsgiref.handlers` class to implement the actual WSGI "
"application interface."
msgstr ""
"Обробити HTTP-запит. Стандартна реалізація створює екземпляр обробника за "
"допомогою класу :mod:`wsgiref.handlers` для реалізації фактичного інтерфейсу"
" програми WSGI."

#: ../../library/wsgiref.rst:383
msgid ":mod:`wsgiref.validate` --- WSGI conformance checker"
msgstr ":mod:`wsgiref.validate` --- Перевірка відповідності WSGI"

#: ../../library/wsgiref.rst:389
msgid ""
"When creating new WSGI application objects, frameworks, servers, or "
"middleware, it can be useful to validate the new code's conformance using "
":mod:`wsgiref.validate`.  This module provides a function that creates WSGI "
"application objects that validate communications between a WSGI server or "
"gateway and a WSGI application object, to check both sides for protocol "
"conformance."
msgstr ""
"Під час створення нових об’єктів програми WSGI, фреймворків, серверів або "
"проміжного програмного забезпечення може бути корисно перевірити "
"відповідність нового коду за допомогою :mod:`wsgiref.validate`. Цей модуль "
"забезпечує функцію, яка створює об’єкти програми WSGI, які перевіряють "
"зв’язок між сервером або шлюзом WSGI та об’єктом програми WSGI, щоб "
"перевірити обидві сторони на відповідність протоколу."

#: ../../library/wsgiref.rst:396
msgid ""
"Note that this utility does not guarantee complete :pep:`3333` compliance; "
"an absence of errors from this module does not necessarily mean that errors "
"do not exist.  However, if this module does produce an error, then it is "
"virtually certain that either the server or application is not 100% "
"compliant."
msgstr ""
"Зауважте, що ця утиліта не гарантує повної відповідності :pep:`3333`; "
"відсутність помилок у цьому модулі не обов'язково означає, що помилок немає."
" Однак, якщо цей модуль видає помилку, тоді можна з упевненістю сказати, що "
"або сервер, або програма не відповідають вимогам на 100%."

#: ../../library/wsgiref.rst:401
msgid ""
"This module is based on the :mod:`paste.lint` module from Ian Bicking's "
"\"Python Paste\" library."
msgstr ""
"Цей модуль базується на модулі :mod:`paste.lint` з бібліотеки \"Python "
"Paste\" Яна Бікінга."

#: ../../library/wsgiref.rst:407
msgid ""
"Wrap *application* and return a new WSGI application object.  The returned "
"application will forward all requests to the original *application*, and "
"will check that both the *application* and the server invoking it are "
"conforming to the WSGI specification and to :rfc:`2616`."
msgstr ""
"Оберніть *програму* та поверніть новий об’єкт програми WSGI. Повернена "
"програма перенаправлятиме всі запити до оригінальної *програми* та "
"перевірятиме, чи *програма* та сервер, який її викликає, відповідають "
"специфікації WSGI та :rfc:`2616`."

#: ../../library/wsgiref.rst:412
msgid ""
"Any detected nonconformance results in an :exc:`AssertionError` being "
"raised; note, however, that how these errors are handled is server-"
"dependent.  For example, :mod:`wsgiref.simple_server` and other servers "
"based on :mod:`wsgiref.handlers` (that don't override the error handling "
"methods to do something else) will simply output a message that an error has"
" occurred, and dump the traceback to ``sys.stderr`` or some other error "
"stream."
msgstr ""
"Будь-яка виявлена невідповідність призводить до появи :exc:`AssertionError`;"
" однак зауважте, що спосіб обробки цих помилок залежить від сервера. "
"Наприклад, :mod:`wsgiref.simple_server` та інші сервери, засновані на "
":mod:`wsgiref.handlers` (які не перевизначають методи обробки помилок, щоб "
"зробити щось інше) просто виведуть повідомлення про те, що сталася помилка, "
"і скиньте трасування до ``sys.stderr`` або іншого потоку помилок."

#: ../../library/wsgiref.rst:419
msgid ""
"This wrapper may also generate output using the :mod:`warnings` module to "
"indicate behaviors that are questionable but which may not actually be "
"prohibited by :pep:`3333`.  Unless they are suppressed using Python command-"
"line options or the :mod:`warnings` API, any such warnings will be written "
"to ``sys.stderr`` (*not* ``wsgi.errors``, unless they happen to be the same "
"object)."
msgstr ""
"Ця обгортка також може генерувати вихідні дані за допомогою модуля "
":mod:`warnings` для вказівки поведінки, яка є сумнівною, але яка насправді "
"не може бути заборонена :pep:`3333`. Якщо їх не придушено за допомогою "
"параметрів командного рядка Python або API :mod:`warnings`, будь-які такі "
"попередження будуть записані в ``sys.stderr`` (*не* ``wsgi.errors``, якщо "
"вони не стаються з бути тим самим об'єктом)."

#: ../../library/wsgiref.rst:428
msgid ""
"from wsgiref.validate import validator\n"
"from wsgiref.simple_server import make_server\n"
"\n"
"# Our callable object which is intentionally not compliant to the\n"
"# standard, so the validator is going to break\n"
"def simple_app(environ, start_response):\n"
"    status = '200 OK'  # HTTP Status\n"
"    headers = [('Content-type', 'text/plain')]  # HTTP Headers\n"
"    start_response(status, headers)\n"
"\n"
"    # This is going to break because we need to return a list, and\n"
"    # the validator is going to inform us\n"
"    return b\"Hello World\"\n"
"\n"
"# This is the application wrapped in a validator\n"
"validator_app = validator(simple_app)\n"
"\n"
"with make_server('', 8000, validator_app) as httpd:\n"
"    print(\"Listening on port 8000....\")\n"
"    httpd.serve_forever()"
msgstr ""

#: ../../library/wsgiref.rst:451
msgid ":mod:`wsgiref.handlers` -- server/gateway base classes"
msgstr ":mod:`wsgiref.handlers` -- базові класи сервера/шлюзу"

#: ../../library/wsgiref.rst:457
msgid ""
"This module provides base handler classes for implementing WSGI servers and "
"gateways.  These base classes handle most of the work of communicating with "
"a WSGI application, as long as they are given a CGI-like environment, along "
"with input, output, and error streams."
msgstr ""
"Цей модуль надає базові класи обробки для реалізації серверів і шлюзів WSGI."
" Ці базові класи виконують більшу частину роботи зі спілкування з додатком "
"WSGI, якщо їм надано середовище, подібне до CGI, а також потоки введення, "
"виведення та помилок."

#: ../../library/wsgiref.rst:465
msgid ""
"CGI-based invocation via ``sys.stdin``, ``sys.stdout``, ``sys.stderr`` and "
"``os.environ``.  This is useful when you have a WSGI application and want to"
" run it as a CGI script.  Simply invoke ``CGIHandler().run(app)``, where "
"``app`` is the WSGI application object you wish to invoke."
msgstr ""
"Виклик на основі CGI через ``sys.stdin``, ``sys.stdout``, ``sys.stderr`` і "
"``os.environ``. Це корисно, якщо у вас є програма WSGI і ви хочете запустити"
" її як сценарій CGI. Просто викличте ``CGIHandler().run(app)``, де ``app`` "
"це об’єкт програми WSGI, який ви хочете викликати."

#: ../../library/wsgiref.rst:470
msgid ""
"This class is a subclass of :class:`BaseCGIHandler` that sets "
"``wsgi.run_once`` to true, ``wsgi.multithread`` to false, and "
"``wsgi.multiprocess`` to true, and always uses :mod:`sys` and :mod:`os` to "
"obtain the necessary CGI streams and environment."
msgstr ""
"Цей клас є підкласом :class:`BaseCGIHandler`, який встановлює "
"``wsgi.run_once`` значення true, ``wsgi.multithread`` значення false і "
"``wsgi.multiprocess`` значення true, і завжди використовує :mod:`sys` і "
":mod:`os` для отримання необхідних потоків CGI та середовища."

#: ../../library/wsgiref.rst:478
msgid ""
"A specialized alternative to :class:`CGIHandler`, for use when deploying on "
"Microsoft's IIS web server, without having set the config allowPathInfo "
"option (IIS>=7) or metabase allowPathInfoForScriptMappings (IIS<7)."
msgstr ""
"Спеціалізована альтернатива :class:`CGIHandler` для використання під час "
"розгортання на веб-сервері Microsoft IIS без встановлення опції "
"allowPathInfo конфігурації (IIS>=7) або дозволу метабази "
"allowPathInfoForScriptMappings (IIS<7)."

#: ../../library/wsgiref.rst:482
msgid ""
"By default, IIS gives a ``PATH_INFO`` that duplicates the ``SCRIPT_NAME`` at"
" the front, causing problems for WSGI applications that wish to implement "
"routing. This handler strips any such duplicated path."
msgstr ""
"За замовчуванням IIS надає ``PATH_INFO``, який дублює ``SCRIPT_NAME`` "
"спереду, що спричиняє проблеми для програм WSGI, які бажають реалізувати "
"маршрутизацію. Цей обробник видаляє будь-який такий дубльований шлях."

#: ../../library/wsgiref.rst:486
msgid ""
"IIS can be configured to pass the correct ``PATH_INFO``, but this causes "
"another bug where ``PATH_TRANSLATED`` is wrong. Luckily this variable is "
"rarely used and is not guaranteed by WSGI. On IIS<7, though, the setting can"
" only be made on a vhost level, affecting all other script mappings, many of"
" which break when exposed to the ``PATH_TRANSLATED`` bug. For this reason "
"IIS<7 is almost never deployed with the fix (Even IIS7 rarely uses it "
"because there is still no UI for it.)."
msgstr ""
"IIS можна налаштувати для передачі правильного ``PATH_INFO``, але це "
"спричиняє ще одну помилку, коли ``PATH_TRANSLATED`` неправильний. На щастя, "
"ця змінна рідко використовується і не гарантується WSGI. Однак у IIS<7 це "
"налаштування можна зробити лише на рівні vhost, впливаючи на всі інші "
"зіставлення сценаріїв, багато з яких ламаються, коли піддаються помилці "
"``PATH_TRANSLATED``. З цієї причини IIS<7 майже ніколи не розгортається з "
"виправленням (навіть IIS7 рідко використовує його, оскільки для нього все ще"
" немає інтерфейсу користувача)."

#: ../../library/wsgiref.rst:494
msgid ""
"There is no way for CGI code to tell whether the option was set, so a "
"separate handler class is provided.  It is used in the same way as "
":class:`CGIHandler`, i.e., by calling ``IISCGIHandler().run(app)``, where "
"``app`` is the WSGI application object you wish to invoke."
msgstr ""
"Код CGI не може визначити, чи встановлено параметр, тому надається окремий "
"клас обробника. Він використовується так само, як :class:`CGIHandler`, тобто"
" шляхом виклику ``IISCGIHandler().run(app)``, де ``app`` є об'єктом програми"
" WSGI, який ви хочете викликати."

#: ../../library/wsgiref.rst:504
msgid ""
"Similar to :class:`CGIHandler`, but instead of using the :mod:`sys` and "
":mod:`os` modules, the CGI environment and I/O streams are specified "
"explicitly. The *multithread* and *multiprocess* values are used to set the "
"``wsgi.multithread`` and ``wsgi.multiprocess`` flags for any applications "
"run by the handler instance."
msgstr ""
"Подібно до :class:`CGIHandler`, але замість використання модулів :mod:`sys` "
"і :mod:`os` середовище CGI та потоки введення/виведення вказуються явно. "
"Значення *multithread* і *multiprocess* використовуються для встановлення "
"прапорів ``wsgi.multithread`` і ``wsgi.multiprocess`` для будь-яких програм,"
" запущених екземпляром обробника."

#: ../../library/wsgiref.rst:510
msgid ""
"This class is a subclass of :class:`SimpleHandler` intended for use with "
"software other than HTTP \"origin servers\".  If you are writing a gateway "
"protocol implementation (such as CGI, FastCGI, SCGI, etc.) that uses a "
"``Status:`` header to send an HTTP status, you probably want to subclass "
"this instead of :class:`SimpleHandler`."
msgstr ""
"Цей клас є підкласом :class:`SimpleHandler`, призначеного для використання з"
" програмним забезпеченням, відмінним від HTTP-серверів. Якщо ви пишете "
"реалізацію протоколу шлюзу (наприклад, CGI, FastCGI, SCGI тощо), яка "
"використовує заголовок ``Status:`` для надсилання статусу HTTP, можливо, ви "
"захочете створити підклас цього замість :class:`SimpleHandler` ."

#: ../../library/wsgiref.rst:519
msgid ""
"Similar to :class:`BaseCGIHandler`, but designed for use with HTTP origin "
"servers.  If you are writing an HTTP server implementation, you will "
"probably want to subclass this instead of :class:`BaseCGIHandler`."
msgstr ""
"Подібний до :class:`BaseCGIHandler`, але призначений для використання з "
"вихідними серверами HTTP. Якщо ви пишете реалізацію сервера HTTP, ви, "
"ймовірно, захочете створити підклас цього замість :class:`BaseCGIHandler`."

#: ../../library/wsgiref.rst:523
msgid ""
"This class is a subclass of :class:`BaseHandler`.  It overrides the "
":meth:`!__init__`, :meth:`~BaseHandler.get_stdin`, "
":meth:`~BaseHandler.get_stderr`, :meth:`~BaseHandler.add_cgi_vars`, "
":meth:`~BaseHandler._write`, and :meth:`~BaseHandler._flush` methods to "
"support explicitly setting the environment and streams via the constructor."
"  The supplied environment and streams are stored in the :attr:`stdin`, "
":attr:`stdout`, :attr:`stderr`, and :attr:`environ` attributes."
msgstr ""

#: ../../library/wsgiref.rst:532
msgid ""
"The :meth:`~io.BufferedIOBase.write` method of *stdout* should write each "
"chunk in full, like :class:`io.BufferedIOBase`."
msgstr ""
"Метод :meth:`~io.BufferedIOBase.write` *stdout* має записувати кожен "
"фрагмент повністю, як :class:`io.BufferedIOBase`."

#: ../../library/wsgiref.rst:538
msgid ""
"This is an abstract base class for running WSGI applications.  Each instance"
" will handle a single HTTP request, although in principle you could create a"
" subclass that was reusable for multiple requests."
msgstr ""
"Це абстрактний базовий клас для запуску програм WSGI. Кожен екземпляр "
"оброблятиме один HTTP-запит, хоча в принципі ви можете створити підклас, "
"який можна повторно використовувати для кількох запитів."

#: ../../library/wsgiref.rst:542
msgid ""
":class:`BaseHandler` instances have only one method intended for external "
"use:"
msgstr ""
"Екземпляри :class:`BaseHandler` мають лише один метод, призначений для "
"зовнішнього використання:"

#: ../../library/wsgiref.rst:547
msgid "Run the specified WSGI application, *app*."
msgstr "Запустіть вказану програму WSGI, *app*."

#: ../../library/wsgiref.rst:549
msgid ""
"All of the other :class:`BaseHandler` methods are invoked by this method in "
"the process of running the application, and thus exist primarily to allow "
"customizing the process."
msgstr ""
"Усі інші методи :class:`BaseHandler` викликаються цим методом у процесі "
"запуску програми, і, отже, існують, перш за все, щоб дозволити налаштувати "
"процес."

#: ../../library/wsgiref.rst:553
msgid "The following methods MUST be overridden in a subclass:"
msgstr "Наступні методи ПОВИННІ бути замінені в підкласі:"

#: ../../library/wsgiref.rst:558
msgid ""
"Buffer the bytes *data* for transmission to the client.  It's okay if this "
"method actually transmits the data; :class:`BaseHandler` just separates "
"write and flush operations for greater efficiency when the underlying system"
" actually has such a distinction."
msgstr ""
"Буферизуйте байти *data* для передачі клієнту. Це нормально, якщо цей метод "
"дійсно передає дані; :class:`BaseHandler` просто розділяє операції запису та"
" очищення для більшої ефективності, коли основна система насправді має таку "
"відмінність."

#: ../../library/wsgiref.rst:566
msgid ""
"Force buffered data to be transmitted to the client.  It's okay if this "
"method is a no-op (i.e., if :meth:`_write` actually sends the data)."
msgstr ""
"Примусова передача буферизованих даних клієнту. Це нормально, якщо цей метод"
" є безопераційним (тобто якщо :meth:`_write` справді надсилає дані)."

#: ../../library/wsgiref.rst:572
msgid ""
"Return an object compatible with :class:`~wsgiref.types.InputStream` "
"suitable for use as the ``wsgi.input`` of the request currently being "
"processed."
msgstr ""

#: ../../library/wsgiref.rst:579
msgid ""
"Return an object compatible with :class:`~wsgiref.types.ErrorStream` "
"suitable for use as the ``wsgi.errors`` of the request currently being "
"processed."
msgstr ""

#: ../../library/wsgiref.rst:586
msgid ""
"Insert CGI variables for the current request into the :attr:`environ` "
"attribute."
msgstr "Вставте змінні CGI для поточного запиту в атрибут :attr:`environ`."

#: ../../library/wsgiref.rst:588
msgid ""
"Here are some other methods and attributes you may wish to override. This "
"list is only a summary, however, and does not include every method that can "
"be overridden.  You should consult the docstrings and source code for "
"additional information before attempting to create a customized "
":class:`BaseHandler` subclass."
msgstr ""
"Ось деякі інші методи та атрибути, які ви можете змінити. Однак цей список є"
" лише підсумковим і не включає всі методи, які можна замінити. Перш ніж "
"намагатися створити налаштований підклас :class:`BaseHandler`, вам слід "
"переглянути рядки документації та вихідний код для отримання додаткової "
"інформації."

#: ../../library/wsgiref.rst:594
msgid "Attributes and methods for customizing the WSGI environment:"
msgstr "Атрибути та методи налаштування середовища WSGI:"

#: ../../library/wsgiref.rst:599
msgid ""
"The value to be used for the ``wsgi.multithread`` environment variable.  It "
"defaults to true in :class:`BaseHandler`, but may have a different default "
"(or be set by the constructor) in the other subclasses."
msgstr ""
"Значення, яке буде використовуватися для змінної середовища "
"``wsgi.multithread``. За замовчуванням у :class:`BaseHandler` він має "
"значення true, але може мати інше значення за замовчуванням (або бути "
"встановленим конструктором) в інших підкласах."

#: ../../library/wsgiref.rst:606
msgid ""
"The value to be used for the ``wsgi.multiprocess`` environment variable.  It"
" defaults to true in :class:`BaseHandler`, but may have a different default "
"(or be set by the constructor) in the other subclasses."
msgstr ""
"Значення, яке буде використовуватися для змінної середовища "
"``wsgi.multiprocess``. За замовчуванням у :class:`BaseHandler` він має "
"значення true, але може мати інше значення за замовчуванням (або бути "
"встановленим конструктором) в інших підкласах."

#: ../../library/wsgiref.rst:613
msgid ""
"The value to be used for the ``wsgi.run_once`` environment variable.  It "
"defaults to false in :class:`BaseHandler`, but :class:`CGIHandler` sets it "
"to true by default."
msgstr ""
"Значення, яке буде використовуватися для змінної середовища "
"``wsgi.run_once``. За замовчуванням у :class:`BaseHandler` встановлено "
"значення false, але :class:`CGIHandler` за замовчуванням встановлює значення"
" true."

#: ../../library/wsgiref.rst:620
msgid ""
"The default environment variables to be included in every request's WSGI "
"environment.  By default, this is a copy of ``os.environ`` at the time that "
":mod:`wsgiref.handlers` was imported, but subclasses can either create their"
" own at the class or instance level.  Note that the dictionary should be "
"considered read-only, since the default value is shared between multiple "
"classes and instances."
msgstr ""
"Змінні середовища за замовчуванням, які будуть включені в середовище WSGI "
"кожного запиту. За замовчуванням це копія ``os.environ`` на момент імпорту "
":mod:`wsgiref.handlers`, але підкласи можуть створювати власні на рівні "
"класу або екземпляра. Зауважте, що словник слід вважати доступним лише для "
"читання, оскільки значення за замовчуванням використовується між кількома "
"класами та примірниками."

#: ../../library/wsgiref.rst:630
msgid ""
"If the :attr:`origin_server` attribute is set, this attribute's value is "
"used to set the default ``SERVER_SOFTWARE`` WSGI environment variable, and "
"also to set a default ``Server:`` header in HTTP responses.  It is ignored "
"for handlers (such as :class:`BaseCGIHandler` and :class:`CGIHandler`) that "
"are not HTTP origin servers."
msgstr ""
"Якщо встановлено атрибут :attr:`origin_server`, значення цього атрибута "
"використовується для встановлення змінної середовища WSGI за замовчуванням "
"``SERVER_SOFTWARE``, а також для встановлення заголовка ``Server:`` за "
"замовчуванням у відповідях HTTP. Він ігнорується для обробників (таких як "
":class:`BaseCGIHandler` і :class:`CGIHandler`), які не є вихідними серверами"
" HTTP."

#: ../../library/wsgiref.rst:636
msgid ""
"The term \"Python\" is replaced with implementation specific term like "
"\"CPython\", \"Jython\" etc."
msgstr ""
"Термін \"Python\" замінено терміном для конкретної реалізації, наприклад "
"\"CPython\", \"Jython\" тощо."

#: ../../library/wsgiref.rst:642
msgid ""
"Return the URL scheme being used for the current request.  The default "
"implementation uses the :func:`guess_scheme` function from "
":mod:`wsgiref.util` to guess whether the scheme should be \"http\" or "
"\"https\", based on the current request's :attr:`environ` variables."
msgstr ""
"Повертає схему URL-адреси, яка використовується для поточного запиту. "
"Реалізація за замовчуванням використовує функцію :func:`guess_scheme` з "
":mod:`wsgiref.util`, щоб визначити, чи має бути схема \"http\" чи \"https\","
" на основі змінних :attr:`environ` поточного запиту."

#: ../../library/wsgiref.rst:650
msgid ""
"Set the :attr:`environ` attribute to a fully populated WSGI environment.  "
"The default implementation uses all of the above methods and attributes, "
"plus the :meth:`get_stdin`, :meth:`get_stderr`, and :meth:`add_cgi_vars` "
"methods and the :attr:`wsgi_file_wrapper` attribute.  It also inserts a "
"``SERVER_SOFTWARE`` key if not present, as long as the :attr:`origin_server`"
" attribute is a true value and the :attr:`server_software` attribute is set."
msgstr ""

#: ../../library/wsgiref.rst:657
msgid "Methods and attributes for customizing exception handling:"
msgstr "Методи та атрибути для налаштування обробки винятків:"

#: ../../library/wsgiref.rst:662
msgid ""
"Log the *exc_info* tuple in the server log.  *exc_info* is a ``(type, value,"
" traceback)`` tuple.  The default implementation simply writes the traceback"
" to the request's ``wsgi.errors`` stream and flushes it.  Subclasses can "
"override this method to change the format or retarget the output, mail the "
"traceback to an administrator, or whatever other action may be deemed "
"suitable."
msgstr ""
"Зареєструйте кортеж *exc_info* у журналі сервера. *exc_info* — це кортеж "
"``(тип, значення, відстеження)``. Реалізація за замовчуванням просто записує"
" трасування в потік ``wsgi.errors`` запиту та очищає його. Підкласи можуть "
"замінити цей метод, щоб змінити формат або перенацілити вивід, надіслати "
"трасування поштою адміністратору або зробити будь-яку іншу дію, яку можна "
"вважати прийнятною."

#: ../../library/wsgiref.rst:671
msgid ""
"The maximum number of frames to include in tracebacks output by the default "
":meth:`log_exception` method.  If ``None``, all frames are included."
msgstr ""
"Максимальна кількість фреймів, які можна включити у вивід трасування методом"
" :meth:`log_exception` за замовчуванням. Якщо ``None``, усі кадри включені."

#: ../../library/wsgiref.rst:677
msgid ""
"This method is a WSGI application to generate an error page for the user.  "
"It is only invoked if an error occurs before headers are sent to the client."
msgstr ""
"Цей метод є програмою WSGI для створення сторінки помилки для користувача. "
"Він викликається, лише якщо виникає помилка до того, як заголовки будуть "
"надіслані клієнту."

#: ../../library/wsgiref.rst:680
msgid ""
"This method can access the current error using ``sys.exception()``, and "
"should pass that information to *start_response* when calling it (as "
"described in the \"Error Handling\" section of :pep:`3333`)."
msgstr ""

#: ../../library/wsgiref.rst:684
msgid ""
"The default implementation just uses the :attr:`error_status`, "
":attr:`error_headers`, and :attr:`error_body` attributes to generate an "
"output page.  Subclasses can override this to produce more dynamic error "
"output."
msgstr ""
"Реалізація за замовчуванням просто використовує атрибути "
":attr:`error_status`, :attr:`error_headers` і :attr:`error_body` для "
"створення сторінки виводу. Підкласи можуть замінити це, щоб створити більш "
"динамічний вихід помилок."

#: ../../library/wsgiref.rst:688
msgid ""
"Note, however, that it's not recommended from a security perspective to spit"
" out diagnostics to any old user; ideally, you should have to do something "
"special to enable diagnostic output, which is why the default implementation"
" doesn't include any."
msgstr ""
"Однак зауважте, що з точки зору безпеки не рекомендується передавати "
"діагностику старим користувачам; в ідеалі, ви повинні зробити щось особливе,"
" щоб увімкнути діагностичний вихід, тому реалізація за замовчуванням не "
"включає жодного."

#: ../../library/wsgiref.rst:696
msgid ""
"The HTTP status used for error responses.  This should be a status string as"
" defined in :pep:`3333`; it defaults to a 500 code and message."
msgstr ""
"Статус HTTP, який використовується для відповідей на помилки. Це має бути "
"рядок стану, як визначено в :pep:`3333`; за замовчуванням це код і "
"повідомлення 500."

#: ../../library/wsgiref.rst:702
msgid ""
"The HTTP headers used for error responses.  This should be a list of WSGI "
"response headers (``(name, value)`` tuples), as described in :pep:`3333`.  "
"The default list just sets the content type to ``text/plain``."
msgstr ""
"Заголовки HTTP, які використовуються для відповідей на помилки. Це має бути "
"список заголовків відповіді WSGI (кортежі ``(ім’я, значення)``), як описано "
"в :pep:`3333`. Список за замовчуванням лише встановлює тип вмісту "
"``text/plain``."

#: ../../library/wsgiref.rst:709
msgid ""
"The error response body.  This should be an HTTP response body bytestring. "
"It defaults to the plain text, \"A server error occurred.  Please contact "
"the administrator.\""
msgstr ""
"Тіло відповіді на помилку. Це має бути байтовий рядок тіла відповіді HTTP. "
"За замовчуванням це простий текст: \"Сталася помилка сервера. Зверніться до "
"адміністратора\"."

#: ../../library/wsgiref.rst:713
msgid ""
"Methods and attributes for :pep:`3333`'s \"Optional Platform-Specific File "
"Handling\" feature:"
msgstr ""
"Методи та атрибути для функції :pep:`3333` \"Додаткова обробка файлів на "
"певній платформі\":"

#: ../../library/wsgiref.rst:719
msgid ""
"A ``wsgi.file_wrapper`` factory, compatible with "
":class:`wsgiref.types.FileWrapper`, or ``None``.  The default value of this "
"attribute is the :class:`wsgiref.util.FileWrapper` class."
msgstr ""

#: ../../library/wsgiref.rst:726
msgid ""
"Override to implement platform-specific file transmission.  This method is "
"called only if the application's return value is an instance of the class "
"specified by the :attr:`wsgi_file_wrapper` attribute.  It should return a "
"true value if it was able to successfully transmit the file, so that the "
"default transmission code will not be executed. The default implementation "
"of this method just returns a false value."
msgstr ""
"Перевизначення для реалізації передачі файлів на платформі. Цей метод "
"викликається, лише якщо значення, яке повертає програма, є екземпляром "
"класу, указаного атрибутом :attr:`wsgi_file_wrapper`. Він має повернути "
"справжнє значення, якщо вдалося успішно передати файл, щоб код передачі за "
"замовчуванням не виконувався. Стандартна реалізація цього методу просто "
"повертає хибне значення."

#: ../../library/wsgiref.rst:733
msgid "Miscellaneous methods and attributes:"
msgstr "Різні методи та атрибути:"

#: ../../library/wsgiref.rst:738
msgid ""
"This attribute should be set to a true value if the handler's :meth:`_write`"
" and :meth:`_flush` are being used to communicate directly to the client, "
"rather than via a CGI-like gateway protocol that wants the HTTP status in a "
"special ``Status:`` header."
msgstr ""
"Для цього атрибута слід встановити справжнє значення, якщо :meth:`_write` і "
":meth:`_flush` обробника використовуються для безпосереднього зв’язку з "
"клієнтом, а не через CGI-подібний протокол шлюзу, якому потрібен статус HTTP"
" у спеціальний заголовок ``Status:``."

#: ../../library/wsgiref.rst:743
msgid ""
"This attribute's default value is true in :class:`BaseHandler`, but false in"
" :class:`BaseCGIHandler` and :class:`CGIHandler`."
msgstr ""
"Значення цього атрибута за замовчуванням є true у :class:`BaseHandler`, але "
"false у :class:`BaseCGIHandler` і :class:`CGIHandler`."

#: ../../library/wsgiref.rst:749
msgid ""
"If :attr:`origin_server` is true, this string attribute is used to set the "
"HTTP version of the response set to the client.  It defaults to ``\"1.0\"``."
msgstr ""
"Якщо :attr:`origin_server` має значення true, цей рядковий атрибут "
"використовується для встановлення HTTP-версії набору відповідей для клієнта."
" За замовчуванням ``\"1.0\"``."

#: ../../library/wsgiref.rst:755
msgid ""
"Transcode CGI variables from ``os.environ`` to :pep:`3333` \"bytes in "
"unicode\" strings, returning a new dictionary.  This function is used by "
":class:`CGIHandler` and :class:`IISCGIHandler` in place of directly using "
"``os.environ``, which is not necessarily WSGI-compliant on all platforms and"
" web servers using Python 3 -- specifically, ones where the OS's actual "
"environment is Unicode (i.e. Windows), or ones where the environment is "
"bytes, but the system encoding used by Python to decode it is anything other"
" than ISO-8859-1 (e.g. Unix systems using UTF-8)."
msgstr ""
"Транскодує змінні CGI з ``os.environ`` в :pep:`3333` рядки \"байтів у "
"юнікоді\", повертаючи новий словник. Ця функція використовується "
":class:`CGIHandler` і :class:`IISCGIHandler` замість безпосереднього "
"використання ``os.environ``, який не обов’язково є сумісним з WSGI на всіх "
"платформах і веб-серверах, які використовують Python 3, зокрема , де "
"фактичне середовище ОС є Unicode (тобто Windows), або ті, де середовищем є "
"байти, але системне кодування, яке використовує Python для його декодування,"
" є будь-яким іншим, ніж ISO-8859-1 (наприклад, системи Unix використовують "
"UTF-8) ."

#: ../../library/wsgiref.rst:764
msgid ""
"If you are implementing a CGI-based handler of your own, you probably want "
"to use this routine instead of just copying values out of ``os.environ`` "
"directly."
msgstr ""
"Якщо ви впроваджуєте власний обробник на основі CGI, ви, ймовірно, захочете "
"використовувати цю процедуру замість того, щоб просто копіювати значення "
"безпосередньо з ``os.environ``."

#: ../../library/wsgiref.rst:772
msgid ":mod:`wsgiref.types` -- WSGI types for static type checking"
msgstr ""

#: ../../library/wsgiref.rst:778
msgid ""
"This module provides various types for static type checking as described in "
":pep:`3333`."
msgstr ""

#: ../../library/wsgiref.rst:786
msgid ""
"A :class:`typing.Protocol` describing :pep:`start_response() <3333#the-"
"start-response-callable>` callables (:pep:`3333`)."
msgstr ""

#: ../../library/wsgiref.rst:792
msgid "A type alias describing a WSGI environment dictionary."
msgstr ""

#: ../../library/wsgiref.rst:796
msgid "A type alias describing a WSGI application callable."
msgstr ""

#: ../../library/wsgiref.rst:800
msgid ""
"A :class:`typing.Protocol` describing a :pep:`WSGI Input Stream <3333#input-"
"and-error-streams>`."
msgstr ""

#: ../../library/wsgiref.rst:805
msgid ""
"A :class:`typing.Protocol` describing a :pep:`WSGI Error Stream <3333#input-"
"and-error-streams>`."
msgstr ""

#: ../../library/wsgiref.rst:810
msgid ""
"A :class:`typing.Protocol` describing a :pep:`file wrapper <3333#optional-"
"platform-specific-file-handling>`. See :class:`wsgiref.util.FileWrapper` for"
" a concrete implementation of this protocol."
msgstr ""

#: ../../library/wsgiref.rst:817
msgid "Examples"
msgstr "Приклади"

#: ../../library/wsgiref.rst:819
msgid "This is a working \"Hello World\" WSGI application::"
msgstr "Це робоча програма \"Hello World\" WSGI::"

#: ../../library/wsgiref.rst:821
msgid ""
"\"\"\"\n"
"Every WSGI application must have an application object - a callable\n"
"object that accepts two arguments. For that purpose, we're going to\n"
"use a function (note that you're not limited to a function, you can\n"
"use a class for example). The first argument passed to the function\n"
"is a dictionary containing CGI-style environment variables and the\n"
"second variable is the callable object.\n"
"\"\"\"\n"
"from wsgiref.simple_server import make_server\n"
"\n"
"\n"
"def hello_world_app(environ, start_response):\n"
"    status = \"200 OK\"  # HTTP Status\n"
"    headers = [(\"Content-type\", \"text/plain; charset=utf-8\")]  # HTTP Headers\n"
"    start_response(status, headers)\n"
"\n"
"    # The returned object is going to be printed\n"
"    return [b\"Hello World\"]\n"
"\n"
"with make_server(\"\", 8000, hello_world_app) as httpd:\n"
"    print(\"Serving on port 8000...\")\n"
"\n"
"    # Serve until process is killed\n"
"    httpd.serve_forever()"
msgstr ""

#: ../../library/wsgiref.rst:848
msgid ""
"Example of a WSGI application serving the current directory, accept optional"
" directory and port number (default: 8000) on the command line::"
msgstr ""

#: ../../library/wsgiref.rst:851
msgid ""
"\"\"\"\n"
"Small wsgiref based web server. Takes a path to serve from and an\n"
"optional port number (defaults to 8000), then tries to serve files.\n"
"MIME types are guessed from the file names, 404 errors are raised\n"
"if the file is not found.\n"
"\"\"\"\n"
"import mimetypes\n"
"import os\n"
"import sys\n"
"from wsgiref import simple_server, util\n"
"\n"
"\n"
"def app(environ, respond):\n"
"    # Get the file name and MIME type\n"
"    fn = os.path.join(path, environ[\"PATH_INFO\"][1:])\n"
"    if \".\" not in fn.split(os.path.sep)[-1]:\n"
"        fn = os.path.join(fn, \"index.html\")\n"
"    mime_type = mimetypes.guess_file_type(fn)[0]\n"
"\n"
"    # Return 200 OK if file exists, otherwise 404 Not Found\n"
"    if os.path.exists(fn):\n"
"        respond(\"200 OK\", [(\"Content-Type\", mime_type)])\n"
"        return util.FileWrapper(open(fn, \"rb\"))\n"
"    else:\n"
"        respond(\"404 Not Found\", [(\"Content-Type\", \"text/plain\")])\n"
"        return [b\"not found\"]\n"
"\n"
"\n"
"if __name__ == \"__main__\":\n"
"    # Get the path and port from command-line arguments\n"
"    path = sys.argv[1] if len(sys.argv) > 1 else os.getcwd()\n"
"    port = int(sys.argv[2]) if len(sys.argv) > 2 else 8000\n"
"\n"
"    # Make and start the server until control-c\n"
"    httpd = simple_server.make_server(\"\", port, app)\n"
"    print(f\"Serving {path} on port {port}, control-C to stop\")\n"
"    try:\n"
"        httpd.serve_forever()\n"
"    except KeyboardInterrupt:\n"
"        print(\"Shutting down.\")\n"
"        httpd.server_close()"
msgstr ""
