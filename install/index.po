# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-04 14:13+0000\n"
"PO-Revision-Date: 2021-06-28 00:53+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../install/index.rst:7
msgid "Installing Python Modules (Legacy version)"
msgstr "Встановлення модулів Python (застаріла версія)"

#: ../../install/index.rst:0
msgid "Author"
msgstr "Автор"

#: ../../install/index.rst:9
msgid "Greg Ward"
msgstr "Greg Ward"

#: ../../install/index.rst:15
msgid ""
"The entire ``distutils`` package has been deprecated and will be removed in "
"Python 3.12. This documentation is retained as a reference only, and will be"
" removed with the package. See the :ref:`What's New <distutils-deprecated>` "
"entry for more information."
msgstr ""
"Весь пакет ``distutils`` застарів і буде видалено в Python 3.12. Ця "
"документація зберігається лише як довідка та буде видалена разом із пакетом."
" Перегляньте запис :ref:`Що нового <distutils-deprecated>` для отримання "
"додаткової інформації."

#: ../../install/index.rst:23
msgid ":ref:`installing-index`"
msgstr ":ref:`installing-index`"

#: ../../install/index.rst:23
msgid ""
"The up to date module installation documentation. For regular Python usage, "
"you almost certainly want that document rather than this one."
msgstr ""
"Актуальна документація по установці модуля. Для регулярного використання "
"Python вам майже напевно потрібен цей документ, а не цей."

#: ../../install/index.rst:28
msgid ""
"This document is being retained solely until the ``setuptools`` "
"documentation at https://setuptools.readthedocs.io/en/latest/setuptools.html"
" independently covers all of the relevant information currently included "
"here."
msgstr ""
"Цей документ зберігається лише до тих пір, поки документація ``setuptools`` "
"за адресою https://setuptools.readthedocs.io/en/latest/setuptools.html "
"окремо не охопить всю відповідну інформацію, яка зараз включена тут."

#: ../../install/index.rst:34
msgid ""
"This guide only covers the basic tools for building and distributing "
"extensions that are provided as part of this version of Python. Third party "
"tools offer easier to use and more secure alternatives. Refer to the `quick "
"recommendations section <https://packaging.python.org/guides/tool-"
"recommendations/>`__ in the Python Packaging User Guide for more "
"information."
msgstr ""
"Цей посібник охоплює лише основні інструменти для створення та "
"розповсюдження розширень, які надаються як частина цієї версії Python. "
"Інструменти сторонніх розробників пропонують прості у використанні та "
"безпечніші альтернативи. Для отримання додаткової інформації зверніться до "
"розділу `швидких рекомендацій <https://packaging.python.org/guides/tool-"
"recommendations/>`__ у посібнику користувача з пакування Python."

#: ../../install/index.rst:45
msgid "Introduction"
msgstr "вступ"

#: ../../install/index.rst:47
msgid ""
"In Python 2.0, the ``distutils`` API was first added to the standard "
"library. This provided Linux distro maintainers with a standard way of "
"converting Python projects into Linux distro packages, and system "
"administrators with a standard way of installing them directly onto target "
"systems."
msgstr ""
"У Python 2.0 API distutils було вперше додано до стандартної бібліотеки. Це "
"забезпечило розробникам дистрибутивів Linux стандартний спосіб перетворення "
"проектів Python у пакети дистрибутивів Linux, а системним адміністраторам — "
"стандартний спосіб встановлення їх безпосередньо на цільових системах."

#: ../../install/index.rst:52
msgid ""
"In the many years since Python 2.0 was released, tightly coupling the build "
"system and package installer to the language runtime release cycle has "
"turned out to be problematic, and it is now recommended that projects use "
"the ``pip`` package installer and the ``setuptools`` build system, rather "
"than using ``distutils`` directly."
msgstr ""
"За багато років після випуску Python 2.0 тісно зв’язати систему збірки та "
"інсталятор пакунків із циклом випуску середовища виконання мови виявилося "
"проблематично, і тепер рекомендовано, щоб проекти використовували інсталятор"
" пакетів ``pip`` і ``setuptools`` будує систему, а не використовує "
"``distutils`` безпосередньо."

#: ../../install/index.rst:58
msgid ""
"See :ref:`installing-index` and :ref:`distributing-index` for more details."
msgstr ""
"Перегляньте :ref:`installing-index` і :ref:`distributing-index` для "
"отримання додаткової інформації."

#: ../../install/index.rst:60
msgid ""
"This legacy documentation is being retained only until we're confident that "
"the ``setuptools`` documentation covers everything needed."
msgstr ""
"Ця застаріла документація зберігається лише до тих пір, поки ми не будемо "
"впевнені, що документація ``setuptools`` охоплює все необхідне."

#: ../../install/index.rst:66
msgid "Distutils based source distributions"
msgstr "Розповсюдження джерел на основі Distutils"

#: ../../install/index.rst:68
msgid ""
"If you download a module source distribution, you can tell pretty quickly if"
" it was packaged and distributed in the standard way, i.e. using the "
"Distutils. First, the distribution's name and version number will be "
"featured prominently in the name of the downloaded archive, e.g. "
":file:`foo-1.0.tar.gz` or :file:`widget-0.9.7.zip`.  Next, the archive will "
"unpack into a similarly named directory: :file:`foo-1.0` or "
":file:`widget-0.9.7`.  Additionally, the distribution will contain a setup "
"script :file:`setup.py`, and a file named :file:`README.txt` or possibly "
"just :file:`README`, which should explain that building and installing the "
"module distribution is a simple matter of running one command from a "
"terminal::"
msgstr ""

#: ../../install/index.rst:81
msgid ""
"For Windows, this command should be run from a command prompt window "
"(:menuselection:`Start --> Accessories`)::"
msgstr ""
"Для Windows цю команду слід запускати з вікна командного рядка "
"(:menuselection:`Пуск --> Аксесуари`):"

#: ../../install/index.rst:86
msgid ""
"If all these things are true, then you already know how to build and install"
" the modules you've just downloaded:  Run the command above. Unless you need"
" to install things in a non-standard way or customize the build process, you"
" don't really need this manual.  Or rather, the above command is everything "
"you need to get out of this manual."
msgstr ""
"Якщо все це правда, то ви вже знаєте, як створити та встановити модулі, які "
"щойно завантажили: виконайте наведену вище команду. Якщо вам не потрібно "
"встановлювати щось нестандартним способом або налаштовувати процес збірки, "
"цей посібник вам не потрібен. Або, точніше, наведена вище команда - це все, "
"що вам потрібно, щоб вийти з цього посібника."

#: ../../install/index.rst:96
msgid "Standard Build and Install"
msgstr "Стандартна збірка та встановлення"

#: ../../install/index.rst:98
msgid ""
"As described in section :ref:`inst-new-standard`, building and installing a "
"module distribution using the Distutils is usually one simple command to run"
" from a terminal::"
msgstr ""
"Як описано в розділі :ref:`inst-new-standard`, створення та встановлення "
"дистрибутива модуля за допомогою Distutils зазвичай виконується однією "
"простою командою з терміналу::"

#: ../../install/index.rst:108
msgid "Platform variations"
msgstr "Варіації платформи"

#: ../../install/index.rst:110
msgid ""
"You should always run the setup command from the distribution root "
"directory, i.e. the top-level subdirectory that the module source "
"distribution unpacks into.  For example, if you've just downloaded a module "
"source distribution :file:`foo-1.0.tar.gz` onto a Unix system, the normal "
"thing to do is::"
msgstr ""
"Завжди слід запускати команду налаштування з кореневого каталогу "
"розповсюдження, тобто підкаталогу верхнього рівня, куди розпаковується "
"дистрибутив джерела модуля. Наприклад, якщо ви щойно завантажили дистрибутив"
" вихідного коду модуля :file:`foo-1.0.tar.gz` на систему Unix, звичайною "
"справою є:"

#: ../../install/index.rst:119
msgid ""
"On Windows, you'd probably download :file:`foo-1.0.zip`.  If you downloaded "
"the archive file to :file:`C:\\\\Temp`, then it would unpack into "
":file:`C:\\\\Temp\\\\foo-1.0`; you can use either an archive manipulator "
"with a graphical user interface (such as WinZip) or a command-line tool "
"(such as :program:`unzip` or :program:`pkunzip`) to unpack the archive.  "
"Then, open a command prompt window and run::"
msgstr ""
"У Windows ви, ймовірно, завантажите :file:`foo-1.0.zip`. Якщо ви завантажили"
" архівний файл до :file:`C:\\\\Temp`, він буде розпакований у "
":file:`C:\\\\Temp\\\\foo-1.0`; ви можете використовувати маніпулятор архіву "
"з графічним інтерфейсом користувача (наприклад, WinZip) або інструмент "
"командного рядка (наприклад, :program:`unzip` або :program:`pkunzip`), щоб "
"розпакувати архів. Потім відкрийте вікно командного рядка та запустіть::"

#: ../../install/index.rst:133
msgid "Splitting the job up"
msgstr "Розподіл роботи"

#: ../../install/index.rst:135
msgid ""
"Running ``setup.py install`` builds and installs all modules in one run.  If"
" you prefer to work incrementally---especially useful if you want to "
"customize the build process, or if things are going wrong---you can use the "
"setup script to do one thing at a time.  This is particularly helpful when "
"the build and install will be done by different users---for example, you "
"might want to build a module distribution and hand it off to a system "
"administrator for installation (or do it yourself, with super-user "
"privileges)."
msgstr ""
"Запуск ``setup.py install`` збирає та встановлює всі модулі за один запуск. "
"Якщо ви віддаєте перевагу працювати поступово --- особливо корисно, якщо ви "
"хочете налаштувати процес збирання, або якщо щось йде не так --- ви можете "
"використовувати сценарій налаштування, щоб виконувати одну дію за раз. Це "
"особливо корисно, коли збирання та встановлення виконуватимуться різними "
"користувачами --- наприклад, ви можете створити дистрибутив модуля та "
"передати його системному адміністратору для встановлення (або зробити це "
"самостійно, з правами суперкористувача )."

#: ../../install/index.rst:143
msgid ""
"For example, you can build everything in one step, and then install "
"everything in a second step, by invoking the setup script twice::"
msgstr ""
"Наприклад, ви можете створити все за один крок, а потім інсталювати все за "
"другий крок, двічі викликавши сценарій встановлення:"

#: ../../install/index.rst:149
msgid ""
"If you do this, you will notice that running the :command:`install` command "
"first runs the :command:`build` command, which---in this case---quickly "
"notices that it has nothing to do, since everything in the :file:`build` "
"directory is up-to-date."
msgstr ""
"Якщо ви це зробите, ви помітите, що виконання команди :command:`install` "
"спочатку запускає команду :command:`build`, яка --- в цьому випадку --- "
"швидко помічає, що вона не має нічого робити, оскільки все у каталозі "
":file:`build` є актуальною."

#: ../../install/index.rst:154
msgid ""
"You may not need this ability to break things down often if all you do is "
"install modules downloaded off the 'net, but it's very handy for more "
"advanced tasks.  If you get into distributing your own Python modules and "
"extensions, you'll run lots of individual Distutils commands on their own."
msgstr ""
"Можливо, вам не знадобиться ця здатність часто розбивати речі, якщо все, що "
"ви робите, це встановлювати модулі, завантажені з мережі, але це дуже зручно"
" для більш складних завдань. Якщо ви починаєте розповсюджувати свої власні "
"модулі та розширення Python, ви запускатимете багато окремих команд "
"Distutils окремо."

#: ../../install/index.rst:163
msgid "How building works"
msgstr "Як працює будівництво"

#: ../../install/index.rst:165
msgid ""
"As implied above, the :command:`build` command is responsible for putting "
"the files to install into a *build directory*.  By default, this is "
":file:`build` under the distribution root; if you're excessively concerned "
"with speed, or want to keep the source tree pristine, you can change the "
"build directory with the :option:`!--build-base` option. For example::"
msgstr ""
"Як було зазначено вище, команда :command:`build` відповідає за розміщення "
"файлів для встановлення в *каталог збірки*. За замовчуванням це "
":file:`build` у корені розповсюдження; якщо ви надмірно стурбовані швидкістю"
" або хочете зберегти вихідне дерево незайманим, ви можете змінити каталог "
"збірки за допомогою опції :option:`!--build-base`. Наприклад::"

#: ../../install/index.rst:173
msgid ""
"(Or you could do this permanently with a directive in your system or "
"personal Distutils configuration file; see section :ref:`inst-config-"
"files`.)  Normally, this isn't necessary."
msgstr ""
"(Або ви можете зробити це назавжди за допомогою директиви у вашій системі чи"
" особистому конфігураційному файлі Distutils; див. розділ :ref:`inst-config-"
"files`.) Зазвичай це не обов’язково."

#: ../../install/index.rst:177
msgid "The default layout for the build tree is as follows::"
msgstr "Типовий макет дерева побудови такий:"

#: ../../install/index.rst:184
msgid ""
"where ``<plat>`` expands to a brief description of the current OS/hardware "
"platform and Python version.  The first form, with just a :file:`lib` "
"directory, is used for \"pure module distributions\"---that is, module "
"distributions that include only pure Python modules.  If a module "
"distribution contains any extensions (modules written in C/C++), then the "
"second form, with two ``<plat>`` directories, is used.  In that case, the "
":file:`temp.{plat}` directory holds temporary files generated by the "
"compile/link process that don't actually get installed.  In either case, the"
" :file:`lib` (or :file:`lib.{plat}`) directory contains all Python modules "
"(pure Python and extensions) that will be installed."
msgstr ""
"де ``<plat>`` розширюється до короткого опису поточної ОС/апаратної "
"платформи та версії Python. Перша форма, лише з каталогом :file:`lib`, "
"використовується для \"дистрибутивів чистих модулів\" --- тобто "
"дистрибутивів модулів, які містять лише чисті модулі Python. Якщо "
"розповсюдження модуля містить будь-які розширення (модулі, написані мовою "
"C/C++), то використовується друга форма з двома каталогами ``<plat>``. У "
"цьому випадку каталог :file:`temp.{plat}` містить тимчасові файли, "
"згенеровані процесом компіляції/посилання, які фактично не встановлюються. У"
" будь-якому випадку каталог :file:`lib` (або :file:`lib.{plat}`) містить усі"
" модулі Python (чистий Python і розширення), які буде встановлено."

#: ../../install/index.rst:194
msgid ""
"In the future, more directories will be added to handle Python scripts, "
"documentation, binary executables, and whatever else is needed to handle the"
" job of installing Python modules and applications."
msgstr ""
"У майбутньому буде додано більше каталогів для обробки сценаріїв Python, "
"документації, двійкових виконуваних файлів і всього іншого, що буде потрібно"
" для роботи зі встановлення модулів і програм Python."

#: ../../install/index.rst:202
msgid "How installation works"
msgstr "Як працює установка"

#: ../../install/index.rst:204
msgid ""
"After the :command:`build` command runs (whether you run it explicitly, or "
"the :command:`install` command does it for you), the work of the "
":command:`install` command is relatively simple: all it has to do is copy "
"everything under :file:`build/lib` (or :file:`build/lib.{plat}`) to your "
"chosen installation directory."
msgstr ""
"Після виконання команди :command:`build` (незалежно від того, запускаєте ви "
"її явно чи команда :command:`install` робить це за вас), робота команди "
":command:`install` відносно проста: усе, що вона має це скопіювати все в "
":file:`build/lib` (або :file:`build/lib.{plat}`) до вибраного каталогу "
"встановлення."

#: ../../install/index.rst:210
msgid ""
"If you don't choose an installation directory---i.e., if you just run "
"``setup.py install``\\ ---then the :command:`install` command installs to "
"the standard location for third-party Python modules.  This location varies "
"by platform and by how you built/installed Python itself.  On Unix (and "
"macOS, which is also Unix-based), it also depends on whether the module "
"distribution being installed is pure Python or contains extensions (\"non-"
"pure\"):"
msgstr ""
"Якщо ви не виберете каталог інсталяції --- тобто якщо ви просто запустите "
"``setup.py install``\\ --- тоді команда :command:`install` встановить "
"стандартне розташування для сторонніх модулів Python . Це розташування "
"залежить від платформи та способу створення/встановлення самого Python. В "
"Unix (і macOS, яка також базується на Unix), це також залежить від того, чи "
"інстальований дистрибутив модуля є чистим Python чи містить розширення "
"(\"нечисті\"):"

#: ../../install/index.rst:220
msgid "Platform"
msgstr "Платформа"

#: ../../install/index.rst:220
msgid "Standard installation location"
msgstr "Стандартне місце установки"

#: ../../install/index.rst:220
msgid "Default value"
msgstr "Значення за замовчуванням"

#: ../../install/index.rst:220 ../../install/index.rst:746
#: ../../install/index.rst:758
msgid "Notes"
msgstr "Примітки"

#: ../../install/index.rst:222
msgid "Unix (pure)"
msgstr "Unix (чистий)"

#: ../../install/index.rst:222 ../../install/index.rst:435
msgid ":file:`{prefix}/lib/python{X.Y}/site-packages`"
msgstr ":file:`{префікс}/lib/python{X.Y}/site-packages`"

#: ../../install/index.rst:222 ../../install/index.rst:224
msgid ":file:`/usr/local/lib/python{X.Y}/site-packages`"
msgstr ":file:`/usr/local/lib/python{X.Y}/site-packages`"

#: ../../install/index.rst:222 ../../install/index.rst:224
#: ../../install/index.rst:748
msgid "\\(1)"
msgstr "\\(1)"

#: ../../install/index.rst:224
msgid "Unix (non-pure)"
msgstr "Unix (не чистий)"

#: ../../install/index.rst:224 ../../install/index.rst:436
msgid ":file:`{exec-prefix}/lib/python{X.Y}/site-packages`"
msgstr ":file:`{exec-prefix}/lib/python{X.Y}/site-packages`"

#: ../../install/index.rst:226
msgid "Windows"
msgstr "вікна"

#: ../../install/index.rst:226 ../../install/index.rst:487
msgid ":file:`{prefix}\\\\Lib\\\\site-packages`"
msgstr ":file:`{prefix}\\\\Lib\\\\site-packages`"

#: ../../install/index.rst:226
msgid ":file:`C:\\\\Python{XY}\\\\Lib\\\\site-packages`"
msgstr ":file:`C:\\\\Python{XY}\\\\Lib\\\\site-packages`"

#: ../../install/index.rst:226 ../../install/index.rst:750
msgid "\\(2)"
msgstr "\\(2)"

#: ../../install/index.rst:229 ../../install/index.rst:770
msgid "Notes:"
msgstr "Примітки:"

#: ../../install/index.rst:232
msgid ""
"Most Linux distributions include Python as a standard part of the system, so"
" :file:`{prefix}` and :file:`{exec-prefix}` are usually both :file:`/usr` on"
" Linux.  If you build Python yourself on Linux (or any Unix-like system), "
"the default :file:`{prefix}` and :file:`{exec-prefix}` are "
":file:`/usr/local`."
msgstr ""
"Більшість дистрибутивів Linux включають Python як стандартну частину "
"системи, тому :file:`{prefix}` і :file:`{exec-prefix}` зазвичай обидва є "
":file:`/usr` в Linux. Якщо ви самостійно створюєте Python на Linux (або "
"будь-якій Unix-подібній системі), типовими :file:`{prefix}` і :file:`{exec-"
"prefix}` є :file:`/usr/local`."

#: ../../install/index.rst:238
msgid ""
"The default installation directory on Windows was :file:`C:\\\\Program "
"Files\\\\Python` under Python 1.6a1, 1.5.2, and earlier."
msgstr ""
"Стандартним каталогом інсталяції в Windows був :file:`C:\\\\Program "
"Files\\\\Python` у Python 1.6a1, 1.5.2 і попередніх версіях."

#: ../../install/index.rst:241
msgid ""
":file:`{prefix}` and :file:`{exec-prefix}` stand for the directories that "
"Python is installed to, and where it finds its libraries at run-time.  They "
"are always the same under Windows, and very often the same under Unix and "
"macOS.  You can find out what your Python installation uses for "
":file:`{prefix}` and :file:`{exec-prefix}` by running Python in interactive "
"mode and typing a few simple commands. Under Unix, just type ``python`` at "
"the shell prompt.  Under Windows, choose :menuselection:`Start --> Programs "
"--> Python X.Y --> Python (command line)`.   Once the interpreter is "
"started, you type Python code at the prompt.  For example, on my Linux "
"system, I type the three Python statements shown below, and get the output "
"as shown, to find out my :file:`{prefix}` and :file:`{exec-prefix}`:"
msgstr ""
":file:`{prefix}` і :file:`{exec-prefix}` означають каталоги, у які "
"встановлено Python, і де він знаходить свої бібліотеки під час виконання. "
"Вони завжди однакові під Windows і дуже часто однакові під Unix і macOS. Ви "
"можете дізнатися, що ваша інсталяція Python використовує для "
":file:`{prefix}` і :file:`{exec-prefix}`, запустивши Python в інтерактивному"
" режимі та ввівши кілька простих команд. В Unix просто введіть ``python`` у "
"командному рядку оболонки. У Windows виберіть :menuselection:`Пуск --> "
"Програми --> Python X.Y --> Python (командний рядок)`. Після запуску "
"інтерпретатора ви вводите код Python у запиті. Наприклад, у моїй системі "
"Linux я вводжу три оператори Python, показані нижче, і отримую результат, як"
" показано, щоб дізнатися мої :file:`{prefix}` і :file:`{exec-prefix}`:"

#: ../../install/index.rst:263
msgid ""
"A few other placeholders are used in this document: :file:`{X.Y}` stands for"
" the version of Python, for example ``3.2``; :file:`{abiflags}` will be "
"replaced by the value of :data:`sys.abiflags` or the empty string for "
"platforms which don't define ABI flags; :file:`{distname}` will be replaced "
"by the name of the module distribution being installed.  Dots and "
"capitalization are important in the paths; for example, a value that uses "
"``python3.2`` on UNIX will typically use ``Python32`` on Windows."
msgstr ""
"У цьому документі використовується кілька інших заповнювачів: :file:`{X.Y}` "
"означає версію Python, наприклад ``3.2``; :file:`{abiflags}` буде замінено "
"на значення :data:`sys.abiflags` або порожній рядок для платформ, які не "
"визначають прапори ABI; :file:`{distname}` буде замінено назвою дистрибутива"
" модуля, який встановлюється. Крапки та великі літери важливі в шляхах; "
"наприклад, значення, яке використовує ``python3.2`` в UNIX, зазвичай "
"використовуватиме ``Python32`` у Windows."

#: ../../install/index.rst:271
msgid ""
"If you don't want to install modules to the standard location, or if you "
"don't have permission to write there, then you need to read about alternate "
"installations in section :ref:`inst-alt-install`.  If you want to customize "
"your installation directories more heavily, see section :ref:`inst-custom-"
"install` on custom installations."
msgstr ""
"Якщо ви не бажаєте встановлювати модулі у стандартне розташування або якщо у"
" вас немає дозволу на запис у цьому місці, вам потрібно прочитати про "
"альтернативні встановлення в розділі :ref:`inst-alt-install`. Якщо ви "
"бажаєте суттєвіше налаштувати ваші каталоги встановлення, див. розділ "
":ref:`inst-custom-install` про нестандартне встановлення."

#: ../../install/index.rst:281
msgid "Alternate Installation"
msgstr "Альтернативна інсталяція"

#: ../../install/index.rst:283
msgid ""
"Often, it is necessary or desirable to install modules to a location other "
"than the standard location for third-party Python modules.  For example, on "
"a Unix system you might not have permission to write to the standard third-"
"party module directory.  Or you might wish to try out a module before making"
" it a standard part of your local Python installation.  This is especially "
"true when upgrading a distribution already present: you want to make sure "
"your existing base of scripts still works with the new version before "
"actually upgrading."
msgstr ""
"Часто необхідно або бажано встановити модулі в інше місце, ніж стандартне "
"розташування для сторонніх модулів Python. Наприклад, у системі Unix ви "
"можете не мати дозволу на запис у стандартний каталог сторонніх модулів. Або"
" ви можете спробувати модуль перед тим, як зробити його стандартною частиною"
" локальної інсталяції Python. Це особливо актуально під час оновлення "
"наявного дистрибутива: ви хочете переконатися, що ваша існуюча база "
"сценаріїв все ще працює з новою версією, перш ніж фактично оновлювати."

#: ../../install/index.rst:291
msgid ""
"The Distutils :command:`install` command is designed to make installing "
"module distributions to an alternate location simple and painless.  The "
"basic idea is that you supply a base directory for the installation, and the"
" :command:`install` command picks a set of directories (called an "
"*installation scheme*) under this base directory in which to install files."
"  The details differ across platforms, so read whichever of the following "
"sections applies to you."
msgstr ""
"Команда Distutils :command:`install` призначена для простого та безболісного"
" встановлення дистрибутивів модулів до альтернативного розташування. Основна"
" ідея полягає в тому, що ви вказуєте базовий каталог для інсталяції, а "
"команда :command:`install` вибирає набір каталогів (званий *схемою "
"інсталяції*) у цьому базовому каталозі, у який потрібно інсталювати файли. "
"Деталі відрізняються для різних платформ, тому прочитайте той із наступних "
"розділів, який вам підходить."

#: ../../install/index.rst:299
msgid ""
"Note that the various alternate installation schemes are mutually exclusive:"
" you can pass ``--user``, or ``--home``, or ``--prefix`` and ``--exec-"
"prefix``, or ``--install-base`` and ``--install-platbase``, but you can't "
"mix from these groups."
msgstr ""
"Зауважте, що різні альтернативні схеми встановлення є взаємовиключними: ви "
"можете передати ``--user``, ``--home``, ``--prefix`` і ``--exec-prefix``, "
"або ``--install-base`` і ``--install-platbase``, але ви не можете змішувати "
"ці групи."

#: ../../install/index.rst:308
msgid "Alternate installation: the user scheme"
msgstr "Альтернативна установка: схема користувача"

#: ../../install/index.rst:310
msgid ""
"This scheme is designed to be the most convenient solution for users that "
"don't have write permission to the global site-packages directory or don't "
"want to install into it.  It is enabled with a simple option::"
msgstr ""
"Ця схема розроблена як найзручніше рішення для користувачів, які не мають "
"дозволу на запис до глобального каталогу пакетів сайтів або не хочуть "
"встановлювати в нього. Це вмикається простим параметром::"

#: ../../install/index.rst:316
msgid ""
"Files will be installed into subdirectories of :const:`site.USER_BASE` "
"(written as :file:`{userbase}` hereafter).  This scheme installs pure Python"
" modules and extension modules in the same location (also known as "
":const:`site.USER_SITE`). Here are the values for UNIX, including macOS:"
msgstr ""

#: ../../install/index.rst:322 ../../install/index.rst:333
#: ../../install/index.rst:384 ../../install/index.rst:433
#: ../../install/index.rst:485 ../../install/index.rst:510
#: ../../install/index.rst:746 ../../install/index.rst:758
msgid "Type of file"
msgstr "Тип файлу"

#: ../../install/index.rst:322 ../../install/index.rst:333
#: ../../install/index.rst:384 ../../install/index.rst:433
#: ../../install/index.rst:485
msgid "Installation directory"
msgstr "Каталог встановлення"

#: ../../install/index.rst:324 ../../install/index.rst:335
#: ../../install/index.rst:386 ../../install/index.rst:487
msgid "modules"
msgstr "модулі"

#: ../../install/index.rst:324
msgid ":file:`{userbase}/lib/python{X.Y}/site-packages`"
msgstr ":file:`{userbase}/lib/python{X.Y}/site-packages`"

#: ../../install/index.rst:325 ../../install/index.rst:336
#: ../../install/index.rst:387 ../../install/index.rst:437
#: ../../install/index.rst:488 ../../install/index.rst:515
msgid "scripts"
msgstr "сценарії"

#: ../../install/index.rst:325
msgid ":file:`{userbase}/bin`"
msgstr ":file:`{userbase}/bin`"

#: ../../install/index.rst:326 ../../install/index.rst:337
#: ../../install/index.rst:388 ../../install/index.rst:438
#: ../../install/index.rst:489 ../../install/index.rst:516
msgid "data"
msgstr "даних"

#: ../../install/index.rst:326 ../../install/index.rst:337
msgid ":file:`{userbase}`"
msgstr ":file:`{userbase}`"

#: ../../install/index.rst:327 ../../install/index.rst:338
#: ../../install/index.rst:389 ../../install/index.rst:439
#: ../../install/index.rst:490 ../../install/index.rst:517
msgid "C headers"
msgstr "C заголовки"

#: ../../install/index.rst:327
msgid ":file:`{userbase}/include/python{X.Y}{abiflags}/{distname}`"
msgstr ":file:`{userbase}/include/python{X.Y}{abiflags}/{distname}`"

#: ../../install/index.rst:330
msgid "And here are the values used on Windows:"
msgstr "А ось значення, які використовуються в Windows:"

#: ../../install/index.rst:335
msgid ":file:`{userbase}\\\\Python{XY}\\\\site-packages`"
msgstr ":file:`{userbase}\\\\Python{XY}\\\\site-packages`"

#: ../../install/index.rst:336
msgid ":file:`{userbase}\\\\Python{XY}\\\\Scripts`"
msgstr ":file:`{userbase}\\\\Python{XY}\\\\Сценарії`"

#: ../../install/index.rst:338
msgid ":file:`{userbase}\\\\Python{XY}\\\\Include\\\\{distname}`"
msgstr ":file:`{userbase}\\\\Python{XY}\\\\Include\\\\{distname}`"

#: ../../install/index.rst:341
msgid ""
"The advantage of using this scheme compared to the other ones described "
"below is that the user site-packages directory is under normal conditions "
"always included in :data:`sys.path` (see :mod:`site` for more information), "
"which means that there is no additional step to perform after running the "
":file:`setup.py` script to finalize the installation."
msgstr ""
"Перевага використання цієї схеми порівняно з іншими, описаними нижче, "
"полягає в тому, що каталог пакетів сайту користувача за звичайних умов "
"завжди включається в :data:`sys.path` (див. :mod:`site` для отримання "
"додаткової інформації), що означає, що після запуску сценарію "
":file:`setup.py` для завершення встановлення не потрібно виконувати жодних "
"додаткових кроків."

#: ../../install/index.rst:347
msgid ""
"The :command:`build_ext` command also has a ``--user`` option to add "
":file:`{userbase}/include` to the compiler search path for header files and "
":file:`{userbase}/lib` to the compiler search path for libraries as well as "
"to the runtime search path for shared C libraries (rpath)."
msgstr ""
"Команда :command:`build_ext` також має опцію ``--user``, щоб додати "
":file:`{userbase}/include` до шляху пошуку компілятора для файлів заголовків"
" і :file:`{userbase}/lib` до шляху пошуку компілятора для бібліотек, а також"
" до шляху пошуку під час виконання для спільних бібліотек C (rpath)."

#: ../../install/index.rst:356
msgid "Alternate installation: the home scheme"
msgstr "Альтернативна установка: домашня схема"

#: ../../install/index.rst:358
msgid ""
"The idea behind the \"home scheme\" is that you build and maintain a "
"personal stash of Python modules.  This scheme's name is derived from the "
"idea of a \"home\" directory on Unix, since it's not unusual for a Unix user"
" to make their home directory have a layout similar to :file:`/usr/` or "
":file:`/usr/local/`. This scheme can be used by anyone, regardless of the "
"operating system they are installing for."
msgstr ""
"Ідея \"домашньої схеми\" полягає в тому, що ви створюєте та підтримуєте "
"особистий запас модулів Python. Назва цієї схеми походить від ідеї "
"\"домашнього\" каталогу в Unix, оскільки для користувачів Unix не є "
"незвичайним зробити свій домашній каталог макетом, подібним до :file:`/usr/`"
" або :file:`/usr /локальний/`. Цю схему може використовувати будь-хто, "
"незалежно від операційної системи, для якої він встановлюється."

#: ../../install/index.rst:365
msgid "Installing a new module distribution is as simple as ::"
msgstr "Встановити новий дистрибутив модуля так само просто, як:"

#: ../../install/index.rst:369
msgid ""
"where you can supply any directory you like for the :option:`!--home` "
"option.  On Unix, lazy typists can just type a tilde (``~``); the "
":command:`install` command will expand this to your home directory::"
msgstr ""
"де ви можете вказати будь-який каталог для опції :option:`!--home`. В Unix "
"ліниві друкарки можуть просто ввести тильду (``~``); команда "
":command:`install` розширить це до вашого домашнього каталогу::"

#: ../../install/index.rst:375
msgid ""
"To make Python find the distributions installed with this scheme, you may "
"have to :ref:`modify Python's search path <inst-search-path>` or edit "
":mod:`!sitecustomize` (see :mod:`site`) to call :func:`site.addsitedir` or "
"edit :data:`sys.path`."
msgstr ""

#: ../../install/index.rst:380
msgid ""
"The :option:`!--home` option defines the installation base directory.  Files"
" are installed to the following directories under the installation base as "
"follows:"
msgstr ""
"Параметр :option:`!--home` визначає базовий каталог встановлення. Файли "
"встановлюються в такі каталоги в базі інсталяції наступним чином:"

#: ../../install/index.rst:386
msgid ":file:`{home}/lib/python`"
msgstr ":file:`{home}/lib/python`"

#: ../../install/index.rst:387
msgid ":file:`{home}/bin`"
msgstr ":file:`{home}/bin`"

#: ../../install/index.rst:388
msgid ":file:`{home}`"
msgstr ":file:`{home}`"

#: ../../install/index.rst:389
msgid ":file:`{home}/include/python/{distname}`"
msgstr ":file:`{home}/include/python/{distname}`"

#: ../../install/index.rst:392
msgid "(Mentally replace slashes with backslashes if you're on Windows.)"
msgstr ""
"(Подумки замініть скісні риски на зворотні скісні риски, якщо ви "
"використовуєте Windows.)"

#: ../../install/index.rst:398
msgid "Alternate installation: Unix (the prefix scheme)"
msgstr "Альтернативна інсталяція: Unix (префіксна схема)"

#: ../../install/index.rst:400
msgid ""
"The \"prefix scheme\" is useful when you wish to use one Python installation"
" to perform the build/install (i.e., to run the setup script), but install "
"modules into the third-party module directory of a different Python "
"installation (or something that looks like a different Python installation)."
"  If this sounds a trifle unusual, it is---that's why the user and home "
"schemes come before.  However, there are at least two known cases where the "
"prefix scheme will be useful."
msgstr ""
"\"Схема префіксів\" корисна, коли ви бажаєте використовувати одну інсталяцію"
" Python для виконання побудови/інсталяції (тобто для запуску сценарію "
"інсталяції), але інсталювати модулі в каталог модулів сторонніх розробників "
"іншої інсталяції Python (або щось, що виглядає як інша інсталяція Python). "
"Якщо це звучить трішки незвично, це---тому користувальницька та домашня "
"схеми стоять раніше. Однак є принаймні два відомі випадки, коли префіксна "
"схема буде корисною."

#: ../../install/index.rst:407
msgid ""
"First, consider that many Linux distributions put Python in :file:`/usr`, "
"rather than the more traditional :file:`/usr/local`.  This is entirely "
"appropriate, since in those cases Python is part of \"the system\" rather "
"than a local add-on. However, if you are installing Python modules from "
"source, you probably want them to go in :file:`/usr/local/lib/python2.{X}` "
"rather than :file:`/usr/lib/python2.{X}`.  This can be done with ::"
msgstr ""
"По-перше, врахуйте, що багато дистрибутивів Linux розміщують Python у "
":file:`/usr`, а не в більш традиційному :file:`/usr/local`. Це цілком "
"доречно, оскільки в таких випадках Python є частиною \"системи\", а не "
"локальним додатком. Однак, якщо ви встановлюєте модулі Python із джерела, "
"ви, ймовірно, хочете, щоб вони містилися в "
":file:`/usr/local/lib/python2.{X}`, а не в :file:`/usr/lib/python2.{X }`. Це"
" можна зробити за допомогою ::"

#: ../../install/index.rst:416
msgid ""
"Another possibility is a network filesystem where the name used to write to "
"a remote directory is different from the name used to read it: for example, "
"the Python interpreter accessed as :file:`/usr/local/bin/python` might "
"search for modules in :file:`/usr/local/lib/python2.{X}`, but those modules "
"would have to be installed to, say, "
":file:`/mnt/{@server}/export/lib/python2.{X}`.  This could be done with ::"
msgstr ""
"Іншою можливістю є мережева файлова система, де ім’я, що використовується "
"для запису у віддалений каталог, відрізняється від імені, яке "
"використовується для його читання: наприклад, інтерпретатор Python, доступ "
"до якого здійснюється як :file:`/usr/local/bin/python`, може шукати модулі в"
" :file:`/usr/local/lib/python2.{X}`, але ці модулі мають бути встановлені, "
"скажімо, у :file:`/mnt/{@server}/export/lib/python2. {X}`. Це можна зробити "
"за допомогою ::"

#: ../../install/index.rst:425
msgid ""
"In either case, the :option:`!--prefix` option defines the installation "
"base, and the :option:`!--exec-prefix` option defines the platform-specific "
"installation base, which is used for platform-specific files.  (Currently, "
"this just means non-pure module distributions, but could be expanded to C "
"libraries, binary executables, etc.)  If :option:`!--exec-prefix` is not "
"supplied, it defaults to :option:`!--prefix`.  Files are installed as "
"follows:"
msgstr ""
"У будь-якому випадку параметр :option:`!--prefix` визначає базу інсталяції, "
"а параметр :option:`!--exec-prefix` визначає базу інсталяції для певної "
"платформи, яка використовується для файлів певної платформи. . (Наразі це "
"означає лише розповсюдження нечистих модулів, але може бути розширено до "
"бібліотек C, двійкових виконуваних файлів тощо.) Якщо :option:`!--exec-"
"prefix` не вказано, за умовчанням буде :option:`! --префікс`. Файли "
"встановлюються наступним чином:"

#: ../../install/index.rst:435 ../../install/index.rst:512
msgid "Python modules"
msgstr "Модулі Python"

#: ../../install/index.rst:436 ../../install/index.rst:513
msgid "extension modules"
msgstr "модулі розширення"

#: ../../install/index.rst:437
msgid ":file:`{prefix}/bin`"
msgstr ":file:`{prefix}/bin`"

#: ../../install/index.rst:438 ../../install/index.rst:489
msgid ":file:`{prefix}`"
msgstr ":file:`{prefix}`"

#: ../../install/index.rst:439
msgid ":file:`{prefix}/include/python{X.Y}{abiflags}/{distname}`"
msgstr ":file:`{префікс}/include/python{X.Y}{abiflags}/{distname}`"

#: ../../install/index.rst:442
msgid ""
"There is no requirement that :option:`!--prefix` or :option:`!--exec-prefix`"
" actually point to an alternate Python installation; if the directories "
"listed above do not already exist, they are created at installation time."
msgstr ""
"Немає вимоги, щоб :option:`!--prefix` або :option:`!--exec-prefix` справді "
"вказували на альтернативну установку Python; якщо перелічені вище каталоги "
"ще не існують, вони створюються під час встановлення."

#: ../../install/index.rst:446
msgid ""
"Incidentally, the real reason the prefix scheme is important is simply that "
"a standard Unix installation uses the prefix scheme, but with :option:`!--"
"prefix` and :option:`!--exec-prefix` supplied by Python itself as "
"``sys.prefix`` and ``sys.exec_prefix``.  Thus, you might think you'll never "
"use the prefix scheme, but every time you run ``python setup.py install`` "
"without any other options, you're using it."
msgstr ""
"До речі, справжня причина важливості схеми префіксів полягає просто в тому, "
"що стандартна інсталяція Unix використовує схему префіксів, але з :option:`!"
"--prefix` і :option:`!--exec-prefix`, що надаються самим Python як "
"``sys.prefix`` і ``sys.exec_prefix``. Таким чином, ви можете подумати, що "
"ніколи не використовуватимете схему префіксів, але кожного разу, коли ви "
"запускаєте ``python setup.py install`` без будь-яких інших параметрів, ви "
"використовуєте її."

#: ../../install/index.rst:453
msgid ""
"Note that installing extensions to an alternate Python installation has no "
"effect on how those extensions are built: in particular, the Python header "
"files (:file:`Python.h` and friends) installed with the Python interpreter "
"used to run the setup script will be used in compiling extensions.  It is "
"your responsibility to ensure that the interpreter used to run extensions "
"installed in this way is compatible with the interpreter used to build them."
"  The best way to do this is to ensure that the two interpreters are the "
"same version of Python (possibly different builds, or possibly copies of the"
" same build).  (Of course, if your :option:`!--prefix` and :option:`!--exec-"
"prefix` don't even point to an alternate Python installation, this is "
"immaterial.)"
msgstr ""
"Зауважте, що встановлення розширень до альтернативної інсталяції Python не "
"впливає на те, як створено ці розширення: зокрема, файли заголовків Python "
"(:file:`Python.h` і друзі), встановлені за допомогою інтерпретатора Python, "
"який використовується для запуску сценарію налаштування, будуть "
"використовувати для компіляції розширень. Ви несете відповідальність за те, "
"щоб інтерпретатор, який використовується для запуску встановлених таким "
"чином розширень, був сумісний з інтерпретатором, який використовується для "
"їх створення. Найкращий спосіб зробити це — переконатися, що два "
"інтерпретатори є однаковою версією Python (можливо, різними збірками або, "
"можливо, копіями однієї збірки). (Звичайно, якщо ваші :option:`!--prefix` і "
":option:`!--exec-prefix` навіть не вказують на альтернативну інсталяцію "
"Python, це не має значення.)"

#: ../../install/index.rst:468
msgid "Alternate installation: Windows (the prefix scheme)"
msgstr "Альтернативна установка: Windows (префіксна схема)"

#: ../../install/index.rst:470
msgid ""
"Windows has no concept of a user's home directory, and since the standard "
"Python installation under Windows is simpler than under Unix, the :option:`!"
"--prefix` option has traditionally been used to install additional packages "
"in separate locations on Windows. ::"
msgstr ""
"Windows не має концепції домашнього каталогу користувача, і оскільки "
"стандартна інсталяція Python у Windows є простішою, ніж у Unix, опція "
":option:`!--prefix` традиційно використовується для інсталяції додаткових "
"пакетів в окремих місцях у Windows. ::"

#: ../../install/index.rst:477
msgid ""
"to install modules to the :file:`\\\\Temp\\\\Python` directory on the "
"current drive."
msgstr ""
"для встановлення модулів у каталог :file:`\\\\Temp\\\\Python` на поточному "
"диску."

#: ../../install/index.rst:479
msgid ""
"The installation base is defined by the :option:`!--prefix` option; the "
":option:`!--exec-prefix` option is not supported under Windows, which means "
"that pure Python modules and extension modules are installed into the same "
"location. Files are installed as follows:"
msgstr ""
"База встановлення визначається параметром :option:`!--prefix`; параметр "
":option:`!--exec-prefix` не підтримується в Windows, що означає, що чисті "
"модулі Python і модулі розширення встановлені в одному місці. Файли "
"встановлюються наступним чином:"

#: ../../install/index.rst:488
msgid ":file:`{prefix}\\\\Scripts`"
msgstr ":file:`{prefix}\\\\Сценарії`"

#: ../../install/index.rst:490
msgid ":file:`{prefix}\\\\Include\\\\{distname}`"
msgstr ":file:`{prefix}\\\\Включити\\\\{distname}`"

#: ../../install/index.rst:497
msgid "Custom Installation"
msgstr "Вибіркова установка"

#: ../../install/index.rst:499
msgid ""
"Sometimes, the alternate installation schemes described in section "
":ref:`inst-alt-install` just don't do what you want.  You might want to "
"tweak just one or two directories while keeping everything under the same "
"base directory, or you might want to completely redefine the installation "
"scheme.  In either case, you're creating a *custom installation scheme*."
msgstr ""
"Іноді альтернативні схеми встановлення, описані в розділі :ref:`inst-alt-"
"install`, просто не роблять того, що ви хочете. Можливо, ви захочете "
"налаштувати лише один або два каталоги, зберігаючи все в одному базовому "
"каталозі, або ви можете повністю перевизначити схему встановлення. У будь-"
"якому випадку ви створюєте *спеціальну схему встановлення*."

#: ../../install/index.rst:505
msgid ""
"To create a custom installation scheme, you start with one of the alternate "
"schemes and override some of the installation directories used for the "
"various types of files, using these options:"
msgstr ""
"Щоб створити спеціальну схему встановлення, ви починаєте з однієї з "
"альтернативних схем і замінюєте деякі каталоги встановлення, які "
"використовуються для різних типів файлів, використовуючи ці параметри:"

#: ../../install/index.rst:510
msgid "Override option"
msgstr "Опція перевизначення"

#: ../../install/index.rst:512
msgid "``--install-purelib``"
msgstr "``--install-purelib``"

#: ../../install/index.rst:513
msgid "``--install-platlib``"
msgstr "``--install-platlib``"

#: ../../install/index.rst:514
msgid "all modules"
msgstr "всі модулі"

#: ../../install/index.rst:514
msgid "``--install-lib``"
msgstr "``--install-lib``"

#: ../../install/index.rst:515
msgid "``--install-scripts``"
msgstr "``--install-scripts``"

#: ../../install/index.rst:516
msgid "``--install-data``"
msgstr "``--install-data``"

#: ../../install/index.rst:517
msgid "``--install-headers``"
msgstr "``--install-headers``"

#: ../../install/index.rst:520
msgid ""
"These override options can be relative, absolute, or explicitly defined in "
"terms of one of the installation base directories. (There are two "
"installation base directories, and they are normally the same---they only "
"differ when you use the Unix \"prefix scheme\" and supply different "
"``--prefix`` and ``--exec-prefix`` options; using ``--install-lib`` will "
"override values computed or given for ``--install-purelib`` and ``--install-"
"platlib``, and is recommended for schemes that don't make a difference "
"between Python and extension modules.)"
msgstr ""
"Ці параметри заміни можуть бути відносними, абсолютними або явно визначеними"
" в термінах одного з базових каталогів встановлення. (Існує два базові "
"каталоги встановлення, і зазвичай вони однакові --- вони відрізняються лише "
"тоді, коли ви використовуєте \"префіксну схему\" Unix і надаєте різні "
"параметри ``--prefix`` і ``--exec-prefix`` ; використання ``--install-lib`` "
"замінить значення, обчислені або надані для ``--install-purelib`` і "
"``--install-platlib``, і рекомендовано для схем, які не мають значення між "
"Python і модулями розширення.)"

#: ../../install/index.rst:529
msgid ""
"For example, say you're installing a module distribution to your home "
"directory under Unix---but you want scripts to go in :file:`~/scripts` "
"rather than :file:`~/bin`. As you might expect, you can override this "
"directory with the :option:`!--install-scripts` option; in this case, it "
"makes most sense to supply a relative path, which will be interpreted "
"relative to the installation base directory (your home directory, in this "
"case)::"
msgstr ""
"Наприклад, скажімо, ви встановлюєте дистрибутив модуля у свій домашній "
"каталог під Unix --- але ви хочете, щоб сценарії містилися в "
":file:`~/scripts`, а не в :file:`~/bin`. Як і слід було очікувати, ви можете"
" замінити цей каталог опцією :option:`!--install-scripts`; у цьому випадку "
"має сенс надати відносний шлях, який інтерпретуватиметься відносно основного"
" каталогу інсталяції (у цьому випадку вашого домашнього каталогу):"

#: ../../install/index.rst:538
msgid ""
"Another Unix example: suppose your Python installation was built and "
"installed with a prefix of :file:`/usr/local/python`, so under a standard  "
"installation scripts will wind up in :file:`/usr/local/python/bin`.  If you "
"want them in :file:`/usr/local/bin` instead, you would supply this absolute "
"directory for the :option:`!--install-scripts` option::"
msgstr ""
"Інший приклад Unix: припустімо, що вашу інсталяцію Python було зібрано та "
"встановлено з префіксом :file:`/usr/local/python`, тому за стандартної "
"інсталяції сценарії з’являться у :file:`/usr/local/python/bin`. Якщо ви "
"хочете, щоб вони були в :file:`/usr/local/bin` замість цього, ви повинні "
"вказати цей абсолютний каталог для параметра :option:`!--install-scripts`::"

#: ../../install/index.rst:546
msgid ""
"(This performs an installation using the \"prefix scheme\", where the prefix"
" is whatever your Python interpreter was installed with--- "
":file:`/usr/local/python` in this case.)"
msgstr ""
"(Це виконує інсталяцію за допомогою \"схеми префіксів\", де префіксом є те, "
"що було встановлено вашим інтерпретатором Python --- "
":file:`/usr/local/python` у цьому випадку.)"

#: ../../install/index.rst:550
msgid ""
"If you maintain Python on Windows, you might want third-party modules to "
"live in a subdirectory of :file:`{prefix}`, rather than right in "
":file:`{prefix}` itself.  This is almost as easy as customizing the script "
"installation directory---you just have to remember that there are two types "
"of modules to worry about, Python and extension modules, which can "
"conveniently be both controlled by one option::"
msgstr ""
"Якщо ви підтримуєте Python у Windows, можливо, ви захочете, щоб модулі "
"сторонніх розробників знаходилися в підкаталозі :file:`{prefix}`, а не "
"безпосередньо в :file:`{prefix}`. Це майже так само просто, як налаштувати "
"каталог встановлення сценарію --- вам потрібно лише пам’ятати, що є два типи"
" модулів, про які варто турбуватися, Python і модулі розширення, якими "
"зручно керувати одним параметром::"

#: ../../install/index.rst:559
msgid ""
"The specified installation directory is relative to :file:`{prefix}`.  Of "
"course, you also have to ensure that this directory is in Python's module "
"search path, such as by putting a :file:`.pth` file in a site directory (see"
" :mod:`site`).  See section :ref:`inst-search-path` to find out how to "
"modify Python's search path."
msgstr ""
"Указаний каталог встановлення відноситься до :file:`{prefix}`. Звичайно, ви "
"також повинні переконатися, що цей каталог знаходиться в шляху пошуку модуля"
" Python, наприклад, помістивши файл :file:`.pth` в каталог сайту (див. "
":mod:`site`). Перегляньте розділ :ref:`inst-search-path`, щоб дізнатися, як "
"змінити шлях пошуку Python."

#: ../../install/index.rst:565
msgid ""
"If you want to define an entire installation scheme, you just have to supply"
" all of the installation directory options.  The recommended way to do this "
"is to supply relative paths; for example, if you want to maintain all Python"
" module-related files under :file:`python` in your home directory, and you "
"want a separate directory for each platform that you use your home directory"
" from, you might define the following installation scheme::"
msgstr ""
"Якщо ви бажаєте визначити повну схему встановлення, вам просто потрібно "
"вказати всі параметри каталогу встановлення. Рекомендований спосіб зробити "
"це — надати відносні шляхи; наприклад, якщо ви хочете підтримувати всі "
"файли, пов’язані з модулями Python, у :file:`python` у вашому домашньому "
"каталозі, і вам потрібен окремий каталог для кожної платформи, з якої ви "
"використовуєте свій домашній каталог, ви можете визначити наступну схему "
"встановлення ::"

#: ../../install/index.rst:578
msgid "or, equivalently, ::"
msgstr "або, еквівалентно, ::"

#: ../../install/index.rst:586
msgid ""
"``$PLAT`` is not (necessarily) an environment variable---it will be expanded"
" by the Distutils as it parses your command line options, just as it does "
"when parsing your configuration file(s)."
msgstr ""
"``$PLAT`` не є (обов’язково) змінною середовища --- вона буде розширена за "
"допомогою Distutils під час аналізу ваших параметрів командного рядка, так "
"само, як це робиться під час аналізу ваших конфігураційних файлів."

#: ../../install/index.rst:590
msgid ""
"Obviously, specifying the entire installation scheme every time you install "
"a new module distribution would be very tedious.  Thus, you can put these "
"options into your Distutils config file (see section :ref:`inst-config-"
"files`):"
msgstr ""
"Очевидно, що вказувати всю схему встановлення кожного разу, коли ви "
"встановлюєте новий дистрибутив модуля, було б дуже виснажливо. Таким чином, "
"ви можете розмістити ці параметри у вашому конфігураційному файлі Distutils "
"(див. розділ :ref:`inst-config-files`):"

#: ../../install/index.rst:603
msgid "or, equivalently,"
msgstr "або, те саме,"

#: ../../install/index.rst:614
msgid ""
"Note that these two are *not* equivalent if you supply a different "
"installation base directory when you run the setup script.  For example, ::"
msgstr ""
"Зауважте, що ці два *не* еквівалентні, якщо ви вказуєте інший базовий "
"каталог встановлення під час запуску сценарію налаштування. Наприклад, ::"

#: ../../install/index.rst:619
msgid ""
"would install pure modules to :file:`/tmp/python/lib` in the first case, and"
" to :file:`/tmp/lib` in the second case.  (For the second case, you probably"
" want to supply an installation base of :file:`/tmp/python`.)"
msgstr ""
"встановить чисті модулі до :file:`/tmp/python/lib` у першому випадку та до "
":file:`/tmp/lib` у другому випадку. (Для другого випадку ви, ймовірно, "
"захочете надати базу встановлення :file:`/tmp/python`.)"

#: ../../install/index.rst:623
msgid ""
"You probably noticed the use of ``$HOME`` and ``$PLAT`` in the sample "
"configuration file input.  These are Distutils configuration variables, "
"which bear a strong resemblance to environment variables. In fact, you can "
"use environment variables in config files on platforms that have such a "
"notion but the Distutils additionally define a few extra variables that may "
"not be in your environment, such as ``$PLAT``.  (And of course, on systems "
"that don't have environment variables, such as Mac OS 9, the configuration "
"variables supplied by the Distutils are the only ones you can use.) See "
"section :ref:`inst-config-files` for details."
msgstr ""
"Можливо, ви помітили використання ``$HOME`` і ``$PLAT`` у зразку вхідних "
"даних файлу конфігурації. Це змінні конфігурації Distutils, які дуже схожі "
"на змінні середовища. Фактично, ви можете використовувати змінні середовища "
"у файлах конфігурації на платформах, які мають таке поняття, але Distutils "
"додатково визначає кілька додаткових змінних, яких може не бути у вашому "
"середовищі, наприклад ``$PLAT``. (Звичайно, у системах, які не мають змінних"
" середовища, наприклад Mac OS 9, змінні конфігурації, надані Distutils, є "
"єдиними, які ви можете використовувати.) Перегляньте розділ :ref:`inst-"
"config-files` для деталі."

#: ../../install/index.rst:633
msgid ""
"When a :ref:`virtual environment <venv-def>` is activated, any options that "
"change the installation path will be ignored from all distutils "
"configuration files to prevent inadvertently installing projects outside of "
"the virtual environment."
msgstr ""
"Коли активовано :ref:`віртуальне середовище <venv-def>`, будь-які параметри,"
" які змінюють шлях інсталяції, ігноруватимуться в усіх конфігураційних "
"файлах distutils, щоб запобігти випадковому встановленню проектів за межами "
"віртуального середовища."

#: ../../install/index.rst:647
msgid "Modifying Python's Search Path"
msgstr "Зміна шляху пошуку Python"

#: ../../install/index.rst:649
msgid ""
"When the Python interpreter executes an :keyword:`import` statement, it "
"searches for both Python code and extension modules along a search path.  A "
"default value for the path is configured into the Python binary when the "
"interpreter is built. You can determine the path by importing the :mod:`sys`"
" module and printing the value of ``sys.path``.   ::"
msgstr ""
"Коли інтерпретатор Python виконує оператор :keyword:`import`, він шукає як "
"код Python, так і модулі розширення вздовж шляху пошуку. Значення за "
"замовчуванням для шляху налаштовується у двійковий файл Python під час "
"створення інтерпретатора. Ви можете визначити шлях, імпортувавши модуль "
":mod:`sys` і надрукувавши значення ``sys.path``. ::"

#: ../../install/index.rst:666
msgid ""
"The null string in ``sys.path`` represents the current working directory."
msgstr "Нульовий рядок у ``sys.path`` представляє поточний робочий каталог."

#: ../../install/index.rst:668
msgid ""
"The expected convention for locally installed packages is to put them in the"
" :file:`{...}/site-packages/` directory, but you may want to install Python "
"modules into some arbitrary directory.  For example, your site may have a "
"convention of keeping all software related to the web server under "
":file:`/www`. Add-on Python modules might then belong in "
":file:`/www/python`, and in order to import them, this directory must be "
"added to ``sys.path``.  There are several different ways to add the "
"directory."
msgstr ""
"Очікувана умова для локально встановлених пакунків полягає в тому, щоб "
"розмістити їх у каталозі :file:`{...}/site-packages/`, але ви можете "
"встановити модулі Python у будь-який довільний каталог. Наприклад, ваш сайт "
"може зберігати все програмне забезпечення, пов’язане з веб-сервером, у "
":file:`/www`. Додаткові модулі Python можуть належати до "
":file:`/www/python`, і щоб імпортувати їх, цей каталог потрібно додати до "
"``sys.path``. Є кілька різних способів додати каталог."

#: ../../install/index.rst:676
msgid ""
"The most convenient way is to add a path configuration file to a directory "
"that's already on Python's path, usually to the :file:`.../site-packages/` "
"directory.  Path configuration files have an extension of :file:`.pth`, and "
"each line must contain a single path that will be appended to ``sys.path``."
"  (Because the new paths are appended to ``sys.path``, modules in the added "
"directories will not override standard modules.  This means you can't use "
"this mechanism for installing fixed versions of standard modules.)"
msgstr ""
"Найзручніший спосіб — додати файл конфігурації шляху до каталогу, який уже є"
" на шляху Python, зазвичай до каталогу :file:`.../site-packages/`. Файли "
"конфігурації шляху мають розширення :file:`.pth`, і кожен рядок має містити "
"один шлях, який буде додано до ``sys.path``. (Оскільки нові шляхи додаються "
"до ``sys.path``, модулі в доданих каталогах не замінять стандартні модулі. "
"Це означає, що ви не можете використовувати цей механізм для встановлення "
"фіксованих версій стандартних модулів.)"

#: ../../install/index.rst:684
msgid ""
"Paths can be absolute or relative, in which case they're relative to the "
"directory containing the :file:`.pth` file.  See the documentation of the "
":mod:`site` module for more information."
msgstr ""
"Шляхи можуть бути абсолютними або відносними, і в цьому випадку вони "
"відносяться до каталогу, що містить файл :file:`.pth`. Дивіться документацію"
" модуля :mod:`site` для отримання додаткової інформації."

#: ../../install/index.rst:688
msgid ""
"A slightly less convenient way is to edit the :file:`site.py` file in "
"Python's standard library, and modify ``sys.path``.  :file:`site.py` is "
"automatically imported when the Python interpreter is executed, unless the "
":option:`-S` switch is supplied to suppress this behaviour.  So you could "
"simply edit :file:`site.py` and add two lines to it:"
msgstr ""
"Трохи менш зручний спосіб – редагувати файл :file:`site.py` у стандартній "
"бібліотеці Python і змінити ``sys.path``. :file:`site.py` автоматично "
"імпортується під час виконання інтерпретатора Python, якщо не встановлено "
"перемикач :option:`-S` для придушення такої поведінки. Тож ви можете просто "
"відредагувати :file:`site.py` і додати до нього два рядки:"

#: ../../install/index.rst:699
msgid ""
"However, if you reinstall the same minor version of Python (perhaps when "
"upgrading from 2.2 to 2.2.2, for example) :file:`site.py` will be "
"overwritten by the stock version.  You'd have to remember that it was "
"modified and save a copy before doing the installation."
msgstr ""

#: ../../install/index.rst:704
msgid ""
"There are two environment variables that can modify ``sys.path``. "
":envvar:`PYTHONHOME` sets an alternate value for the prefix of the Python "
"installation.  For example, if :envvar:`PYTHONHOME` is set to "
"``/www/python``, the search path will be set to ``['', "
"'/www/python/lib/pythonX.Y/', '/www/python/lib/pythonX.Y/plat-linux2', "
"...]``."
msgstr ""
"Є дві змінні середовища, які можуть змінювати ``sys.path``. "
":envvar:`PYTHONHOME` встановлює альтернативне значення для префікса "
"встановлення Python. Наприклад, якщо :envvar:`PYTHONHOME` встановлено на "
"``/www/python``, шлях пошуку буде встановлено на ``['', "
"'/www/python/lib/pythonX.Y/', ' /www/python/lib/pythonX.Y/plat-linux2', "
"...]``."

#: ../../install/index.rst:710
msgid ""
"The :envvar:`PYTHONPATH` variable can be set to a list of paths that will be"
" added to the beginning of ``sys.path``.  For example, if "
":envvar:`PYTHONPATH` is set to ``/www/python:/opt/py``, the search path will"
" begin with ``['/www/python', '/opt/py']``.  (Note that directories must "
"exist in order to be added to ``sys.path``; the :mod:`site` module removes "
"paths that don't exist.)"
msgstr ""
"Для змінної :envvar:`PYTHONPATH` можна встановити список шляхів, які будуть "
"додані на початок ``sys.path``. Наприклад, якщо для :envvar:`PYTHONPATH` "
"встановлено значення ``/www/python:/opt/py``, шлях пошуку починатиметься з "
"``['/www/python', '/opt/py']``. (Зауважте, що каталоги мають існувати, щоб "
"їх можна було додати до ``sys.path``; модуль :mod:`site` видаляє шляхи, яких"
" не існує.)"

#: ../../install/index.rst:717
msgid ""
"Finally, ``sys.path`` is just a regular Python list, so any Python "
"application can modify it by adding or removing entries."
msgstr ""
"Нарешті, ``sys.path`` — це звичайний список Python, тому будь-яка програма "
"Python може змінити його, додаючи або видаляючи записи."

#: ../../install/index.rst:724
msgid "Distutils Configuration Files"
msgstr "Файли конфігурації Distutils"

#: ../../install/index.rst:726
msgid ""
"As mentioned above, you can use Distutils configuration files to record "
"personal or site preferences for any Distutils options.  That is, any option"
" to any command can be stored in one of two or three (depending on your "
"platform) configuration files, which will be consulted before the command-"
"line is parsed. This means that configuration files will override default "
"values, and the command-line will in turn override configuration files.  "
"Furthermore, if multiple configuration files apply, values from \"earlier\" "
"files are overridden by \"later\" files."
msgstr ""
"Як згадувалося вище, ви можете використовувати конфігураційні файли "
"Distutils для запису особистих налаштувань або параметрів сайту для будь-"
"яких параметрів Distutils. Тобто будь-яку опцію будь-якої команди можна "
"зберегти в одному з двох або трьох (залежно від вашої платформи) "
"конфігураційних файлів, які будуть перевірені перед аналізом командного "
"рядка. Це означає, що файли конфігурації замінять значення за замовчуванням,"
" а командний рядок, у свою чергу, замінить файли конфігурації. Крім того, "
"якщо застосовуються кілька файлів конфігурації, значення з \"попередніх\" "
"файлів замінюються \"пізнішими\"."

#: ../../install/index.rst:739
msgid "Location and names of config files"
msgstr "Розташування та назви конфігураційних файлів"

#: ../../install/index.rst:741
msgid ""
"The names and locations of the configuration files vary slightly across "
"platforms.  On Unix and macOS, the three configuration files (in the order "
"they are processed) are:"
msgstr ""
"Імена та розташування конфігураційних файлів дещо відрізняються на різних "
"платформах. В Unix і macOS три файли конфігурації (у порядку їх обробки):"

#: ../../install/index.rst:746 ../../install/index.rst:758
msgid "Location and filename"
msgstr "Розташування та назва файлу"

#: ../../install/index.rst:748 ../../install/index.rst:760
msgid "system"
msgstr "система"

#: ../../install/index.rst:748
msgid ":file:`{prefix}/lib/python{ver}/distutils/distutils.cfg`"
msgstr ":file:`{prefix}/lib/python{ver}/distutils/distutils.cfg`"

#: ../../install/index.rst:750 ../../install/index.rst:762
msgid "personal"
msgstr "особистий"

#: ../../install/index.rst:750
msgid ":file:`$HOME/.pydistutils.cfg`"
msgstr ":file:`$HOME/.pydistutils.cfg`"

#: ../../install/index.rst:752 ../../install/index.rst:764
msgid "local"
msgstr "місцевий"

#: ../../install/index.rst:752 ../../install/index.rst:764
msgid ":file:`setup.cfg`"
msgstr ":file:`setup.cfg`"

#: ../../install/index.rst:752 ../../install/index.rst:764
msgid "\\(3)"
msgstr "\\(3)"

#: ../../install/index.rst:755
msgid "And on Windows, the configuration files are:"
msgstr "А в Windows конфігураційні файли:"

#: ../../install/index.rst:760
msgid ":file:`{prefix}\\\\Lib\\\\distutils\\\\distutils.cfg`"
msgstr ":file:`{prefix}\\\\Lib\\\\distutils\\\\distutils.cfg`"

#: ../../install/index.rst:760
msgid "\\(4)"
msgstr "\\(4)"

#: ../../install/index.rst:762
msgid ":file:`%HOME%\\\\pydistutils.cfg`"
msgstr ":file:`%HOME%\\\\pydistutils.cfg`"

#: ../../install/index.rst:762
msgid "\\(5)"
msgstr "\\(5)"

#: ../../install/index.rst:767
msgid ""
"On all platforms, the \"personal\" file can be temporarily disabled by "
"passing the ``--no-user-cfg`` option."
msgstr ""

#: ../../install/index.rst:773
msgid ""
"Strictly speaking, the system-wide configuration file lives in the directory"
" where the Distutils are installed; under Python 1.6 and later on Unix, this"
" is as shown. For Python 1.5.2, the Distutils will normally be installed to "
":file:`{prefix}/lib/python1.5/site-packages/distutils`, so the system "
"configuration file should be put there under Python 1.5.2."
msgstr ""
"Власне кажучи, загальносистемний файл конфігурації знаходиться в каталозі, "
"де встановлено Distutils; під Python 1.6 і пізніше в Unix, це як показано. "
"Для Python 1.5.2 Distutils зазвичай встановлюється в "
":file:`{prefix}/lib/python1.5/site-packages/distutils`, тому файл "
"конфігурації системи слід розміщувати туди під Python 1.5.2."

#: ../../install/index.rst:780
msgid ""
"On Unix, if the :envvar:`HOME` environment variable is not defined, the "
"user's home directory will be determined with the :func:`~pwd.getpwuid` "
"function from the standard :mod:`pwd` module. This is done by the "
":func:`os.path.expanduser` function used by Distutils."
msgstr ""

#: ../../install/index.rst:786
msgid ""
"I.e., in the current directory (usually the location of the setup script)."
msgstr ""
"Тобто в поточному каталозі (зазвичай місце розташування сценарію "
"налаштування)."

#: ../../install/index.rst:789
msgid ""
"(See also note (1).)  Under Python 1.6 and later, Python's default "
"\"installation prefix\" is :file:`C:\\\\Python`, so the system configuration"
" file is normally :file:`C:\\\\Python\\\\Lib\\\\distutils\\\\distutils.cfg`."
" Under Python 1.5.2, the default prefix was :file:`C:\\\\Program "
"Files\\\\Python`, and the Distutils were not part of the standard library---"
"so the system configuration file would be :file:`C:\\\\Program "
"Files\\\\Python\\\\distutils\\\\distutils.cfg` in a standard Python 1.5.2 "
"installation under Windows."
msgstr ""
"(Див. також примітку (1).) У Python 1.6 і пізніших версіях стандартним "
"\"префіксом встановлення\" Python є :file:`C:\\\\Python`, тому файл "
"конфігурації системи зазвичай має вигляд :file:`C:\\\\Python\\ "
"\\Lib\\\\distutils\\\\distutils.cfg`. У Python 1.5.2 префікс за "
"замовчуванням був :file:`C:\\\\Program Files\\\\Python`, а Distutils не були"
" частиною стандартної бібліотеки --- тому файл конфігурації системи мав би "
"виглядати як :file:`C :\\\\Program "
"Files\\\\Python\\\\distutils\\\\distutils.cfg` у стандартній установці "
"Python 1.5.2 під Windows."

#: ../../install/index.rst:798
msgid ""
"On Windows, if the :envvar:`HOME` environment variable is not defined, "
":envvar:`USERPROFILE` then :envvar:`HOMEDRIVE` and :envvar:`HOMEPATH` will "
"be tried. This is done by the :func:`os.path.expanduser` function used by "
"Distutils."
msgstr ""
"У Windows, якщо змінна середовища :envvar:`HOME` не визначена, "
":envvar:`USERPROFILE`, то :envvar:`HOMEDRIVE` і :envvar:`HOMEPATH` будуть "
"спробовані. Це робиться за допомогою функції :func:`os.path.expanduser`, яку"
" використовує Distutils."

#: ../../install/index.rst:807
msgid "Syntax of config files"
msgstr "Синтаксис конфігураційних файлів"

#: ../../install/index.rst:809
msgid ""
"The Distutils configuration files all have the same syntax.  The config "
"files are grouped into sections.  There is one section for each Distutils "
"command, plus a ``global`` section for global options that affect every "
"command.  Each section consists of one option per line, specified as "
"``option=value``."
msgstr ""
"Усі конфігураційні файли Distutils мають однаковий синтаксис. Файли "
"конфігурації згруповані в розділи. Існує один розділ для кожної команди "
"Distutils, а також розділ ``global`` для глобальних параметрів, які "
"впливають на кожну команду. Кожен розділ складається з одного параметра на "
"рядок, визначеного як ``option=value``."

#: ../../install/index.rst:814
msgid ""
"For example, the following is a complete config file that just forces all "
"commands to run quietly by default:"
msgstr ""
"Наприклад, нижче наведено повний файл конфігурації, який просто змушує всі "
"команди виконуватися тихо за замовчуванням:"

#: ../../install/index.rst:822
msgid ""
"If this is installed as the system config file, it will affect all "
"processing of any Python module distribution by any user on the current "
"system.  If it is installed as your personal config file (on systems that "
"support them), it will affect only module distributions processed by you.  "
"And if it is used as the :file:`setup.cfg` for a particular module "
"distribution, it affects only that distribution."
msgstr ""
"Якщо це встановлено як файл конфігурації системи, це вплине на всю обробку "
"будь-якого розповсюдження модуля Python будь-яким користувачем у поточній "
"системі. Якщо його встановлено як ваш особистий конфігураційний файл (у "
"системах, які їх підтримують), він впливатиме лише на розповсюдження "
"модулів, які ви обробляєте. І якщо він використовується як :file:`setup.cfg`"
" для певного дистрибутива модуля, він впливає лише на цей дистрибутив."

#: ../../install/index.rst:829
msgid ""
"You could override the default \"build base\" directory and make the "
":command:`build\\*` commands always forcibly rebuild all files with the "
"following:"
msgstr ""
"Ви можете перевизначити типовий каталог \"build base\" і змусити команди "
":command:`build\\*` завжди примусово перезбирати всі файли за допомогою "
"наступного:"

#: ../../install/index.rst:839
msgid "which corresponds to the command-line arguments ::"
msgstr "який відповідає аргументам командного рядка ::"

#: ../../install/index.rst:843
msgid ""
"except that including the :command:`build` command on the command-line means"
" that command will be run.  Including a particular command in config files "
"has no such implication; it only means that if the command is run, the "
"options in the config file will apply.  (Or if other commands that derive "
"values from it are run, they will use the values in the config file.)"
msgstr ""
"за винятком того, що включення команди :command:`build` до командного рядка "
"означає, що команда буде виконана. Включення конкретної команди до "
"конфігураційних файлів не має такого значення; це лише означає, що якщо "
"команду запущено, будуть застосовані параметри у файлі конфігурації. (Або "
"якщо запускаються інші команди, які отримують значення з нього, вони "
"використовуватимуть значення у файлі конфігурації.)"

#: ../../install/index.rst:849
msgid ""
"You can find out the complete list of options for any command using the "
":option:`!--help` option, e.g.::"
msgstr ""
"Ви можете знайти повний список параметрів для будь-якої команди за допомогою"
" параметра :option:`!--help`, наприклад::"

#: ../../install/index.rst:854
msgid ""
"and you can find out the complete list of global options by using :option:`!"
"--help` without a command::"
msgstr ""
"і ви можете дізнатися повний список глобальних параметрів, використовуючи "
":option:`!--help` без команди::"

#: ../../install/index.rst:859
msgid ""
"See also the \"Reference\" section of the \"Distributing Python Modules\" "
"manual."
msgstr ""
"Дивіться також розділ \"Довідка\" посібника \"Розповсюдження модулів "
"Python\"."

#: ../../install/index.rst:865
msgid "Building Extensions: Tips and Tricks"
msgstr "Будівництво прибудов: поради та підказки"

#: ../../install/index.rst:867
msgid ""
"Whenever possible, the Distutils try to use the configuration information "
"made available by the Python interpreter used to run the :file:`setup.py` "
"script. For example, the same compiler and linker flags used to compile "
"Python will also be used for compiling extensions.  Usually this will work "
"well, but in complicated situations this might be inappropriate.  This "
"section discusses how to override the usual Distutils behaviour."
msgstr ""
"Коли це можливо, Distutils намагаються використовувати інформацію про "
"конфігурацію, надану інтерпретатором Python, який використовується для "
"запуску сценарію :file:`setup.py`. Наприклад, ті самі прапорці компілятора "
"та компонувальника, що використовуються для компіляції Python, також "
"використовуватимуться для компіляції розширень. Зазвичай це добре працює, "
"але в складних ситуаціях це може бути недоречним. У цьому розділі "
"обговорюється, як змінити звичайну поведінку Distutils."

#: ../../install/index.rst:878
msgid "Tweaking compiler/linker flags"
msgstr "Налаштування прапорів компілятора/лінкера"

#: ../../install/index.rst:880
msgid ""
"Compiling a Python extension written in C or C++ will sometimes require "
"specifying custom flags for the compiler and linker in order to use a "
"particular library or produce a special kind of object code. This is "
"especially true if the extension hasn't been tested on your platform, or if "
"you're trying to cross-compile Python."
msgstr ""
"Компіляція розширення Python, написаного на C або C++, іноді потребує "
"вказівки спеціальних прапорів для компілятора та компонувальника, щоб "
"використовувати певну бібліотеку або створювати особливий тип об’єктного "
"коду. Це особливо вірно, якщо розширення не було протестовано на вашій "
"платформі або якщо ви намагаєтеся крос-компілювати Python."

#: ../../install/index.rst:886
msgid ""
"In the most general case, the extension author might have foreseen that "
"compiling the extensions would be complicated, and provided a :file:`Setup` "
"file for you to edit.  This will likely only be done if the module "
"distribution contains many separate extension modules, or if they often "
"require elaborate sets of compiler flags in order to work."
msgstr ""
"У найзагальнішому випадку автор розширення міг передбачити, що компіляція "
"розширень буде складною, і надав файл :file:`Setup` для редагування. "
"Ймовірно, це буде зроблено, лише якщо дистрибутив модуля містить багато "
"окремих модулів розширення, або якщо вони часто вимагають складних наборів "
"прапорів компілятора для роботи."

#: ../../install/index.rst:892
msgid ""
"A :file:`Setup` file, if present, is parsed in order to get a list of "
"extensions to build.  Each line in a :file:`Setup` describes a single "
"module.  Lines have the following structure::"
msgstr ""
"Файл :file:`Setup`, якщо він є, аналізується, щоб отримати список розширень "
"для створення. Кожен рядок у :file:`Setup` описує окремий модуль. Лінії "
"мають таку структуру:"

#: ../../install/index.rst:899
msgid "Let's examine each of the fields in turn."
msgstr "Розглянемо по черзі кожне з полів."

#: ../../install/index.rst:901
msgid ""
"*module* is the name of the extension module to be built, and should be a "
"valid Python identifier.  You can't just change this in order to rename a "
"module (edits to the source code would also be needed), so this should be "
"left alone."
msgstr ""
"*module* — це ім’я модуля розширення, який потрібно створити, і має бути "
"дійсним ідентифікатором Python. Ви не можете просто змінити це, щоб "
"перейменувати модуль (також буде потрібно редагування вихідного коду), тому "
"це слід залишити."

#: ../../install/index.rst:905
msgid ""
"*sourcefile* is anything that's likely to be a source code file, at least "
"judging by the filename.  Filenames ending in :file:`.c` are assumed to be "
"written in C, filenames ending in :file:`.C`, :file:`.cc`, and :file:`.c++` "
"are assumed to be C++, and filenames ending in :file:`.m` or :file:`.mm` are"
" assumed to be in Objective C."
msgstr ""
"*sourcefile* — це все, що ймовірно є файлом вихідного коду, принаймні судячи"
" з назви файлу. Передбачається, що назви файлів, що закінчуються на "
":file:`.c`, написані на C, а назви файлів, що закінчуються на :file:`.C`, "
":file:`.cc` і :file:`.c++`, — на C++ , а імена файлів, що закінчуються на "
":file:`.m` або :file:`.mm`, вважаються такими, що належать до Objective C."

#: ../../install/index.rst:911
msgid ""
"*cpparg* is an argument for the C preprocessor,  and is anything starting "
"with :option:`!-I`, :option:`!-D`, :option:`!-U` or :option:`!-C`."
msgstr ""
"*cpparg* — це аргумент для препроцесора C і все, що починається з "
":option:`!-I`, :option:`!-D`, :option:`!-U` або :option:`!-C`."

#: ../../install/index.rst:914
msgid ""
"*library* is anything ending in :file:`.a` or beginning with :option:`!-l` "
"or :option:`!-L`."
msgstr ""
"*бібліотека* — це все, що закінчується на :file:`.a` або починається на "
":option:`!-l` чи :option:`!-L`."

#: ../../install/index.rst:917
msgid ""
"If a particular platform requires a special library on your platform, you "
"can add it by editing the :file:`Setup` file and running ``python setup.py "
"build``. For example, if the module defined by the line ::"
msgstr ""
"Якщо певна платформа потребує спеціальної бібліотеки на вашій платформі, ви "
"можете додати її, відредагувавши файл :file:`Setup` і запустивши ``python "
"setup.py build``. Наприклад, якщо модуль, визначений рядком ::"

#: ../../install/index.rst:923
msgid ""
"must be linked with the math library :file:`libm.a` on your platform, simply"
" add :option:`!-lm` to the line::"
msgstr ""
"має бути пов’язано з математичною бібліотекою :file:`libm.a` на вашій "
"платформі, просто додайте :option:`!-lm` до рядка::"

#: ../../install/index.rst:928
msgid ""
"Arbitrary switches intended for the compiler or the linker can be supplied "
"with the :option:`!-Xcompiler` *arg* and :option:`!-Xlinker` *arg* options::"
msgstr ""
"Довільні перемикачі, призначені для компілятора або компонувальника, можуть "
"бути забезпечені параметрами :option:`!-Xcompiler` *arg* і "
":option:`!-Xlinker` *arg*::"

#: ../../install/index.rst:933
msgid ""
"The next option after :option:`!-Xcompiler` and :option:`!-Xlinker` will be "
"appended to the proper command line, so in the above example the compiler "
"will be passed the :option:`!-o32` option, and the linker will be passed "
":option:`!-shared`.  If a compiler option requires an argument, you'll have "
"to supply multiple :option:`!-Xcompiler` options; for example, to pass ``-x "
"c++`` the :file:`Setup` file would have to contain ``-Xcompiler -x "
"-Xcompiler c++``."
msgstr ""
"Наступний параметр після :option:`!-Xcompiler` і :option:`!-Xlinker` буде "
"додано до відповідного командного рядка, тому у наведеному вище прикладі "
"компілятору буде передано параметр :option:`!-o32` , і компонувальнику буде "
"передано :option:`!-shared`. Якщо параметр компілятора потребує аргументу, "
"вам доведеться надати кілька параметрів :option:`!-Xcompiler`; наприклад, "
"щоб передати ``-x c++`` файл :file:`Setup` повинен містити ``-Xcompiler -x "
"-Xcompiler c++``."

#: ../../install/index.rst:940
msgid ""
"Compiler flags can also be supplied through setting the :envvar:`CFLAGS` "
"environment variable.  If set, the contents of :envvar:`CFLAGS` will be "
"added to the compiler flags specified in the  :file:`Setup` file."
msgstr ""
"Прапори компілятора також можна надати через встановлення змінної середовища"
" :envvar:`CFLAGS`. Якщо встановлено, вміст :envvar:`CFLAGS` буде додано до "
"позначок компілятора, указаних у файлі :file:`Setup`."

#: ../../install/index.rst:948
msgid "Using non-Microsoft compilers on Windows"
msgstr "Використання компіляторів не від Microsoft у Windows"

#: ../../install/index.rst:955
msgid "Borland/CodeGear C++"
msgstr "Borland/CodeGear C++"

#: ../../install/index.rst:957
msgid ""
"This subsection describes the necessary steps to use Distutils with the "
"Borland C++ compiler version 5.5.  First you have to know that Borland's "
"object file format (OMF) is different from the format used by the Python "
"version you can download from the Python or ActiveState web site.  (Python "
"is built with Microsoft Visual C++, which uses COFF as the object file "
"format.) For this reason you have to convert Python's library "
":file:`python25.lib` into the Borland format.  You can do this as follows:"
msgstr ""
"У цьому підрозділі описано необхідні кроки для використання Distutils із "
"компілятором Borland C++ версії 5.5. По-перше, ви повинні знати, що формат "
"об’єктного файлу Borland (OMF) відрізняється від формату, який "
"використовується версією Python, яку можна завантажити з веб-сайту Python "
"або ActiveState. (Python побудовано з Microsoft Visual C++, який "
"використовує COFF як формат об’єктного файлу.) З цієї причини вам потрібно "
"конвертувати бібліотеку Python :file:`python25.lib` у формат Borland. Ви "
"можете зробити це наступним чином:"

#: ../../install/index.rst:972
msgid ""
"The :file:`coff2omf` program comes with the Borland compiler.  The file "
":file:`python25.lib` is in the :file:`Libs` directory of your Python "
"installation.  If your extension uses other libraries (zlib, ...) you have "
"to convert them too."
msgstr ""
"Програма :file:`coff2omf` постачається разом із компілятором Borland. Файл "
":file:`python25.lib` знаходиться в каталозі :file:`Libs` вашого встановлення"
" Python. Якщо ваше розширення використовує інші бібліотеки (zlib, ...), їх "
"також потрібно конвертувати."

#: ../../install/index.rst:977
msgid ""
"The converted files have to reside in the same directories as the normal "
"libraries."
msgstr ""
"Перетворені файли мають зберігатися в тих самих каталогах, що й звичайні "
"бібліотеки."

#: ../../install/index.rst:980
msgid ""
"How does Distutils manage to use these libraries with their changed names?  "
"If the extension needs a library (eg. :file:`foo`) Distutils checks first if"
" it finds a library with suffix :file:`_bcpp` (eg. :file:`foo_bcpp.lib`) and"
" then uses this library.  In the case it doesn't find such a special library"
" it uses the default name (:file:`foo.lib`.) [#]_"
msgstr ""
"Як Distutils вдається використовувати ці бібліотеки зі зміненими назвами? "
"Якщо для розширення потрібна бібліотека (наприклад, :file:`foo`), Distutils "
"спочатку перевіряє, чи знайде бібліотеку з суфіксом :file:`_bcpp` "
"(наприклад, :file:`foo_bcpp.lib`), а потім використовує цю бібліотеку. У "
"випадку, якщо він не знаходить такої спеціальної бібліотеки, він "
"використовує назву за замовчуванням (:file:`foo.lib`.) [#]_"

#: ../../install/index.rst:986
msgid ""
"To let Distutils compile your extension with Borland C++ you now have to "
"type::"
msgstr ""
"Щоб дозволити Distutils скомпілювати ваше розширення за допомогою Borland "
"C++, вам тепер потрібно ввести::"

#: ../../install/index.rst:990
msgid ""
"If you want to use the Borland C++ compiler as the default, you could "
"specify this in your personal or system-wide configuration file for "
"Distutils (see section :ref:`inst-config-files`.)"
msgstr ""
"Якщо ви хочете використовувати компілятор Borland C++ за замовчуванням, ви "
"можете вказати це у своєму особистому або системному файлі конфігурації для "
"Distutils (див. розділ :ref:`inst-config-files`.)"

#: ../../install/index.rst:999
msgid "`C++Builder Compiler <https://www.embarcadero.com/products>`_"
msgstr "`Компілятор C++Builder <https://www.embarcadero.com/products>`_"

#: ../../install/index.rst:998
msgid ""
"Information about the free C++ compiler from Borland, including links to the"
" download pages."
msgstr ""
"Інформація про безкоштовний компілятор C++ від Borland, включаючи посилання "
"на сторінки завантаження."

#: ../../install/index.rst:1002
msgid ""
"`Creating Python Extensions Using Borland's Free Compiler "
"<http://www.cyberus.ca/~g_will/pyExtenDL.shtml>`_"
msgstr ""
"`Створення розширень Python за допомогою безкоштовного компілятора Borland "
"<http://www.cyberus.ca/~g_will/pyExtenDL.shtml>`_"

#: ../../install/index.rst:1002
msgid ""
"Document describing how to use Borland's free command-line C++ compiler to "
"build Python."
msgstr ""
"Документ, що описує, як використовувати безкоштовний компілятор командного "
"рядка Borland C++ для створення Python."

#: ../../install/index.rst:1007
msgid "GNU C / Cygwin / MinGW"
msgstr "GNU C / Cygwin / MinGW"

#: ../../install/index.rst:1009
msgid ""
"This section describes the necessary steps to use Distutils with the GNU "
"C/C++ compilers in their Cygwin and MinGW distributions. [#]_ For a Python "
"interpreter that was built with Cygwin, everything should work without any "
"of these following steps."
msgstr ""
"У цьому розділі описано необхідні кроки для використання Distutils із "
"компіляторами GNU C/C++ у їхніх дистрибутивах Cygwin та MinGW. [#]_ Для "
"інтерпретатора Python, створеного за допомогою Cygwin, усе повинно працювати"
" без будь-якого з цих кроків."

#: ../../install/index.rst:1014
msgid ""
"Not all extensions can be built with MinGW or Cygwin, but many can.  "
"Extensions most likely to not work are those that use C++ or depend on "
"Microsoft Visual C extensions."
msgstr ""
"Не всі розширення можна створити за допомогою MinGW або Cygwin, але багато з"
" них можуть. Швидше за все не працюють розширення, які використовують C++ "
"або залежать від розширень Microsoft Visual C."

#: ../../install/index.rst:1018
msgid "To let Distutils compile your extension with Cygwin you have to type::"
msgstr ""
"Щоб дозволити Distutils скомпілювати ваше розширення за допомогою Cygwin, "
"вам потрібно ввести::"

#: ../../install/index.rst:1022
msgid "and for Cygwin in no-cygwin mode [#]_ or for MinGW type::"
msgstr "і для Cygwin у режимі без Cygwin [#]_ або для типу MinGW::"

#: ../../install/index.rst:1026
msgid ""
"If you want to use any of these options/compilers as default, you should "
"consider writing it in your personal or system-wide configuration file for "
"Distutils (see section :ref:`inst-config-files`.)"
msgstr ""
"Якщо ви хочете використовувати будь-який із цих параметрів/компіляторів за "
"замовчуванням, вам слід записати його у свій особистий або загальносистемний"
" файл конфігурації для Distutils (див. розділ :ref:`inst-config-files`.)"

#: ../../install/index.rst:1031
msgid "Older Versions of Python and MinGW"
msgstr "Старіші версії Python і MinGW"

#: ../../install/index.rst:1032
msgid ""
"The following instructions only apply if you're using a version of Python "
"inferior to 2.4.1 with a MinGW inferior to 3.0.0 (with "
"binutils-2.13.90-20030111-1)."
msgstr ""
"Наступні вказівки застосовуються, лише якщо ви використовуєте версію Python "
"нижчу за 2.4.1 із MinGW нижчою за 3.0.0 (з binutils-2.13.90-20030111-1)."

#: ../../install/index.rst:1036
msgid ""
"These compilers require some special libraries.  This task is more complex "
"than for Borland's C++, because there is no program to convert the library."
"  First you have to create a list of symbols which the Python DLL exports. "
"(You can find a good program for this task at "
"https://sourceforge.net/projects/mingw/files/MinGW/Extension/pexports/)."
msgstr ""
"Для цих компіляторів потрібні спеціальні бібліотеки. Це завдання більш "
"складне, ніж для C++ від Borland, оскільки немає програми для перетворення "
"бібліотеки. Спочатку вам потрібно створити список символів, які експортує "
"DLL Python. (Ви можете знайти хорошу програму для цього завдання на "
"https://sourceforge.net/projects/mingw/files/MinGW/Extension/pexports/)."

#: ../../install/index.rst:1049
msgid ""
"The location of an installed :file:`python25.dll` will depend on the "
"installation options and the version and language of Windows.  In a \"just "
"for me\" installation, it will appear in the root of the installation "
"directory.  In a shared installation, it will be located in the system "
"directory."
msgstr ""
"Розташування встановленого :file:`python25.dll` залежатиме від параметрів "
"встановлення, версії та мови Windows. Під час встановлення \"тільки для "
"мене\" він з’явиться в кореневому каталозі встановлення. У спільній "
"установці він буде розташований у системному каталозі."

#: ../../install/index.rst:1054
msgid ""
"Then you can create from these information an import library for gcc. ::"
msgstr ""
"Тоді ви можете створити з цієї інформації бібліотеку імпорту для gcc. ::"

#: ../../install/index.rst:1058
msgid ""
"The resulting library has to be placed in the same directory as "
":file:`python25.lib`. (Should be the :file:`libs` directory under your "
"Python installation directory.)"
msgstr ""
"Отриману бібліотеку потрібно розмістити в тому ж каталозі, що й "
":file:`python25.lib`. (Має бути каталог :file:`libs` у вашому каталозі "
"встановлення Python.)"

#: ../../install/index.rst:1062
msgid ""
"If your extension uses other libraries (zlib,...) you might  have to convert"
" them too. The converted files have to reside in the same directories as the"
" normal libraries do."
msgstr ""
"Якщо ваше розширення використовує інші бібліотеки (zlib,...), вам, можливо, "
"доведеться конвертувати їх також. Перетворені файли мають зберігатися в тих "
"самих каталогах, що й звичайні бібліотеки."

#: ../../install/index.rst:1069
msgid ""
"`Building Python modules on MS Windows platform with MinGW "
"<https://old.zope.dev/Members/als/tips/win32_mingw_modules>`_"
msgstr ""

#: ../../install/index.rst:1070
msgid ""
"Information about building the required libraries for the MinGW environment."
msgstr "Інформація про створення необхідних бібліотек для середовища MinGW."

#: ../../install/index.rst:1074
msgid "Footnotes"
msgstr "Виноски"

#: ../../install/index.rst:1075
msgid ""
"This also means you could replace all existing COFF-libraries with OMF-"
"libraries of the same name."
msgstr ""
"Це також означає, що ви можете замінити всі існуючі COFF-бібліотеки "
"бібліотеками OMF з такою ж назвою."

#: ../../install/index.rst:1078
msgid "Check https://www.sourceware.org/cygwin/ for more information"
msgstr ""
"Перегляньте https://www.sourceware.org/cygwin/ для отримання додаткової "
"інформації"

#: ../../install/index.rst:1080
msgid ""
"Then you have no POSIX emulation available, but you also don't need "
":file:`cygwin1.dll`."
msgstr ""
"Тоді вам не доступна емуляція POSIX, але вам також не потрібен "
":file:`cygwin1.dll`."
