# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-19 01:00+0000\n"
"PO-Revision-Date: 2021-06-28 00:50+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../c-api/veryhigh.rst:8
msgid "The Very High Level Layer"
msgstr "Рівень дуже високого рівня"

#: ../../c-api/veryhigh.rst:10
msgid ""
"The functions in this chapter will let you execute Python source code given "
"in a file or a buffer, but they will not let you interact in a more detailed"
" way with the interpreter."
msgstr ""
"Функції в цій главі дозволять вам виконувати вихідний код Python, поданий у "
"файлі або буфері, але вони не дозволять вам більш детально взаємодіяти з "
"інтерпретатором."

#: ../../c-api/veryhigh.rst:14
msgid ""
"Several of these functions accept a start symbol from the grammar as a "
"parameter.  The available start symbols are :c:data:`Py_eval_input`, "
":c:data:`Py_file_input`, and :c:data:`Py_single_input`.  These are described"
" following the functions which accept them as parameters."
msgstr ""

#: ../../c-api/veryhigh.rst:19
msgid ""
"Note also that several of these functions take :c:expr:`FILE*` parameters.  "
"One particular issue which needs to be handled carefully is that the "
":c:type:`FILE` structure for different C libraries can be different and "
"incompatible.  Under Windows (at least), it is possible for dynamically "
"linked extensions to actually use different libraries, so care should be "
"taken that :c:expr:`FILE*` parameters are only passed to these functions if "
"it is certain that they were created by the same library that the Python "
"runtime is using."
msgstr ""

#: ../../c-api/veryhigh.rst:30
msgid ""
"This is a simplified interface to :c:func:`PyRun_AnyFileExFlags` below, "
"leaving *closeit* set to ``0`` and *flags* set to ``NULL``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`PyRun_AnyFileExFlags` нижче, залишаючи "
"*closeit* встановленим на ``0`` і *flags* встановленим на ``NULL``."

#: ../../c-api/veryhigh.rst:36
msgid ""
"This is a simplified interface to :c:func:`PyRun_AnyFileExFlags` below, "
"leaving the *closeit* argument set to ``0``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`PyRun_AnyFileExFlags` нижче, залишаючи "
"аргумент *closeit* встановленим на ``0``."

#: ../../c-api/veryhigh.rst:42
msgid ""
"This is a simplified interface to :c:func:`PyRun_AnyFileExFlags` below, "
"leaving the *flags* argument set to ``NULL``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`PyRun_AnyFileExFlags` нижче, залишаючи "
"для аргументу *flags* значення ``NULL``."

#: ../../c-api/veryhigh.rst:48
msgid ""
"If *fp* refers to a file associated with an interactive device (console or "
"terminal input or Unix pseudo-terminal), return the value of "
":c:func:`PyRun_InteractiveLoop`, otherwise return the result of "
":c:func:`PyRun_SimpleFile`.  *filename* is decoded from the filesystem "
"encoding (:func:`sys.getfilesystemencoding`).  If *filename* is ``NULL``, "
"this function uses ``\"???\"`` as the filename. If *closeit* is true, the "
"file is closed before ``PyRun_SimpleFileExFlags()`` returns."
msgstr ""
"Якщо *fp* посилається на файл, пов’язаний з інтерактивним пристроєм (консоль"
" або термінал введення чи псевдотермінал Unix), повертає значення "
":c:func:`PyRun_InteractiveLoop`, інакше повертає результат "
":c:func:`PyRun_SimpleFile`.*ім’я файлу* розшифровується з кодування файлової"
" системи (:func:`sys.getfilesystemencoding`). Якщо *ім’я файлу* має значення"
" ``NULL``, ця функція використовує ``\"???\"`` як ім’я файлу. Якщо *closeit*"
" має значення true, файл закривається до повернення "
"``PyRun_SimpleFileExFlags()``."

#: ../../c-api/veryhigh.rst:60
msgid ""
"This is a simplified interface to :c:func:`PyRun_SimpleStringFlags` below, "
"leaving the :c:struct:`PyCompilerFlags`\\* argument set to ``NULL``."
msgstr ""

#: ../../c-api/veryhigh.rst:66
msgid ""
"Executes the Python source code from *command* in the :mod:`__main__` module"
" according to the *flags* argument. If :mod:`__main__` does not already "
"exist, it is created.  Returns ``0`` on success or ``-1`` if an exception "
"was raised.  If there was an error, there is no way to get the exception "
"information. For the meaning of *flags*, see below."
msgstr ""
"Виконує вихідний код Python з *команди* в модулі :mod:`__main__` відповідно "
"до аргументу *flags*. Якщо :mod:`__main__` ще не існує, він буде створений. "
"Повертає ``0`` у разі успіху або ``-1``, якщо було викликано виключення. "
"Якщо сталася помилка, неможливо отримати інформацію про винятки. Про "
"значення *прапорів* дивіться нижче."

#: ../../c-api/veryhigh.rst:72
msgid ""
"Note that if an otherwise unhandled :exc:`SystemExit` is raised, this "
"function will not return ``-1``, but exit the process, as long as "
":c:member:`PyConfig.inspect` is zero."
msgstr ""

#: ../../c-api/veryhigh.rst:79
msgid ""
"This is a simplified interface to :c:func:`PyRun_SimpleFileExFlags` below, "
"leaving *closeit* set to ``0`` and *flags* set to ``NULL``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`PyRun_SimpleFileExFlags` нижче, "
"залишаючи *closeit* встановленим на ``0`` і *flags* встановленим на "
"``NULL``."

#: ../../c-api/veryhigh.rst:85
msgid ""
"This is a simplified interface to :c:func:`PyRun_SimpleFileExFlags` below, "
"leaving *flags* set to ``NULL``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`PyRun_SimpleFileExFlags` нижче, "
"залишаючи *flags* встановленими на ``NULL``."

#: ../../c-api/veryhigh.rst:91
msgid ""
"Similar to :c:func:`PyRun_SimpleStringFlags`, but the Python source code is "
"read from *fp* instead of an in-memory string. *filename* should be the name"
" of the file, it is decoded from :term:`filesystem encoding and error "
"handler`. If *closeit* is true, the file is closed before "
"``PyRun_SimpleFileExFlags()`` returns."
msgstr ""
"Подібно до :c:func:`PyRun_SimpleStringFlags`, але вихідний код Python "
"читається з *fp* замість рядка в пам’яті. *filename* має бути назвою файлу, "
"воно розшифровується з :term:`filesystem encoding and error handler`. Якщо "
"*closeit* має значення true, файл закривається до повернення "
"``PyRun_SimpleFileExFlags()``."

#: ../../c-api/veryhigh.rst:98
msgid ""
"On Windows, *fp* should be opened as binary mode (e.g. ``fopen(filename, "
"\"rb\")``). Otherwise, Python may not handle script file with LF line ending"
" correctly."
msgstr ""
"У Windows *fp* слід відкривати як бінарний режим (наприклад, "
"``fopen(filename, \"rb\")``). Інакше Python може неправильно обробити файл "
"сценарію з закінченням рядка LF."

#: ../../c-api/veryhigh.rst:104
msgid ""
"This is a simplified interface to :c:func:`PyRun_InteractiveOneFlags` below,"
" leaving *flags* set to ``NULL``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`PyRun_InteractiveOneFlags` нижче, "
"залишаючи *flags* встановленими на ``NULL``."

#: ../../c-api/veryhigh.rst:110
msgid ""
"Read and execute a single statement from a file associated with an "
"interactive device according to the *flags* argument.  The user will be "
"prompted using ``sys.ps1`` and ``sys.ps2``.  *filename* is decoded from the "
":term:`filesystem encoding and error handler`."
msgstr ""
"Читання та виконання окремого оператора з файлу, пов’язаного з інтерактивним"
" пристроєм, відповідно до аргументу *flags*. Користувачеві буде "
"запропоновано використовувати ``sys.ps1`` і ``sys.ps2``. *ім’я файлу* "
"розшифровується з :term:`filesystem encoding and error handler`."

#: ../../c-api/veryhigh.rst:115
msgid ""
"Returns ``0`` when the input was executed successfully, ``-1`` if there was "
"an exception, or an error code from the :file:`errcode.h` include file "
"distributed as part of Python if there was a parse error.  (Note that "
":file:`errcode.h` is not included by :file:`Python.h`, so must be included "
"specifically if needed.)"
msgstr ""
"Повертає ``0``, якщо введення було виконано успішно, ``-1``, якщо стався "
"виняток, або код помилки з файлу включення :file:`errcode.h`, який "
"поширюється як частина Python, якщо був помилка аналізу. (Зауважте, що "
":file:`errcode.h` не включено в :file:`Python.h`, тому його потрібно "
"включити спеціально, якщо це необхідно.)"

#: ../../c-api/veryhigh.rst:124
msgid ""
"This is a simplified interface to :c:func:`PyRun_InteractiveLoopFlags` "
"below, leaving *flags* set to ``NULL``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`PyRun_InteractiveLoopFlags` нижче, "
"залишаючи *flags* встановленими на ``NULL``."

#: ../../c-api/veryhigh.rst:130
msgid ""
"Read and execute statements from a file associated with an interactive "
"device until EOF is reached.  The user will be prompted using ``sys.ps1`` "
"and ``sys.ps2``.  *filename* is decoded from the :term:`filesystem encoding "
"and error handler`.  Returns ``0`` at EOF or a negative number upon failure."
msgstr ""
"Читати та виконувати оператори з файлу, пов’язаного з інтерактивним "
"пристроєм, доки не буде досягнуто EOF. Користувачеві буде запропоновано "
"використовувати ``sys.ps1`` і ``sys.ps2``. *ім’я файлу* розшифровується з "
":term:`filesystem encoding and error handler`. Повертає ``0`` на EOF або "
"від'ємне число у разі помилки."

#: ../../c-api/veryhigh.rst:138
msgid ""
"Can be set to point to a function with the prototype ``int func(void)``.  "
"The function will be called when Python's interpreter prompt is about to "
"become idle and wait for user input from the terminal.  The return value is "
"ignored.  Overriding this hook can be used to integrate the interpreter's "
"prompt with other event loops, as done in the :file:`Modules/_tkinter.c` in "
"the Python source code."
msgstr ""
"Може вказувати на функцію з прототипом ``int func(void)``. Функція буде "
"викликана, коли підказка інтерпретатора Python збирається перейти в режим "
"очікування та чекати введення користувача з терміналу. Повернене значення "
"ігнорується. Перевизначення цього хука можна використати для інтеграції "
"підказки інтерпретатора з іншими циклами подій, як це зроблено в "
":file:`Modules/_tkinter.c` у вихідному коді Python."

#: ../../c-api/veryhigh.rst:146 ../../c-api/veryhigh.rst:170
msgid ""
"This function is only called from the :ref:`main interpreter <sub-"
"interpreter-support>`."
msgstr ""

#: ../../c-api/veryhigh.rst:153
msgid ""
"Can be set to point to a function with the prototype ``char *func(FILE "
"*stdin, FILE *stdout, char *prompt)``, overriding the default function used "
"to read a single line of input at the interpreter's prompt.  The function is"
" expected to output the string *prompt* if it's not ``NULL``, and then read "
"a line of input from the provided standard input file, returning the "
"resulting string.  For example, The :mod:`readline` module sets this hook to"
" provide line-editing and tab-completion features."
msgstr ""
"Можна налаштувати так, щоб вказувати на функцію з прототипом ``char "
"*func(FILE *stdin, FILE *stdout, char *prompt)``, замінюючи функцію за "
"замовчуванням, яка використовується для читання одного рядка введення в "
"підказці інтерпретатора. Очікується, що функція виведе рядок *prompt*, якщо "
"він не ``NULL``, а потім прочитає рядок введення з наданого стандартного "
"файлу введення, повертаючи результуючий рядок. Наприклад, модуль "
":mod:`readline` встановлює цей хук для надання функцій редагування рядка та "
"завершення табуляції."

#: ../../c-api/veryhigh.rst:162
msgid ""
"The result must be a string allocated by :c:func:`PyMem_RawMalloc` or "
":c:func:`PyMem_RawRealloc`, or ``NULL`` if an error occurred."
msgstr ""
"Результат має бути рядком, виділеним :c:func:`PyMem_RawMalloc` або "
":c:func:`PyMem_RawRealloc`, або ``NULL``, якщо сталася помилка."

#: ../../c-api/veryhigh.rst:165
msgid ""
"The result must be allocated by :c:func:`PyMem_RawMalloc` or "
":c:func:`PyMem_RawRealloc`, instead of being allocated by "
":c:func:`PyMem_Malloc` or :c:func:`PyMem_Realloc`."
msgstr ""
"Результат має бути виділено за допомогою :c:func:`PyMem_RawMalloc` або "
":c:func:`PyMem_RawRealloc`, а не за допомогою :c:func:`PyMem_Malloc` або "
":c:func:`PyMem_Realloc`."

#: ../../c-api/veryhigh.rst:176
msgid ""
"This is a simplified interface to :c:func:`PyRun_StringFlags` below, leaving"
" *flags* set to ``NULL``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`PyRun_StringFlags` нижче, залишаючи "
"*flags* встановленими на ``NULL``."

#: ../../c-api/veryhigh.rst:182
msgid ""
"Execute Python source code from *str* in the context specified by the "
"objects *globals* and *locals* with the compiler flags specified by *flags*."
"  *globals* must be a dictionary; *locals* can be any object that implements"
" the mapping protocol.  The parameter *start* specifies the start token that"
" should be used to parse the source code."
msgstr ""
"Виконайте вихідний код Python із *str* у контексті, визначеному об’єктами "
"*globals* і *locals* з прапорцями компілятора, визначеними *flags*. "
"*globals* має бути словником; *locals* може бути будь-яким об’єктом, який "
"реалізує протокол відображення. Параметр *start* визначає початковий маркер,"
" який слід використовувати для аналізу вихідного коду."

#: ../../c-api/veryhigh.rst:188
msgid ""
"Returns the result of executing the code as a Python object, or ``NULL`` if "
"an exception was raised."
msgstr ""
"Повертає результат виконання коду як об’єкт Python або ``NULL``, якщо було "
"викликано виняткову ситуацію."

#: ../../c-api/veryhigh.rst:194
msgid ""
"This is a simplified interface to :c:func:`PyRun_FileExFlags` below, leaving"
" *closeit* set to ``0`` and *flags* set to ``NULL``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`PyRun_FileExFlags` нижче, залишаючи "
"*closeit* встановленим на ``0`` і *flags* встановленим на ``NULL``."

#: ../../c-api/veryhigh.rst:200
msgid ""
"This is a simplified interface to :c:func:`PyRun_FileExFlags` below, leaving"
" *flags* set to ``NULL``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`PyRun_FileExFlags` нижче, залишаючи "
"*flags* встановленими на ``NULL``."

#: ../../c-api/veryhigh.rst:206
msgid ""
"This is a simplified interface to :c:func:`PyRun_FileExFlags` below, leaving"
" *closeit* set to ``0``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`PyRun_FileExFlags` нижче, залишаючи "
"*closeit* встановленим на ``0``."

#: ../../c-api/veryhigh.rst:212
msgid ""
"Similar to :c:func:`PyRun_StringFlags`, but the Python source code is read "
"from *fp* instead of an in-memory string. *filename* should be the name of "
"the file, it is decoded from the :term:`filesystem encoding and error "
"handler`. If *closeit* is true, the file is closed before "
":c:func:`PyRun_FileExFlags` returns."
msgstr ""
"Подібно до :c:func:`PyRun_StringFlags`, але вихідний код Python читається з "
"*fp* замість рядка в пам’яті. *ім’я файлу* має бути ім’ям файлу, воно "
"декодується з :term:`filesystem encoding and error handler`. Якщо *closeit* "
"має значення true, файл закривається до повернення "
":c:func:`PyRun_FileExFlags`."

#: ../../c-api/veryhigh.rst:221
msgid ""
"This is a simplified interface to :c:func:`Py_CompileStringFlags` below, "
"leaving *flags* set to ``NULL``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`Py_CompileStringFlags` нижче, залишаючи "
"*flags* встановленими на ``NULL``."

#: ../../c-api/veryhigh.rst:227
msgid ""
"This is a simplified interface to :c:func:`Py_CompileStringExFlags` below, "
"with *optimize* set to ``-1``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`Py_CompileStringExFlags` нижче, з "
"*optimize* встановленим на ``-1``."

#: ../../c-api/veryhigh.rst:233
msgid ""
"Parse and compile the Python source code in *str*, returning the resulting "
"code object.  The start token is given by *start*; this can be used to "
"constrain the code which can be compiled and should be "
":c:data:`Py_eval_input`, :c:data:`Py_file_input`, or "
":c:data:`Py_single_input`.  The filename specified by *filename* is used to "
"construct the code object and may appear in tracebacks or :exc:`SyntaxError`"
" exception messages.  This returns ``NULL`` if the code cannot be parsed or "
"compiled."
msgstr ""

#: ../../c-api/veryhigh.rst:241
msgid ""
"The integer *optimize* specifies the optimization level of the compiler; a "
"value of ``-1`` selects the optimization level of the interpreter as given "
"by :option:`-O` options.  Explicit levels are ``0`` (no optimization; "
"``__debug__`` is true), ``1`` (asserts are removed, ``__debug__`` is false) "
"or ``2`` (docstrings are removed too)."
msgstr ""
"Ціле число *optimize* визначає рівень оптимізації компілятора; значення "
"``-1`` вибирає рівень оптимізації інтерпретатора, як задано параметрами "
":option:`-O`. Явні рівні: ``0`` (немає оптимізації; ``__debug__`` є "
"істинним), ``1`` (затвердження видалено, ``__debug__`` є хибним) або ``2`` "
"(рядки документа також видалено )."

#: ../../c-api/veryhigh.rst:252
msgid ""
"Like :c:func:`Py_CompileStringObject`, but *filename* is a byte string "
"decoded from the :term:`filesystem encoding and error handler`."
msgstr ""
"Подібно до :c:func:`Py_CompileStringObject`, але *filename* — це рядок "
"байтів, декодований з :term:`filesystem encoding and error handler`."

#: ../../c-api/veryhigh.rst:259
msgid ""
"This is a simplified interface to :c:func:`PyEval_EvalCodeEx`, with just the"
" code object, and global and local variables.  The other arguments are set "
"to ``NULL``."
msgstr ""
"Це спрощений інтерфейс для :c:func:`PyEval_EvalCodeEx` лише з об’єктом коду "
"та глобальними та локальними змінними. Інші аргументи мають значення "
"``NULL``."

#: ../../c-api/veryhigh.rst:266
msgid ""
"Evaluate a precompiled code object, given a particular environment for its "
"evaluation.  This environment consists of a dictionary of global variables, "
"a mapping object of local variables, arrays of arguments, keywords and "
"defaults, a dictionary of default values for :ref:`keyword-only <keyword-"
"only_parameter>` arguments and a closure tuple of cells."
msgstr ""
"Оцініть попередньо скомпільований об’єкт коду з урахуванням певного "
"середовища для його оцінки. Це середовище складається зі словника глобальних"
" змінних, об’єкта відображення локальних змінних, масивів аргументів, "
"ключових слів і значень за замовчуванням, словника значень за замовчуванням "
"для аргументів :ref:`keyword-only <keyword-only_parameter>` і закриваючого "
"кортежу клітинок."

#: ../../c-api/veryhigh.rst:275
msgid ""
"Evaluate an execution frame.  This is a simplified interface to "
":c:func:`PyEval_EvalFrameEx`, for backward compatibility."
msgstr ""
"Оцініть кадр виконання. Це спрощений інтерфейс для "
":c:func:`PyEval_EvalFrameEx` для зворотної сумісності."

#: ../../c-api/veryhigh.rst:281
msgid ""
"This is the main, unvarnished function of Python interpretation.  The code "
"object associated with the execution frame *f* is executed, interpreting "
"bytecode and executing calls as needed.  The additional *throwflag* "
"parameter can mostly be ignored - if true, then it causes an exception to "
"immediately be thrown; this is used for the :meth:`~generator.throw` methods"
" of generator objects."
msgstr ""
"Це основна функція інтерпретації Python без прикрас. Об’єкт коду, пов’язаний"
" із кадром виконання *f*, виконується, інтерпретуючи байт-код і виконуючи "
"виклики за потреби. Додатковий параметр *throwflag* здебільшого можна "
"ігнорувати - якщо воно істинне, то це спричиняє миттєве виключення винятку; "
"це використовується для методів :meth:`~generator.throw` об’єктів "
"генератора."

#: ../../c-api/veryhigh.rst:288
msgid ""
"This function now includes a debug assertion to help ensure that it does not"
" silently discard an active exception."
msgstr ""
"Ця функція тепер включає твердження налагодження, щоб гарантувати, що вона "
"не відкидає мовчки активний виняток."

#: ../../c-api/veryhigh.rst:295
msgid ""
"This function changes the flags of the current evaluation frame, and returns"
" true on success, false on failure."
msgstr ""
"Ця функція змінює прапори поточного кадру оцінки та повертає true у разі "
"успіху, false у разі невдачі."

#: ../../c-api/veryhigh.rst:303
msgid ""
"The start symbol from the Python grammar for isolated expressions; for use "
"with :c:func:`Py_CompileString`."
msgstr ""
"Початковий символ із граматики Python для ізольованих виразів; для "
"використання з :c:func:`Py_CompileString`."

#: ../../c-api/veryhigh.rst:311
msgid ""
"The start symbol from the Python grammar for sequences of statements as read"
" from a file or other source; for use with :c:func:`Py_CompileString`.  This"
" is the symbol to use when compiling arbitrarily long Python source code."
msgstr ""
"Початковий символ із граматики Python для послідовностей операторів, "
"прочитаних із файлу чи іншого джерела; для використання з "
":c:func:`Py_CompileString`. Це символ, який слід використовувати під час "
"компіляції будь-якої довжини вихідного коду Python."

#: ../../c-api/veryhigh.rst:320
msgid ""
"The start symbol from the Python grammar for a single statement; for use "
"with :c:func:`Py_CompileString`. This is the symbol used for the interactive"
" interpreter loop."
msgstr ""
"Початковий символ із граматики Python для окремого оператора; для "
"використання з :c:func:`Py_CompileString`. Це символ, який використовується "
"для інтерактивного циклу інтерпретатора."

#: ../../c-api/veryhigh.rst:327
msgid ""
"This is the structure used to hold compiler flags.  In cases where code is "
"only being compiled, it is passed as ``int flags``, and in cases where code "
"is being executed, it is passed as ``PyCompilerFlags *flags``.  In this "
"case, ``from __future__ import`` can modify *flags*."
msgstr ""
"Це структура, яка використовується для зберігання прапорів компілятора. У "
"випадках, коли код лише компілюється, він передається як ``прапорці int``, а"
" у випадках, коли код виконується, він передається як ``PyCompilerFlags "
"*flags``. У цьому випадку ``from __future__ import`` може змінювати "
"*прапори*."

#: ../../c-api/veryhigh.rst:332
msgid ""
"Whenever ``PyCompilerFlags *flags`` is ``NULL``, "
":c:member:`~PyCompilerFlags.cf_flags` is treated as equal to ``0``, and any "
"modification due to ``from __future__ import`` is discarded."
msgstr ""

#: ../../c-api/veryhigh.rst:338
msgid "Compiler flags."
msgstr "Прапори компілятора."

#: ../../c-api/veryhigh.rst:342
msgid ""
"*cf_feature_version* is the minor Python version. It should be initialized "
"to ``PY_MINOR_VERSION``."
msgstr ""
"*cf_feature_version* є другорядною версією Python. Його слід ініціалізувати "
"як ``PY_MINOR_VERSION``."

#: ../../c-api/veryhigh.rst:345
msgid ""
"The field is ignored by default, it is used if and only if ``PyCF_ONLY_AST``"
" flag is set in :c:member:`~PyCompilerFlags.cf_flags`."
msgstr ""

#: ../../c-api/veryhigh.rst:348
msgid "Added *cf_feature_version* field."
msgstr "Додано поле *cf_feature_version*."

#: ../../c-api/veryhigh.rst:354
msgid ""
"This bit can be set in *flags* to cause division operator ``/`` to be "
"interpreted as \"true division\" according to :pep:`238`."
msgstr ""
"Цей біт можна встановити у *flags*, щоб оператор ділення ``/`` "
"інтерпретувався як \"дійсне ділення\" відповідно до :pep:`238`."

#: ../../c-api/veryhigh.rst:301 ../../c-api/veryhigh.rst:309
#: ../../c-api/veryhigh.rst:318
msgid "Py_CompileString (C function)"
msgstr ""
