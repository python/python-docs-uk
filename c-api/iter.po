# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-19 01:00+0000\n"
"PO-Revision-Date: 2021-06-28 00:49+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../c-api/iter.rst:6
msgid "Iterator Protocol"
msgstr "Протокол ітератора"

#: ../../c-api/iter.rst:8
msgid "There are two functions specifically for working with iterators."
msgstr "Є дві функції спеціально для роботи з ітераторами."

#: ../../c-api/iter.rst:12
msgid ""
"Return non-zero if the object *o* can be safely passed to "
":c:func:`PyIter_Next`, and ``0`` otherwise.  This function always succeeds."
msgstr ""
"Повертає ненульове значення, якщо об’єкт *o* можна безпечно передати в "
":c:func:`PyIter_Next`, і ``0`` інакше. Ця функція завжди успішна."

#: ../../c-api/iter.rst:17
msgid ""
"Return non-zero if the object *o* provides the :class:`AsyncIterator` "
"protocol, and ``0`` otherwise.  This function always succeeds."
msgstr ""
"Повертає відмінне від нуля значення, якщо об’єкт *o* забезпечує протокол "
":class:`AsyncIterator`, і ``0`` інакше. Ця функція завжди успішна."

#: ../../c-api/iter.rst:24
msgid ""
"Return the next value from the iterator *o*.  The object must be an iterator"
" according to :c:func:`PyIter_Check` (it is up to the caller to check this)."
" If there are no remaining values, returns ``NULL`` with no exception set. "
"If an error occurs while retrieving the item, returns ``NULL`` and passes "
"along the exception."
msgstr ""
"Повертає наступне значення з ітератора *o*. Об’єкт має бути ітератором "
"відповідно до :c:func:`PyIter_Check` (це залежить від того, хто викликає). "
"Якщо не залишилося значень, повертає ``NULL`` без винятку. Якщо під час "
"отримання елемента виникає помилка, повертається ``NULL`` і передається "
"виняток."

#: ../../c-api/iter.rst:30
msgid ""
"To write a loop which iterates over an iterator, the C code should look "
"something like this::"
msgstr ""
"Щоб написати цикл, який повторює ітератор, код C має виглядати приблизно "
"так:"

#: ../../c-api/iter.rst:33
msgid ""
"PyObject *iterator = PyObject_GetIter(obj);\n"
"PyObject *item;\n"
"\n"
"if (iterator == NULL) {\n"
"    /* propagate error */\n"
"}\n"
"\n"
"while ((item = PyIter_Next(iterator))) {\n"
"    /* do something with item */\n"
"    ...\n"
"    /* release reference when done */\n"
"    Py_DECREF(item);\n"
"}\n"
"\n"
"Py_DECREF(iterator);\n"
"\n"
"if (PyErr_Occurred()) {\n"
"    /* propagate error */\n"
"}\n"
"else {\n"
"    /* continue doing useful work */\n"
"}"
msgstr ""

#: ../../c-api/iter.rst:59
msgid ""
"The enum value used to represent different results of :c:func:`PyIter_Send`."
msgstr ""
"Значення enum, яке використовується для представлення різних результатів "
":c:func:`PyIter_Send`."

#: ../../c-api/iter.rst:66
msgid "Sends the *arg* value into the iterator *iter*. Returns:"
msgstr "Надсилає значення *arg* в ітератор *iter*. Повернення:"

#: ../../c-api/iter.rst:68
msgid ""
"``PYGEN_RETURN`` if iterator returns. Return value is returned via "
"*presult*."
msgstr ""
"``PYGEN_RETURN``, якщо повертає ітератор. Повернене значення повертається "
"через *presult*."

#: ../../c-api/iter.rst:69
msgid ""
"``PYGEN_NEXT`` if iterator yields. Yielded value is returned via *presult*."
msgstr ""
"``PYGEN_NEXT``, якщо ітератор дає результат. Отримане значення повертається "
"через *presult*."

#: ../../c-api/iter.rst:70
msgid ""
"``PYGEN_ERROR`` if iterator has raised and exception. *presult* is set to "
"``NULL``."
msgstr ""
"``PYGEN_ERROR``, якщо ітератор підняв і виняток. *presult* має значення "
"``NULL``."
