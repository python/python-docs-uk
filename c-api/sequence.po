# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2023
# Yuliia Shevchenko, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-22 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 00:50+0000\n"
"Last-Translator: Yuliia Shevchenko, 2024\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../c-api/sequence.rst:6
msgid "Sequence Protocol"
msgstr "Протокол послідовності"

#: ../../c-api/sequence.rst:11
msgid ""
"Return ``1`` if the object provides the sequence protocol, and ``0`` "
"otherwise. Note that it returns ``1`` for Python classes with a "
":meth:`~object.__getitem__` method, unless they are :class:`dict` "
"subclasses, since in general it is impossible to determine what type of keys"
" the class supports.  This function always succeeds."
msgstr ""

#: ../../c-api/sequence.rst:23
msgid ""
"Returns the number of objects in sequence *o* on success, and ``-1`` on "
"failure.  This is equivalent to the Python expression ``len(o)``."
msgstr ""
"Повертає кількість об’єктів у послідовності *o* в разі успіху та ``-1`` в "
"разі невдачі. Це еквівалентно виразу Python ``len(o)``."

#: ../../c-api/sequence.rst:29
msgid ""
"Return the concatenation of *o1* and *o2* on success, and ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 + o2``."
msgstr ""
"Повертає конкатенацію *o1* і *o2* у разі успіху та ``NULL`` у разі невдачі. "
"Це еквівалент виразу Python ``o1 + o2``."

#: ../../c-api/sequence.rst:35
msgid ""
"Return the result of repeating sequence object *o* *count* times, or "
"``NULL`` on failure.  This is the equivalent of the Python expression ``o * "
"count``."
msgstr ""
"Повертає результат повторення об’єкта послідовності *o* *count* разів або "
"``NULL`` у разі помилки. Це еквівалент виразу Python ``o * count``."

#: ../../c-api/sequence.rst:41
msgid ""
"Return the concatenation of *o1* and *o2* on success, and ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python expression ``o1 += o2``."
msgstr ""
"Повертає конкатенацію *o1* і *o2* у разі успіху та ``NULL`` у разі невдачі. "
"Операція виконується *на місці*, якщо *o1* її підтримує. Це еквівалент "
"виразу Python ``o1 += o2``."

#: ../../c-api/sequence.rst:48
msgid ""
"Return the result of repeating sequence object *o* *count* times, or "
"``NULL`` on failure.  The operation is done *in-place* when *o* supports it."
"  This is the equivalent of the Python expression ``o *= count``."
msgstr ""
"Повертає результат повторення об’єкта послідовності *o* *count* разів або "
"``NULL`` у разі помилки. Операція виконується *на місці*, якщо *o* її "
"підтримує. Це еквівалент виразу Python ``o *= count``."

#: ../../c-api/sequence.rst:55
msgid ""
"Return the *i*\\ th element of *o*, or ``NULL`` on failure. This is the "
"equivalent of the Python expression ``o[i]``."
msgstr ""
"Повертає *i*\\-й елемент *o* або ``NULL`` у разі помилки. Це еквівалент "
"виразу Python ``o[i]``."

#: ../../c-api/sequence.rst:61
msgid ""
"Return the slice of sequence object *o* between *i1* and *i2*, or ``NULL`` "
"on failure. This is the equivalent of the Python expression ``o[i1:i2]``."
msgstr ""
"Повертає зріз об’єкта послідовності *o* між *i1* і *i2* або ``NULL`` у разі "
"помилки. Це еквівалент виразу Python ``o[i1:i2]``."

#: ../../c-api/sequence.rst:67
msgid ""
"Assign object *v* to the *i*\\ th element of *o*.  Raise an exception and "
"return ``-1`` on failure; return ``0`` on success.  This is the equivalent "
"of the Python statement ``o[i] = v``.  This function *does not* steal a "
"reference to *v*."
msgstr ""
"Призначте об’єкт *v* до *i*\\ го елемента *o*. Викликати виняток і повертати"
" ``-1`` у разі помилки; повернути ``0`` в разі успіху. Це еквівалент "
"оператора Python ``o[i] = v``. Ця функція *не* викрадає посилання на *v*."

#: ../../c-api/sequence.rst:72
msgid ""
"If *v* is ``NULL``, the element is deleted, but this feature is deprecated "
"in favour of using :c:func:`PySequence_DelItem`."
msgstr ""
"Якщо *v* має значення ``NULL``, елемент видаляється, але ця функція "
"застаріла на користь використання :c:func:`PySequence_DelItem`."

#: ../../c-api/sequence.rst:78
msgid ""
"Delete the *i*\\ th element of object *o*.  Returns ``-1`` on failure.  This"
" is the equivalent of the Python statement ``del o[i]``."
msgstr ""
"Видалити *i*\\ th елемент об'єкта *o*. Повертає ``-1`` у разі помилки. Це "
"еквівалент оператора Python ``del o[i]``."

#: ../../c-api/sequence.rst:84
msgid ""
"Assign the sequence object *v* to the slice in sequence object *o* from *i1*"
" to *i2*.  This is the equivalent of the Python statement ``o[i1:i2] = v``."
msgstr ""
"Призначте об’єкт послідовності *v* фрагменту в об’єкті послідовності *o* від"
" *i1* до *i2*. Це еквівалент оператора Python ``o[i1:i2] = v``."

#: ../../c-api/sequence.rst:90
msgid ""
"Delete the slice in sequence object *o* from *i1* to *i2*.  Returns ``-1`` "
"on failure.  This is the equivalent of the Python statement ``del "
"o[i1:i2]``."
msgstr ""
"Видалити фрагмент у послідовному об’єкті *o* від *i1* до *i2*. Повертає "
"``-1`` у разі помилки. Це еквівалент оператора Python ``del o[i1:i2]``."

#: ../../c-api/sequence.rst:96
msgid ""
"Return the number of occurrences of *value* in *o*, that is, return the "
"number of keys for which ``o[key] == value``.  On failure, return ``-1``.  "
"This is equivalent to the Python expression ``o.count(value)``."
msgstr ""
"Повертає кількість входжень *value* у *o*, тобто повертає кількість ключів, "
"для яких ``o[key] == value``. У разі помилки поверніть ``-1``. Це "
"еквівалентно виразу Python ``o.count(value)``."

#: ../../c-api/sequence.rst:103
msgid ""
"Determine if *o* contains *value*.  If an item in *o* is equal to *value*, "
"return ``1``, otherwise return ``0``. On error, return ``-1``.  This is "
"equivalent to the Python expression ``value in o``."
msgstr ""
"Визначте, чи *o* містить *value*. Якщо елемент у *o* дорівнює *value*, "
"поверніть ``1``, інакше поверніть ``0``. У разі помилки повертає ``-1``. Це "
"еквівалентно виразу Python ``значення в o``."

#: ../../c-api/sequence.rst:110
msgid ""
"Return the first index *i* for which ``o[i] == value``.  On error, return "
"``-1``.    This is equivalent to the Python expression ``o.index(value)``."
msgstr ""
"Повертає перший індекс *i*, для якого ``o[i] == значення``. У разі помилки "
"повертає ``-1``. Це еквівалентно виразу Python ``o.index(value)``."

#: ../../c-api/sequence.rst:116
msgid ""
"Return a list object with the same contents as the sequence or iterable *o*,"
" or ``NULL`` on failure.  The returned list is guaranteed to be new.  This "
"is equivalent to the Python expression ``list(o)``."
msgstr ""
"Повертає об’єкт списку з тим же вмістом, що й послідовність або ітерація "
"*o*, або ``NULL`` у разі помилки. Повернений список гарантовано буде новим. "
"Це еквівалентно виразу Python ``list(o)``."

#: ../../c-api/sequence.rst:125
msgid ""
"Return a tuple object with the same contents as the sequence or iterable "
"*o*, or ``NULL`` on failure.  If *o* is a tuple, a new reference will be "
"returned, otherwise a tuple will be constructed with the appropriate "
"contents.  This is equivalent to the Python expression ``tuple(o)``."
msgstr ""
"Повертає об’єкт кортежу з тим самим вмістом, що й послідовність або "
"повторюваний *o*, або ``NULL`` у разі помилки. Якщо *o* є кортежем, буде "
"повернуто нове посилання, інакше буде створено кортеж із відповідним "
"вмістом. Це еквівалентно виразу Python ``tuple(o)``."

#: ../../c-api/sequence.rst:133
msgid ""
"Return the sequence or iterable *o* as an object usable by the other "
"``PySequence_Fast*`` family of functions. If the object is not a sequence or"
" iterable, raises :exc:`TypeError` with *m* as the message text. Returns "
"``NULL`` on failure."
msgstr ""
"Повертає послідовність або ітерацію *o* як об’єкт, який можна "
"використовувати іншою сім’єю функцій ``PySequence_Fast*``. Якщо об’єкт не є "
"послідовністю або ітерацією, викликає :exc:`TypeError` з *m* як текст "
"повідомлення. Повертає ``NULL`` у разі помилки."

#: ../../c-api/sequence.rst:138
msgid ""
"The ``PySequence_Fast*`` functions are thus named because they assume *o* is"
" a :c:type:`PyTupleObject` or a :c:type:`PyListObject` and access the data "
"fields of *o* directly."
msgstr ""
"Функції ``PySequence_Fast*`` названо так, оскільки вони припускають, що *o* "
"є :c:type:`PyTupleObject` або :c:type:`PyListObject` і мають прямий доступ "
"до полів даних *o*."

#: ../../c-api/sequence.rst:142
msgid ""
"As a CPython implementation detail, if *o* is already a sequence or list, it"
" will be returned."
msgstr ""
"Як деталь реалізації CPython, якщо *o* вже є послідовністю або списком, він "
"буде повернутий."

#: ../../c-api/sequence.rst:148
msgid ""
"Returns the length of *o*, assuming that *o* was returned by "
":c:func:`PySequence_Fast` and that *o* is not ``NULL``.  The size can also "
"be retrieved by calling :c:func:`PySequence_Size` on *o*, but "
":c:func:`PySequence_Fast_GET_SIZE` is faster because it can assume *o* is a "
"list or tuple."
msgstr ""
"Повертає довжину *o*, припускаючи, що *o* було повернуто "
":c:func:`PySequence_Fast` і що *o* не є ``NULL``. Розмір також можна "
"отримати, викликавши :c:func:`PySequence_Size` на *o*, але "
":c:func:`PySequence_Fast_GET_SIZE` швидше, тому що він може припускати, що "
"*o* є списком або кортежем."

#: ../../c-api/sequence.rst:157
msgid ""
"Return the *i*\\ th element of *o*, assuming that *o* was returned by "
":c:func:`PySequence_Fast`, *o* is not ``NULL``, and that *i* is within "
"bounds."
msgstr ""
"Повертає *i*\\-й елемент *o*, припускаючи, що *o* було повернуто "
":c:func:`PySequence_Fast`, *o* не є ``NULL`` і що *i* знаходиться в межах."

#: ../../c-api/sequence.rst:163
msgid ""
"Return the underlying array of PyObject pointers.  Assumes that *o* was "
"returned by :c:func:`PySequence_Fast` and *o* is not ``NULL``."
msgstr ""
"Повертає базовий масив покажчиків PyObject. Припускає, що *o* було повернуто"
" :c:func:`PySequence_Fast` і *o* не є ``NULL``."

#: ../../c-api/sequence.rst:166
msgid ""
"Note, if a list gets resized, the reallocation may relocate the items array."
" So, only use the underlying array pointer in contexts where the sequence "
"cannot change."
msgstr ""
"Зверніть увагу: якщо розмір списку змінено, перерозподіл може перемістити "
"масив елементів. Отже, використовуйте покажчик базового масиву лише в "
"контекстах, де послідовність не може змінитися."

#: ../../c-api/sequence.rst:173
msgid ""
"Return the *i*\\ th element of *o* or ``NULL`` on failure. Faster form of "
":c:func:`PySequence_GetItem` but without checking that "
":c:func:`PySequence_Check` on *o* is true and without adjustment for "
"negative indices."
msgstr ""
"Повертає *i*\\-й елемент *o* або ``NULL`` у разі помилки. Швидша форма "
":c:func:`PySequence_GetItem`, але без перевірки того, що "
":c:func:`PySequence_Check` на *o* є істинним, і без коригування негативних "
"індексів."

#: ../../c-api/sequence.rst:21 ../../c-api/sequence.rst:123
msgid "built-in function"
msgstr "вбудована функція"

#: ../../c-api/sequence.rst:21
msgid "len"
msgstr ""

#: ../../c-api/sequence.rst:123
msgid "tuple"
msgstr "кортеж"
