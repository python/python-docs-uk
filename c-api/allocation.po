# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dmytro Kazanzhy, 2022
# Ivan Prytula, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-22 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 00:47+0000\n"
"Last-Translator: Ivan Prytula, 2023\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../c-api/allocation.rst:6
msgid "Allocating Objects on the Heap"
msgstr "Розміщення об'єктів у купі"

#: ../../c-api/allocation.rst:17
msgid ""
"Initialize a newly allocated object *op* with its type and initial "
"reference.  Returns the initialized object.  Other fields of the object are "
"not affected."
msgstr ""

#: ../../c-api/allocation.rst:24
msgid ""
"This does everything :c:func:`PyObject_Init` does, and also initializes the "
"length information for a variable-size object."
msgstr ""
"Це робить все, що робить :c:func:`PyObject_Init`, а також ініціалізує "
"інформацію про довжину для об’єкта змінного розміру."

#: ../../c-api/allocation.rst:30
msgid ""
"Allocate a new Python object using the C structure type *TYPE* and the "
"Python type object *typeobj* (``PyTypeObject*``). Fields not defined by the "
"Python object header are not initialized. The caller will own the only "
"reference to the object (i.e. its reference count will be one). The size of "
"the memory allocation is determined from the "
":c:member:`~PyTypeObject.tp_basicsize` field of the type object."
msgstr ""

#: ../../c-api/allocation.rst:41
msgid ""
"Allocate a new Python object using the C structure type *TYPE* and the "
"Python type object *typeobj* (``PyTypeObject*``). Fields not defined by the "
"Python object header are not initialized.  The allocated memory allows for "
"the *TYPE* structure plus *size* (``Py_ssize_t``) fields of the size given "
"by the :c:member:`~PyTypeObject.tp_itemsize` field of *typeobj*.  This is "
"useful for implementing objects like tuples, which are able to determine "
"their size at construction time.  Embedding the array of fields into the "
"same allocation decreases the number of allocations, improving the memory "
"management efficiency."
msgstr ""
"Виділяє новий об'єкт Python, використовуючи структурний тип C *TYPE* та "
"об'єкт типу Python *typeobj* (``PyTypeObject*``). Поля, не визначені в "
"заголовку об'єкта Python, не ініціалізуються.  Виділена пам'ять дозволяє "
"розмістити структуру *TYPE* плюс поля *size* (``Py_ssize_t``) розміром, "
"заданим полем :c:member:`~PyTypeObject.tp_itemsize` об'єкта *typeobj*.  Це "
"корисно для реалізації об'єктів типу кортежів, які можуть визначати свій "
"розмір під час конструювання.  Вбудовування масиву полів в один розподіл "
"зменшує кількість розподілів, покращуючи ефективність управління пам'яттю."

#: ../../c-api/allocation.rst:55
msgid ""
"Releases memory allocated to an object using :c:macro:`PyObject_New` or "
":c:macro:`PyObject_NewVar`.  This is normally called from the "
":c:member:`~PyTypeObject.tp_dealloc` handler specified in the object's type."
"  The fields of the object should not be accessed after this call as the "
"memory is no longer a valid Python object."
msgstr ""
"Звільняє пам'ять, виділену для об'єкта за допомогою :c:macro:`PyObject_New` "
"або :c:macro:`PyObject_NewVar`. Зазвичай викликається з обробника "
":c:member:`~PyTypeObject.tp_dealloc`, вказаного в типі об'єкта.  Після цього"
" виклику не слід звертатися до полів об'єкта, оскільки пам'ять більше не є "
"дійсним об'єктом Python."

#: ../../c-api/allocation.rst:64
msgid ""
"Object which is visible in Python as ``None``.  This should only be accessed"
" using the :c:macro:`Py_None` macro, which evaluates to a pointer to this "
"object."
msgstr ""
"Об’єкт, видимий у Python як ``None``. Доступ до нього можна отримати лише за"
" допомогою макросу :c:macro:`Py_None`, який обчислює вказівник на цей "
"об’єкт."

#: ../../c-api/allocation.rst:71
msgid ":c:func:`PyModule_Create`"
msgstr ":c:func:`PyModule_Create`"

#: ../../c-api/allocation.rst:72
msgid "To allocate and create extension modules."
msgstr "Для розміщення та створення модулів розширення."
