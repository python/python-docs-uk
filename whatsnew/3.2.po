# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-29 13:04+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "What's New In Python 3.2"
msgstr "Що нового в Python 3.2"

msgid "Author"
msgstr "Автор"

msgid "Raymond Hettinger"
msgstr "Raymond Hettinger"

msgid ""
"This article explains the new features in Python 3.2 as compared to 3.1. "
"Python 3.2 was released on February 20, 2011. It focuses on a few highlights "
"and gives a few examples.  For full details, see the `Misc/NEWS <https://"
"github.com/python/cpython/blob/076ca6c3c8df3030307e548d9be792ce3c1c6eea/Misc/"
"NEWS>`__ file."
msgstr ""

msgid ":pep:`392` - Python 3.2 Release Schedule"
msgstr ":pep:`392` - Графік випуску Python 3.2"

msgid "PEP 384: Defining a Stable ABI"
msgstr "PEP 384: Визначення стабільного ABI"

msgid ""
"In the past, extension modules built for one Python version were often not "
"usable with other Python versions. Particularly on Windows, every feature "
"release of Python required rebuilding all extension modules that one wanted "
"to use. This requirement was the result of the free access to Python "
"interpreter internals that extension modules could use."
msgstr ""
"У минулому модулі розширення, створені для однієї версії Python, часто не "
"можна було використовувати з іншими версіями Python. Зокрема, у Windows "
"кожен випуск функції Python вимагав перебудови всіх модулів розширення, які "
"потрібно було використовувати. Ця вимога була результатом вільного доступу "
"до внутрішніх елементів інтерпретатора Python, які могли використовувати "
"модулі розширення."

msgid ""
"With Python 3.2, an alternative approach becomes available: extension "
"modules which restrict themselves to a limited API (by defining "
"Py_LIMITED_API) cannot use many of the internals, but are constrained to a "
"set of API functions that are promised to be stable for several releases. As "
"a consequence, extension modules built for 3.2 in that mode will also work "
"with 3.3, 3.4, and so on. Extension modules that make use of details of "
"memory structures can still be built, but will need to be recompiled for "
"every feature release."
msgstr ""
"З Python 3.2 стає доступним альтернативний підхід: модулі розширення, які "
"обмежуються обмеженим API (шляхом визначення Py_LIMITED_API), не можуть "
"використовувати багато внутрішніх компонентів, але обмежені набором функцій "
"API, які обіцяють бути стабільними для кількох випусків. Як наслідок, модулі "
"розширення, створені для 3.2 у цьому режимі, також працюватимуть з 3.3, 3.4 "
"тощо. Модулі розширення, які використовують деталі структур пам’яті, все ще "
"можуть бути створені, але їх потрібно буде перекомпілювати для кожного "
"випуску функції."

msgid ":pep:`384` - Defining a Stable ABI"
msgstr ":pep:`384` - Визначення стабільного ABI"

msgid "PEP written by Martin von Löwis."
msgstr "PEP, написаний Мартіном фон Льовісом."

msgid "PEP 389: Argparse Command Line Parsing Module"
msgstr "PEP 389: Модуль аналізу командного рядка Argparse"

msgid ""
"A new module for command line parsing, :mod:`argparse`, was introduced to "
"overcome the limitations of :mod:`optparse` which did not provide support "
"for positional arguments (not just options), subcommands, required options "
"and other common patterns of specifying and validating options."
msgstr ""
"Новий модуль для синтаксичного аналізу командного рядка, :mod:`argparse`, "
"було представлено, щоб подолати обмеження :mod:`optparse`, які не "
"забезпечували підтримку позиційних аргументів (не лише параметрів), "
"підкоманд, необхідних параметрів та інших поширених шаблонів визначення та "
"перевірки параметрів."

msgid ""
"This module has already had widespread success in the community as a third-"
"party module.  Being more fully featured than its predecessor, the :mod:"
"`argparse` module is now the preferred module for command-line processing. "
"The older module is still being kept available because of the substantial "
"amount of legacy code that depends on it."
msgstr ""
"Цей модуль уже мав широкий успіх у спільноті як сторонній модуль. Оскільки "
"модуль :mod:`argparse` є більш повнофункціональним, ніж його попередник, він "
"тепер є кращим модулем для обробки командного рядка. Старіший модуль все ще "
"залишається доступним через значну кількість застарілого коду, який залежить "
"від нього."

msgid ""
"Here's an annotated example parser showing features like limiting results to "
"a set of choices, specifying a *metavar* in the help screen, validating that "
"one or more positional arguments is present, and making a required option::"
msgstr ""
"Ось анотований приклад синтаксичного аналізатора, який показує такі функції, "
"як обмеження результатів набором варіантів, визначення *metavar* на екрані "
"довідки, перевірка наявності одного чи кількох позиційних аргументів і "
"створення необхідної опції::"

msgid "Example of calling the parser on a command string::"
msgstr "Приклад виклику синтаксичного аналізатора за командним рядком::"

msgid "Example of the parser's automatically generated help::"
msgstr "Приклад автоматично створеної довідки парсера::"

msgid ""
"An especially nice :mod:`argparse` feature is the ability to define "
"subparsers, each with their own argument patterns and help displays::"
msgstr ""
"Особливо приємною функцією :mod:`argparse` є можливість визначати "
"підпарсери, кожен зі своїми власними шаблонами аргументів і довідкою:"

msgid ":pep:`389` - New Command Line Parsing Module"
msgstr ":pep:`389` - Новий модуль аналізу командного рядка"

msgid "PEP written by Steven Bethard."
msgstr "PEP, написаний Стівеном Бетардом."

msgid ""
":ref:`upgrading-optparse-code` for details on the differences from :mod:"
"`optparse`."
msgstr ""
":ref:`upgrading-optparse-code` для детальної інформації про відмінності від :"
"mod:`optparse`."

msgid "PEP 391:  Dictionary Based Configuration for Logging"
msgstr "PEP 391: Конфігурація на основі словника для журналювання"

msgid ""
"The :mod:`logging` module provided two kinds of configuration, one style "
"with function calls for each option or another style driven by an external "
"file saved in a :mod:`ConfigParser` format.  Those options did not provide "
"the flexibility to create configurations from JSON or YAML files, nor did "
"they support incremental configuration, which is needed for specifying "
"logger options from a command line."
msgstr ""
"Модуль :mod:`logging` надав два види конфігурації: один стиль із викликами "
"функцій для кожного параметра або інший стиль, керований зовнішнім файлом, "
"збереженим у форматі :mod:`ConfigParser`. Ці параметри не забезпечували "
"гнучкості для створення конфігурацій із файлів JSON або YAML, а також не "
"підтримували інкрементну конфігурацію, яка потрібна для вказівки параметрів "
"журналу з командного рядка."

msgid ""
"To support a more flexible style, the module now offers :func:`logging."
"config.dictConfig` for specifying logging configuration with plain Python "
"dictionaries.  The configuration options include formatters, handlers, "
"filters, and loggers.  Here's a working example of a configuration "
"dictionary::"
msgstr ""
"Щоб підтримувати більш гнучкий стиль, модуль тепер пропонує :func:`logging."
"config.dictConfig` для визначення конфігурації журналювання за допомогою "
"простих словників Python. Опції конфігурації включають засоби форматування, "
"обробники, фільтри та реєстратори. Ось робочий приклад словника "
"конфігурації::"

msgid ""
"If that dictionary is stored in a file called :file:`conf.json`, it can be "
"loaded and called with code like this::"
msgstr ""
"Якщо цей словник зберігається у файлі під назвою :file:`conf.json`, його "
"можна завантажити та викликати за допомогою такого коду:"

msgid ":pep:`391` - Dictionary Based Configuration for Logging"
msgstr ":pep:`391` - Конфігурація для журналювання на основі словника"

msgid "PEP written by Vinay Sajip."
msgstr "PEP, написаний Вінаєм Саджипом."

msgid "PEP 3148:  The ``concurrent.futures`` module"
msgstr "PEP 3148: модуль ``concurrent.futures``"

msgid ""
"Code for creating and managing concurrency is being collected in a new top-"
"level namespace, *concurrent*.  Its first member is a *futures* package "
"which provides a uniform high-level interface for managing threads and "
"processes."
msgstr ""
"Код для створення паралелізму та керування ним збирається в новому просторі "
"імен верхнього рівня *concurrent*. Його першим членом є пакет *futures*, "
"який забезпечує єдиний інтерфейс високого рівня для керування потоками та "
"процесами."

msgid ""
"The design for :mod:`concurrent.futures` was inspired by the *java.util."
"concurrent* package.  In that model, a running call and its result are "
"represented by a :class:`~concurrent.futures.Future` object that abstracts "
"features common to threads, processes, and remote procedure calls.  That "
"object supports status checks (running or done), timeouts, cancellations, "
"adding callbacks, and access to results or exceptions."
msgstr ""
"Дизайн для :mod:`concurrent.futures` був натхненний пакетом *java.util."
"concurrent*. У цій моделі запущений виклик і його результат представлені "
"об’єктом :class:`~concurrent.futures.Future`, який абстрагує функції, "
"спільні для потоків, процесів і віддалених викликів процедур. Цей об’єкт "
"підтримує перевірки статусу (запущено або виконано), тайм-аути, скасування, "
"додавання зворотних викликів і доступ до результатів або винятків."

msgid ""
"The primary offering of the new module is a pair of executor classes for "
"launching and managing calls.  The goal of the executors is to make it "
"easier to use existing tools for making parallel calls. They save the effort "
"needed to setup a pool of resources, launch the calls, create a results "
"queue, add time-out handling, and limit the total number of threads, "
"processes, or remote procedure calls."
msgstr ""
"Основною пропозицією нового модуля є пара класів виконавців для запуску "
"викликів і керування ними. Мета виконавців — спростити використання існуючих "
"інструментів для здійснення паралельних викликів. Вони економлять зусилля, "
"необхідні для налаштування пулу ресурсів, запуску викликів, створення черги "
"результатів, додавання обробки тайм-ауту та обмеження загальної кількості "
"потоків, процесів або віддалених викликів процедур."

msgid ""
"Ideally, each application should share a single executor across multiple "
"components so that process and thread limits can be centrally managed.  This "
"solves the design challenge that arises when each component has its own "
"competing strategy for resource management."
msgstr ""
"В ідеалі кожна програма має спільно використовувати одного виконавця для "
"кількох компонентів, щоб можна було централізовано керувати обмеженнями "
"процесів і потоків. Це вирішує проблему проектування, яка виникає, коли "
"кожен компонент має власну конкуруючу стратегію управління ресурсами."

msgid ""
"Both classes share a common interface with three methods: :meth:`~concurrent."
"futures.Executor.submit` for scheduling a callable and returning a :class:"
"`~concurrent.futures.Future` object; :meth:`~concurrent.futures.Executor."
"map` for scheduling many asynchronous calls at a time, and :meth:"
"`~concurrent.futures.Executor.shutdown` for freeing resources.  The class is "
"a :term:`context manager` and can be used in a :keyword:`with` statement to "
"assure that resources are automatically released when currently pending "
"futures are done executing."
msgstr ""
"Обидва класи мають спільний інтерфейс із трьома методами: :meth:`~concurrent."
"futures.Executor.submit` для планування виклику та повернення об’єкта :class:"
"`~concurrent.futures.Future`; :meth:`~concurrent.futures.Executor.map` для "
"планування багатьох асинхронних викликів одночасно та :meth:`~concurrent."
"futures.Executor.shutdown` для звільнення ресурсів. Цей клас є :term:"
"`context manager` і може використовуватися в операторі :keyword:`with`, щоб "
"гарантувати автоматичне звільнення ресурсів після завершення виконання "
"незавершених ф’ючерсів."

msgid ""
"A simple of example of :class:`~concurrent.futures.ThreadPoolExecutor` is a "
"launch of four parallel threads for copying files::"
msgstr ""
"Простий приклад :class:`~concurrent.futures.ThreadPoolExecutor` — це запуск "
"чотирьох паралельних потоків для копіювання файлів::"

msgid ":pep:`3148` - Futures -- Execute Computations Asynchronously"
msgstr ":pep:`3148` - Ф'ючерси - асинхронне виконання обчислень"

msgid "PEP written by Brian Quinlan."
msgstr "PEP, написаний Браяном Квінланом."

msgid ""
":ref:`Code for Threaded Parallel URL reads<threadpoolexecutor-example>`, an "
"example using threads to fetch multiple web pages in parallel."
msgstr ""
":ref:`Код для потокової паралельної URL-адреси читає <threadpoolexecutor-"
"example>`, приклад використання потоків для отримання кількох веб-сторінок "
"паралельно."

msgid ""
":ref:`Code for computing prime numbers in parallel<processpoolexecutor-"
"example>`, an example demonstrating :class:`~concurrent.futures."
"ProcessPoolExecutor`."
msgstr ""
":ref:`Код для паралельного обчислення простих чисел <processpoolexecutor-"
"example>`, приклад, що демонструє :class:`~concurrent.futures."
"ProcessPoolExecutor`."

msgid "PEP 3147:  PYC Repository Directories"
msgstr "PEP 3147: Каталоги сховищ PYC"

msgid ""
"Python's scheme for caching bytecode in *.pyc* files did not work well in "
"environments with multiple Python interpreters.  If one interpreter "
"encountered a cached file created by another interpreter, it would recompile "
"the source and overwrite the cached file, thus losing the benefits of "
"caching."
msgstr ""
"Схема Python для кешування байт-коду у файлах *.pyc* погано працювала в "
"середовищах із кількома інтерпретаторами Python. Якщо один інтерпретатор "
"зустріне кешований файл, створений іншим інтерпретатором, він перекомпілює "
"джерело та перезапише кешований файл, таким чином втрачаючи переваги "
"кешування."

msgid ""
"The issue of \"pyc fights\" has become more pronounced as it has become "
"commonplace for Linux distributions to ship with multiple versions of "
"Python. These conflicts also arise with CPython alternatives such as Unladen "
"Swallow."
msgstr ""
"Питання \"бій pyc\" стало більш помітним, оскільки дистрибутиви Linux стали "
"звичайними для доставки з декількома версіями Python. Ці конфлікти також "
"виникають з альтернативами CPython, такими як Unladen Swallow."

msgid ""
"To solve this problem, Python's import machinery has been extended to use "
"distinct filenames for each interpreter.  Instead of Python 3.2 and Python "
"3.3 and Unladen Swallow each competing for a file called \"mymodule.pyc\", "
"they will now look for \"mymodule.cpython-32.pyc\", \"mymodule.cpython-33."
"pyc\", and \"mymodule.unladen10.pyc\".  And to prevent all of these new "
"files from cluttering source directories, the *pyc* files are now collected "
"in a \"__pycache__\" directory stored under the package directory."
msgstr ""
"Щоб вирішити цю проблему, механізм імпорту Python було розширено для "
"використання різних імен файлів для кожного інтерпретатора. Замість того, "
"щоб Python 3.2, Python 3.3 і Unladen Swallow змагалися за файл під назвою "
"\"mymodule.pyc\", тепер вони шукатимуть \"mymodule.cpython-32.pyc\", "
"\"mymodule.cpython-33.pyc\" і \"mymodule\". .unladen10.pyc\". І щоб усі ці "
"нові файли не захаращували вихідні каталоги, файли *pyc* тепер зібрані в "
"каталозі \"__pycache__\", який зберігається в каталозі пакетів."

msgid ""
"Aside from the filenames and target directories, the new scheme has a few "
"aspects that are visible to the programmer:"
msgstr ""
"Крім імен файлів і цільових каталогів, нова схема має кілька аспектів, які "
"бачать програмісти:"

msgid ""
"Imported modules now have a :attr:`__cached__` attribute which stores the "
"name of the actual file that was imported:"
msgstr ""
"Імпортовані модулі тепер мають атрибут :attr:`__cached__`, який зберігає "
"назву фактичного файлу, який було імпортовано:"

msgid ""
"The tag that is unique to each interpreter is accessible from the :mod:`imp` "
"module:"
msgstr ""
"Тег, унікальний для кожного інтерпретатора, доступний з модуля :mod:`imp`:"

msgid ""
"Scripts that try to deduce source filename from the imported file now need "
"to be smarter.  It is no longer sufficient to simply strip the \"c\" from a "
"\".pyc\" filename.  Instead, use the new functions in the :mod:`imp` module:"
msgstr ""
"Сценарії, які намагаються вивести назву вихідного файлу з імпортованого "
"файлу, тепер мають бути розумнішими. Більше недостатньо просто видалити "
"букву \"c\" із імені файлу \".pyc\". Замість цього використовуйте нові "
"функції в модулі :mod:`imp`:"

msgid ""
"The :mod:`py_compile` and :mod:`compileall` modules have been updated to "
"reflect the new naming convention and target directory.  The command-line "
"invocation of *compileall* has new options: ``-i`` for specifying a list of "
"files and directories to compile and ``-b`` which causes bytecode files to "
"be written to their legacy location rather than *__pycache__*."
msgstr ""
"Модулі :mod:`py_compile` і :mod:`compileall` оновлено, щоб відобразити нову "
"угоду про іменування та цільовий каталог. Виклик *compileall* у командному "
"рядку має нові параметри: ``-i`` для вказівки списку файлів і каталогів для "
"компіляції та ``-b``, який змушує файли байт-коду записуватися в їх старе "
"розташування, а не в *__pycache__*."

msgid ""
"The :mod:`importlib.abc` module has been updated with new :term:`abstract "
"base classes <abstract base class>` for loading bytecode files.  The "
"obsolete ABCs, :class:`~importlib.abc.PyLoader` and :class:`~importlib.abc."
"PyPycLoader`, have been deprecated (instructions on how to stay Python 3.1 "
"compatible are included with the documentation)."
msgstr ""
"Модуль :mod:`importlib.abc` було оновлено новими :term:`абстрактними "
"базовими класами <abstract base class>` для завантаження файлів байт-кодів. "
"Застарілі ABC, :class:`~importlib.abc.PyLoader` і :class:`~importlib.abc."
"PyPycLoader`, стали застарілими (інструкції щодо того, як залишатися "
"сумісними з Python 3.1, включено до документації)."

msgid ":pep:`3147` - PYC Repository Directories"
msgstr ":pep:`3147` - Каталоги репозиторіїв PYC"

msgid "PEP written by Barry Warsaw."
msgstr "PEP, автор Баррі Варшау."

msgid "PEP 3149: ABI Version Tagged .so Files"
msgstr "PEP 3149: файли .so з тегами версії ABI"

msgid ""
"The PYC repository directory allows multiple bytecode cache files to be co-"
"located.  This PEP implements a similar mechanism for shared object files by "
"giving them a common directory and distinct names for each version."
msgstr ""
"Каталог сховища PYC дозволяє одночасно розміщувати кілька файлів кешу байт-"
"кодів. Цей PEP реалізує подібний механізм для файлів спільних об’єктів, "
"надаючи їм загальний каталог і окремі імена для кожної версії."

msgid ""
"The common directory is \"pyshared\" and the file names are made distinct by "
"identifying the Python implementation (such as CPython, PyPy, Jython, etc.), "
"the major and minor version numbers, and optional build flags (such as \"d\" "
"for debug, \"m\" for pymalloc, \"u\" for wide-unicode).  For an arbitrary "
"package \"foo\", you may see these files when the distribution package is "
"installed::"
msgstr ""
"Загальний каталог є \"pyshared\", а назви файлів відрізняються "
"ідентифікацією реалізації Python (наприклад, CPython, PyPy, Jython тощо), "
"номерами основної та другорядної версій і необов’язковими прапорцями збірки "
"(наприклад, \"d\" для debug, \"m\" для pymalloc, \"u\" для широкого "
"юнікоду). Для довільного пакета \"foo\" ви можете побачити ці файли, коли "
"встановлено дистрибутивний пакет:"

msgid ""
"In Python itself, the tags are accessible from functions in the :mod:"
"`sysconfig` module::"
msgstr "У самому Python теги доступні з функцій у модулі :mod:`sysconfig`::"

msgid ":pep:`3149` - ABI Version Tagged .so Files"
msgstr ":pep:`3149` - файли .so з тегами версії ABI"

msgid "PEP 3333: Python Web Server Gateway Interface v1.0.1"
msgstr "PEP 3333: Інтерфейс шлюзу веб-сервера Python v1.0.1"

msgid ""
"This informational PEP clarifies how bytes/text issues are to be handled by "
"the WSGI protocol.  The challenge is that string handling in Python 3 is "
"most conveniently handled with the :class:`str` type even though the HTTP "
"protocol is itself bytes oriented."
msgstr ""
"Цей інформаційний PEP пояснює, як протокол WSGI має обробляти проблеми з "
"байтами/текстом. Проблема полягає в тому, що обробку рядків у Python 3 "
"найзручніше обробляти за допомогою типу :class:`str`, хоча сам протокол HTTP "
"орієнтований на байти."

msgid ""
"The PEP differentiates so-called *native strings* that are used for request/"
"response headers and metadata versus *byte strings* which are used for the "
"bodies of requests and responses."
msgstr ""
"PEP розрізняє так звані *власні рядки*, які використовуються для заголовків "
"запитів/відповідей і метаданих, від *байтових рядків*, які використовуються "
"для тіл запитів і відповідей."

msgid ""
"The *native strings* are always of type :class:`str` but are restricted to "
"code points between *U+0000* through *U+00FF* which are translatable to "
"bytes using *Latin-1* encoding.  These strings are used for the keys and "
"values in the environment dictionary and for response headers and statuses "
"in the :func:`start_response` function.  They must follow :rfc:`2616` with "
"respect to encoding. That is, they must either be *ISO-8859-1* characters or "
"use :rfc:`2047` MIME encoding."
msgstr ""
"*Власні рядки* завжди мають тип :class:`str`, але обмежені кодовими точками "
"від *U+0000* до *U+00FF*, які можна перевести в байти за допомогою кодування "
"*Latin-1*. Ці рядки використовуються для ключів і значень у словнику "
"середовища та для заголовків відповідей і статусів у функції :func:"
"`start_response`. Вони повинні відповідати :rfc:`2616` щодо кодування. Тобто "
"вони мають бути символами *ISO-8859-1* або використовувати кодування MIME :"
"rfc:`2047`."

msgid ""
"For developers porting WSGI applications from Python 2, here are the salient "
"points:"
msgstr ""
"Для розробників, які портують програми WSGI з Python 2, ось основні моменти:"

msgid ""
"If the app already used strings for headers in Python 2, no change is needed."
msgstr ""
"Якщо програма вже використовувала рядки для заголовків у Python 2, змінювати "
"не потрібно."

msgid ""
"If instead, the app encoded output headers or decoded input headers, then "
"the headers will need to be re-encoded to Latin-1.  For example, an output "
"header encoded in utf-8 was using ``h.encode('utf-8')`` now needs to convert "
"from bytes to native strings using ``h.encode('utf-8').decode('latin-1')``."
msgstr ""
"Якщо замість цього програма закодувала вихідні заголовки або декодувала "
"вхідні заголовки, тоді заголовки потрібно буде повторно закодувати в "
"Latin-1. Наприклад, вихідний заголовок, закодований у utf-8, використовував "
"``h.encode('utf-8')``, тепер потребує конвертації з байтів у власні рядки за "
"допомогою ``h.encode('utf-8'). decode('latin-1')``."

msgid ""
"Values yielded by an application or sent using the :meth:`write` method must "
"be byte strings.  The :func:`start_response` function and environ must use "
"native strings.  The two cannot be mixed."
msgstr ""
"Значення, отримані програмою або надіслані за допомогою методу :meth:"
"`write`, мають бути рядками байтів. Функція :func:`start_response` і "
"середовище мають використовувати рідні рядки. Те двоє не можна змішувати."

msgid ""
"For server implementers writing CGI-to-WSGI pathways or other CGI-style "
"protocols, the users must to be able access the environment using native "
"strings even though the underlying platform may have a different "
"convention.  To bridge this gap, the :mod:`wsgiref` module has a new "
"function, :func:`wsgiref.handlers.read_environ` for transcoding CGI "
"variables from :attr:`os.environ` into native strings and returning a new "
"dictionary."
msgstr ""
"Для розробників серверів, які пишуть шляхи CGI-to-WSGI або інші протоколи в "
"стилі CGI, користувачі повинні мати доступ до середовища за допомогою "
"власних рядків, навіть якщо основна платформа може мати іншу конвенцію. Щоб "
"подолати цю прогалину, модуль :mod:`wsgiref` має нову функцію, :func:"
"`wsgiref.handlers.read_environ` для перекодування змінних CGI з :attr:`os."
"environ` у рідні рядки та повернення нового словника."

msgid ":pep:`3333` - Python Web Server Gateway Interface v1.0.1"
msgstr ":pep:`3333` - Інтерфейс шлюзу веб-сервера Python v1.0.1"

msgid "PEP written by Phillip Eby."
msgstr "PEP, написаний Філіпом Ебі."

msgid "Other Language Changes"
msgstr "Інші зміни мови"

msgid "Some smaller changes made to the core Python language are:"
msgstr "Деякі менші зміни, внесені до основної мови Python:"

msgid ""
"String formatting for :func:`format` and :meth:`str.format` gained new "
"capabilities for the format character **#**.  Previously, for integers in "
"binary, octal, or hexadecimal, it caused the output to be prefixed with "
"'0b', '0o', or '0x' respectively.  Now it can also handle floats, complex, "
"and Decimal, causing the output to always have a decimal point even when no "
"digits follow it."
msgstr ""
"Форматування рядка для :func:`format` і :meth:`str.format` отримало нові "
"можливості для символу форматування **#**. Раніше для цілих чисел у "
"двійковій, вісімковій чи шістнадцятковій системі виводу ставився префікс "
"\"0b\", \"0o\" або \"0x\" відповідно. Тепер він також може обробляти числа з "
"плаваючою точкою, комплексні та десяткові числа, завдяки чому вивід завжди "
"матиме десяткову крапку, навіть якщо за нею не йде жодна цифра."

msgid ""
"(Suggested by Mark Dickinson and implemented by Eric Smith in :issue:`7094`.)"
msgstr ""
"(Запропоновано Марком Дікінсоном і реалізовано Еріком Смітом у :issue:"
"`7094`.)"

msgid ""
"There is also a new :meth:`str.format_map` method that extends the "
"capabilities of the existing :meth:`str.format` method by accepting "
"arbitrary :term:`mapping` objects.  This new method makes it possible to use "
"string formatting with any of Python's many dictionary-like objects such as :"
"class:`~collections.defaultdict`, :class:`~shelve.Shelf`, :class:"
"`~configparser.ConfigParser`, or :mod:`dbm`.  It is also useful with custom :"
"class:`dict` subclasses that normalize keys before look-up or that supply a :"
"meth:`__missing__` method for unknown keys::"
msgstr ""
"Існує також новий метод :meth:`str.format_map`, який розширює можливості "
"існуючого методу :meth:`str.format`, приймаючи довільні об’єкти :term:"
"`mapping`. Цей новий метод дає змогу використовувати форматування рядка з "
"будь-яким із багатьох словникових об’єктів Python, таких як :class:"
"`~collections.defaultdict`, :class:`~shelve.Shelf`, :class:`~configparser."
"ConfigParser` , або :mod:`dbm`. Це також корисно з власними підкласами :"
"class:`dict`, які нормалізують ключі перед пошуком або надають метод :meth:"
"`__missing__` для невідомих ключів::"

msgid ""
"(Suggested by Raymond Hettinger and implemented by Eric Smith in :issue:"
"`6081`.)"
msgstr ""
"(Запропоновано Raymond Hettinger і реалізовано Eric Smith у :issue:`6081`.)"

msgid ""
"The interpreter can now be started with a quiet option, ``-q``, to prevent "
"the copyright and version information from being displayed in the "
"interactive mode.  The option can be introspected using the :attr:`sys."
"flags` attribute:"
msgstr ""
"Інтерпретатор тепер можна запустити з тихою опцією ``-q``, щоб запобігти "
"відображенню інформації про авторські права та версію в інтерактивному "
"режимі. Опцію можна перевірити за допомогою атрибута :attr:`sys.flags`:"

msgid "(Contributed by Marcin Wojdyr in :issue:`1772833`)."
msgstr "(Надав Марчін Войдир у :issue:`1772833`)."

msgid ""
"The :func:`hasattr` function works by calling :func:`getattr` and detecting "
"whether an exception is raised.  This technique allows it to detect methods "
"created dynamically by :meth:`__getattr__` or :meth:`__getattribute__` which "
"would otherwise be absent from the class dictionary.  Formerly, *hasattr* "
"would catch any exception, possibly masking genuine errors.  Now, *hasattr* "
"has been tightened to only catch :exc:`AttributeError` and let other "
"exceptions pass through::"
msgstr ""
"Функція :func:`hasattr` працює, викликаючи :func:`getattr` і виявляючи, чи "
"виникає виняткова ситуація. Ця техніка дозволяє виявляти методи, створені "
"динамічно :meth:`__getattr__` або :meth:`__getattribute__`, які інакше були "
"б відсутні у словнику класу. Раніше *hasattr* перехоплював будь-які винятки, "
"можливо, маскуючи справжні помилки. Тепер *hasattr* було посилено, щоб "
"перехоплювати лише :exc:`AttributeError` і пропускати інші винятки:"

msgid ""
"(Discovered by Yury Selivanov and fixed by Benjamin Peterson; :issue:`9666`.)"
msgstr ""
"(Виявлено Юрієм Селівановим і виправлено Бенджаміном Петерсоном; :issue:"
"`9666`.)"

msgid ""
"The :func:`str` of a float or complex number is now the same as its :func:"
"`repr`. Previously, the :func:`str` form was shorter but that just caused "
"confusion and is no longer needed now that the shortest possible :func:"
"`repr` is displayed by default:"
msgstr ""
":func:`str` числа з плаваючою точкою або комплексного числа тепер збігається "
"з його :func:`repr`. Раніше форма :func:`str` була коротшою, але це лише "
"викликало плутанину, і тепер вона більше не потрібна, оскільки найкоротша "
"можлива :func:`repr` відображається за замовчуванням:"

msgid "(Proposed and implemented by Mark Dickinson; :issue:`9337`.)"
msgstr "(Запропоновано та реалізовано Марком Дікінсоном; :issue:`9337`.)"

msgid ""
":class:`memoryview` objects now have a :meth:`~memoryview.release()` method "
"and they also now support the context management protocol.  This allows "
"timely release of any resources that were acquired when requesting a buffer "
"from the original object."
msgstr ""
"Об’єкти :class:`memoryview` тепер мають метод :meth:`~memoryview.release()` "
"і тепер вони також підтримують протокол керування контекстом. Це дозволяє "
"своєчасно звільнити будь-які ресурси, отримані під час запиту буфера з "
"вихідного об’єкта."

msgid "(Added by Antoine Pitrou; :issue:`9757`.)"
msgstr "(Додав Антуан Пітру; :issue:`9757`.)"

msgid ""
"Previously it was illegal to delete a name from the local namespace if it "
"occurs as a free variable in a nested block::"
msgstr ""
"Раніше було заборонено видаляти ім’я з локального простору імен, якщо воно "
"зустрічається як вільна змінна у вкладеному блоці::"

msgid ""
"This is now allowed.  Remember that the target of an :keyword:`except` "
"clause is cleared, so this code which used to work with Python 2.6, raised "
"a :exc:`SyntaxError` with Python 3.1 and now works again::"
msgstr ""
"Тепер це дозволено. Пам’ятайте, що ціль речення :keyword:`except` очищено, "
"тому цей код, який раніше працював з Python 2.6, викликав :exc:`SyntaxError` "
"з Python 3.1 і тепер знову працює::"

msgid "(See :issue:`4617`.)"
msgstr "(Див. :issue:`4617`.)"

msgid ""
"The internal :c:type:`structsequence` tool now creates subclasses of tuple. "
"This means that C structures like those returned by :func:`os.stat`, :func:"
"`time.gmtime`, and :attr:`sys.version_info` now work like a :term:`named "
"tuple` and now work with functions and methods that expect a tuple as an "
"argument.  This is a big step forward in making the C structures as flexible "
"as their pure Python counterparts:"
msgstr ""
"Внутрішній інструмент :c:type:`structsequence` тепер створює підкласи "
"кортежу. Це означає, що структури C, такі як ті, що повертаються :func:`os."
"stat`, :func:`time.gmtime` і :attr:`sys.version_info` тепер працюють як :"
"term:`named tuple` і тепер працюють з функціями та методами, які очікують "
"кортеж як аргумент. Це великий крок вперед у тому, щоб зробити структури C "
"такими ж гнучкими, як і їхні чисті аналоги Python:"

msgid ""
"(Suggested by Arfrever Frehtes Taifersar Arahesis and implemented by "
"Benjamin Peterson in :issue:`8413`.)"
msgstr ""
"(Запропоновано Arfrever Frehtes Taifersar Arahesis і реалізовано Бенджаміном "
"Петерсоном у :issue:`8413`.)"

msgid ""
"Warnings are now easier to control using the :envvar:`PYTHONWARNINGS` "
"environment variable as an alternative to using ``-W`` at the command line:"
msgstr ""
"Тепер попередженнями легше керувати за допомогою змінної середовища :envvar:"
"`PYTHONWARNINGS` як альтернативи використанню ``-W`` у командному рядку:"

msgid ""
"(Suggested by Barry Warsaw and implemented by Philip Jenvey in :issue:"
"`7301`.)"
msgstr ""
"(Запропоновано Barry Warsaw і реалізовано Philip Jenvey у :issue:`7301`.)"

msgid ""
"A new warning category, :exc:`ResourceWarning`, has been added.  It is "
"emitted when potential issues with resource consumption or cleanup are "
"detected.  It is silenced by default in normal release builds but can be "
"enabled through the means provided by the :mod:`warnings` module, or on the "
"command line."
msgstr ""
"Додано нову категорію попереджень :exc:`ResourceWarning`. Випускається, коли "
"виявляються потенційні проблеми із споживанням ресурсів або очищенням. За "
"замовчуванням у звичайних збірках випуску його вимкнено, але його можна "
"ввімкнути за допомогою засобів, наданих модулем :mod:`warnings`, або в "
"командному рядку."

msgid ""
"A :exc:`ResourceWarning` is issued at interpreter shutdown if the :data:`gc."
"garbage` list isn't empty, and if :attr:`gc.DEBUG_UNCOLLECTABLE` is set, all "
"uncollectable objects are printed.  This is meant to make the programmer "
"aware that their code contains object finalization issues."
msgstr ""
":exc:`ResourceWarning` видається під час завершення роботи інтерпретатора, "
"якщо список :data:`gc.garbage` не порожній, і якщо встановлено :attr:`gc."
"DEBUG_UNCOLLECTABLE`, друкуються всі об’єкти, які неможливо зібрати. Це має "
"на меті повідомити програмісту, що його код містить проблеми з фіналізацією "
"об’єктів."

msgid ""
"A :exc:`ResourceWarning` is also issued when a :term:`file object` is "
"destroyed without having been explicitly closed.  While the deallocator for "
"such object ensures it closes the underlying operating system resource "
"(usually, a file descriptor), the delay in deallocating the object could "
"produce various issues, especially under Windows.  Here is an example of "
"enabling the warning from the command line:"
msgstr ""
":exc:`ResourceWarning` також видається, коли :term:`file object` знищується "
"без явного закриття. Хоча засіб звільнення для такого об’єкта гарантує, що "
"він закриває основний ресурс операційної системи (зазвичай, дескриптор "
"файлу), затримка звільнення об’єкта може спричинити різні проблеми, особливо "
"під Windows. Ось приклад увімкнення попередження з командного рядка:"

msgid ""
"(Added by Antoine Pitrou and Georg Brandl in :issue:`10093` and :issue:"
"`477863`.)"
msgstr ""
"(Додано Антуаном Пітру та Георгом Брандлом у :issue:`10093` та :issue:"
"`477863`.)"

msgid ""
":class:`range` objects now support *index* and *count* methods. This is part "
"of an effort to make more objects fully implement the :class:`collections."
"Sequence` :term:`abstract base class`.  As a result, the language will have "
"a more uniform API.  In addition, :class:`range` objects now support slicing "
"and negative indices, even with values larger than :attr:`sys.maxsize`.  "
"This makes *range* more interoperable with lists::"
msgstr ""
"Об’єкти :class:`range` тепер підтримують методи *index* і *count*. Це "
"частина зусиль, щоб більше об’єктів повністю реалізовували :class:"
"`collections.Sequence` :term:`abstract base class`. У результаті мова матиме "
"більш уніфікований API. Крім того, об’єкти :class:`range` тепер підтримують "
"нарізку та негативні індекси, навіть зі значеннями, більшими за :attr:`sys."
"maxsize`. Це робить *range* більш сумісним зі списками::"

msgid ""
"(Contributed by Daniel Stutzbach in :issue:`9213`, by Alexander Belopolsky "
"in :issue:`2690`, and by Nick Coghlan in :issue:`10889`.)"
msgstr ""
"(Надано Даніелем Штуцбахом у :issue:`9213`, Олександром Бєлопольським у :"
"issue:`2690` та Ніком Когланом у :issue:`10889`.)"

msgid ""
"The :func:`callable` builtin function from Py2.x was resurrected.  It "
"provides a concise, readable alternative to using an :term:`abstract base "
"class` in an expression like ``isinstance(x, collections.Callable)``:"
msgstr ""
"Вбудовану функцію :func:`callable` з Py2.x було відроджено. Він надає "
"стислу, зрозумілу альтернативу використанню :term:`abstract base class` у "
"виразі на зразок ``isinstance(x, collections.Callable)``:"

msgid "(See :issue:`10518`.)"
msgstr "(Див. :issue:`10518`.)"

msgid ""
"Python's import mechanism can now load modules installed in directories with "
"non-ASCII characters in the path name.  This solved an aggravating problem "
"with home directories for users with non-ASCII characters in their usernames."
msgstr ""
"Механізм імпорту Python тепер може завантажувати модулі, встановлені в "
"каталогах із символами, відмінними від ASCII, у імені шляху. Це вирішило "
"серйозну проблему з домашніми каталогами для користувачів із символами, "
"відмінними від ASCII, у їхніх іменах користувачів."

msgid "(Required extensive work by Victor Stinner in :issue:`9425`.)"
msgstr "(Потрібна велика робота Віктора Стіннера в :issue:`9425`.)"

msgid "New, Improved, and Deprecated Modules"
msgstr "Нові, покращені та застарілі модулі"

msgid ""
"Python's standard library has undergone significant maintenance efforts and "
"quality improvements."
msgstr ""
"Стандартна бібліотека Python зазнала значних зусиль з обслуговування та "
"покращення якості."

msgid ""
"The biggest news for Python 3.2 is that the :mod:`email` package, :mod:"
"`mailbox` module, and :mod:`nntplib` modules now work correctly with the "
"bytes/text model in Python 3.  For the first time, there is correct handling "
"of messages with mixed encodings."
msgstr ""
"Найбільшою новиною для Python 3.2 є те, що пакет :mod:`email`, модуль :mod:"
"`mailbox` і модулі :mod:`nntplib` тепер коректно працюють із моделлю байт/"
"текст у Python 3. Вперше , існує правильна обробка повідомлень із змішаним "
"кодуванням."

msgid ""
"Throughout the standard library, there has been more careful attention to "
"encodings and text versus bytes issues.  In particular, interactions with "
"the operating system are now better able to exchange non-ASCII data using "
"the Windows MBCS encoding, locale-aware encodings, or UTF-8."
msgstr ""
"У стандартній бібліотеці більше уваги приділялося кодуванням і питанням "
"тексту та байтів. Зокрема, під час взаємодії з операційною системою тепер "
"краще обмінюватися даними, відмінними від ASCII, за допомогою кодування "
"Windows MBCS, кодування з урахуванням локалі або UTF-8."

msgid ""
"Another significant win is the addition of substantially better support for "
"*SSL* connections and security certificates."
msgstr ""
"Ще однією важливою перевагою є додавання значно кращої підтримки з’єднань "
"*SSL* і сертифікатів безпеки."

msgid ""
"In addition, more classes now implement a :term:`context manager` to support "
"convenient and reliable resource clean-up using a :keyword:`with` statement."
msgstr ""
"Крім того, більше класів тепер реалізують :term:`context manager` для "
"підтримки зручного та надійного очищення ресурсів за допомогою оператора :"
"keyword:`with`."

msgid "email"
msgstr "електронною поштою"

msgid ""
"The usability of the :mod:`email` package in Python 3 has been mostly fixed "
"by the extensive efforts of R. David Murray.  The problem was that emails "
"are typically read and stored in the form of :class:`bytes` rather than :"
"class:`str` text, and they may contain multiple encodings within a single "
"email.  So, the email package had to be extended to parse and generate email "
"messages in bytes format."
msgstr ""
"Зручність використання пакета :mod:`email` у Python 3 була здебільшого "
"виправлена завдяки значним зусиллям Р. Девіда Мюррея. Проблема полягала в "
"тому, що електронні листи зазвичай читаються та зберігаються у формі :class:"
"`bytes`, а не :class:`str` тексту, і вони можуть містити кілька кодувань в "
"одному електронному листі. Отже, пакет електронної пошти потрібно було "
"розширити для аналізу та генерації повідомлень електронної пошти у форматі "
"байтів."

msgid ""
"New functions :func:`~email.message_from_bytes` and :func:`~email."
"message_from_binary_file`, and new classes :class:`~email.parser."
"BytesFeedParser` and :class:`~email.parser.BytesParser` allow binary message "
"data to be parsed into model objects."
msgstr ""
"Нові функції :func:`~email.message_from_bytes` і :func:`~email."
"message_from_binary_file`, а також нові класи :class:`~email.parser."
"BytesFeedParser` і :class:`~email.parser.BytesParser` дозволяють двійковий "
"код дані повідомлення, які потрібно розібрати в об’єкти моделі."

msgid ""
"Given bytes input to the model, :meth:`~email.message.Message.get_payload` "
"will by default decode a message body that has a :mailheader:`Content-"
"Transfer-Encoding` of *8bit* using the charset specified in the MIME headers "
"and return the resulting string."
msgstr ""
"З урахуванням байтів, введених у модель, :meth:`~email.message.Message."
"get_payload` за замовчуванням декодує тіло повідомлення, яке має :mailheader:"
"`Content-Transfer-Encoding` *8bit*, використовуючи набір символів, указаний "
"у заголовки MIME та повертає результуючий рядок."

msgid ""
"Given bytes input to the model, :class:`~email.generator.Generator` will "
"convert message bodies that have a :mailheader:`Content-Transfer-Encoding` "
"of *8bit* to instead have a *7bit* :mailheader:`Content-Transfer-Encoding`."
msgstr ""
"Враховуючи байти, введені в модель, :class:`~email.generator.Generator` "
"перетворить тіла повідомлень, які мають :mailheader:`Content-Transfer-"
"Encoding` *8bit*, на *7bit* :mailheader:`Content-Transfer-Encoding`."

msgid ""
"Headers with unencoded non-ASCII bytes are deemed to be :rfc:`2047`\\ -"
"encoded using the *unknown-8bit* character set."
msgstr ""
"Заголовки з незакодованими не-ASCII байтами вважаються :rfc:`2047`\\ -"
"кодованими з використанням набору символів *unknown-8bit*."

msgid ""
"A new class :class:`~email.generator.BytesGenerator` produces bytes as "
"output, preserving any unchanged non-ASCII data that was present in the "
"input used to build the model, including message bodies with a :mailheader:"
"`Content-Transfer-Encoding` of *8bit*."
msgstr ""
"Новий клас :class:`~email.generator.BytesGenerator` створює байти як вихідні "
"дані, зберігаючи будь-які незмінені дані, що не належать до ASCII, які були "
"присутні у вхідних даних, використаних для побудови моделі, включаючи тіла "
"повідомлень із :mailheader:`Content-Transfer-Encoding` з *8bit*."

msgid ""
"The :mod:`smtplib` :class:`~smtplib.SMTP` class now accepts a byte string "
"for the *msg* argument to the :meth:`~smtplib.SMTP.sendmail` method, and a "
"new method, :meth:`~smtplib.SMTP.send_message` accepts a :class:`~email."
"message.Message` object and can optionally obtain the *from_addr* and "
"*to_addrs* addresses directly from the object."
msgstr ""
"Клас :mod:`smtplib` :class:`~smtplib.SMTP` тепер приймає рядок байтів для "
"аргументу *msg* для методу :meth:`~smtplib.SMTP.sendmail` і новий метод :"
"meth:`~smtplib.SMTP.send_message` приймає об’єкт :class:`~email.message."
"Message` і за бажанням може отримати адреси *from_addr* і *to_addrs* "
"безпосередньо з об’єкта."

msgid ""
"(Proposed and implemented by R. David Murray, :issue:`4661` and :issue:"
"`10321`.)"
msgstr ""
"(Запропоновано та реалізовано Р. Девідом Мюрреєм, :issue:`4661` і :issue:"
"`10321`.)"

msgid "elementtree"
msgstr "дерево елементів"

msgid ""
"The :mod:`xml.etree.ElementTree` package and its :mod:`xml.etree."
"cElementTree` counterpart have been updated to version 1.3."
msgstr ""
"Пакет :mod:`xml.etree.ElementTree` та його аналог :mod:`xml.etree."
"cElementTree` оновлено до версії 1.3."

msgid "Several new and useful functions and methods have been added:"
msgstr "Додано кілька нових корисних функцій і методів:"

msgid ""
":func:`xml.etree.ElementTree.fromstringlist` which builds an XML document "
"from a sequence of fragments"
msgstr ""
":func:`xml.etree.ElementTree.fromstringlist`, який створює XML-документ із "
"послідовності фрагментів"

msgid ""
":func:`xml.etree.ElementTree.register_namespace` for registering a global "
"namespace prefix"
msgstr ""
":func:`xml.etree.ElementTree.register_namespace` для реєстрації префікса "
"глобального простору імен"

msgid ""
":func:`xml.etree.ElementTree.tostringlist` for string representation "
"including all sublists"
msgstr ""
":func:`xml.etree.ElementTree.tostringlist` для представлення рядків, "
"включаючи всі підсписки"

msgid ""
":meth:`xml.etree.ElementTree.Element.extend` for appending a sequence of "
"zero or more elements"
msgstr ""
":meth:`xml.etree.ElementTree.Element.extend` для додавання послідовності з "
"нуля або більше елементів"

msgid ""
":meth:`xml.etree.ElementTree.Element.iterfind` searches an element and "
"subelements"
msgstr ""
":meth:`xml.etree.ElementTree.Element.iterfind` шукає елемент і піделементи"

msgid ""
":meth:`xml.etree.ElementTree.Element.itertext` creates a text iterator over "
"an element and its subelements"
msgstr ""
":meth:`xml.etree.ElementTree.Element.itertext` створює текстовий ітератор "
"над елементом і його піделементами"

msgid ""
":meth:`xml.etree.ElementTree.TreeBuilder.end` closes the current element"
msgstr ""
":meth:`xml.etree.ElementTree.TreeBuilder.end` закриває поточний елемент"

msgid ""
":meth:`xml.etree.ElementTree.TreeBuilder.doctype` handles a doctype "
"declaration"
msgstr ""
":meth:`xml.etree.ElementTree.TreeBuilder.doctype` обробляє декларацію doctype"

msgid "Two methods have been deprecated:"
msgstr "Два методи застаріли:"

msgid ":meth:`xml.etree.ElementTree.getchildren` use ``list(elem)`` instead."
msgstr ""
":meth:`xml.etree.ElementTree.getchildren` замість цього використовуйте "
"``list(elem)``."

msgid ":meth:`xml.etree.ElementTree.getiterator` use ``Element.iter`` instead."
msgstr ""
":meth:`xml.etree.ElementTree.getiterator` замість цього використовуйте "
"``Element.iter``."

msgid ""
"For details of the update, see `Introducing ElementTree <https://web.archive."
"org/web/20200703234532/http://effbot.org/zone/elementtree-13-intro.htm>`_ on "
"Fredrik Lundh's website."
msgstr ""
"Докладні відомості про оновлення див. у розділі `Introducing ElementTree "
"<https://web.archive.org/web/20200703234532/http://effbot.org/zone/"
"elementtree-13-intro.htm>`_ на веб-сайті Фредріка Лунда."

msgid "(Contributed by Florent Xicluna and Fredrik Lundh, :issue:`6472`.)"
msgstr "(Надано Florent Xicluna та Fredrik Lundh, :issue:`6472`.)"

msgid "functools"
msgstr "functools"

msgid ""
"The :mod:`functools` module includes a new decorator for caching function "
"calls.  :func:`functools.lru_cache` can save repeated queries to an external "
"resource whenever the results are expected to be the same."
msgstr ""
"Модуль :mod:`functools` містить новий декоратор для кешування викликів "
"функцій. :func:`functools.lru_cache` може зберігати повторювані запити до "
"зовнішнього ресурсу щоразу, коли очікується, що результати будуть однаковими."

msgid ""
"For example, adding a caching decorator to a database query function can "
"save database accesses for popular searches:"
msgstr ""
"Наприклад, додавання декоратора кешування до функції запиту до бази даних "
"може зберегти доступ до бази даних для популярних пошуків:"

msgid ""
"To help with choosing an effective cache size, the wrapped function is "
"instrumented for tracking cache statistics:"
msgstr ""
"Щоб допомогти з вибором ефективного розміру кешу, загорнута функція "
"обладнана для відстеження статистики кешу:"

msgid ""
"If the phonelist table gets updated, the outdated contents of the cache can "
"be cleared with:"
msgstr ""
"Якщо таблиця списку телефонів оновлюється, застарілий вміст кешу можна "
"очистити за допомогою:"

msgid ""
"(Contributed by Raymond Hettinger and incorporating design ideas from Jim "
"Baker, Miki Tebeka, and Nick Coghlan; see `recipe 498245 <https://code."
"activestate.com/recipes/498245>`_\\, `recipe 577479 <https://code."
"activestate.com/recipes/577479>`_\\, :issue:`10586`, and :issue:`10593`.)"
msgstr ""
"(Надано Реймондом Геттінгером і використано дизайнерські ідеї Джима Бейкера, "
"Мікі Тебеки та Ніка Коглана; див. `recipe 498245 <https://code.activestate."
"com/recipes/498245>`_\\, `recipe 577479 <https://code.activestate.com/"
"recipes/577479>`_\\, :issue:`10586` і :issue:`10593`.)"

msgid ""
"The :func:`functools.wraps` decorator now adds a :attr:`__wrapped__` "
"attribute pointing to the original callable function.  This allows wrapped "
"functions to be introspected.  It also copies :attr:`__annotations__` if "
"defined.  And now it also gracefully skips over missing attributes such as :"
"attr:`__doc__` which might not be defined for the wrapped callable."
msgstr ""
"Декоратор :func:`functools.wraps` тепер додає атрибут :attr:`__wrapped__`, "
"який вказує на вихідну функцію, яку можна викликати. Це дозволяє "
"інтроспектувати загорнуті функції. Він також копіює :attr:`__annotations__`, "
"якщо визначено. І тепер він також витончено пропускає відсутні атрибути, "
"такі як :attr:`__doc__`, які можуть бути не визначені для загорнутого "
"виклику."

msgid ""
"In the above example, the cache can be removed by recovering the original "
"function:"
msgstr ""
"У наведеному вище прикладі кеш можна видалити, відновивши вихідну функцію:"

msgid ""
"(By Nick Coghlan and Terrence Cole; :issue:`9567`, :issue:`3445`, and :issue:"
"`8814`.)"
msgstr ""
"(Автори Нік Коглан і Терренс Коул; :issue:`9567`, :issue:`3445` і :issue:"
"`8814`.)"

msgid ""
"To help write classes with rich comparison methods, a new decorator :func:"
"`functools.total_ordering` will use existing equality and inequality methods "
"to fill in the remaining methods."
msgstr ""
"Щоб допомогти писати класи з розширеними методами порівняння, новий "
"декоратор :func:`functools.total_ordering` використовуватиме існуючі методи "
"рівності та нерівності для заповнення решти методів."

msgid ""
"For example, supplying *__eq__* and *__lt__* will enable :func:`~functools."
"total_ordering` to fill-in *__le__*, *__gt__* and *__ge__*::"
msgstr ""
"Наприклад, введення *__eq__* і *__lt__* дозволить :func:`~functools."
"total_ordering` заповнити *__le__*, *__gt__* і *__ge__*::"

msgid ""
"With the *total_ordering* decorator, the remaining comparison methods are "
"filled in automatically."
msgstr ""
"За допомогою декоратора *total_ordering* решта методів порівняння "
"заповнюється автоматично."

msgid "(Contributed by Raymond Hettinger.)"
msgstr "(Надав Реймонд Геттінгер.)"

msgid ""
"To aid in porting programs from Python 2, the :func:`functools.cmp_to_key` "
"function converts an old-style comparison function to modern :term:`key "
"function`:"
msgstr ""
"Щоб допомогти у перенесенні програм із Python 2, функція :func:`functools."
"cmp_to_key` перетворює стару функцію порівняння на сучасну :term:`key "
"function`:"

msgid ""
"For sorting examples and a brief sorting tutorial, see the `Sorting HowTo "
"<https://wiki.python.org/moin/HowTo/Sorting/>`_ tutorial."
msgstr ""
"Приклади сортування та короткий посібник із сортування див. у посібнику "
"`Sorting HowTo <https://wiki.python.org/moin/HowTo/Sorting/>`_."

msgid "itertools"
msgstr "itertools"

msgid ""
"The :mod:`itertools` module has a new :func:`~itertools.accumulate` function "
"modeled on APL's *scan* operator and Numpy's *accumulate* function:"
msgstr ""
"Модуль :mod:`itertools` має нову функцію :func:`~itertools.accumulate`, "
"створену на основі оператора *scan* APL і функції *accumulate* Numpy:"

msgid ""
"For an example using :func:`~itertools.accumulate`, see the :ref:`examples "
"for the random module <random-examples>`."
msgstr ""
"Для прикладу використання :func:`~itertools.accumulate` див. :ref:`приклади "
"для випадкового модуля <random-examples>`."

msgid ""
"(Contributed by Raymond Hettinger and incorporating design suggestions from "
"Mark Dickinson.)"
msgstr ""
"(Надано Реймондом Геттінгером і враховано пропозиції щодо дизайну Марка "
"Дікінсона.)"

msgid "collections"
msgstr "колекції"

msgid ""
"The :class:`collections.Counter` class now has two forms of in-place "
"subtraction, the existing *-=* operator for `saturating subtraction <https://"
"en.wikipedia.org/wiki/Saturation_arithmetic>`_ and the new :meth:"
"`~collections.Counter.subtract` method for regular subtraction.  The former "
"is suitable for `multisets <https://en.wikipedia.org/wiki/Multiset>`_ which "
"only have positive counts, and the latter is more suitable for use cases "
"that allow negative counts:"
msgstr ""
"Клас :class:`collections.Counter` тепер має дві форми віднімання на місці, "
"наявний оператор *-=* для `насиченого віднімання <https://en.wikipedia.org/"
"wiki/Saturation_arithmetic>`_ і новий метод :meth:`~collections.Counter."
"subtract` для звичайне віднімання. Перший підходить для `мультимножин "
"<https://en.wikipedia.org/wiki/Multiset>`_, які мають лише позитивні "
"підрахунки, а другий більше підходить для випадків використання, які "
"дозволяють негативні підрахунки:"

msgid ""
"The :class:`collections.OrderedDict` class has a new method :meth:"
"`~collections.OrderedDict.move_to_end` which takes an existing key and moves "
"it to either the first or last position in the ordered sequence."
msgstr ""
"Клас :class:`collections.OrderedDict` має новий метод :meth:`~collections."
"OrderedDict.move_to_end`, який бере наявний ключ і переміщує його на першу "
"чи останню позицію в упорядкованій послідовності."

msgid ""
"The default is to move an item to the last position.  This is equivalent of "
"renewing an entry with ``od[k] = od.pop(k)``."
msgstr ""
"За замовчуванням елемент переміщується на останню позицію. Це еквівалентно "
"оновленню запису за допомогою ``od[k] = od.pop(k)``."

msgid ""
"A fast move-to-end operation is useful for resequencing entries.  For "
"example, an ordered dictionary can be used to track order of access by aging "
"entries from the oldest to the most recently accessed."
msgstr ""
"Операція швидкого переходу до кінця корисна для зміни послідовності записів. "
"Наприклад, упорядкований словник можна використовувати для відстеження "
"порядку доступу шляхом старіння записів від найстаріших до найновіших."

msgid ""
"The :class:`collections.deque` class grew two new methods :meth:"
"`~collections.deque.count` and :meth:`~collections.deque.reverse` that make "
"them more substitutable for :class:`list` objects:"
msgstr ""
"У класі :class:`collections.deque` з’явилися два нові методи :meth:"
"`~collections.deque.count` і :meth:`~collections.deque.reverse`, що робить "
"їх більш доступними для об’єктів :class:`list` :"

msgid "threading"
msgstr "різьблення"

msgid ""
"The :mod:`threading` module has a new :class:`~threading.Barrier` "
"synchronization class for making multiple threads wait until all of them "
"have reached a common barrier point.  Barriers are useful for making sure "
"that a task with multiple preconditions does not run until all of the "
"predecessor tasks are complete."
msgstr ""
"Модуль :mod:`threading` має новий клас синхронізації :class:`~threading."
"Barrier` для того, щоб кілька потоків чекали, поки всі вони досягнуть "
"спільної точки перешкоди. Бар’єри корисні для забезпечення того, щоб "
"завдання з кількома попередніми умовами не запускалося, доки не будуть "
"виконані всі завдання-попередники."

msgid ""
"Barriers can work with an arbitrary number of threads.  This is a "
"generalization of a `Rendezvous <https://en.wikipedia.org/wiki/"
"Synchronous_rendezvous>`_ which is defined for only two threads."
msgstr ""
"Бар'єри можуть працювати з довільною кількістю потоків. Це узагальнення "
"`Rendezvous <https://en.wikipedia.org/wiki/Synchronous_rendezvous>`_, яке "
"визначено лише для двох потоків."

msgid ""
"Implemented as a two-phase cyclic barrier, :class:`~threading.Barrier` "
"objects are suitable for use in loops.  The separate *filling* and "
"*draining* phases assure that all threads get released (drained) before any "
"one of them can loop back and re-enter the barrier.  The barrier fully "
"resets after each cycle."
msgstr ""
"Реалізовані як двофазний циклічний бар’єр, об’єкти :class:`~threading."
"Barrier` підходять для використання в циклах. Окремі фази *заповнення* та "
"*виливання* гарантують, що всі потоки будуть звільнені (осушені) до того, як "
"будь-який з них зможе повернутися назад і знову увійти в бар’єр. Після "
"кожного циклу бар’єр повністю скидається."

msgid "Example of using barriers::"
msgstr "Приклад використання бар'єрів::"

msgid ""
"In this example, the barrier enforces a rule that votes cannot be counted at "
"any polling site until all polls are closed.  Notice how a solution with a "
"barrier is similar to one with :meth:`threading.Thread.join`, but the "
"threads stay alive and continue to do work (summarizing ballots) after the "
"barrier point is crossed."
msgstr ""
"У цьому прикладі бар’єр забезпечує виконання правила, згідно з яким голоси "
"не можуть бути підраховані на жодній виборчій дільниці, доки всі виборчі "
"дільниці не будуть закриті. Зверніть увагу, що рішення з бар’єром схоже на "
"рішення з :meth:`threading.Thread.join`, але потоки залишаються живими та "
"продовжують виконувати роботу (підсумовуючи бюлетені) після перетину точки "
"бар’єру."

msgid ""
"If any of the predecessor tasks can hang or be delayed, a barrier can be "
"created with an optional *timeout* parameter.  Then if the timeout period "
"elapses before all the predecessor tasks reach the barrier point, all "
"waiting threads are released and a :exc:`~threading.BrokenBarrierError` "
"exception is raised::"
msgstr ""
"Якщо будь-яке з попередніх завдань може зависати або відкладатися, можна "
"створити бар’єр за допомогою додаткового параметра *timeout*. Потім, якщо "
"період очікування мине до того, як усі завдання-попередники досягнуть точки "
"бар’єру, усі потоки, що очікують, звільняються та виникає виняток :exc:"
"`~threading.BrokenBarrierError`::"

msgid ""
"In this example, the barrier enforces a more robust rule.  If some election "
"sites do not finish before midnight, the barrier times-out and the ballots "
"are sealed and deposited in a queue for later handling."
msgstr ""
"У цьому прикладі бар’єр забезпечує більш надійне правило. Якщо деякі виборчі "
"дільниці не закінчуються до опівночі, шлагбаум закінчується, а бюлетені "
"запечатуються та залишаються в черзі для подальшої обробки."

msgid ""
"See `Barrier Synchronization Patterns <https://osl.cs.illinois.edu/media/"
"papers/karmani-2009-barrier_synchronization_pattern.pdf>`_ for more examples "
"of how barriers can be used in parallel computing.  Also, there is a simple "
"but thorough explanation of barriers in `The Little Book of Semaphores "
"<https://greenteapress.com/semaphores/LittleBookOfSemaphores.pdf>`_, "
"*section 3.6*."
msgstr ""

msgid ""
"(Contributed by Kristján Valur Jónsson with an API review by Jeffrey Yasskin "
"in :issue:`8777`.)"
msgstr ""
"(Надав Крістіян Валур Йонссон із оглядом API Джеффрі Яскіним у :issue:"
"`8777`.)"

msgid "datetime and time"
msgstr "дата, час і час"

msgid ""
"The :mod:`datetime` module has a new type :class:`~datetime.timezone` that "
"implements the :class:`~datetime.tzinfo` interface by returning a fixed UTC "
"offset and timezone name. This makes it easier to create timezone-aware "
"datetime objects::"
msgstr ""
"Модуль :mod:`datetime` має новий тип :class:`~datetime.timezone`, який "
"реалізує інтерфейс :class:`~datetime.tzinfo` шляхом повернення фіксованого "
"зміщення UTC і назви часового поясу. Це полегшує створення об’єктів datetime "
"з урахуванням часового поясу:"

msgid ""
"Also, :class:`~datetime.timedelta` objects can now be multiplied by :class:"
"`float` and divided by :class:`float` and :class:`int` objects. And :class:"
"`~datetime.timedelta` objects can now divide one another."
msgstr ""
"Крім того, об’єкти :class:`~datetime.timedelta` тепер можна помножити на :"
"class:`float` і розділити на об’єкти :class:`float` і :class:`int`. І "
"об’єкти :class:`~datetime.timedelta` тепер можуть розділяти один одного."

msgid ""
"The :meth:`datetime.date.strftime` method is no longer restricted to years "
"after 1900.  The new supported year range is from 1000 to 9999 inclusive."
msgstr ""
"Метод :meth:`datetime.date.strftime` більше не обмежується роками після "
"1900. Новий підтримуваний діапазон років становить від 1000 до 9999 включно."

msgid ""
"Whenever a two-digit year is used in a time tuple, the interpretation has "
"been governed by :attr:`time.accept2dyear`.  The default is ``True`` which "
"means that for a two-digit year, the century is guessed according to the "
"POSIX rules governing the ``%y`` strptime format."
msgstr ""
"Щоразу, коли в кортежі часу використовується двозначний рік, інтерпретація "
"регулюється :attr:`time.accept2dyear`. Типовим значенням є ``True``, що "
"означає, що для двозначного року століття вгадується відповідно до правил "
"POSIX, які регулюють формат strptime ``%y``."

msgid ""
"Starting with Py3.2, use of the century guessing heuristic will emit a :exc:"
"`DeprecationWarning`.  Instead, it is recommended that :attr:`time."
"accept2dyear` be set to ``False`` so that large date ranges can be used "
"without guesswork::"
msgstr ""
"Починаючи з Py3.2, використання евристики вгадування століття видасть :exc:"
"`DeprecationWarning`. Замість цього рекомендується встановити :attr:`time."
"accept2dyear` на ``False``, щоб можна було використовувати великі діапазони "
"дат без припущень:"

msgid ""
"Several functions now have significantly expanded date ranges.  When :attr:"
"`time.accept2dyear` is false, the :func:`time.asctime` function will accept "
"any year that fits in a C int, while the :func:`time.mktime` and :func:`time."
"strftime` functions will accept the full range supported by the "
"corresponding operating system functions."
msgstr ""
"Кілька функцій тепер мають значно розширені діапазони дат. Якщо :attr:`time."
"accept2dyear` має значення false, функція :func:`time.asctime` прийматиме "
"будь-який рік, який вміщується в C int, тоді як :func:`time.mktime` і :func:"
"`time. функції strftime` прийматимуть повний діапазон, що підтримується "
"відповідними функціями операційної системи."

msgid ""
"(Contributed by Alexander Belopolsky and Victor Stinner in :issue:"
"`1289118`, :issue:`5094`, :issue:`6641`, :issue:`2706`, :issue:`1777412`, :"
"issue:`8013`, and :issue:`10827`.)"
msgstr ""
"(Надано Олександром Бєлопольським та Віктором Стіннером у :issue:`1289118`, :"
"issue:`5094`, :issue:`6641`, :issue:`2706`, :issue:`1777412`, :issue:`8013` "
"і :issue:`10827`.)"

msgid "math"
msgstr "математика"

msgid ""
"The :mod:`math` module has been updated with six new functions inspired by "
"the C99 standard."
msgstr ""
"Модуль :mod:`math` було оновлено шістьма новими функціями, натхненними "
"стандартом C99."

msgid ""
"The :func:`~math.isfinite` function provides a reliable and fast way to "
"detect special values.  It returns ``True`` for regular numbers and "
"``False`` for *Nan* or *Infinity*:"
msgstr ""
"Функція :func:`~math.isfinite` забезпечує надійний і швидкий спосіб "
"визначення спеціальних значень. Він повертає ``True`` для звичайних чисел і "
"``False`` для *Nan* або *Infinity*:"

msgid ""
"The :func:`~math.expm1` function computes ``e**x-1`` for small values of *x* "
"without incurring the loss of precision that usually accompanies the "
"subtraction of nearly equal quantities:"
msgstr ""
"Функція :func:`~math.expm1` обчислює ``e**x-1`` для малих значень *x* без "
"втрати точності, яка зазвичай супроводжує віднімання майже рівних величин:"

msgid ""
"The :func:`~math.erf` function computes a probability integral or `Gaussian "
"error function <https://en.wikipedia.org/wiki/Error_function>`_.  The "
"complementary error function, :func:`~math.erfc`, is ``1 - erf(x)``:"
msgstr ""
"Функція :func:`~math.erf` обчислює інтеграл ймовірності або `функцію помилки "
"Гауса <https://en.wikipedia.org/wiki/Error_function>`_. Додатковою функцією "
"помилок, :func:`~math.erfc`, є ``1 - erf(x)``:"

msgid ""
"The :func:`~math.gamma` function is a continuous extension of the factorial "
"function.  See https://en.wikipedia.org/wiki/Gamma_function for details.  "
"Because the function is related to factorials, it grows large even for small "
"values of *x*, so there is also a :func:`~math.lgamma` function for "
"computing the natural logarithm of the gamma function:"
msgstr ""
"Функція :func:`~math.gamma` є безперервним розширенням функції факториалу. "
"Див. https://en.wikipedia.org/wiki/Gamma_function, щоб дізнатися більше. "
"Оскільки функція пов’язана з факториалами, вона збільшується навіть для "
"малих значень *x*, тому існує також функція :func:`~math.lgamma` для "
"обчислення натурального логарифма гамма-функції:"

msgid "(Contributed by Mark Dickinson.)"
msgstr "(Надав Марк Дікінсон.)"

msgid "abc"
msgstr "абв"

msgid ""
"The :mod:`abc` module now supports :func:`~abc.abstractclassmethod` and :"
"func:`~abc.abstractstaticmethod`."
msgstr ""
"Модуль :mod:`abc` тепер підтримує :func:`~abc.abstractclassmethod` і :func:"
"`~abc.abstractstaticmethod`."

msgid ""
"These tools make it possible to define an :term:`abstract base class` that "
"requires a particular :func:`classmethod` or :func:`staticmethod` to be "
"implemented::"
msgstr ""
"Ці інструменти дають змогу визначити :term:`abstract base class`, який "
"потребує реалізації конкретного :func:`classmethod` або :func:"
"`staticmethod`::"

msgid "(Patch submitted by Daniel Urban; :issue:`5867`.)"
msgstr "(Патч надіслав Даніель Урбан; :issue:`5867`.)"

msgid "io"
msgstr "io"

msgid ""
"The :class:`io.BytesIO` has a new method, :meth:`~io.BytesIO.getbuffer`, "
"which provides functionality similar to :func:`memoryview`.  It creates an "
"editable view of the data without making a copy.  The buffer's random access "
"and support for slice notation are well-suited to in-place editing::"
msgstr ""
":class:`io.BytesIO` має новий метод, :meth:`~io.BytesIO.getbuffer`, який "
"забезпечує функції, подібні до :func:`memoryview`. Він створює редагований "
"вигляд даних без копіювання. Довільний доступ до буфера та підтримка нотації "
"фрагментів добре підходять для редагування на місці:"

msgid "(Contributed by Antoine Pitrou in :issue:`5506`.)"
msgstr "(Надав Антуан Пітру в :issue:`5506`.)"

msgid "reprlib"
msgstr "reprlib"

msgid ""
"When writing a :meth:`__repr__` method for a custom container, it is easy to "
"forget to handle the case where a member refers back to the container "
"itself. Python's builtin objects such as :class:`list` and :class:`set` "
"handle self-reference by displaying \"...\" in the recursive part of the "
"representation string."
msgstr ""
"Під час написання методу :meth:`__repr__` для спеціального контейнера легко "
"забути обробити випадок, коли член повертається до самого контейнера. "
"Вбудовані об’єкти Python, такі як :class:`list` і :class:`set` обробляють "
"самопосилання, відображаючи \"...\" у рекурсивній частині рядка "
"представлення."

msgid ""
"To help write such :meth:`__repr__` methods, the :mod:`reprlib` module has a "
"new decorator, :func:`~reprlib.recursive_repr`, for detecting recursive "
"calls to :meth:`__repr__` and substituting a placeholder string instead::"
msgstr ""
"Щоб полегшити написання таких методів :meth:`__repr__`, модуль :mod:"
"`reprlib` має новий декоратор, :func:`~reprlib.recursive_repr`, для "
"виявлення рекурсивних викликів :meth:`__repr__` і заміни заповнювача рядок "
"замість цього::"

msgid "(Contributed by Raymond Hettinger in :issue:`9826` and :issue:`9840`.)"
msgstr "(Надано Реймондом Геттінгером у :issue:`9826` та :issue:`9840`.)"

msgid "logging"
msgstr "лісозаготівля"

msgid ""
"In addition to dictionary-based configuration described above, the :mod:"
"`logging` package has many other improvements."
msgstr ""
"Окрім описаної вище конфігурації на основі словника, пакет :mod:`logging` "
"має багато інших покращень."

msgid ""
"The logging documentation has been augmented by a :ref:`basic tutorial "
"<logging-basic-tutorial>`\\, an :ref:`advanced tutorial <logging-advanced-"
"tutorial>`\\, and a :ref:`cookbook <logging-cookbook>` of logging recipes.  "
"These documents are the fastest way to learn about logging."
msgstr ""
"Документацію з журналювання було доповнено :ref:`основним підручником "
"<logging-basic-tutorial>`\\, :ref:`розширеним підручником <logging-advanced-"
"tutorial>`\\ і :ref:`кулінарною книгою <logging-cookbook>` з рецептами "
"журналювання. Ці документи є найшвидшим способом дізнатися про лісозаготівлю."

msgid ""
"The :func:`logging.basicConfig` set-up function gained a *style* argument to "
"support three different types of string formatting.  It defaults to \"%\" "
"for traditional %-formatting, can be set to \"{\" for the new :meth:`str."
"format` style, or can be set to \"$\" for the shell-style formatting "
"provided by :class:`string.Template`.  The following three configurations "
"are equivalent::"
msgstr ""
"Функція налаштування :func:`logging.basicConfig` отримала аргумент *style* "
"для підтримки трьох різних типів форматування рядків. За замовчуванням для "
"традиційного форматування %-formatting встановлено значення \"%\", можна "
"встановити значення \"{\" для нового стилю :meth:`str.format` або значення "
"\"$\" для форматування стилю оболонки, яке надає :class:`string.Template`. "
"Наступні три конфігурації еквівалентні:"

msgid ""
"If no configuration is set-up before a logging event occurs, there is now a "
"default configuration using a :class:`~logging.StreamHandler` directed to :"
"attr:`sys.stderr` for events of ``WARNING`` level or higher.  Formerly, an "
"event occurring before a configuration was set-up would either raise an "
"exception or silently drop the event depending on the value of :attr:"
"`logging.raiseExceptions`.  The new default handler is stored in :attr:"
"`logging.lastResort`."
msgstr ""
"Якщо жодна конфігурація не налаштована до того, як відбудеться подія "
"журналювання, тепер існує конфігурація за замовчуванням із використанням :"
"class:`~logging.StreamHandler`, спрямованого на :attr:`sys.stderr` для подій "
"рівня ``WARNING`` або вище. Раніше подія, яка відбувалася до налаштування "
"конфігурації, викликала виняток або мовчки видаляла подію залежно від "
"значення :attr:`logging.raiseExceptions`. Новий обробник за замовчуванням "
"зберігається в :attr:`logging.lastResort`."

msgid ""
"The use of filters has been simplified.  Instead of creating a :class:"
"`~logging.Filter` object, the predicate can be any Python callable that "
"returns ``True`` or ``False``."
msgstr ""
"Використання фільтрів спрощено. Замість створення об’єкта :class:`~logging."
"Filter` предикатом може бути будь-який виклик Python, який повертає ``True`` "
"або ``False``."

msgid ""
"There were a number of other improvements that add flexibility and simplify "
"configuration.  See the module documentation for a full listing of changes "
"in Python 3.2."
msgstr ""
"З’явилася низка інших покращень, які додають гнучкості та спрощують "
"налаштування. Перегляньте документацію модуля, щоб отримати повний список "
"змін у Python 3.2."

msgid "csv"
msgstr "csv"

msgid ""
"The :mod:`csv` module now supports a new dialect, :class:`~csv."
"unix_dialect`, which applies quoting for all fields and a traditional Unix "
"style with ``'\\n'`` as the line terminator.  The registered dialect name is "
"``unix``."
msgstr ""
"Модуль :mod:`csv` тепер підтримує новий діалект, :class:`~csv.unix_dialect`, "
"який застосовує лапки для всіх полів і традиційний стиль Unix із ``'\\n'`` "
"як символ закінчення рядка. Зареєстрована діалектна назва ``unix``."

msgid ""
"The :class:`csv.DictWriter` has a new method, :meth:`~csv.DictWriter."
"writeheader` for writing-out an initial row to document the field names::"
msgstr ""
":class:`csv.DictWriter` має новий метод, :meth:`~csv.DictWriter.writeheader` "
"для запису початкового рядка для документування назв полів:"

msgid ""
"(New dialect suggested by Jay Talbot in :issue:`5975`, and the new method "
"suggested by Ed Abraham in :issue:`1537721`.)"
msgstr ""
"(Новий діалект, запропонований Джеєм Телботом у :issue:`5975`, і новий "
"метод, запропонований Едом Абрахамом у :issue:`1537721`.)"

msgid "contextlib"
msgstr "contextlib"

msgid ""
"There is a new and slightly mind-blowing tool :class:`~contextlib."
"ContextDecorator` that is helpful for creating a :term:`context manager` "
"that does double duty as a function decorator."
msgstr ""
"Існує новий і трохи приголомшливий інструмент :class:`~contextlib."
"ContextDecorator`, який корисний для створення :term:`context manager`, який "
"виконує подвійну функцію як декоратор функції."

msgid ""
"As a convenience, this new functionality is used by :func:`~contextlib."
"contextmanager` so that no extra effort is needed to support both roles."
msgstr ""
"Для зручності ця нова функціональність використовується :func:`~contextlib."
"contextmanager`, тому не потрібно докладати додаткових зусиль для підтримки "
"обох ролей."

msgid ""
"The basic idea is that both context managers and function decorators can be "
"used for pre-action and post-action wrappers.  Context managers wrap a group "
"of statements using a :keyword:`with` statement, and function decorators "
"wrap a group of statements enclosed in a function.  So, occasionally there "
"is a need to write a pre-action or post-action wrapper that can be used in "
"either role."
msgstr ""
"Основна ідея полягає в тому, що як менеджери контексту, так і декоратори "
"функцій можна використовувати для обгорток до і після дії. Менеджери "
"контексту обгортають групу операторів за допомогою оператора :keyword:"
"`with`, а декоратори функцій обгортають групу операторів, укладених у "
"функцію. Отже, іноді виникає потреба написати обгортку до або після дії, яку "
"можна використовувати в обох ролях."

msgid ""
"For example, it is sometimes useful to wrap functions or groups of "
"statements with a logger that can track the time of entry and time of exit.  "
"Rather than writing both a function decorator and a context manager for the "
"task, the :func:`~contextlib.contextmanager` provides both capabilities in a "
"single definition::"
msgstr ""
"Наприклад, іноді корисно обернути функції або групи операторів за допомогою "
"реєстратора, який може відстежувати час входу та час виходу. Замість того, "
"щоб писати як декоратор функції, так і менеджер контексту для завдання, :"
"func:`~contextlib.contextmanager` надає обидві можливості в одному "
"визначенні:"

msgid "Formerly, this would have only been usable as a context manager::"
msgstr "Раніше це можна було використовувати лише як контекстний менеджер::"

msgid "Now, it can be used as a decorator as well::"
msgstr "Тепер його можна використовувати і як декоратор:"

msgid ""
"Trying to fulfill two roles at once places some limitations on the "
"technique. Context managers normally have the flexibility to return an "
"argument usable by a :keyword:`with` statement, but there is no parallel for "
"function decorators."
msgstr ""
"Спроба виконувати дві ролі одночасно накладає деякі обмеження на техніку. "
"Менеджери контексту зазвичай мають гнучкість для повернення аргументу, який "
"можна використовувати оператором :keyword:`with`, але немає аналогії для "
"декораторів функцій."

msgid ""
"In the above example, there is not a clean way for the "
"*track_entry_and_exit* context manager to return a logging instance for use "
"in the body of enclosed statements."
msgstr ""
"У наведеному вище прикладі немає чистого способу для менеджера контексту "
"*track_entry_and_exit* повернути примірник журналювання для використання в "
"тілі вкладених операторів."

msgid "(Contributed by Michael Foord in :issue:`9110`.)"
msgstr "(Надав Майкл Форд у :issue:`9110`.)"

msgid "decimal and fractions"
msgstr "десятковий і дробовий"

msgid ""
"Mark Dickinson crafted an elegant and efficient scheme for assuring that "
"different numeric datatypes will have the same hash value whenever their "
"actual values are equal (:issue:`8188`)::"
msgstr ""
"Марк Дікінсон розробив елегантну та ефективну схему, яка гарантує, що різні "
"типи числових даних матимуть однакове хеш-значення, якщо їхні фактичні "
"значення рівні (:issue:`8188`):"

msgid ""
"Some of the hashing details are exposed through a new attribute, :attr:`sys."
"hash_info`, which describes the bit width of the hash value, the prime "
"modulus, the hash values for *infinity* and *nan*, and the multiplier used "
"for the imaginary part of a number:"
msgstr ""
"Деякі деталі хешування доступні через новий атрибут :attr:`sys.hash_info`, "
"який описує бітову ширину хеш-значення, простий модуль, хеш-значення для "
"*infinity* і *nan* і множник використовується для уявної частини числа:"

msgid ""
"An early decision to limit the inter-operability of various numeric types "
"has been relaxed.  It is still unsupported (and ill-advised) to have "
"implicit mixing in arithmetic expressions such as ``Decimal('1.1') + "
"float('1.1')`` because the latter loses information in the process of "
"constructing the binary float.  However, since existing floating point value "
"can be converted losslessly to either a decimal or rational representation, "
"it makes sense to add them to the constructor and to support mixed-type "
"comparisons."
msgstr ""
"Попереднє рішення щодо обмеження сумісності різних числових типів було "
"послаблено. Досі не підтримується (і є недоцільним) мати неявне змішування в "
"арифметичних виразах, таких як ``Decimal('1.1') + float('1.1')``, оскільки "
"останній втрачає інформацію в процесі побудови двійкового float. Однак, "
"оскільки існуюче значення з плаваючою комою можна без втрат перетворити в "
"десяткове чи раціональне представлення, має сенс додати їх до конструктора "
"та підтримувати порівняння змішаного типу."

msgid ""
"The :class:`decimal.Decimal` constructor now accepts :class:`float` objects "
"directly so there in no longer a need to use the :meth:`~decimal.Decimal."
"from_float` method (:issue:`8257`)."
msgstr ""
"Конструктор :class:`decimal.Decimal` тепер приймає об’єкти :class:`float` "
"безпосередньо, тому більше не потрібно використовувати метод :meth:`~decimal."
"Decimal.from_float` (:issue:`8257`) ."

msgid ""
"Mixed type comparisons are now fully supported so that :class:`~decimal."
"Decimal` objects can be directly compared with :class:`float` and :class:"
"`fractions.Fraction` (:issue:`2531` and :issue:`8188`)."
msgstr ""
"Порівняння змішаних типів тепер повністю підтримуються, тому об’єкти :class:"
"`~decimal.Decimal` можна безпосередньо порівнювати з :class:`float` і :class:"
"`fractions.Fraction` (:issue:`2531` і :issue:`8188`)."

msgid ""
"Similar changes were made to :class:`fractions.Fraction` so that the :meth:"
"`~fractions.Fraction.from_float()` and :meth:`~fractions.Fraction."
"from_decimal` methods are no longer needed (:issue:`8294`):"
msgstr ""
"Подібні зміни було внесено до :class:`fractions.Fraction`, тому методи :meth:"
"`~fraction.Fraction.from_float()` і :meth:`~fractions.Fraction.from_decimal` "
"більше не потрібні (:issue:`8294`):"

msgid ""
"Another useful change for the :mod:`decimal` module is that the :attr:"
"`Context.clamp` attribute is now public.  This is useful in creating "
"contexts that correspond to the decimal interchange formats specified in "
"IEEE 754 (see :issue:`8540`)."
msgstr ""
"Ще одна корисна зміна для модуля :mod:`decimal` полягає в тому, що атрибут :"
"attr:`Context.clamp` тепер відкритий. Це корисно для створення контекстів, "
"які відповідають десятковим форматам обміну, визначеним у IEEE 754 (див. :"
"issue:`8540`)."

msgid "(Contributed by Mark Dickinson and Raymond Hettinger.)"
msgstr "(Надано Марком Дікінсоном і Реймондом Геттінгером.)"

msgid "ftp"
msgstr "ftp"

msgid ""
"The :class:`ftplib.FTP` class now supports the context management protocol "
"to unconditionally consume :exc:`socket.error` exceptions and to close the "
"FTP connection when done::"
msgstr ""
"Клас :class:`ftplib.FTP` тепер підтримує протокол керування контекстом для "
"безумовного використання винятків :exc:`socket.error` і закриття з’єднання "
"FTP після завершення:"

msgid ""
"Other file-like objects such as :class:`mmap.mmap` and :func:`fileinput."
"input` also grew auto-closing context managers::"
msgstr ""
"Інші файлоподібні об’єкти, такі як :class:`mmap.mmap` і :func:`fileinput."
"input` також розширили менеджери контексту автоматичного закриття::"

msgid ""
"(Contributed by Tarek Ziadé and Giampaolo Rodolà in :issue:`4972`, and by "
"Georg Brandl in :issue:`8046` and :issue:`1286`.)"
msgstr ""
"(Надано Тареком Зіаде та Джампаоло Родола у :issue:`4972` та Георгом "
"Брандлом у :issue:`8046` та :issue:`1286`.)"

msgid ""
"The :class:`~ftplib.FTP_TLS` class now accepts a *context* parameter, which "
"is a :class:`ssl.SSLContext` object allowing bundling SSL configuration "
"options, certificates and private keys into a single (potentially long-"
"lived) structure."
msgstr ""
"Клас :class:`~ftplib.FTP_TLS` тепер приймає параметр *context*, який є "
"об’єктом :class:`ssl.SSLContext`, що дозволяє об’єднувати параметри "
"конфігурації SSL, сертифікати та закриті ключі в єдиний (потенційно "
"довготривалий) структура."

msgid "(Contributed by Giampaolo Rodolà; :issue:`8806`.)"
msgstr "(Надав Джампаоло Родола; :issue:`8806`.)"

msgid "popen"
msgstr "відкрити"

msgid ""
"The :func:`os.popen` and :func:`subprocess.Popen` functions now support :"
"keyword:`with` statements for auto-closing of the file descriptors."
msgstr ""
"Функції :func:`os.popen` і :func:`subprocess.Popen` тепер підтримують "
"оператори :keyword:`with` для автоматичного закриття дескрипторів файлів."

msgid ""
"(Contributed by Antoine Pitrou and Brian Curtin in :issue:`7461` and :issue:"
"`10554`.)"
msgstr ""
"(Надано Антуаном Пітру та Браяном Кертіном у :issue:`7461` та :issue:"
"`10554`.)"

msgid "select"
msgstr "вибрати"

msgid ""
"The :mod:`select` module now exposes a new, constant attribute, :attr:"
"`~select.PIPE_BUF`, which gives the minimum number of bytes which are "
"guaranteed not to block when :func:`select.select` says a pipe is ready for "
"writing."
msgstr ""
"Модуль :mod:`select` тепер надає новий постійний атрибут, :attr:`~select."
"PIPE_BUF`, який надає мінімальну кількість байтів, які гарантовано не "
"блокуються, коли :func:`select.select` каже труба готова до письма."

msgid "(Available on Unix systems. Patch by Sébastien Sablé in :issue:`9862`)"
msgstr "(Доступно в системах Unix. Патч Себастьєна Сабле в :issue:`9862`)"

msgid "gzip and zipfile"
msgstr "gzip і zipfile"

msgid ""
":class:`gzip.GzipFile` now implements the :class:`io.BufferedIOBase` :term:"
"`abstract base class` (except for ``truncate()``).  It also has a :meth:"
"`~gzip.GzipFile.peek` method and supports unseekable as well as zero-padded "
"file objects."
msgstr ""
":class:`gzip.GzipFile` тепер реалізує :class:`io.BufferedIOBase` :term:"
"`abstract base class` (крім ``truncate()``). Він також має метод :meth:"
"`~gzip.GzipFile.peek` і підтримує об’єкти файлів, які не можна шукати, а "
"також об’єкти з нульовим доповненням."

msgid ""
"The :mod:`gzip` module also gains the :func:`~gzip.compress` and :func:"
"`~gzip.decompress` functions for easier in-memory compression and "
"decompression.  Keep in mind that text needs to be encoded as :class:`bytes` "
"before compressing and decompressing:"
msgstr ""
"Модуль :mod:`gzip` також отримує функції :func:`~gzip.compress` і :func:"
"`~gzip.decompress` для полегшення стиснення та розпакування в пам’яті. Майте "
"на увазі, що текст має бути закодований як :class:`bytes` перед стисненням і "
"розпакуванням:"

msgid ""
"(Contributed by Anand B. Pillai in :issue:`3488`; and by Antoine Pitrou, Nir "
"Aides and Brian Curtin in :issue:`9962`, :issue:`1675951`, :issue:`7471` "
"and :issue:`2846`.)"
msgstr ""
"(Надано Анандом Б. Піллаєм у :issue:`3488`; і Антуаном Пітру, Ніром Ейдесом "
"і Браяном Кертіном у :issue:`9962`, :issue:`1675951`, :issue:`7471` та :"
"issue: \"2846\".)"

msgid ""
"Also, the :class:`zipfile.ZipExtFile` class was reworked internally to "
"represent files stored inside an archive.  The new implementation is "
"significantly faster and can be wrapped in an :class:`io.BufferedReader` "
"object for more speedups.  It also solves an issue where interleaved calls "
"to *read* and *readline* gave the wrong results."
msgstr ""
"Крім того, клас :class:`zipfile.ZipExtFile` було внутрішньо перероблено для "
"представлення файлів, що зберігаються в архіві. Нова реалізація є значно "
"швидшою та може бути упакована в об’єкт :class:`io.BufferedReader` для "
"більшого прискорення. Це також вирішує проблему, через яку чергувані виклики "
"*read* і *readline* давали неправильні результати."

msgid "(Patch submitted by Nir Aides in :issue:`7610`.)"
msgstr "(Патч надіслано Nir Aides у :issue:`7610`.)"

msgid "tarfile"
msgstr "tarfile"

msgid ""
"The :class:`~tarfile.TarFile` class can now be used as a context manager.  "
"In addition, its :meth:`~tarfile.TarFile.add` method has a new option, "
"*filter*, that controls which files are added to the archive and allows the "
"file metadata to be edited."
msgstr ""
"Клас :class:`~tarfile.TarFile` тепер можна використовувати як менеджер "
"контексту. Крім того, його метод :meth:`~tarfile.TarFile.add` має новий "
"параметр, *filter*, який контролює, які файли додаються до архіву, і "
"дозволяє редагувати метадані файлу."

msgid ""
"The new *filter* option replaces the older, less flexible *exclude* "
"parameter which is now deprecated.  If specified, the optional *filter* "
"parameter needs to be a :term:`keyword argument`.  The user-supplied filter "
"function accepts a :class:`~tarfile.TarInfo` object and returns an updated :"
"class:`~tarfile.TarInfo` object, or if it wants the file to be excluded, the "
"function can return ``None``::"
msgstr ""
"Новий параметр *фільтр* замінює старіший, менш гнучкий параметр *exclude*, "
"який зараз є застарілим. Якщо вказано, необов’язковий параметр *filter* має "
"бути аргументом ключового слова (:term:`keyword argument`). Функція фільтра, "
"надана користувачем, приймає об’єкт :class:`~tarfile.TarInfo` і повертає "
"оновлений об’єкт :class:`~tarfile.TarInfo`, або якщо вона хоче, щоб файл "
"було виключено, функція може повернути ``None``::"

msgid ""
"(Proposed by Tarek Ziadé and implemented by Lars Gustäbel in :issue:`6856`.)"
msgstr ""
"(Запропоновано Тареком Зіаді та реалізовано Ларсом Густебелем у :issue:"
"`6856`.)"

msgid "hashlib"
msgstr "хешліб"

msgid ""
"The :mod:`hashlib` module has two new constant attributes listing the "
"hashing algorithms guaranteed to be present in all implementations and those "
"available on the current implementation::"
msgstr ""
"Модуль :mod:`hashlib` має два нові постійні атрибути, які перераховують "
"алгоритми хешування, які гарантовано присутні в усіх реалізаціях, і доступні "
"в поточній реалізації:"

msgid "(Suggested by Carl Chenet in :issue:`7418`.)"
msgstr "(Запропоновано Карлом Чене в :issue:`7418`.)"

msgid "ast"
msgstr "аст"

msgid ""
"The :mod:`ast` module has a wonderful a general-purpose tool for safely "
"evaluating expression strings using the Python literal syntax.  The :func:"
"`ast.literal_eval` function serves as a secure alternative to the builtin :"
"func:`eval` function which is easily abused.  Python 3.2 adds :class:`bytes` "
"and :class:`set` literals to the list of supported types: strings, bytes, "
"numbers, tuples, lists, dicts, sets, booleans, and ``None``."
msgstr ""
"Модуль :mod:`ast` має чудовий інструмент загального призначення для "
"безпечної оцінки рядків виразів за допомогою синтаксису літералів Python. "
"Функція :func:`ast.literal_eval` служить безпечною альтернативою вбудованій "
"функції :func:`eval`, якою легко зловживати. Python 3.2 додає літерали :"
"class:`bytes` і :class:`set` до списку підтримуваних типів: рядки, байти, "
"числа, кортежі, списки, dicts, набори, логічні значення та ``None``."

msgid "(Implemented by Benjamin Peterson and Georg Brandl.)"
msgstr "(Реалізовано Бенджаміном Петерсоном і Георгом Брандлом.)"

msgid "os"
msgstr "ос"

msgid ""
"Different operating systems use various encodings for filenames and "
"environment variables.  The :mod:`os` module provides two new functions, :"
"func:`~os.fsencode` and :func:`~os.fsdecode`, for encoding and decoding "
"filenames:"
msgstr ""
"Різні операційні системи використовують різні кодування для імен файлів і "
"змінних середовища. Модуль :mod:`os` надає дві нові функції, :func:`~os."
"fsencode` і :func:`~os.fsdecode`, для кодування та декодування імен файлів:"

msgid ""
"Some operating systems allow direct access to encoded bytes in the "
"environment.  If so, the :attr:`os.supports_bytes_environ` constant will be "
"true."
msgstr ""
"Деякі операційні системи дозволяють прямий доступ до закодованих байтів у "
"середовищі. Якщо так, константа :attr:`os.supports_bytes_environ` буде "
"істинною."

msgid ""
"For direct access to encoded environment variables (if available), use the "
"new :func:`os.getenvb` function or use :data:`os.environb` which is a bytes "
"version of :data:`os.environ`."
msgstr ""
"Для прямого доступу до закодованих змінних середовища (якщо доступно) "
"використовуйте нову функцію :func:`os.getenvb` або використовуйте :data:`os."
"environb`, яка є байтовою версією :data:`os.environ`."

msgid "(Contributed by Victor Stinner.)"
msgstr "(Надав Віктор Стіннер.)"

msgid "shutil"
msgstr "шутил"

msgid "The :func:`shutil.copytree` function has two new options:"
msgstr "Функція :func:`shutil.copytree` має дві нові опції:"

msgid ""
"*ignore_dangling_symlinks*: when ``symlinks=False`` so that the function "
"copies a file pointed to by a symlink, not the symlink itself. This option "
"will silence the error raised if the file doesn't exist."
msgstr ""
"*ignore_dangling_symlinks*: коли ``symlinks=False``, щоб функція копіювала "
"файл, на який вказує символічне посилання, а не саме символічне посилання. "
"Цей параметр заглушить повідомлення про помилку, якщо файл не існує."

msgid ""
"*copy_function*: is a callable that will be used to copy files. :func:"
"`shutil.copy2` is used by default."
msgstr ""
"*copy_function*: це виклик, який використовуватиметься для копіювання "
"файлів. :func:`shutil.copy2` використовується за умовчанням."

msgid "(Contributed by Tarek Ziadé.)"
msgstr "(Надав Тарек Зіаде.)"

msgid ""
"In addition, the :mod:`shutil` module now supports :ref:`archiving "
"operations <archiving-operations>` for zipfiles, uncompressed tarfiles, "
"gzipped tarfiles, and bzipped tarfiles.  And there are functions for "
"registering additional archiving file formats (such as xz compressed "
"tarfiles or custom formats)."
msgstr ""
"Крім того, модуль :mod:`shutil` тепер підтримує :ref:`операції архівування "
"<archiving-operations>` для файлів zip, нестиснутих tar-файлів, tar-файлів "
"gzip і tar-файлів bzip. Існують функції для реєстрації додаткових форматів "
"архівних файлів (таких як стиснуті tar-файли xz або спеціальні формати)."

msgid ""
"The principal functions are :func:`~shutil.make_archive` and :func:`~shutil."
"unpack_archive`.  By default, both operate on the current directory (which "
"can be set by :func:`os.chdir`) and on any sub-directories. The archive "
"filename needs to be specified with a full pathname.  The archiving step is "
"non-destructive (the original files are left unchanged)."
msgstr ""
"Основними функціями є :func:`~shutil.make_archive` і :func:`~shutil."
"unpack_archive`. За замовчуванням обидва працюють з поточним каталогом (який "
"можна встановити за допомогою :func:`os.chdir`) і будь-якими підкаталогами. "
"Ім’я файлу архіву має бути вказано з повним шляхом. Етап архівування є "
"неруйнівним (оригінальні файли залишаються без змін)."

msgid "sqlite3"
msgstr "sqlite3"

msgid ""
"The :mod:`sqlite3` module was updated to pysqlite version 2.6.0.  It has two "
"new capabilities."
msgstr ""
"Модуль :mod:`sqlite3` оновлено до версії pysqlite 2.6.0. Він має дві нові "
"можливості."

msgid ""
"The :attr:`sqlite3.Connection.in_transit` attribute is true if there is an "
"active transaction for uncommitted changes."
msgstr ""
"Атрибут :attr:`sqlite3.Connection.in_transit` має значення true, якщо є "
"активна транзакція для незафіксованих змін."

msgid ""
"The :meth:`sqlite3.Connection.enable_load_extension` and :meth:`sqlite3."
"Connection.load_extension` methods allows you to load SQLite extensions from "
"\".so\" files.  One well-known extension is the fulltext-search extension "
"distributed with SQLite."
msgstr ""
"Методи :meth:`sqlite3.Connection.enable_load_extension` і :meth:`sqlite3."
"Connection.load_extension` дозволяють завантажувати розширення SQLite з "
"файлів \".so\". Одним із відомих розширень є розширення повнотекстового "
"пошуку, що поширюється разом із SQLite."

msgid "(Contributed by R. David Murray and Shashwat Anand; :issue:`8845`.)"
msgstr "(Надано Р. Девідом Мюрреєм і Шашватом Анандом; :issue:`8845`.)"

msgid "html"
msgstr "html"

msgid ""
"A new :mod:`html` module was introduced with only a single function, :func:"
"`~html.escape`, which is used for escaping reserved characters from HTML "
"markup:"
msgstr ""
"Представлено новий модуль :mod:`html` лише з однією функцією, :func:`~html."
"escape`, яка використовується для екранування зарезервованих символів із "
"розмітки HTML:"

msgid "socket"
msgstr "гніздо"

msgid "The :mod:`socket` module has two new improvements."
msgstr "Модуль :mod:`socket` має два нових покращення."

msgid ""
"Socket objects now have a :meth:`~socket.socket.detach()` method which puts "
"the socket into closed state without actually closing the underlying file "
"descriptor.  The latter can then be reused for other purposes. (Added by "
"Antoine Pitrou; :issue:`8524`.)"
msgstr ""
"Об’єкти Socket тепер мають метод :meth:`~socket.socket.detach()`, який "
"переводить сокет у закритий стан без фактичного закриття основного "
"дескриптора файлу. Останній потім можна повторно використовувати для інших "
"цілей. (Додав Антуан Пітру; :issue:`8524`.)"

msgid ""
":func:`socket.create_connection` now supports the context management "
"protocol to unconditionally consume :exc:`socket.error` exceptions and to "
"close the socket when done. (Contributed by Giampaolo Rodolà; :issue:`9794`.)"
msgstr ""
":func:`socket.create_connection` тепер підтримує протокол керування "
"контекстом для безумовного використання винятків :exc:`socket.error` і "
"закриття сокета після завершення. (Надав Джампаоло Родола; :issue:`9794`.)"

msgid "ssl"
msgstr "ssl"

msgid ""
"The :mod:`ssl` module added a number of features to satisfy common "
"requirements for secure (encrypted, authenticated) internet connections:"
msgstr ""
"Модуль :mod:`ssl` додав низку функцій, щоб задовольнити загальні вимоги до "
"безпечних (зашифрованих, автентифікованих) інтернет-з’єднань:"

msgid ""
"A new class, :class:`~ssl.SSLContext`, serves as a container for persistent "
"SSL data, such as protocol settings, certificates, private keys, and various "
"other options. It includes a :meth:`~ssl.SSLContext.wrap_socket` for "
"creating an SSL socket from an SSL context."
msgstr ""
"Новий клас, :class:`~ssl.SSLContext`, служить контейнером для постійних "
"даних SSL, таких як налаштування протоколу, сертифікати, приватні ключі та "
"різні інші параметри. Він містить :meth:`~ssl.SSLContext.wrap_socket` для "
"створення SSL-сокета з контексту SSL."

msgid ""
"A new function, :func:`ssl.match_hostname`, supports server identity "
"verification for higher-level protocols by implementing the rules of HTTPS "
"(from :rfc:`2818`) which are also suitable for other protocols."
msgstr ""
"Нова функція, :func:`ssl.match_hostname`, підтримує перевірку ідентичності "
"сервера для протоколів вищого рівня, реалізуючи правила HTTPS (від :rfc:"
"`2818`), які також підходять для інших протоколів."

msgid ""
"The :func:`ssl.wrap_socket` constructor function now takes a *ciphers* "
"argument.  The *ciphers* string lists the allowed encryption algorithms "
"using the format described in the `OpenSSL documentation <https://www."
"openssl.org/docs/man1.0.2/man1/ciphers.html#CIPHER-LIST-FORMAT>`__."
msgstr ""

msgid ""
"When linked against recent versions of OpenSSL, the :mod:`ssl` module now "
"supports the Server Name Indication extension to the TLS protocol, allowing "
"multiple \"virtual hosts\" using different certificates on a single IP port. "
"This extension is only supported in client mode, and is activated by passing "
"the *server_hostname* argument to :meth:`ssl.SSLContext.wrap_socket`."
msgstr ""
"При зв’язуванні з останніми версіями OpenSSL модуль :mod:`ssl` тепер "
"підтримує розширення індикації імені сервера для протоколу TLS, дозволяючи "
"кільком \"віртуальним хостам\" використовувати різні сертифікати на одному "
"IP-порту. Це розширення підтримується лише в режимі клієнта та активується "
"шляхом передачі аргументу *server_hostname* до :meth:`ssl.SSLContext."
"wrap_socket`."

msgid ""
"Various options have been added to the :mod:`ssl` module, such as :data:"
"`~ssl.OP_NO_SSLv2` which disables the insecure and obsolete SSLv2 protocol."
msgstr ""
"До модуля :mod:`ssl` додано різні параметри, наприклад :data:`~ssl."
"OP_NO_SSLv2`, який вимикає небезпечний і застарілий протокол SSLv2."

msgid ""
"The extension now loads all the OpenSSL ciphers and digest algorithms.  If "
"some SSL certificates cannot be verified, they are reported as an \"unknown "
"algorithm\" error."
msgstr ""
"Розширення тепер завантажує всі шифри OpenSSL і алгоритми дайджесту. Якщо "
"деякі сертифікати SSL неможливо перевірити, вони повідомляються як помилка "
"\"невідомий алгоритм\"."

msgid ""
"The version of OpenSSL being used is now accessible using the module "
"attributes :data:`ssl.OPENSSL_VERSION` (a string), :data:`ssl."
"OPENSSL_VERSION_INFO` (a 5-tuple), and :data:`ssl.OPENSSL_VERSION_NUMBER` "
"(an integer)."
msgstr ""
"Версія OpenSSL, яка використовується, тепер доступна за допомогою атрибутів "
"модуля: :data:`ssl.OPENSSL_VERSION` (рядок), :data:`ssl."
"OPENSSL_VERSION_INFO` (кортеж з 5) і :data:`ssl.OPENSSL_VERSION_NUMBER` "
"(ціле число)."

msgid ""
"(Contributed by Antoine Pitrou in :issue:`8850`, :issue:`1589`, :issue:"
"`8322`, :issue:`5639`, :issue:`4870`, :issue:`8484`, and :issue:`8321`.)"
msgstr ""
"(Надав Антуан Пітру в :issue:`8850`, :issue:`1589`, :issue:`8322`, :issue:"
"`5639`, :issue:`4870`, :issue:`8484` та :issue:`8321`.)"

msgid "nntp"
msgstr "nntp"

msgid ""
"The :mod:`nntplib` module has a revamped implementation with better bytes "
"and text semantics as well as more practical APIs.  These improvements break "
"compatibility with the nntplib version in Python 3.1, which was partly "
"dysfunctional in itself."
msgstr ""
"Модуль :mod:`nntplib` має оновлену реалізацію з кращими байтами та текстовою "
"семантикою, а також більш практичними API. Ці вдосконалення порушують "
"сумісність із версією nntplib у Python 3.1, яка сама по собі була частково "
"нефункціональною."

msgid ""
"Support for secure connections through both implicit (using :class:`nntplib."
"NNTP_SSL`) and explicit (using :meth:`nntplib.NNTP.starttls`) TLS has also "
"been added."
msgstr ""
"Також додано підтримку безпечних з’єднань через неявний (з використанням :"
"class:`nntplib.NNTP_SSL`) і явний (з використанням :meth:`nntplib.NNTP."
"starttls`) TLS."

msgid ""
"(Contributed by Antoine Pitrou in :issue:`9360` and Andrew Vant in :issue:"
"`1926`.)"
msgstr ""
"(Надано Антуаном Пітру в :issue:`9360` та Ендрю Вантом у :issue:`1926`.)"

msgid "certificates"
msgstr "сертифікати"

msgid ""
":class:`http.client.HTTPSConnection`, :class:`urllib.request.HTTPSHandler` "
"and :func:`urllib.request.urlopen` now take optional arguments to allow for "
"server certificate checking against a set of Certificate Authorities, as "
"recommended in public uses of HTTPS."
msgstr ""
":class:`http.client.HTTPSConnection`, :class:`urllib.request.HTTPSHandler` "
"і :func:`urllib.request.urlopen` тепер приймають додаткові аргументи, щоб "
"дозволити перевірку сертифіката сервера за набором центрів сертифікації, як "
"рекомендовано для публічного використання HTTPS."

msgid "(Added by Antoine Pitrou, :issue:`9003`.)"
msgstr "(Додав Антуан Пітру, :issue:`9003`.)"

msgid "imaplib"
msgstr "імапліб"

msgid ""
"Support for explicit TLS on standard IMAP4 connections has been added "
"through the new :mod:`imaplib.IMAP4.starttls` method."
msgstr ""
"Підтримку явного TLS у стандартних підключеннях IMAP4 додано за допомогою "
"нового методу :mod:`imaplib.IMAP4.starttls`."

msgid "(Contributed by Lorenzo M. Catucci and Antoine Pitrou, :issue:`4471`.)"
msgstr "(Надано Лоренцо М. Катуччі та Антуаном Пітру, :issue:`4471`.)"

msgid "http.client"
msgstr "http.client"

msgid ""
"There were a number of small API improvements in the :mod:`http.client` "
"module. The old-style HTTP 0.9 simple responses are no longer supported and "
"the *strict* parameter is deprecated in all classes."
msgstr ""
"У модулі :mod:`http.client` було внесено ряд невеликих покращень API. Прості "
"відповіді HTTP 0.9 старого стилю більше не підтримуються, а параметр "
"*strict* застарів у всіх класах."

msgid ""
"The :class:`~http.client.HTTPConnection` and :class:`~http.client."
"HTTPSConnection` classes now have a *source_address* parameter for a (host, "
"port) tuple indicating where the HTTP connection is made from."
msgstr ""
"Класи :class:`~http.client.HTTPConnection` і :class:`~http.client."
"HTTPSConnection` тепер мають параметр *source_address* для кортежу (хост, "
"порт), який вказує, звідки здійснюється HTTP-з’єднання."

msgid ""
"Support for certificate checking and HTTPS virtual hosts were added to :"
"class:`~http.client.HTTPSConnection`."
msgstr ""
"До :class:`~http.client.HTTPSConnection` додано підтримку перевірки "
"сертифікатів і віртуальних хостів HTTPS."

msgid ""
"The :meth:`~http.client.HTTPConnection.request` method on connection objects "
"allowed an optional *body* argument so that a :term:`file object` could be "
"used to supply the content of the request.  Conveniently, the *body* "
"argument now also accepts an :term:`iterable` object so long as it includes "
"an explicit ``Content-Length`` header.  This extended interface is much more "
"flexible than before."
msgstr ""
"Метод :meth:`~http.client.HTTPConnection.request` для об’єктів підключення "
"допускав необов’язковий аргумент *body*, щоб :term:`file object` міг "
"використовуватися для надання вмісту запиту. Зручно те, що аргумент *body* "
"тепер також приймає об’єкт :term:`iterable`, якщо він містить явний "
"заголовок ``Content-Length``. Цей розширений інтерфейс набагато гнучкіший, "
"ніж раніше."

msgid ""
"To establish an HTTPS connection through a proxy server, there is a new :"
"meth:`~http.client.HTTPConnection.set_tunnel` method that sets the host and "
"port for HTTP Connect tunneling."
msgstr ""
"Для встановлення з’єднання HTTPS через проксі-сервер існує новий метод :meth:"
"`~http.client.HTTPConnection.set_tunnel`, який встановлює хост і порт для "
"тунелювання HTTP-з’єднання."

msgid ""
"To match the behavior of :mod:`http.server`, the HTTP client library now "
"also encodes headers with ISO-8859-1 (Latin-1) encoding.  It was already "
"doing that for incoming headers, so now the behavior is consistent for both "
"incoming and outgoing traffic. (See work by Armin Ronacher in :issue:"
"`10980`.)"
msgstr ""
"Щоб відповідати поведінці :mod:`http.server`, клієнтська бібліотека HTTP "
"тепер також кодує заголовки з кодуванням ISO-8859-1 (Latin-1). Він уже робив "
"це для вхідних заголовків, тому тепер поведінка узгоджена як для вхідного, "
"так і для вихідного трафіку. (Див. роботу Арміна Ронашера в :issue:`10980`.)"

msgid "unittest"
msgstr "unittest"

msgid ""
"The unittest module has a number of improvements supporting test discovery "
"for packages, easier experimentation at the interactive prompt, new testcase "
"methods, improved diagnostic messages for test failures, and better method "
"names."
msgstr ""
"Модуль unittest має ряд удосконалень, які підтримують виявлення тестів для "
"пакетів, спрощені експерименти в інтерактивному запиті, нові методи "
"тестування, покращені діагностичні повідомлення про помилки тестів і кращі "
"назви методів."

msgid ""
"The command-line call ``python -m unittest`` can now accept file paths "
"instead of module names for running specific tests (:issue:`10620`).  The "
"new test discovery can find tests within packages, locating any test "
"importable from the top-level directory.  The top-level directory can be "
"specified with the ``-t`` option, a pattern for matching files with ``-p``, "
"and a directory to start discovery with ``-s``:"
msgstr ""

msgid "(Contributed by Michael Foord.)"
msgstr "(Надав Майкл Форд.)"

msgid ""
"Experimentation at the interactive prompt is now easier because the :class:"
"`unittest.case.TestCase` class can now be instantiated without arguments:"
msgstr ""
"Експериментувати в інтерактивній підказці тепер легше, оскільки екземпляр "
"класу :class:`unittest.case.TestCase` тепер можна створювати без аргументів:"

msgid ""
"The :mod:`unittest` module has two new methods, :meth:`~unittest.TestCase."
"assertWarns` and :meth:`~unittest.TestCase.assertWarnsRegex` to verify that "
"a given warning type is triggered by the code under test::"
msgstr ""
"Модуль :mod:`unittest` має два нові методи, :meth:`~unittest.TestCase."
"assertWarns` і :meth:`~unittest.TestCase.assertWarnsRegex` для перевірки "
"того, що певний тип попередження викликано кодом, що тестується ::"

msgid "(Contributed by Antoine Pitrou, :issue:`9754`.)"
msgstr "(Надав Антуан Пітру, :issue:`9754`.)"

msgid ""
"Another new method, :meth:`~unittest.TestCase.assertCountEqual` is used to "
"compare two iterables to determine if their element counts are equal "
"(whether the same elements are present with the same number of occurrences "
"regardless of order)::"
msgstr ""
"Інший новий метод, :meth:`~unittest.TestCase.assertCountEqual`, "
"використовується для порівняння двох ітерацій, щоб визначити, чи є їх "
"кількість елементів рівною (чи однакові елементи присутні з однаковою "
"кількістю входжень незалежно від порядку):"

msgid ""
"A principal feature of the unittest module is an effort to produce "
"meaningful diagnostics when a test fails.  When possible, the failure is "
"recorded along with a diff of the output.  This is especially helpful for "
"analyzing log files of failed test runs. However, since diffs can sometime "
"be voluminous, there is a new :attr:`~unittest.TestCase.maxDiff` attribute "
"that sets maximum length of diffs displayed."
msgstr ""
"Основною особливістю модуля unittest є спроба створити значущу діагностику, "
"коли тест не вдається. Якщо це можливо, помилка записується разом із "
"різницею виходу. Це особливо корисно для аналізу файлів журналу невдалих "
"тестів. Однак, оскільки відмінності іноді можуть бути об’ємними, існує новий "
"атрибут :attr:`~unittest.TestCase.maxDiff`, який встановлює максимальну "
"довжину відображених відмінностей."

msgid ""
"In addition, the method names in the module have undergone a number of clean-"
"ups."
msgstr "Крім того, назви методів у модулі зазнали ряду очищень."

msgid ""
"For example, :meth:`~unittest.TestCase.assertRegex` is the new name for :"
"meth:`~unittest.TestCase.assertRegexpMatches` which was misnamed because the "
"test uses :func:`re.search`, not :func:`re.match`.  Other methods using "
"regular expressions are now named using short form \"Regex\" in preference "
"to \"Regexp\" -- this matches the names used in other unittest "
"implementations, matches Python's old name for the :mod:`re` module, and it "
"has unambiguous camel-casing."
msgstr ""
"Наприклад, :meth:`~unittest.TestCase.assertRegex` є новою назвою для :meth:"
"`~unittest.TestCase.assertRegexpMatches`, яке було неправильно названо, "
"оскільки тест використовує :func:`re.search`, а не :func:`re.match`. Інші "
"методи, які використовують регулярні вирази, тепер називаються за допомогою "
"короткої форми \"Regex\" замість \"Regexp\" — це відповідає назвам, які "
"використовуються в інших реалізаціях unittest, відповідає старій назві "
"Python для модуля :mod:`re` і має однозначне значення верблюжий кожух."

msgid "(Contributed by Raymond Hettinger and implemented by Ezio Melotti.)"
msgstr "(Надано Реймондом Геттінгером і реалізовано Еціо Мелотті.)"

msgid ""
"To improve consistency, some long-standing method aliases are being "
"deprecated in favor of the preferred names:"
msgstr ""
"Щоб покращити узгодженість, деякі давні псевдоніми методів застаріли на "
"користь бажаних імен:"

msgid "Old Name"
msgstr "Стара назва"

msgid "Preferred Name"
msgstr "Бажане ім'я"

msgid ":meth:`assert_`"
msgstr ":meth:`assert_`"

msgid ":meth:`.assertTrue`"
msgstr ":meth:`.assertTrue`"

msgid ":meth:`assertEquals`"
msgstr ":meth:`assertEquals`"

msgid ":meth:`.assertEqual`"
msgstr ":meth:`.assertEqual`"

msgid ":meth:`assertNotEquals`"
msgstr ":meth:`assertNotEquals`"

msgid ":meth:`.assertNotEqual`"
msgstr ":meth:`.assertNotEqual`"

msgid ":meth:`assertAlmostEquals`"
msgstr ":meth:`assertAlmostEquals`"

msgid ":meth:`.assertAlmostEqual`"
msgstr ":meth:`.assertAlmostEqual`"

msgid ":meth:`assertNotAlmostEquals`"
msgstr ":meth:`assertNotAlmostEquals`"

msgid ":meth:`.assertNotAlmostEqual`"
msgstr ":meth:`.assertNotAlmostEqual`"

msgid ""
"Likewise, the ``TestCase.fail*`` methods deprecated in Python 3.1 are "
"expected to be removed in Python 3.3.  Also see the :ref:`deprecated-"
"aliases` section in the :mod:`unittest` documentation."
msgstr ""
"Так само очікується, що методи ``TestCase.fail*``, застарілі в Python 3.1, "
"будуть видалені в Python 3.3. Також перегляньте розділ :ref:`deprecated-"
"aliases` в документації :mod:`unittest`."

msgid "(Contributed by Ezio Melotti; :issue:`9424`.)"
msgstr "(Надав Еціо Мелотті; :issue:`9424`.)"

msgid ""
"The :meth:`~unittest.TestCase.assertDictContainsSubset` method was "
"deprecated because it was misimplemented with the arguments in the wrong "
"order.  This created hard-to-debug optical illusions where tests like "
"``TestCase().assertDictContainsSubset({'a':1, 'b':2}, {'a':1})`` would fail."
msgstr ""
"Метод :meth:`~unittest.TestCase.assertDictContainsSubset` визнано "
"застарілим, оскільки його неправильно реалізовано з аргументами в "
"неправильному порядку. Це створювало оптичні ілюзії, які важко налагодити, "
"коли такі тести, як ``TestCase().assertDictContainsSubset({'a':1, 'b':2}, "
"{'a':1})`` не давали результатів."

msgid "random"
msgstr "випадковий"

msgid ""
"The integer methods in the :mod:`random` module now do a better job of "
"producing uniform distributions.  Previously, they computed selections with "
"``int(n*random())`` which had a slight bias whenever *n* was not a power of "
"two. Now, multiple selections are made from a range up to the next power of "
"two and a selection is kept only when it falls within the range ``0 <= x < "
"n``.  The functions and methods affected are :func:`~random.randrange`, :"
"func:`~random.randint`, :func:`~random.choice`, :func:`~random.shuffle` and :"
"func:`~random.sample`."
msgstr ""
"Цілочисельні методи в модулі :mod:`random` тепер краще справляються зі "
"створенням рівномірних розподілів. Раніше вони обчислювали вибірку за "
"допомогою ``int(n*random())``, яка мала невелике зміщення щоразу, коли *n* "
"не було ступенем двійки. Тепер вибір робиться з діапазону до наступного "
"ступеня двійки, і вибір зберігається лише тоді, коли він потрапляє в "
"діапазон ``0 <= x < n``. Зазначені функції та методи: :func:`~random."
"randrange`, :func:`~random.randint`, :func:`~random.choice`, :func:`~random."
"shuffle` і :func:`~випадкова.вибірка`."

msgid "(Contributed by Raymond Hettinger; :issue:`9025`.)"
msgstr "(Надав Реймонд Геттінгер; :issue:`9025`.)"

msgid "poplib"
msgstr "попліб"

msgid ""
":class:`~poplib.POP3_SSL` class now accepts a *context* parameter, which is "
"a :class:`ssl.SSLContext` object allowing bundling SSL configuration "
"options, certificates and private keys into a single (potentially long-"
"lived) structure."
msgstr ""
"Клас :class:`~poplib.POP3_SSL` тепер приймає параметр *context*, який є "
"об’єктом :class:`ssl.SSLContext`, який дозволяє об’єднувати параметри "
"конфігурації SSL, сертифікати та приватні ключі в єдину (потенційно "
"довговічну) структуру ."

msgid "(Contributed by Giampaolo Rodolà; :issue:`8807`.)"
msgstr "(Надав Джампаоло Родола; :issue:`8807`.)"

msgid "asyncore"
msgstr "несиндром"

msgid ""
":class:`asyncore.dispatcher` now provides a :meth:`~asyncore.dispatcher."
"handle_accepted()` method returning a ``(sock, addr)`` pair which is called "
"when a connection has actually been established with a new remote endpoint. "
"This is supposed to be used as a replacement for old :meth:`~asyncore."
"dispatcher.handle_accept()` and avoids the user  to call :meth:`~asyncore."
"dispatcher.accept()` directly."
msgstr ""

msgid "(Contributed by Giampaolo Rodolà; :issue:`6706`.)"
msgstr "(Надав Джампаоло Родола; :issue:`6706`.)"

msgid "tempfile"
msgstr "тимчасовий файл"

msgid ""
"The :mod:`tempfile` module has a new context manager, :class:`~tempfile."
"TemporaryDirectory` which provides easy deterministic cleanup of temporary "
"directories::"
msgstr ""
"Модуль :mod:`tempfile` має новий контекстний менеджер, :class:`~tempfile."
"TemporaryDirectory`, який забезпечує легке детерміноване очищення тимчасових "
"каталогів:"

msgid "(Contributed by Neil Schemenauer and Nick Coghlan; :issue:`5178`.)"
msgstr "(Надано Нілом Шеменауером і Ніком Когланом; :issue:`5178`.)"

msgid "inspect"
msgstr "оглядати"

msgid ""
"The :mod:`inspect` module has a new function :func:`~inspect."
"getgeneratorstate` to easily identify the current state of a generator-"
"iterator::"
msgstr ""
"Модуль :mod:`inspect` має нову функцію :func:`~inspect.getgeneratorstate` "
"для легкої ідентифікації поточного стану генератора-ітератора::"

msgid "(Contributed by Rodolpho Eckhardt and Nick Coghlan, :issue:`10220`.)"
msgstr "(Надано Родольфо Екхардтом і Ніком Когланом, :issue:`10220`.)"

msgid ""
"To support lookups without the possibility of activating a dynamic "
"attribute, the :mod:`inspect` module has a new function, :func:`~inspect."
"getattr_static`. Unlike :func:`hasattr`, this is a true read-only search, "
"guaranteed not to change state while it is searching::"
msgstr ""
"Для підтримки пошуку без можливості активації динамічного атрибута модуль :"
"mod:`inspect` має нову функцію :func:`~inspect.getattr_static`. На відміну "
"від :func:`hasattr`, це справжній пошук лише для читання, який гарантовано "
"не змінює стан під час пошуку::"

msgid "pydoc"
msgstr "pydoc"

msgid ""
"The :mod:`pydoc` module now provides a much-improved web server interface, "
"as well as a new command-line option ``-b`` to automatically open a browser "
"window to display that server:"
msgstr ""
"Модуль :mod:`pydoc` тепер надає значно покращений інтерфейс веб-сервера, а "
"також новий параметр командного рядка ``-b`` для автоматичного відкриття "
"вікна браузера для відображення цього сервера:"

msgid "(Contributed by Ron Adam; :issue:`2001`.)"
msgstr "(Надав Рон Адам; :issue:`2001`.)"

msgid "dis"
msgstr "дис"

msgid ""
"The :mod:`dis` module gained two new functions for inspecting code, :func:"
"`~dis.code_info` and :func:`~dis.show_code`.  Both provide detailed code "
"object information for the supplied function, method, source code string or "
"code object.  The former returns a string and the latter prints it::"
msgstr ""
"Модуль :mod:`dis` отримав дві нові функції для перевірки коду, :func:`~dis."
"code_info` і :func:`~dis.show_code`. Обидва надають детальну інформацію про "
"об’єкт коду для наданої функції, методу, рядка вихідного коду або об’єкта "
"коду. Перший повертає рядок, а другий друкує його::"

msgid ""
"In addition, the :func:`~dis.dis` function now accepts string arguments so "
"that the common idiom ``dis(compile(s, '', 'eval'))`` can be shortened to "
"``dis(s)``::"
msgstr ""
"Крім того, функція :func:`~dis.dis` тепер приймає рядкові аргументи, щоб "
"загальну ідіому ``dis(compile(s, '', 'eval'))`` можна було скоротити до "
"``dis(s) )``::"

msgid ""
"Taken together, these improvements make it easier to explore how CPython is "
"implemented and to see for yourself what the language syntax does under-the-"
"hood."
msgstr ""
"У сукупності ці вдосконалення полегшують вивчення того, як реалізовано "
"CPython, і на власні очі побачити, що робить синтаксис мови під капотом."

msgid "(Contributed by Nick Coghlan in :issue:`9147`.)"
msgstr "(Надав Нік Коглан у :issue:`9147`.)"

msgid "dbm"
msgstr "dbm"

msgid ""
"All database modules now support the :meth:`get` and :meth:`setdefault` "
"methods."
msgstr ""
"Усі модулі бази даних тепер підтримують методи :meth:`get` і :meth:"
"`setdefault`."

msgid "(Suggested by Ray Allen in :issue:`9523`.)"
msgstr "(Запропоновано Реєм Алленом у :issue:`9523`.)"

msgid "ctypes"
msgstr "ctypes"

msgid ""
"A new type, :class:`ctypes.c_ssize_t` represents the C :c:type:`ssize_t` "
"datatype."
msgstr ""
"Новий тип :class:`ctypes.c_ssize_t` представляє тип даних C :c:type:"
"`ssize_t`."

msgid "site"
msgstr "сайт"

msgid ""
"The :mod:`site` module has three new functions useful for reporting on the "
"details of a given Python installation."
msgstr ""
"Модуль :mod:`site` має три нові функції, корисні для звітування про деталі "
"певної інсталяції Python."

msgid ""
":func:`~site.getsitepackages` lists all global site-packages directories."
msgstr ""
":func:`~site.getsitepackages` містить список усіх глобальних каталогів "
"пакетів сайту."

msgid ""
":func:`~site.getuserbase` reports on the user's base directory where data "
"can be stored."
msgstr ""
":func:`~site.getuserbase` повідомляє про базовий каталог користувача, де "
"можуть зберігатися дані."

msgid ""
":func:`~site.getusersitepackages` reveals the user-specific site-packages "
"directory path."
msgstr ""
":func:`~site.getusersitepackages` показує шлях до каталогу пакетів сайтів "
"для користувача."

msgid ""
"Conveniently, some of site's functionality is accessible directly from the "
"command-line:"
msgstr ""
"Зручно те, що деякі функції сайту доступні безпосередньо з командного рядка:"

msgid "(Contributed by Tarek Ziadé in :issue:`6693`.)"
msgstr "(Надав Тарек Зіаде в :issue:`6693`.)"

msgid "sysconfig"
msgstr "sysconfig"

msgid ""
"The new :mod:`sysconfig` module makes it straightforward to discover "
"installation paths and configuration variables that vary across platforms "
"and installations."
msgstr ""
"Новий модуль :mod:`sysconfig` дозволяє легко знаходити шляхи встановлення та "
"змінні конфігурації, які різняться залежно від платформи та встановлення."

msgid ""
"The module offers access simple access functions for platform and version "
"information:"
msgstr ""
"Модуль пропонує прості функції доступу до інформації про платформу та версію:"

msgid ""
":func:`~sysconfig.get_platform` returning values like *linux-i586* or "
"*macosx-10.6-ppc*."
msgstr ""
":func:`~sysconfig.get_platform` повертає такі значення, як *linux-i586* або "
"*macosx-10.6-ppc*."

msgid ""
":func:`~sysconfig.get_python_version` returns a Python version string such "
"as \"3.2\"."
msgstr ""
":func:`~sysconfig.get_python_version` повертає рядок версії Python, "
"наприклад \"3.2\"."

msgid ""
"It also provides access to the paths and variables corresponding to one of "
"seven named schemes used by :mod:`distutils`.  Those include *posix_prefix*, "
"*posix_home*, *posix_user*, *nt*, *nt_user*, *os2*, *os2_home*:"
msgstr ""
"Він також надає доступ до шляхів і змінних, що відповідають одній із семи "
"названих схем, які використовує :mod:`distutils`. До них належать "
"*posix_prefix*, *posix_home*, *posix_user*, *nt*, *nt_user*, *os2*, "
"*os2_home*:"

msgid ""
":func:`~sysconfig.get_paths` makes a dictionary containing installation "
"paths for the current installation scheme."
msgstr ""
":func:`~sysconfig.get_paths` створює словник, що містить шляхи встановлення "
"для поточної схеми встановлення."

msgid ""
":func:`~sysconfig.get_config_vars` returns a dictionary of platform specific "
"variables."
msgstr ""
":func:`~sysconfig.get_config_vars` повертає словник специфічних змінних "
"платформи."

msgid "There is also a convenient command-line interface:"
msgstr "Також є зручний інтерфейс командного рядка:"

msgid "(Moved out of Distutils by Tarek Ziadé.)"
msgstr "(Виведено з Distutils Тареком Зіаде.)"

msgid "pdb"
msgstr "pdb"

msgid ""
"The :mod:`pdb` debugger module gained a number of usability improvements:"
msgstr ""
"Модуль налагоджувача :mod:`pdb` отримав низку покращень зручності "
"використання:"

msgid ""
":file:`pdb.py` now has a ``-c`` option that executes commands as given in a :"
"file:`.pdbrc` script file."
msgstr ""
":file:`pdb.py` тепер має опцію ``-c``, яка виконує команди, подані у файлі "
"сценарію :file:`.pdbrc`."

msgid ""
"A :file:`.pdbrc` script file can contain ``continue`` and ``next`` commands "
"that continue debugging."
msgstr ""
"Файл сценарію :file:`.pdbrc` може містити команди ``continue`` і ``next``, "
"які продовжують налагодження."

msgid "The :class:`Pdb` class constructor now accepts a *nosigint* argument."
msgstr "Конструктор класу :class:`Pdb` тепер приймає аргумент *nosigint*."

msgid ""
"New commands: ``l(list)``, ``ll(long list)`` and ``source`` for listing "
"source code."
msgstr ""
"Нові команди: ``l(list)``, ``ll(long list)`` і ``source`` для переліку "
"вихідного коду."

msgid ""
"New commands: ``display`` and ``undisplay`` for showing or hiding the value "
"of an expression if it has changed."
msgstr ""
"Нові команди: ``display`` і ``undisplay`` для показу або приховання значення "
"виразу, якщо воно змінилося."

msgid ""
"New command: ``interact`` for starting an interactive interpreter containing "
"the global and local  names found in the current scope."
msgstr ""
"Нова команда: ``interact`` для запуску інтерактивного інтерпретатора, що "
"містить глобальні та локальні імена, знайдені в поточній області."

msgid "Breakpoints can be cleared by breakpoint number."
msgstr "Точки зупину можна очистити за номером точки зупину."

msgid "(Contributed by Georg Brandl, Antonio Cuni and Ilya Sandler.)"
msgstr "(Надано Георгом Брандлом, Антоніо Куні та Іллею Сендлером.)"

msgid "configparser"
msgstr "аналізатор конфігурації"

msgid ""
"The :mod:`configparser` module was modified to improve usability and "
"predictability of the default parser and its supported INI syntax.  The old :"
"class:`ConfigParser` class was removed in favor of :class:`SafeConfigParser` "
"which has in turn been renamed to :class:`~configparser.ConfigParser`. "
"Support for inline comments is now turned off by default and section or "
"option duplicates are not allowed in a single configuration source."
msgstr ""
"Модуль :mod:`configparser` було змінено, щоб покращити зручність і "
"передбачуваність синтаксичного аналізатора за замовчуванням і його "
"підтримуваного синтаксису INI. Старий клас :class:`ConfigParser` було "
"видалено на користь :class:`SafeConfigParser`, який, у свою чергу, було "
"перейменовано на :class:`~configparser.ConfigParser`. Підтримку вбудованих "
"коментарів тепер вимкнено за замовчуванням, а дублікати розділів або "
"параметрів не допускаються в одному джерелі конфігурації."

msgid "Config parsers gained a new API based on the mapping protocol::"
msgstr ""
"Конфігураційні аналізатори отримали новий API на основі протоколу "
"відображення:"

msgid ""
"The new API is implemented on top of the classical API, so custom parser "
"subclasses should be able to use it without modifications."
msgstr ""
"Новий API реалізовано поверх класичного API, тому користувацькі підкласи "
"парсерів повинні мати можливість використовувати його без змін."

msgid ""
"The INI file structure accepted by config parsers can now be customized. "
"Users can specify alternative option/value delimiters and comment prefixes, "
"change the name of the *DEFAULT* section or switch the interpolation syntax."
msgstr ""
"Тепер можна налаштувати структуру INI-файлу, прийняту аналізаторами "
"конфігурації. Користувачі можуть вказати альтернативні роздільники "
"параметрів/значень і префікси коментарів, змінити назву розділу *DEFAULT* "
"або змінити синтаксис інтерполяції."

msgid ""
"There is support for pluggable interpolation including an additional "
"interpolation handler :class:`~configparser.ExtendedInterpolation`::"
msgstr ""
"Існує підтримка вбудованої інтерполяції, включаючи додатковий обробник "
"інтерполяції :class:`~configparser.ExtendedInterpolation`::"

msgid ""
"A number of smaller features were also introduced, like support for "
"specifying encoding in read operations, specifying fallback values for get-"
"functions, or reading directly from dictionaries and strings."
msgstr ""
"Також було введено низку менших функцій, як-от підтримка визначення "
"кодування в операціях читання, визначення резервних значень для функцій get "
"або читання безпосередньо зі словників і рядків."

msgid "(All changes contributed by Łukasz Langa.)"
msgstr "(Усі зміни внесено Łukasz Langa.)"

msgid "urllib.parse"
msgstr "urllib.parse"

msgid ""
"A number of usability improvements were made for the :mod:`urllib.parse` "
"module."
msgstr ""
"Для модуля :mod:`urllib.parse` було зроблено ряд покращень зручності "
"використання."

msgid ""
"The :func:`~urllib.parse.urlparse` function now supports `IPv6 <https://en."
"wikipedia.org/wiki/IPv6>`_ addresses as described in :rfc:`2732`:"
msgstr ""
"Функція :func:`~urllib.parse.urlparse` тепер підтримує адреси `IPv6 <https://"
"en.wikipedia.org/wiki/IPv6>`_, як описано в :rfc:`2732`:"

msgid ""
"The :func:`~urllib.parse.urldefrag` function now returns a :term:`named "
"tuple`::"
msgstr ""
"Функція :func:`~urllib.parse.urldefrag` тепер повертає :term:`named tuple`::"

msgid ""
"And, the :func:`~urllib.parse.urlencode` function is now much more flexible, "
"accepting either a string or bytes type for the *query* argument.  If it is "
"a string, then the *safe*, *encoding*, and *error* parameters are sent to :"
"func:`~urllib.parse.quote_plus` for encoding::"
msgstr ""
"Крім того, функція :func:`~urllib.parse.urlencode` тепер набагато гнучкіша, "
"вона приймає рядковий або байтовий тип для аргументу *query*. Якщо це рядок, "
"параметри *safe*, *encoding* і *error* надсилаються до :func:`~urllib.parse."
"quote_plus` для кодування::"

msgid ""
"As detailed in :ref:`parsing-ascii-encoded-bytes`, all the :mod:`urllib."
"parse` functions now accept ASCII-encoded byte strings as input, so long as "
"they are not mixed with regular strings.  If ASCII-encoded byte strings are "
"given as parameters, the return types will also be an ASCII-encoded byte "
"strings:"
msgstr ""
"Як описано в :ref:`parsing-ascii-encoded-bytes`, усі функції :mod:`urllib."
"parse` тепер приймають рядки байтів у кодуванні ASCII як вхідні дані, якщо "
"вони не змішуються зі звичайними рядками. Якщо рядки байтів у кодуванні "
"ASCII подано як параметри, типи повернення також будуть рядками байтів у "
"кодуванні ASCII:"

msgid ""
"(Work by Nick Coghlan, Dan Mahn, and Senthil Kumaran in :issue:`2987`, :"
"issue:`5468`, and :issue:`9873`.)"
msgstr ""
"(Робота Ніка Коглана, Дена Мана та Сентіла Кумарана в :issue:`2987`, :issue:"
"`5468` та :issue:`9873`.)"

msgid "mailbox"
msgstr "поштова скринька"

msgid ""
"Thanks to a concerted effort by R. David Murray, the :mod:`mailbox` module "
"has been fixed for Python 3.2.  The challenge was that mailbox had been "
"originally designed with a text interface, but email messages are best "
"represented with :class:`bytes` because various parts of a message may have "
"different encodings."
msgstr ""
"Завдяки спільним зусиллям Р. Девіда Мюррея модуль :mod:`mailbox` було "
"виправлено для Python 3.2. Проблема полягала в тому, що поштова скринька "
"спочатку була розроблена з текстовим інтерфейсом, але повідомлення "
"електронної пошти найкраще представлено за допомогою :class:`bytes`, "
"оскільки різні частини повідомлення можуть мати різне кодування."

msgid ""
"The solution harnessed the :mod:`email` package's binary support for parsing "
"arbitrary email messages.  In addition, the solution required a number of "
"API changes."
msgstr ""
"Рішення використовувало бінарну підтримку пакета :mod:`email` для аналізу "
"довільних повідомлень електронної пошти. Крім того, рішення вимагало низки "
"змін API."

msgid ""
"As expected, the :meth:`~mailbox.Mailbox.add` method for :class:`mailbox."
"Mailbox` objects now accepts binary input."
msgstr ""
"Як і очікувалося, метод :meth:`~mailbox.Mailbox.add` для об’єктів :class:"
"`mailbox.Mailbox` тепер приймає двійкове введення."

msgid ""
":class:`~io.StringIO` and text file input are deprecated.  Also, string "
"input will fail early if non-ASCII characters are used.  Previously it would "
"fail when the email was processed in a later step."
msgstr ""
":class:`~io.StringIO` та введення текстового файлу застаріли. Крім того, "
"введення рядка буде невдалим раніше, якщо використовуються символи, відмінні "
"від ASCII. Раніше це не вдавалося, коли електронний лист оброблявся на "
"наступному кроці."

msgid ""
"There is also support for binary output.  The :meth:`~mailbox.Mailbox."
"get_file` method now returns a file in the binary mode (where it used to "
"incorrectly set the file to text-mode).  There is also a new :meth:`~mailbox."
"Mailbox.get_bytes` method that returns a :class:`bytes` representation of a "
"message corresponding to a given *key*."
msgstr ""
"Також є підтримка двійкового виведення. Метод :meth:`~mailbox.Mailbox."
"get_file` тепер повертає файл у бінарному режимі (де раніше він неправильно "
"встановлював файл у текстовому режимі). Існує також новий метод :meth:"
"`~mailbox.Mailbox.get_bytes`, який повертає :class:`bytes` представлення "
"повідомлення, що відповідає даному *ключу*."

msgid ""
"It is still possible to get non-binary output using the old API's :meth:"
"`~mailbox.Mailbox.get_string` method, but that approach is not very useful.  "
"Instead, it is best to extract messages from a :class:`~mailbox.Message` "
"object or to load them from binary input."
msgstr ""
"Все ще можна отримати небінарний вихід за допомогою методу :meth:`~mailbox."
"Mailbox.get_string` старого API, але цей підхід не дуже корисний. Натомість "
"найкраще видобувати повідомлення з об’єкта :class:`~mailbox.Message` або "
"завантажувати їх із двійкового введення."

msgid ""
"(Contributed by R. David Murray, with efforts from Steffen Daode Nurpmeso "
"and an initial patch by Victor Stinner in :issue:`9124`.)"
msgstr ""
"(Надано Р. Девідом Мюрреєм, зусиллями Штеффена Даоде Нурпмезо та початкового "
"патча Віктора Стіннера в :issue:`9124`.)"

msgid "turtledemo"
msgstr "turtledemo"

msgid ""
"The demonstration code for the :mod:`turtle` module was moved from the "
"*Demo* directory to main library.  It includes over a dozen sample scripts "
"with lively displays.  Being on :attr:`sys.path`, it can now be run directly "
"from the command-line:"
msgstr ""
"Демонстраційний код для модуля :mod:`turtle` переміщено з каталогу *Demo* до "
"основної бібліотеки. Він містить понад дюжину зразків сценаріїв із яскравими "
"дисплеями. Перебуваючи на :attr:`sys.path`, тепер його можна запускати "
"безпосередньо з командного рядка:"

msgid ""
"(Moved from the Demo directory by Alexander Belopolsky in :issue:`10199`.)"
msgstr ""
"(Переміщено з каталогу Demo Олександром Бєлопольським у :issue:`10199`.)"

msgid "Multi-threading"
msgstr "Багатопотоковість"

msgid ""
"The mechanism for serializing execution of concurrently running Python "
"threads (generally known as the :term:`GIL` or Global Interpreter Lock) has "
"been rewritten.  Among the objectives were more predictable switching "
"intervals and reduced overhead due to lock contention and the number of "
"ensuing system calls.  The notion of a \"check interval\" to allow thread "
"switches has been abandoned and replaced by an absolute duration expressed "
"in seconds.  This parameter is tunable through :func:`sys."
"setswitchinterval()`. It currently defaults to 5 milliseconds."
msgstr ""
"Механізм серіалізації виконання одночасно запущених потоків Python "
"(загальновідомий як :term:`GIL` або глобальне блокування інтерпретатора) "
"було переписано. Серед цілей були більш передбачувані інтервали перемикання "
"та зменшення накладних витрат через конфлікт блокувань і кількість наступних "
"системних викликів. Поняття \"інтервал перевірки\", щоб дозволити "
"перемикання потоків, було залишено та замінено абсолютною тривалістю, "
"вираженою в секундах. Цей параметр можна налаштувати через :func:`sys."
"setswitchinterval()`. Зараз за замовчуванням 5 мілісекунд."

msgid ""
"Additional details about the implementation can be read from a `python-dev "
"mailing-list message <https://mail.python.org/pipermail/python-dev/2009-"
"October/093321.html>`_ (however, \"priority requests\" as exposed in this "
"message have not been kept for inclusion)."
msgstr ""
"Додаткові відомості про реалізацію можна прочитати в `повідомленні списку "
"розсилки python-dev <https://mail.python.org/pipermail/python-dev/2009-"
"October/093321.html>`_ (однак \"пріоритетні запити\", представлені в цьому "
"повідомленні, не були збережені для включення)."

msgid "(Contributed by Antoine Pitrou.)"
msgstr "(Надав Антуан Пітру.)"

msgid ""
"Regular and recursive locks now accept an optional *timeout* argument to "
"their :meth:`~threading.Lock.acquire` method.  (Contributed by Antoine "
"Pitrou; :issue:`7316`.)"
msgstr ""
"Звичайні та рекурсивні блокування тепер приймають додатковий аргумент "
"*timeout* для свого методу :meth:`~threading.Lock.acquire`. (Надав Антуан "
"Пітру; :issue:`7316`.)"

msgid ""
"Similarly, :meth:`threading.Semaphore.acquire` also gained a *timeout* "
"argument.  (Contributed by Torsten Landschoff; :issue:`850728`.)"
msgstr ""
"Так само :meth:`threading.Semaphore.acquire` також отримав аргумент "
"*timeout*. (Надав Торстен Ландшофф; :issue:`850728`.)"

msgid ""
"Regular and recursive lock acquisitions can now be interrupted by signals on "
"platforms using Pthreads.  This means that Python programs that deadlock "
"while acquiring locks can be successfully killed by repeatedly sending "
"SIGINT to the process (by pressing :kbd:`Ctrl+C` in most shells). "
"(Contributed by Reid Kleckner; :issue:`8844`.)"
msgstr ""
"Регулярне та рекурсивне отримання блокувань тепер може бути перервано "
"сигналами на платформах, які використовують Pthreads. Це означає, що "
"програми Python, які блокуються під час отримання блокувань, можна успішно "
"припинити, багаторазово надсилаючи SIGINT процесу (натиснувши :kbd:`Ctrl+C` "
"у більшості оболонок). (Надав Рейд Клекнер; :issue:`8844`.)"

msgid "Optimizations"
msgstr "Оптимізації"

msgid "A number of small performance enhancements have been added:"
msgstr "Було додано ряд невеликих покращень продуктивності:"

msgid ""
"Python's peephole optimizer now recognizes patterns such ``x in {1, 2, 3}`` "
"as being a test for membership in a set of constants.  The optimizer recasts "
"the :class:`set` as a :class:`frozenset` and stores the pre-built constant."
msgstr ""
"Оптимізатор peephole Python тепер розпізнає шаблони, такі як ``x in {1, 2}`` "
"як тест на приналежність до набору констант. Оптимізатор перетворює :class:"
"`set` як :class:`frozenset` і зберігає попередньо зібрану константу."

msgid ""
"Now that the speed penalty is gone, it is practical to start writing "
"membership tests using set-notation.  This style is both semantically clear "
"and operationally fast::"
msgstr ""
"Тепер, коли покарання за швидкістю зникло, можна почати писати тести на "
"приналежність за допомогою нотації набору. Цей стиль і семантично "
"зрозумілий, і операційно швидкий:"

msgid ""
"(Patch and additional tests contributed by Dave Malcolm; :issue:`6690`)."
msgstr "(Патч і додаткові тести надав Дейв Малкольм; :issue:`6690`)."

msgid ""
"Serializing and unserializing data using the :mod:`pickle` module is now "
"several times faster."
msgstr ""
"Серіалізація та десеріалізація даних за допомогою модуля :mod:`pickle` тепер "
"у кілька разів швидша."

msgid ""
"(Contributed by Alexandre Vassalotti, Antoine Pitrou and the Unladen Swallow "
"team in :issue:`9410` and :issue:`3873`.)"
msgstr ""
"(Надано Александром Вассалотті, Антуаном Пітру та командою Unladen Swallow "
"у :issue:`9410` та :issue:`3873`.)"

msgid ""
"The `Timsort algorithm <https://en.wikipedia.org/wiki/Timsort>`_ used in :"
"meth:`list.sort` and :func:`sorted` now runs faster and uses less memory "
"when called with a :term:`key function`.  Previously, every element of a "
"list was wrapped with a temporary object that remembered the key value "
"associated with each element.  Now, two arrays of keys and values are sorted "
"in parallel.  This saves the memory consumed by the sort wrappers, and it "
"saves time lost to delegating comparisons."
msgstr ""
"`Алгоритм Timsort <https://en.wikipedia.org/wiki/Timsort>`_, який "
"використовується в :meth:`list.sort` і :func:`sorted`, тепер працює швидше "
"та використовує менше пам’яті під час виклику з :term:`key function`. Раніше "
"кожен елемент списку обгортався тимчасовим об’єктом, який запам’ятовував "
"значення ключа, пов’язане з кожним елементом. Тепер два масиви ключів і "
"значень сортуються паралельно. Це економить пам’ять, яку споживають обгортки "
"сортування, і економить час, втрачений на делегування порівнянь."

msgid "(Patch by Daniel Stutzbach in :issue:`9915`.)"
msgstr "(Патч Даніеля Штуцбаха в :issue:`9915`.)"

msgid ""
"JSON decoding performance is improved and memory consumption is reduced "
"whenever the same string is repeated for multiple keys.  Also, JSON encoding "
"now uses the C speedups when the ``sort_keys`` argument is true."
msgstr ""
"Продуктивність декодування JSON покращується, а споживання пам’яті "
"зменшується щоразу, коли той самий рядок повторюється для кількох ключів. "
"Крім того, кодування JSON тепер використовує прискорення C, якщо аргумент "
"``sort_keys`` має значення true."

msgid ""
"(Contributed by Antoine Pitrou in :issue:`7451` and by Raymond Hettinger and "
"Antoine Pitrou in :issue:`10314`.)"
msgstr ""
"(Надано Антуаном Пітру в :issue:`7451` та Раймондом Геттінгером і Антуаном "
"Пітру в :issue:`10314`.)"

msgid ""
"Recursive locks (created with the :func:`threading.RLock` API) now benefit "
"from a C implementation which makes them as fast as regular locks, and "
"between 10x and 15x faster than their previous pure Python implementation."
msgstr ""
"Рекурсивні блокування (створені за допомогою API :func:`threading.RLock`) "
"тепер мають переваги від реалізації C, яка робить їх такими ж швидкими, як і "
"звичайні блокування, і в 10-15 разів швидшими, ніж їхня попередня реалізація "
"на чистому Python."

msgid "(Contributed by Antoine Pitrou; :issue:`3001`.)"
msgstr "(Надав Антуан Пітру; :issue:`3001`.)"

msgid ""
"The fast-search algorithm in stringlib is now used by the :meth:`split`, :"
"meth:`rsplit`, :meth:`splitlines` and :meth:`replace` methods on :class:"
"`bytes`, :class:`bytearray` and :class:`str` objects. Likewise, the "
"algorithm is also used by :meth:`rfind`, :meth:`rindex`, :meth:`rsplit` and :"
"meth:`rpartition`."
msgstr ""
"Алгоритм швидкого пошуку в stringlib тепер використовується методами :meth:"
"`split`, :meth:`rsplit`, :meth:`splitlines` і :meth:`replace` для :class:"
"`bytes`, об’єкти :class:`bytearray` і :class:`str`. Подібним чином алгоритм "
"також використовується :meth:`rfind`, :meth:`rindex`, :meth:`rsplit` і :meth:"
"`rpartition`."

msgid "(Patch by Florent Xicluna in :issue:`7622` and :issue:`7462`.)"
msgstr "(Патч від Florent Xicluna в :issue:`7622` і :issue:`7462`.)"

msgid ""
"Integer to string conversions now work two \"digits\" at a time, reducing "
"the number of division and modulo operations."
msgstr ""
"Перетворення цілого числа в рядок тепер працюють з двома \"цифрами\" "
"одночасно, зменшуючи кількість операцій ділення та модуля."

msgid "(:issue:`6713` by Gawain Bolton, Mark Dickinson, and Victor Stinner.)"
msgstr "(:issue:`6713`, Гавейн Болтон, Марк Дікінсон і Віктор Стіннер.)"

msgid ""
"There were several other minor optimizations. Set differencing now runs "
"faster when one operand is much larger than the other (patch by Andress "
"Bennetts in :issue:`8685`).  The :meth:`array.repeat` method has a faster "
"implementation (:issue:`1569291` by Alexander Belopolsky). The :class:"
"`BaseHTTPRequestHandler` has more efficient buffering (:issue:`3709` by "
"Andrew Schaaf).  The :func:`operator.attrgetter` function has been sped-up (:"
"issue:`10160` by Christos Georgiou).  And :class:`ConfigParser` loads multi-"
"line arguments a bit faster (:issue:`7113` by Łukasz Langa)."
msgstr ""
"Було ще кілька незначних оптимізацій. Розрізнення наборів тепер працює "
"швидше, коли один операнд значно більший за інший (патч від Андресса "
"Беннетса в :issue:`8685`). Метод :meth:`array.repeat` має швидшу реалізацію "
"(:issue:`1569291` від Alexander Belopolsky). :class:`BaseHTTPRequestHandler` "
"має більш ефективну буферизацію (:issue:`3709` від Ендрю Шаафа). Функцію :"
"func:`operator.attrgetter` було пришвидшено (:issue:`10160` від Christos "
"Georgiou). А :class:`ConfigParser` завантажує багаторядкові аргументи трохи "
"швидше (:issue:`7113` від Łukasz Langa)."

msgid "Unicode"
msgstr "Unicode"

msgid ""
"Python has been updated to `Unicode 6.0.0 <https://unicode.org/versions/"
"Unicode6.0.0/>`_.  The update to the standard adds over 2,000 new characters "
"including `emoji <https://en.wikipedia.org/wiki/Emoji>`_ symbols which are "
"important for mobile phones."
msgstr ""

msgid ""
"In addition, the updated standard has altered the character properties for "
"two Kannada characters (U+0CF1, U+0CF2) and one New Tai Lue numeric "
"character (U+19DA), making the former eligible for use in identifiers while "
"disqualifying the latter.  For more information, see `Unicode Character "
"Database Changes <https://www.unicode.org/versions/Unicode6.0.0/"
"#Database_Changes>`_."
msgstr ""

msgid "Codecs"
msgstr "Кодеки"

msgid "Support was added for *cp720* Arabic DOS encoding (:issue:`1616979`)."
msgstr "Додано підтримку *cp720* арабського кодування DOS (:issue:`1616979`)."

msgid ""
"MBCS encoding no longer ignores the error handler argument. In the default "
"strict mode, it raises an :exc:`UnicodeDecodeError` when it encounters an "
"undecodable byte sequence and an :exc:`UnicodeEncodeError` for an "
"unencodable character."
msgstr ""
"Кодування MBCS більше не ігнорує аргумент обробника помилок. У строгому "
"режимі за замовчуванням він викликає :exc:`UnicodeDecodeError`, коли "
"зустрічає некодовану послідовність байтів, і :exc:`UnicodeEncodeError` для "
"некодованого символу."

msgid ""
"The MBCS codec supports ``'strict'`` and ``'ignore'`` error handlers for "
"decoding, and ``'strict'`` and ``'replace'`` for encoding."
msgstr ""
"Кодек MBCS підтримує ``'strict'`` і ``'ignore''`` обробники помилок для "
"декодування, ``'strict'`` і ``'replace'`` для кодування."

msgid ""
"To emulate Python3.1 MBCS encoding, select the ``'ignore'`` handler for "
"decoding and the ``'replace'`` handler for encoding."
msgstr ""
"Щоб емулювати кодування Python3.1 MBCS, виберіть обробник ``'ignore'`` для "
"декодування та ``'replace'`` обробник для кодування."

msgid ""
"On Mac OS X, Python decodes command line arguments with ``'utf-8'`` rather "
"than the locale encoding."
msgstr ""
"У Mac OS X Python декодує аргументи командного рядка за допомогою "
"``'utf-8''`` замість кодування локалі."

msgid ""
"By default, :mod:`tarfile` uses ``'utf-8'`` encoding on Windows (instead of "
"``'mbcs'``) and the ``'surrogateescape'`` error handler on all operating "
"systems."
msgstr ""
"За замовчуванням :mod:`tarfile` використовує кодування ``'utf-8'`` у Windows "
"(замість ``'mbcs'``) і ``'surrogateescape'`` обробник помилок у всіх "
"операційних системах."

msgid "Documentation"
msgstr "Документація"

msgid "The documentation continues to be improved."
msgstr "Документація продовжує вдосконалюватися."

msgid ""
"A table of quick links has been added to the top of lengthy sections such "
"as :ref:`built-in-funcs`.  In the case of :mod:`itertools`, the links are "
"accompanied by tables of cheatsheet-style summaries to provide an overview "
"and memory jog without having to read all of the docs."
msgstr ""
"Таблицю швидких посилань було додано до верхньої частини довгих розділів, "
"таких як :ref:`built-in-funcs`. У випадку :mod:`itertools` посилання "
"супроводжуються таблицями підсумків у стилі шпаргалок, щоб надати огляд і "
"пам’ять без необхідності читати всі документи."

msgid ""
"In some cases, the pure Python source code can be a helpful adjunct to the "
"documentation, so now many modules now feature quick links to the latest "
"version of the source code.  For example, the :mod:`functools` module "
"documentation has a quick link at the top labeled:"
msgstr ""
"У деяких випадках чистий вихідний код Python може бути корисним доповненням "
"до документації, тому тепер багато модулів тепер мають швидкі посилання на "
"останню версію вихідного коду. Наприклад, документація модуля :mod:"
"`functools` має швидке посилання вгорі з позначкою:"

msgid "**Source code** :source:`Lib/functools.py`."
msgstr "**Вихідний код** :source:`Lib/functools.py`."

msgid ""
"(Contributed by Raymond Hettinger; see `rationale <https://rhettinger."
"wordpress.com/2011/01/28/open-your-source-more/>`_.)"
msgstr ""
"(Надав Реймонд Хеттінгер; див. `обґрунтування <https://rhettinger.wordpress."
"com/2011/01/28/open-your-source-more/>`_.)"

msgid ""
"The docs now contain more examples and recipes.  In particular, :mod:`re` "
"module has an extensive section, :ref:`re-examples`.  Likewise, the :mod:"
"`itertools` module continues to be updated with new :ref:`itertools-recipes`."
msgstr ""
"Документи тепер містять більше прикладів і рецептів. Зокрема, модуль :mod:"
"`re` має великий розділ :ref:`re-examples`. Так само модуль :mod:`itertools` "
"продовжує оновлюватися новими :ref:`itertools-recipes`."

msgid ""
"The :mod:`datetime` module now has an auxiliary implementation in pure "
"Python. No functionality was changed.  This just provides an easier-to-read "
"alternate implementation."
msgstr ""
"Модуль :mod:`datetime` тепер має допоміжну реалізацію на чистому Python. "
"Функціональність не змінена. Це просто забезпечує легшу для читання "
"альтернативну реалізацію."

msgid "(Contributed by Alexander Belopolsky in :issue:`9528`.)"
msgstr "(Надав Олександр Бєлопольський у :issue:`9528`.)"

msgid ""
"The unmaintained :file:`Demo` directory has been removed.  Some demos were "
"integrated into the documentation, some were moved to the :file:`Tools/demo` "
"directory, and others were removed altogether."
msgstr ""
"Непідтримуваний каталог :file:`Demo` було видалено. Деякі демонстрації було "
"інтегровано в документацію, деякі переміщено до каталогу :file:`Tools/demo`, "
"а інші взагалі видалено."

msgid "(Contributed by Georg Brandl in :issue:`7962`.)"
msgstr "(Надав Георг Брандл у :issue:`7962`.)"

msgid "IDLE"
msgstr "ПРОСТОЮЧИЙ"

msgid ""
"The format menu now has an option to clean source files by stripping "
"trailing whitespace."
msgstr ""
"У меню форматування тепер є опція очищення вихідних файлів шляхом видалення "
"кінцевих пробілів."

msgid "(Contributed by Raymond Hettinger; :issue:`5150`.)"
msgstr "(Надав Реймонд Геттінгер; :issue:`5150`.)"

msgid "IDLE on Mac OS X now works with both Carbon AquaTk and Cocoa AquaTk."
msgstr ""
"IDLE на Mac OS X тепер працює як з Carbon AquaTk, так і з Cocoa AquaTk."

msgid ""
"(Contributed by Kevin Walzer, Ned Deily, and Ronald Oussoren; :issue:`6075`.)"
msgstr ""
"(Надано Кевіном Волзером, Недом Дейлі та Рональдом Усореном; :issue:`6075`.)"

msgid "Code Repository"
msgstr "Репозиторій коду"

msgid ""
"In addition to the existing Subversion code repository at https://svn.python."
"org there is now a `Mercurial <https://www.mercurial-scm.org/>`_ repository "
"at https://hg.python.org/\\ ."
msgstr ""

msgid ""
"After the 3.2 release, there are plans to switch to Mercurial as the primary "
"repository.  This distributed version control system should make it easier "
"for members of the community to create and share external changesets.  See :"
"pep:`385` for details."
msgstr ""
"Після випуску 3.2 планується перехід на Mercurial як основний репозиторій. "
"Ця розподілена система контролю версій має спростити членам спільноти "
"створення зовнішніх наборів змін і обмін ними. Подробиці див. :pep:`385`."

msgid ""
"To learn to use the new version control system, see the `Quick Start "
"<https://www.mercurial-scm.org/wiki/QuickStart>`_ or the `Guide to Mercurial "
"Workflows <https://www.mercurial-scm.org/guide>`_."
msgstr ""
"Щоб навчитися користуватися новою системою контролю версій, перегляньте "
"`Швидкий старт <https://www.mercurial-scm.org/wiki/QuickStart>`_ або "
"`Посібник із робочих процесів Mercurial <https://www.mercurial-scm.org/"
"guide>`_."

msgid "Build and C API Changes"
msgstr "Зміни збірки та C API"

msgid "Changes to Python's build process and to the C API include:"
msgstr "Зміни в процесі збирання Python і в API C включають:"

msgid ""
"The *idle*, *pydoc* and *2to3* scripts are now installed with a version-"
"specific suffix on ``make altinstall`` (:issue:`10679`)."
msgstr ""
"Сценарії *idle*, *pydoc* і *2to3* тепер інстальовано з суфіксом версії на "
"``make altinstall`` (:issue:`10679`)."

msgid ""
"The C functions that access the Unicode Database now accept and return "
"characters from the full Unicode range, even on narrow unicode builds "
"(Py_UNICODE_TOLOWER, Py_UNICODE_ISDECIMAL, and others).  A visible "
"difference in Python is that :func:`unicodedata.numeric` now returns the "
"correct value for large code points, and :func:`repr` may consider more "
"characters as printable."
msgstr ""
"Функції C, які звертаються до бази даних Unicode, тепер приймають і "
"повертають символи з повного діапазону Unicode, навіть у вузьких збірках "
"Unicode (Py_UNICODE_TOLOWER, Py_UNICODE_ISDECIMAL та інші). Видима "
"відмінність у Python полягає в тому, що :func:`unicodedata.numeric` тепер "
"повертає правильне значення для великих кодових точок, а :func:`repr` може "
"вважати більше символів придатними для друку."

msgid ""
"(Reported by Bupjoe Lee and fixed by Amaury Forgeot D'Arc; :issue:`5127`.)"
msgstr ""
"(Повідомив Bupjoe Lee та виправив Amaury Forgeot D'Arc; :issue:`5127`.)"

msgid ""
"Computed gotos are now enabled by default on supported compilers (which are "
"detected by the configure script).  They can still be disabled selectively "
"by specifying ``--without-computed-gotos``."
msgstr ""
"Обчислені gotos тепер увімкнено за замовчуванням у підтримуваних "
"компіляторах (які визначаються сценарієм конфігурації). Їх все ще можна "
"вибірково вимкнути, вказавши ``--without-computed-gotos``."

msgid "(Contributed by Antoine Pitrou; :issue:`9203`.)"
msgstr "(Надав Антуан Пітру; :issue:`9203`.)"

msgid ""
"The option ``--with-wctype-functions`` was removed.  The built-in unicode "
"database is now used for all functions."
msgstr ""
"Опцію ``--with-wctype-functions`` видалено. Тепер для всіх функцій "
"використовується вбудована база даних Unicode."

msgid "(Contributed by Amaury Forgeot D'Arc; :issue:`9210`.)"
msgstr "(Надано Amaury Forgeot D'Arc; :issue:`9210`.)"

msgid ""
"Hash values are now values of a new type, :c:type:`Py_hash_t`, which is "
"defined to be the same size as a pointer.  Previously they were of type "
"long, which on some 64-bit operating systems is still only 32 bits long.  As "
"a result of this fix, :class:`set` and :class:`dict` can now hold more than "
"``2**32`` entries on builds with 64-bit pointers (previously, they could "
"grow to that size but their performance degraded catastrophically)."
msgstr ""
"Хеш-значення тепер є значеннями нового типу, :c:type:`Py_hash_t`, який "
"визначено таким самим розміром, що й покажчик. Раніше вони мали тип long, "
"який у деяких 64-розрядних операційних системах досі має лише 32 біти. У "
"результаті цього виправлення :class:`set` і :class:`dict` тепер можуть "
"містити більше ``2**32`` записів у збірках із 64-розрядними покажчиками "
"(раніше вони могли збільшуватися до такого розміру але їх продуктивність "
"катастрофічно погіршилася)."

msgid ""
"(Suggested by Raymond Hettinger and implemented by Benjamin Peterson; :issue:"
"`9778`.)"
msgstr ""
"(Запропоновано Raymond Hettinger і реалізовано Benjamin Peterson; :issue:"
"`9778`.)"

msgid ""
"A new macro :c:macro:`Py_VA_COPY` copies the state of the variable argument "
"list.  It is equivalent to C99 *va_copy* but available on all Python "
"platforms (:issue:`2443`)."
msgstr ""
"Новий макрос :c:macro:`Py_VA_COPY` копіює стан списку аргументів змінної. "
"Він еквівалентний C99 *va_copy*, але доступний на всіх платформах Python (:"
"issue:`2443`)."

msgid ""
"A new C API function :c:func:`PySys_SetArgvEx` allows an embedded "
"interpreter to set :attr:`sys.argv` without also modifying :attr:`sys.path` "
"(:issue:`5753`)."
msgstr ""
"Нова функція C API :c:func:`PySys_SetArgvEx` дозволяє вбудованому "
"інтерпретатору встановлювати :attr:`sys.argv` без зміни :attr:`sys.path` (:"
"issue:`5753`)."

msgid ""
":c:macro:`PyEval_CallObject` is now only available in macro form.  The "
"function declaration, which was kept for backwards compatibility reasons, is "
"now removed -- the macro was introduced in 1997 (:issue:`8276`)."
msgstr ""
":c:macro:`PyEval_CallObject` тепер доступний лише у формі макросу. "
"Оголошення функції, яке було збережено з міркувань зворотної сумісності, "
"тепер видалено — макрос було представлено в 1997 році (:issue:`8276`)."

msgid ""
"There is a new function :c:func:`PyLong_AsLongLongAndOverflow` which is "
"analogous to :c:func:`PyLong_AsLongAndOverflow`.  They both serve to convert "
"Python :class:`int` into a native fixed-width type while providing detection "
"of cases where the conversion won't fit (:issue:`7767`)."
msgstr ""
"Існує нова функція :c:func:`PyLong_AsLongLongAndOverflow`, яка є аналогом :c:"
"func:`PyLong_AsLongAndOverflow`. Обидва вони служать для перетворення "
"Python :class:`int` на рідний тип із фіксованою шириною, забезпечуючи "
"виявлення випадків, коли перетворення не підходить (:issue:`7767`)."

msgid ""
"The :c:func:`PyUnicode_CompareWithASCIIString` function now returns *not "
"equal* if the Python string is *NUL* terminated."
msgstr ""
"Функція :c:func:`PyUnicode_CompareWithASCIIString` тепер повертає *не "
"дорівнює*, якщо рядок Python завершується *NUL*."

msgid ""
"There is a new function :c:func:`PyErr_NewExceptionWithDoc` that is like :c:"
"func:`PyErr_NewException` but allows a docstring to be specified. This lets "
"C exceptions have the same self-documenting capabilities as their pure "
"Python counterparts (:issue:`7033`)."
msgstr ""
"Існує нова функція :c:func:`PyErr_NewExceptionWithDoc`, яка схожа на :c:func:"
"`PyErr_NewException`, але дозволяє вказати рядок документа. Це дозволяє "
"виняткам C мати ті самі можливості самодокументування, що й їхні чисті "
"відповідники Python (:issue:`7033`)."

msgid ""
"When compiled with the ``--with-valgrind`` option, the pymalloc allocator "
"will be automatically disabled when running under Valgrind.  This gives "
"improved memory leak detection when running under Valgrind, while taking "
"advantage of pymalloc at other times (:issue:`2422`)."
msgstr ""
"При компіляції з опцією ``--with-valgrind`` розподільник pymalloc буде "
"автоматично вимкнено під час роботи під Valgrind. Це забезпечує покращене "
"виявлення витоку пам’яті під час роботи під Valgrind, водночас користуючись "
"перевагами pymalloc в інший час (:issue:`2422`)."

msgid ""
"Removed the ``O?`` format from the *PyArg_Parse* functions.  The format is "
"no longer used and it had never been documented (:issue:`8837`)."
msgstr ""
"Видалено формат ``O?`` з функцій *PyArg_Parse*. Формат більше не "
"використовується і ніколи не був задокументований (:issue:`8837`)."

msgid ""
"There were a number of other small changes to the C-API.  See the `Misc/NEWS "
"<https://github.com/python/cpython/blob/v3.2.6/Misc/NEWS>`__ file for a "
"complete list."
msgstr ""

msgid ""
"Also, there were a number of updates to the Mac OS X build, see `Mac/"
"BuildScript/README.txt <https://github.com/python/cpython/blob/v3.2.6/Mac/"
"BuildScript/README.txt>`_ for details.  For users running a 32/64-bit build, "
"there is a known problem with the default Tcl/Tk on Mac OS X 10.6. "
"Accordingly, we recommend installing an updated alternative such as "
"`ActiveState Tcl/Tk 8.5.9 <https://www.activestate.com/activetcl/"
"downloads>`_\\. See https://www.python.org/download/mac/tcltk/ for "
"additional details."
msgstr ""

msgid "Porting to Python 3.2"
msgstr "Перенесення на Python 3.2"

msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code:"
msgstr ""
"У цьому розділі перераховані раніше описані зміни та інші виправлення "
"помилок, які можуть потребувати змін у вашому коді:"

msgid ""
"The :mod:`configparser` module has a number of clean-ups.  The major change "
"is to replace the old :class:`ConfigParser` class with long-standing "
"preferred alternative :class:`SafeConfigParser`.  In addition there are a "
"number of smaller incompatibilities:"
msgstr ""
"Модуль :mod:`configparser` має ряд очищення. Основна зміна полягає в заміні "
"старого класу :class:`ConfigParser` на давню бажану альтернативу :class:"
"`SafeConfigParser`. Крім того, існує ряд менших несумісностей:"

msgid ""
"The interpolation syntax is now validated on :meth:`~configparser."
"ConfigParser.get` and :meth:`~configparser.ConfigParser.set` operations. In "
"the default interpolation scheme, only two tokens with percent signs are "
"valid: ``%(name)s`` and ``%%``, the latter being an escaped percent sign."
msgstr ""
"Синтаксис інтерполяції тепер перевірено в операціях :meth:`~configparser."
"ConfigParser.get` і :meth:`~configparser.ConfigParser.set`. У стандартній "
"схемі інтерполяції дійсні лише два токени зі знаками відсотка: ``%(name)s`` "
"і ``%%``, причому останній є екранованим знаком відсотка."

msgid ""
"The :meth:`~configparser.ConfigParser.set` and :meth:`~configparser."
"ConfigParser.add_section` methods now verify that values are actual "
"strings.  Formerly, unsupported types could be introduced unintentionally."
msgstr ""
"Методи :meth:`~configparser.ConfigParser.set` і :meth:`~configparser."
"ConfigParser.add_section` тепер перевіряють, чи значення є фактичними "
"рядками. Раніше непідтримувані типи могли бути введені ненавмисно."

msgid ""
"Duplicate sections or options from a single source now raise either :exc:"
"`~configparser.DuplicateSectionError` or :exc:`~configparser."
"DuplicateOptionError`.  Formerly, duplicates would silently overwrite a "
"previous entry."
msgstr ""
"Дубльовані розділи або параметри з одного джерела тепер викликають :exc:"
"`~configparser.DuplicateSectionError` або :exc:`~configparser."
"DuplicateOptionError`. Раніше дублікати мовчки перезаписували попередній "
"запис."

msgid ""
"Inline comments are now disabled by default so now the **;** character can "
"be safely used in values."
msgstr ""
"Вбудовані коментарі тепер вимкнено за замовчуванням, тому тепер символ **;** "
"можна безпечно використовувати у значеннях."

msgid ""
"Comments now can be indented.  Consequently, for **;** or **#** to appear at "
"the start of a line in multiline values, it has to be interpolated.  This "
"keeps comment prefix characters in values from being mistaken as comments."
msgstr ""
"Коментарі тепер можна робити з відступом. Отже, щоб **;** або **#** "
"з’явилися на початку рядка в багаторядкових значеннях, їх потрібно "
"інтерпольувати. Це запобігає помилковому сприйняттю префіксів коментарів у "
"значеннях як коментарі."

msgid ""
"``\"\"`` is now a valid value and is no longer automatically converted to an "
"empty string. For empty strings, use ``\"option =\"`` in a line."
msgstr ""
"``\"\"`` тепер є дійсним значенням і більше не перетворюється автоматично на "
"порожній рядок. Для порожніх рядків використовуйте ``\"option =\"`` у рядку."

msgid ""
"The :mod:`nntplib` module was reworked extensively, meaning that its APIs "
"are often incompatible with the 3.1 APIs."
msgstr ""
"Модуль :mod:`nntplib` було значно перероблено, що означає, що його API часто "
"несумісні з API 3.1."

msgid ""
":class:`bytearray` objects can no longer be used as filenames; instead, they "
"should be converted to :class:`bytes`."
msgstr ""
":class:`bytearray` об’єкти більше не можна використовувати як імена файлів; "
"натомість їх слід перетворити на :class:`bytes`."

msgid ""
"The :meth:`array.tostring` and :meth:`array.fromstring` have been renamed "
"to :meth:`array.tobytes` and :meth:`array.frombytes` for clarity.  The old "
"names have been deprecated. (See :issue:`8990`.)"
msgstr ""
"Для ясності :meth:`array.tostring` і :meth:`array.fromstring` перейменовано "
"на :meth:`array.tobytes` і :meth:`array.frombytes`. Старі назви застаріли. "
"(Див. :issue:`8990`.)"

msgid "``PyArg_Parse*()`` functions:"
msgstr "Функції ``PyArg_Parse*()``:"

msgid "\"t#\" format has been removed: use \"s#\" or \"s*\" instead"
msgstr ""
"Формат \"t#\" видалено: замість нього використовуйте \"s#\" або \"s*\"."

msgid "\"w\" and \"w#\" formats has been removed: use \"w*\" instead"
msgstr "Формати \"w\" і \"w#\" видалено: замість них використовуйте \"w*\"."

msgid ""
"The :c:type:`PyCObject` type, deprecated in 3.1, has been removed.  To wrap "
"opaque C pointers in Python objects, the :c:type:`PyCapsule` API should be "
"used instead; the new type has a well-defined interface for passing typing "
"safety information and a less complicated signature for calling a destructor."
msgstr ""
"Тип :c:type:`PyCObject`, застарілий у версії 3.1, було видалено. Щоб "
"обернути непрозорі вказівники C в об’єкти Python, натомість слід "
"використовувати API :c:type:`PyCapsule`; новий тип має чітко визначений "
"інтерфейс для передачі інформації про безпеку введення та менш складний "
"підпис для виклику деструктора."

msgid ""
"The :func:`sys.setfilesystemencoding` function was removed because it had a "
"flawed design."
msgstr ""
"Функцію :func:`sys.setfilesystemencoding` було видалено, оскільки вона мала "
"недоліки."

msgid ""
"The :func:`random.seed` function and method now salt string seeds with an "
"sha512 hash function.  To access the previous version of *seed* in order to "
"reproduce Python 3.1 sequences, set the *version* argument to *1*, ``random."
"seed(s, version=1)``."
msgstr ""
"Функція та метод :func:`random.seed` тепер додають початкові значення рядка "
"за допомогою хеш-функції sha512. Щоб отримати доступ до попередньої версії "
"*seed* для відтворення послідовностей Python 3.1, установіть аргумент "
"*version* на *1*, ``random.seed(s, version=1)``."

msgid ""
"The previously deprecated :func:`string.maketrans` function has been removed "
"in favor of the static methods :meth:`bytes.maketrans` and :meth:`bytearray."
"maketrans`.  This change solves the confusion around which types were "
"supported by the :mod:`string` module.  Now, :class:`str`, :class:`bytes`, "
"and :class:`bytearray` each have their own **maketrans** and **translate** "
"methods with intermediate translation tables of the appropriate type."
msgstr ""
"Раніше застарілу функцію :func:`string.maketrans` було видалено на користь "
"статичних методів :meth:`bytes.maketrans` і :meth:`bytearray.maketrans`. Ця "
"зміна вирішує плутанину навколо того, які типи підтримувалися модулем :mod:"
"`string`. Тепер :class:`str`, :class:`bytes` і :class:`bytearray` кожен має "
"власні методи **maketrans** і **translate** із проміжними таблицями "
"перекладу відповідного типу."

msgid "(Contributed by Georg Brandl; :issue:`5675`.)"
msgstr "(Надав Георг Брандл; :issue:`5675`.)"

msgid ""
"The previously deprecated :func:`contextlib.nested` function has been "
"removed in favor of a plain :keyword:`with` statement which can accept "
"multiple context managers.  The latter technique is faster (because it is "
"built-in), and it does a better job finalizing multiple context managers "
"when one of them raises an exception::"
msgstr ""
"Раніше застарілу функцію :func:`contextlib.nested` було вилучено на користь "
"простого оператора :keyword:`with`, який може приймати кілька менеджерів "
"контексту. Останній метод є швидшим (оскільки він вбудований), і він краще "
"завершує роботу з кількома контекстними менеджерами, коли один із них "
"викликає виняток:"

msgid ""
"(Contributed by Georg Brandl and Mattias Brändström; `appspot issue 53094 "
"<https://codereview.appspot.com/53094>`_.)"
msgstr ""
"(Надано Георгом Брандлом і Маттіасом Брендстремом; `appspot issue 53094 "
"<https://codereview.appspot.com/53094>`_.)"

msgid ""
":func:`struct.pack` now only allows bytes for the ``s`` string pack code. "
"Formerly, it would accept text arguments and implicitly encode them to bytes "
"using UTF-8.  This was problematic because it made assumptions about the "
"correct encoding and because a variable-length encoding can fail when "
"writing to fixed length segment of a structure."
msgstr ""
":func:`struct.pack` тепер дозволяє лише байти для коду пакета рядків ``s``. "
"Раніше він приймав текстові аргументи та неявно кодував їх у байти за "
"допомогою UTF-8. Це було проблематично, оскільки воно робило припущення щодо "
"правильного кодування та тому, що кодування змінної довжини може вийти з "
"ладу під час запису в сегмент структури фіксованої довжини."

msgid ""
"Code such as ``struct.pack('<6sHHBBB', 'GIF87a', x, y)`` should be rewritten "
"with to use bytes instead of text, ``struct.pack('<6sHHBBB', b'GIF87a', x, "
"y)``."
msgstr ""
"Такий код, як ``struct.pack('<6sHHBBB', 'GIF87a', x, y)`` слід переписати, "
"щоб використовувати байти замість тексту, ``struct.pack('<6sHHBBB', "
"b'GIF87a' , x, y)``."

msgid ""
"(Discovered by David Beazley and fixed by Victor Stinner; :issue:`10783`.)"
msgstr ""
"(Виявлено Девідом Бізлі та виправлено Віктором Стіннером; :issue:`10783`.)"

msgid ""
"The :class:`xml.etree.ElementTree` class now raises an :exc:`xml.etree."
"ElementTree.ParseError` when a parse fails. Previously it raised an :exc:"
"`xml.parsers.expat.ExpatError`."
msgstr ""
"Клас :class:`xml.etree.ElementTree` тепер викликає помилку :exc:`xml.etree."
"ElementTree.ParseError`, коли синтаксичний аналіз не вдається. Раніше це "
"викликало :exc:`xml.parsers.expat.ExpatError`."

msgid ""
"The new, longer :func:`str` value on floats may break doctests which rely on "
"the old output format."
msgstr ""
"Нове, довше значення :func:`str` у числах з плаваючою точкою може порушити "
"doctests, які покладаються на старий формат виводу."

msgid ""
"In :class:`subprocess.Popen`, the default value for *close_fds* is now "
"``True`` under Unix; under Windows, it is ``True`` if the three standard "
"streams are set to ``None``, ``False`` otherwise.  Previously, *close_fds* "
"was always ``False`` by default, which produced difficult to solve bugs or "
"race conditions when open file descriptors would leak into the child process."
msgstr ""
"У :class:`subprocess.Popen` стандартним значенням для *close_fds* тепер є "
"``True`` під Unix; під Windows це ``True``, якщо для трьох стандартних "
"потоків встановлено значення ``None``, ``False`` інакше. Раніше *close_fds* "
"за замовчуванням завжди мав значення ``False``, що створювало проблеми, які "
"важко було вирішити, або змагання, коли дескриптори відкритого файлу "
"потрапляли в дочірній процес."

msgid ""
"Support for legacy HTTP 0.9 has been removed from :mod:`urllib.request` and :"
"mod:`http.client`.  Such support is still present on the server side (in :"
"mod:`http.server`)."
msgstr ""
"Підтримку застарілого HTTP 0.9 було видалено з :mod:`urllib.request` і :mod:"
"`http.client`. Така підтримка все ще присутня на стороні сервера (у :mod:"
"`http.server`)."

msgid "(Contributed by Antoine Pitrou, :issue:`10711`.)"
msgstr "(Надав Антуан Пітру, :issue:`10711`.)"

msgid ""
"SSL sockets in timeout mode now raise :exc:`socket.timeout` when a timeout "
"occurs, rather than a generic :exc:`~ssl.SSLError`."
msgstr ""
"SSL-сокети в режимі тайм-ауту тепер викликають :exc:`socket.timeout`, коли "
"відбувається тайм-аут, а не загальну :exc:`~ssl.SSLError`."

msgid "(Contributed by Antoine Pitrou, :issue:`10272`.)"
msgstr "(Надав Антуан Пітру, :issue:`10272`.)"

msgid ""
"The misleading functions :c:func:`PyEval_AcquireLock()` and :c:func:"
"`PyEval_ReleaseLock()` have been officially deprecated.  The thread-state "
"aware APIs (such as :c:func:`PyEval_SaveThread()` and :c:func:"
"`PyEval_RestoreThread()`) should be used instead."
msgstr ""
"Функції, що вводять в оману :c:func:`PyEval_AcquireLock()` і :c:func:"
"`PyEval_ReleaseLock()` офіційно визнано застарілими. Замість цього слід "
"використовувати API, що визначають стан потоку (такі як :c:func:"
"`PyEval_SaveThread()` і :c:func:`PyEval_RestoreThread()`)."

msgid ""
"Due to security risks, :func:`asyncore.handle_accept` has been deprecated, "
"and a new function, :func:`asyncore.handle_accepted`, was added to replace "
"it."
msgstr ""
"Через ризики безпеці :func:`asyncore.handle_accept` застаріло, і на його "
"заміну додано нову функцію :func:`asyncore.handle_accepted`."

msgid "(Contributed by Giampaolo Rodola in :issue:`6706`.)"
msgstr "(Надав Джампаоло Родола в :issue:`6706`.)"

msgid ""
"Due to the new :term:`GIL` implementation, :c:func:`PyEval_InitThreads()` "
"cannot be called before :c:func:`Py_Initialize()` anymore."
msgstr ""
"Завдяки новій реалізації :term:`GIL`, :c:func:`PyEval_InitThreads()` більше "
"не можна викликати до :c:func:`Py_Initialize()`."
