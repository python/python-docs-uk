# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-28 01:51+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "What's New in Python 2.4"
msgstr "Що нового в Python 2.4"

msgid "Author"
msgstr "Автор"

msgid "A.M. Kuchling"
msgstr "A.M. Kuchling"

msgid ""
"This article explains the new features in Python 2.4.1, released on March "
"30, 2005."
msgstr ""
"У цій статті пояснюються нові функції Python 2.4.1, випущеного 30 березня "
"2005 року."

msgid ""
"Python 2.4 is a medium-sized release.  It doesn't introduce as many changes "
"as the radical Python 2.2, but introduces more features than the "
"conservative 2.3 release.  The most significant new language features are "
"function decorators and generator expressions; most other changes are to the "
"standard library."
msgstr ""
"Python 2.4 — випуск середнього розміру. Він не вносить стільки змін, як "
"радикальний Python 2.2, але пропонує більше функцій, ніж консервативний "
"випуск 2.3. Найважливішими новими можливостями мови є декоратори функцій і "
"вирази-генератори; більшість інших змін стосуються стандартної бібліотеки."

msgid ""
"According to the CVS change logs, there were 481 patches applied and 502 "
"bugs fixed between Python 2.3 and 2.4.  Both figures are likely to be "
"underestimates."
msgstr ""
"Згідно з журналами змін CVS, було застосовано 481 патч і 502 виправлені "
"помилки між Python 2.3 і 2.4. Обидві цифри, ймовірно, занижені."

msgid ""
"This article doesn't attempt to provide a complete specification of every "
"single new feature, but instead provides a brief introduction to each "
"feature.  For full details, you should refer to the documentation for Python "
"2.4, such as the Python Library Reference and the Python Reference Manual.  "
"Often you will be referred to the PEP for a particular new feature for "
"explanations of the implementation and design rationale."
msgstr ""
"Ця стаття не намагається надати повну специфікацію кожної окремої нової "
"функції, а натомість містить короткий вступ до кожної функції. Щоб отримати "
"повну інформацію, зверніться до документації для Python 2.4, наприклад "
"довідника бібліотеки Python і довідкового посібника Python. Часто вас "
"направлять до PEP щодо конкретної нової функції для пояснень реалізації та "
"обґрунтування дизайну."

msgid "PEP 218: Built-In Set Objects"
msgstr "PEP 218: Вбудовані об’єкти"

msgid ""
"Python 2.3 introduced the :mod:`sets` module.  C implementations of set data "
"types have now been added to the Python core as two new built-in types, "
"``set(iterable)`` and ``frozenset(iterable)``.  They provide high speed "
"operations for membership testing, for eliminating duplicates from "
"sequences, and for mathematical operations like unions, intersections, "
"differences, and symmetric differences. ::"
msgstr ""
"Python 2.3 представив модуль :mod:`sets`. Реалізації C типів даних set тепер "
"додано до ядра Python у вигляді двох нових вбудованих типів, "
"``set(iterable)`` і ``frozenset(iterable)``. Вони забезпечують високу "
"швидкість виконання операцій для тестування членства, для усунення "
"дублікатів із послідовностей і для математичних операцій, таких як "
"об’єднання, перетини, різниці та симетричні різниці. ::"

msgid ""
"The :func:`frozenset` type is an immutable version of :func:`set`. Since it "
"is immutable and hashable, it may be used as a dictionary key or as a member "
"of another set."
msgstr ""
"Тип :func:`frozenset` є незмінною версією :func:`set`. Оскільки він "
"незмінний і хешується, його можна використовувати як ключ словника або як "
"член іншого набору."

msgid ""
"The :mod:`sets` module remains in the standard library, and may be useful if "
"you wish to subclass the :class:`Set` or :class:`ImmutableSet` classes.  "
"There are currently no plans to deprecate the module."
msgstr ""
"Модуль :mod:`sets` залишається в стандартній бібліотеці та може бути "
"корисним, якщо ви бажаєте створити підклас класів :class:`Set` або :class:"
"`ImmutableSet`. Наразі немає планів припинення підтримки модуля."

msgid ":pep:`218` - Adding a Built-In Set Object Type"
msgstr ":pep:`218` - Додавання вбудованого типу об'єкта Set"

msgid ""
"Originally proposed by Greg Wilson and ultimately implemented by Raymond "
"Hettinger."
msgstr ""
"Спочатку запропонований Грегом Вілсоном і остаточно реалізований Реймондом "
"Геттінгером."

msgid "PEP 237: Unifying Long Integers and Integers"
msgstr "PEP 237: Об’єднання довгих і цілих чисел"

msgid ""
"The lengthy transition process for this PEP, begun in Python 2.2, takes "
"another step forward in Python 2.4.  In 2.3, certain integer operations that "
"would behave differently after int/long unification triggered :exc:"
"`FutureWarning` warnings and returned values limited to 32 or 64 bits "
"(depending on your platform).  In 2.4, these expressions no longer produce a "
"warning and instead produce a different result that's usually a long integer."
msgstr ""
"Тривалий процес переходу для цього PEP, розпочатий у Python 2.2, робить ще "
"один крок вперед у Python 2.4. У версії 2.3 певні цілочисельні операції, які "
"поводилися б інакше після об’єднання int/long, викликали попередження :exc:"
"`FutureWarning` і повертали значення, обмежені 32 або 64 бітами (залежно від "
"вашої платформи). У версії 2.4 ці вирази більше не створюють попередження, а "
"натомість створюють інший результат, який зазвичай є довгим цілим числом."

msgid ""
"The problematic expressions are primarily left shifts and lengthy "
"hexadecimal and octal constants.  For example, ``2 << 32`` results in a "
"warning in 2.3, evaluating to 0 on 32-bit platforms.  In Python 2.4, this "
"expression now returns the correct answer, 8589934592."
msgstr ""
"Проблемними виразами є, перш за все, зрушення вліво та довгі шістнадцяткові "
"та вісімкові константи. Наприклад, ``2 << 32`` призводить до попередження у "
"2.3, оцінюючи 0 на 32-розрядних платформах. У Python 2.4 цей вираз тепер "
"повертає правильну відповідь, 8589934592."

msgid ":pep:`237` - Unifying Long Integers and Integers"
msgstr ":pep:`237` - Об'єднання довгих і цілих чисел"

msgid ""
"Original PEP written by Moshe Zadka and GvR.  The changes for 2.4 were "
"implemented by  Kalle Svensson."
msgstr ""
"Оригінальний PEP, написаний Моше Цадка та GvR. Зміни у версії 2.4 вніс Калле "
"Свенссон."

msgid "PEP 289: Generator Expressions"
msgstr "PEP 289: Генератор виразів"

msgid ""
"The iterator feature introduced in Python 2.2 and the :mod:`itertools` "
"module make it easier to write programs that loop through large data sets "
"without having the entire data set in memory at one time.  List "
"comprehensions don't fit into this picture very well because they produce a "
"Python list object containing all of the items.  This unavoidably pulls all "
"of the objects into memory, which can be a problem if your data set is very "
"large.  When trying to write a functionally styled program, it would be "
"natural to write something like::"
msgstr ""

msgid "instead of  ::"
msgstr "замість  ::"

msgid ""
"The first form is more concise and perhaps more readable, but if you're "
"dealing with a large number of link objects you'd have to write the second "
"form to avoid having all link objects in memory at the same time."
msgstr ""
"Перша форма більш лаконічна і, можливо, більш читабельна, але якщо ви маєте "
"справу з великою кількістю об’єктів посилань, вам доведеться написати другу "
"форму, щоб уникнути одночасного зберігання всіх об’єктів посилань у пам’яті."

msgid ""
"Generator expressions work similarly to list comprehensions but don't "
"materialize the entire list; instead they create a generator that will "
"return elements one by one.  The above example could be written as::"
msgstr ""
"Вирази генератора працюють так само, як і розуміння списків, але не "
"матеріалізують весь список; натомість вони створюють генератор, який "
"повертатиме елементи один за одним. Наведений вище приклад можна записати "
"так:"

msgid ""
"Generator expressions always have to be written inside parentheses, as in "
"the above example.  The parentheses signalling a function call also count, "
"so if you want to create an iterator that will be immediately passed to a "
"function you could write::"
msgstr ""
"Вирази-генератори завжди мають бути записані в круглих дужках, як у прикладі "
"вище. Дужки, що сигналізують про виклик функції, також враховуються, тому, "
"якщо ви хочете створити ітератор, який буде негайно передано функції, ви "
"можете написати::"

msgid ""
"Generator expressions differ from list comprehensions in various small ways. "
"Most notably, the loop variable (*obj* in the above example) is not "
"accessible outside of the generator expression.  List comprehensions leave "
"the variable assigned to its last value; future versions of Python will "
"change this, making list comprehensions match generator expressions in this "
"respect."
msgstr ""
"Вирази генератора відрізняються від розуміння списків кількома дрібницями. "
"Зокрема, змінна циклу (*obj* у наведеному вище прикладі) недоступна поза "
"виразом генератора. Розуміння списків залишає змінну присвоєною її "
"останньому значенню; майбутні версії Python змінять це, зробивши розуміння "
"списку відповідним виразам генератора в цьому відношенні."

msgid ":pep:`289` - Generator Expressions"
msgstr ":pep:`289` - Генератор виразів"

msgid ""
"Proposed by Raymond Hettinger and implemented by Jiwon Seo with early "
"efforts steered by Hye-Shik Chang."
msgstr ""
"Запропоновано Raymond Hettinger і реалізовано Jiwon Seo з ранніми зусиллями "
"під керівництвом Hye-Shik Chang."

msgid "PEP 292: Simpler String Substitutions"
msgstr "PEP 292: Простіші заміни рядків"

msgid ""
"Some new classes in the standard library provide an alternative mechanism "
"for substituting variables into strings; this style of substitution may be "
"better for applications where untrained users need to edit templates."
msgstr ""
"Деякі нові класи в стандартній бібліотеці забезпечують альтернативний "
"механізм для підстановки змінних у рядки; цей стиль заміни може бути кращим "
"для додатків, де ненавченим користувачам потрібно редагувати шаблони."

msgid "The usual way of substituting variables by name is the ``%`` operator::"
msgstr "Звичайним способом заміни змінних за іменем є оператор ``%``::"

msgid ""
"When writing the template string, it can be easy to forget the ``i`` or "
"``s`` after the closing parenthesis.  This isn't a big problem if the "
"template is in a Python module, because you run the code, get an "
"\"Unsupported format character\" :exc:`ValueError`, and fix the problem.  "
"However, consider an application such as Mailman where template strings or "
"translations are being edited by users who aren't aware of the Python "
"language.  The format string's syntax is complicated to explain to such "
"users, and if they make a mistake, it's difficult to provide helpful "
"feedback to them."
msgstr ""
"Під час написання рядка шаблону може бути легко забути ``i`` або ``s`` після "
"закриваючої дужки. Це не є великою проблемою, якщо шаблон міститься в модулі "
"Python, тому що ви запускаєте код, отримуєте \"Символ непідтримуваного "
"формату\" :exc:`ValueError` і вирішуєте проблему. Однак розгляньте такий "
"додаток, як Mailman, у якому рядки шаблону або переклади редагуються "
"користувачами, які не знають мови Python. Синтаксис форматного рядка складно "
"пояснити таким користувачам, і якщо вони роблять помилку, їм важко надати "
"корисний відгук."

msgid ""
"PEP 292 adds a :class:`Template` class to the :mod:`string` module that uses "
"``$`` to indicate a substitution::"
msgstr ""
"PEP 292 додає клас :class:`Template` до модуля :mod:`string`, який "
"використовує ``$`` для позначення заміни::"

msgid ""
"If a key is missing from the dictionary, the :meth:`substitute` method will "
"raise a :exc:`KeyError`.  There's also a :meth:`safe_substitute` method that "
"ignores missing keys::"
msgstr ""
"Якщо в словнику відсутній ключ, метод :meth:`substitute` викличе :exc:"
"`KeyError`. Існує також метод :meth:`safe_substitute`, який ігнорує відсутні "
"ключі::"

msgid ":pep:`292` - Simpler String Substitutions"
msgstr ":pep:`292` - Простіші підстановки рядків"

msgid "Written and implemented  by Barry Warsaw."
msgstr "Написав і реалізував Баррі Варшау."

msgid "PEP 318: Decorators for Functions and Methods"
msgstr "PEP 318: Декоратори для функцій і методів"

msgid ""
"Python 2.2 extended Python's object model by adding static methods and class "
"methods, but it didn't extend Python's syntax to provide any new way of "
"defining static or class methods.  Instead, you had to write a :keyword:"
"`def` statement in the usual way, and pass the resulting method to a :func:"
"`staticmethod` or :func:`classmethod` function that would wrap up the "
"function as a method of the new type. Your code would look like this::"
msgstr ""
"Python 2.2 розширив об’єктну модель Python, додавши статичні методи та "
"методи класу, але не розширив синтаксис Python, щоб надати новий спосіб "
"визначення статичних методів або методів класу. Замість цього вам потрібно "
"було написати оператор :keyword:`def` у звичайний спосіб і передати "
"отриманий метод у функцію :func:`staticmethod` або :func:`classmethod`, яка "
"завершувала б функцію як метод новий тип. Ваш код виглядатиме так::"

msgid ""
"If the method was very long, it would be easy to miss or forget the :func:"
"`classmethod` invocation after the function body."
msgstr ""
"Якби метод був дуже довгим, було б легко пропустити або забути виклик :func:"
"`classmethod` після тіла функції."

msgid ""
"The intention was always to add some syntax to make such definitions more "
"readable, but at the time of 2.2's release a good syntax was not obvious.  "
"Today a good syntax *still* isn't obvious but users are asking for easier "
"access to the feature; a new syntactic feature has been added to meet this "
"need."
msgstr ""
"Намір завжди полягав у тому, щоб додати певний синтаксис, щоб зробити такі "
"визначення більш читабельними, але на момент випуску версії 2.2 хороший "
"синтаксис не був очевидним. Сьогодні хороший синтаксис *все ще* неочевидний, "
"але користувачі просять полегшити доступ до функції; для задоволення цієї "
"потреби додано нову синтаксичну функцію."

msgid ""
"The new feature is called \"function decorators\".  The name comes from the "
"idea that :func:`classmethod`, :func:`staticmethod`, and friends are storing "
"additional information on a function object; they're *decorating* functions "
"with more details."
msgstr ""
"Нова функція називається \"декоратори функцій\". Назва походить від ідеї, "
"що :func:`classmethod`, :func:`staticmethod` та друзі зберігають додаткову "
"інформацію про об’єкт функції; вони *прикрашають* функції більшою кількістю "
"деталей."

msgid ""
"The notation borrows from Java and uses the ``'@'`` character as an "
"indicator. Using the new syntax, the example above would be written::"
msgstr ""
"Позначення запозичено з Java і використовує символ ``'@'`` як індикатор. "
"Використовуючи новий синтаксис, приклад вище буде написаний::"

msgid ""
"The ``@classmethod`` is shorthand for the ``meth=classmethod(meth)`` "
"assignment. More generally, if you have the following::"
msgstr ""
"``@classmethod`` є скороченням для ``meth=classmethod(meth)`` призначення. "
"Загалом, якщо у вас є:"

msgid "It's equivalent to the following pre-decorator code::"
msgstr "Це еквівалентно такому попередньому коду декоратора::"

msgid ""
"Decorators must come on the line before a function definition, one decorator "
"per line, and can't be on the same line as the def statement, meaning that "
"``@A def f(): ...`` is illegal.  You can only decorate function definitions, "
"either at the module level or inside a class; you can't decorate class "
"definitions."
msgstr ""
"Декоратори мають бути в рядку перед визначенням функції, по одному "
"декоратору на рядок, і не можуть бути в одному рядку з інструкцією def, "
"тобто ``@A def f(): ...`` є незаконним. Ви можете лише прикрашати визначення "
"функцій на рівні модуля або всередині класу; ви не можете прикрасити "
"визначення класу."

msgid ""
"A decorator is just a function that takes the function to be decorated as an "
"argument and returns either the same function or some new object.  The "
"return value of the decorator need not be callable (though it typically is), "
"unless further decorators will be applied to the result.  It's easy to write "
"your own decorators.  The following simple example just sets an attribute on "
"the function object::"
msgstr ""
"Декоратор — це лише функція, яка приймає декоровану функцію як аргумент і "
"повертає або ту саму функцію, або новий об’єкт. Значення, що повертається "
"декоратором, не повинно бути викликаним (хоча зазвичай це так), якщо до "
"результату не будуть застосовані інші декоратори. Легко написати власні "
"декоратори. Наступний простий приклад просто встановлює атрибут для об’єкта "
"функції::"

msgid ""
"As a slightly more realistic example, the following decorator checks that "
"the supplied argument is an integer::"
msgstr ""
"Як трохи більш реалістичний приклад, наступний декоратор перевіряє, що "
"наданий аргумент є цілим числом:"

msgid ""
"An example in :pep:`318` contains a fancier version of this idea that lets "
"you both specify the required type and check the returned type."
msgstr ""
"Приклад у :pep:`318` містить моднішу версію цієї ідеї, яка дозволяє як "
"вказати необхідний тип, так і перевірити повернутий тип."

msgid ""
"Decorator functions can take arguments.  If arguments are supplied, your "
"decorator function is called with only those arguments and must return a new "
"decorator function; this function must take a single function and return a "
"function, as previously described.  In other words, ``@A @B @C(args)`` "
"becomes::"
msgstr ""
"Функції-декоратори можуть приймати аргументи. Якщо надано аргументи, ваша "
"функція-декоратор викликається лише з цими аргументами та має повернути нову "
"функцію-декоратор; ця функція повинна приймати одну функцію та повертати "
"функцію, як описано раніше. Іншими словами, ``@A @B @C(args)`` стає:"

msgid ""
"Getting this right can be slightly brain-bending, but it's not too difficult."
msgstr ""
"Зробити це правильно може трохи заморочити мозок, але це не надто складно."

msgid ""
"A small related change makes the :attr:`func_name` attribute of functions "
"writable.  This attribute is used to display function names in tracebacks, "
"so decorators should change the name of any new function that's constructed "
"and returned."
msgstr ""
"Невелика відповідна зміна робить атрибут :attr:`func_name` функцій доступним "
"для запису. Цей атрибут використовується для відображення імен функцій у "
"зворотних трасуваннях, тому декоратори повинні змінити назву будь-якої нової "
"функції, яка створена та повернута."

msgid ":pep:`318` - Decorators for Functions, Methods and Classes"
msgstr ":pep:`318` - Декоратори для функцій, методів і класів"

msgid ""
"Written  by Kevin D. Smith, Jim Jewett, and Skip Montanaro.  Several people "
"wrote patches implementing function decorators, but the one that was "
"actually checked in was patch #979728, written by Mark Russell."
msgstr ""
"Автори: Кевін Д. Сміт, Джим Джеветт і Скіп Монтанаро. Кілька людей написали "
"патчі, що реалізують декоратори функцій, але фактично зареєстровано патч "
"№979728, написаний Марком Расселом."

msgid "https://wiki.python.org/moin/PythonDecoratorLibrary"
msgstr "https://wiki.python.org/moin/PythonDecoratorLibrary"

msgid "This Wiki page contains several examples of decorators."
msgstr "Ця сторінка Wiki містить кілька прикладів декораторів."

msgid "PEP 322: Reverse Iteration"
msgstr "PEP 322: Зворотна ітерація"

msgid ""
"A new built-in function, ``reversed(seq)``, takes a sequence and returns an "
"iterator that loops over the elements of the sequence  in reverse order.   ::"
msgstr ""
"Нова вбудована функція, ``reversed(seq)``, приймає послідовність і повертає "
"ітератор, який перебирає елементи послідовності у зворотному порядку. ::"

msgid ""
"Compared to extended slicing, such as ``range(1,4)[::-1]``, :func:`reversed` "
"is easier to read, runs faster, and uses substantially less memory."
msgstr ""
"Порівняно з розширеним нарізанням, таким як ``range(1,4)[::-1]``, :func:"
"`reversed` легше читати, працює швидше та використовує значно менше пам’яті."

msgid ""
"Note that :func:`reversed` only accepts sequences, not arbitrary iterators.  "
"If you want to reverse an iterator, first convert it to  a list with :func:"
"`list`. ::"
msgstr ""
"Зауважте, що :func:`reversed` приймає лише послідовності, а не довільні "
"ітератори. Якщо ви хочете змінити ітератор, спочатку перетворіть його на "
"список за допомогою :func:`list`. ::"

msgid ":pep:`322` - Reverse Iteration"
msgstr ":pep:`322` - Зворотна ітерація"

msgid "Written and implemented by Raymond Hettinger."
msgstr "Написаний і реалізований Раймондом Геттінгером."

msgid "PEP 324: New subprocess Module"
msgstr "PEP 324: Новий модуль підпроцесу"

msgid ""
"The standard library provides a number of ways to execute a subprocess, "
"offering different features and different levels of complexity. ``os."
"system(command)`` is easy to use, but slow (it runs a shell process which "
"executes the command) and dangerous (you have to be careful about escaping "
"the shell's metacharacters).  The :mod:`popen2` module offers classes that "
"can capture standard output and standard error from the subprocess, but the "
"naming is confusing.  The :mod:`subprocess` module cleans  this up, "
"providing a unified interface that offers all the features you might need."
msgstr ""
"Стандартна бібліотека надає кілька способів виконання підпроцесу, пропонуючи "
"різні функції та різні рівні складності. ``os.system(command)`` простий у "
"використанні, але повільний (він запускає процес оболонки, який виконує "
"команду) і небезпечний (ви повинні бути обережними з екрануванням "
"метасимволів оболонки). Модуль :mod:`popen2` пропонує класи, які можуть "
"фіксувати стандартний вихід і стандартну помилку підпроцесу, але іменування "
"викликає плутанину. Модуль :mod:`subprocess` очищає це, надаючи уніфікований "
"інтерфейс, який пропонує всі функції, які можуть вам знадобитися."

msgid ""
"Instead of :mod:`popen2`'s collection of classes, :mod:`subprocess` contains "
"a single class called :class:`Popen`  whose constructor supports a number of "
"different keyword arguments. ::"
msgstr ""
"Замість колекції класів :mod:`popen2`, :mod:`subprocess` містить єдиний клас "
"під назвою :class:`Popen`, конструктор якого підтримує низку різних ключових "
"аргументів. ::"

msgid ""
"*args* is commonly a sequence of strings that will be the arguments to the "
"program executed as the subprocess.  (If the *shell* argument is true, "
"*args* can be a string which will then be passed on to the shell for "
"interpretation, just as :func:`os.system` does.)"
msgstr ""
"*args* зазвичай є послідовністю рядків, які будуть аргументами програми, що "
"виконується як підпроцес. (Якщо аргумент *shell* має значення true, *args* "
"може бути рядком, який потім буде передано в оболонку для інтерпретації, як "
"це робить :func:`os.system`.)"

msgid ""
"*stdin*, *stdout*, and *stderr* specify what the subprocess's input, output, "
"and error streams will be.  You can provide a file object or a file "
"descriptor, or you can use the constant ``subprocess.PIPE`` to create a pipe "
"between the subprocess and the parent."
msgstr ""
"*stdin*, *stdout* і *stderr* визначають, якими будуть вхідні, вихідні та "
"помилкові потоки підпроцесу. Ви можете надати файловий об’єкт або дескриптор "
"файлу, або ви можете використовувати константу ``subprocess.PIPE`` для "
"створення каналу між підпроцесом і батьківським процесом."

msgid "The constructor has a number of handy options:"
msgstr "Конструктор має ряд зручних опцій:"

msgid ""
"*close_fds* requests that all file descriptors be closed before running the "
"subprocess."
msgstr ""
"*close_fds* просить закрити всі файлові дескриптори перед запуском "
"підпроцесу."

msgid ""
"*cwd* specifies the working directory in which the subprocess will be "
"executed (defaulting to whatever the parent's working directory is)."
msgstr ""
"*cwd* визначає робочий каталог, у якому виконуватиметься підпроцес (за "
"замовчуванням це будь-який робочий каталог батьківського процесу)."

msgid "*env* is a dictionary specifying environment variables."
msgstr "*env* — це словник, який визначає змінні середовища."

msgid ""
"*preexec_fn* is a function that gets called before the child is started."
msgstr ""
"*preexec_fn* — це функція, яка викликається перед запуском дочірнього "
"елемента."

msgid ""
"*universal_newlines* opens the child's input and output using Python's :term:"
"`universal newlines` feature."
msgstr ""
"*universal_newlines* відкриває введення та виведення дочірнього елемента за "
"допомогою функції Python :term:`universal newlines`."

msgid ""
"Once you've created the :class:`Popen` instance,  you can call its :meth:"
"`wait` method to pause until the subprocess has exited, :meth:`poll` to "
"check if it's exited without pausing,  or ``communicate(data)`` to send the "
"string *data* to the subprocess's standard input.   ``communicate(data)``  "
"then reads any data that the subprocess has sent to its standard output  or "
"standard error, returning a tuple ``(stdout_data, stderr_data)``."
msgstr ""
"Створивши екземпляр :class:`Popen`, ви можете викликати його метод :meth:"
"`wait`, щоб призупинити підпроцес, доки підпроцес не завершить роботу, :meth:"
"`poll`, щоб перевірити, чи він вийшов без паузи, або ``communicate(data)``, "
"щоб надіслати рядок *data* на стандартний вхід підпроцесу. "
"``communicate(data)`` потім зчитує всі дані, які підпроцес надіслав на свій "
"стандартний вихід або стандартну помилку, повертаючи кортеж ``(stdout_data, "
"stderr_data)``."

msgid ""
":func:`call` is a shortcut that passes its arguments along to the :class:"
"`Popen` constructor, waits for the command to complete, and returns the "
"status code of the subprocess.  It can serve as a safer analog to :func:`os."
"system`::"
msgstr ""
":func:`call` — це ярлик, який передає свої аргументи конструктору :class:"
"`Popen`, очікує на завершення команди та повертає код статусу підпроцесу. "
"Він може служити безпечнішим аналогом :func:`os.system`::"

msgid ""
"The command is invoked without use of the shell.  If you really do want to  "
"use the shell, you can add ``shell=True`` as a keyword argument and provide "
"a string instead of a sequence::"
msgstr ""
"Команда викликається без використання оболонки. Якщо ви дійсно хочете "
"використовувати оболонку, ви можете додати ``shell=True`` як ключовий "
"аргумент і надати рядок замість послідовності::"

msgid ""
"The PEP takes various examples of shell and Python code and shows how they'd "
"be translated into Python code that uses :mod:`subprocess`.  Reading this "
"section of the PEP is highly recommended."
msgstr ""
"PEP бере різні приклади оболонки та коду Python і показує, як вони можуть "
"бути переведені в код Python, який використовує :mod:`subprocess`. Настійно "
"рекомендується прочитати цей розділ PEP."

msgid ":pep:`324` - subprocess - New process module"
msgstr ":pep:`324` - підпроцес - Новий модуль процесу"

msgid ""
"Written and implemented by Peter Åstrand, with assistance from Fredrik Lundh "
"and others."
msgstr ""
"Написано та реалізовано Пітером Естрандом за сприяння Фредріка Лунда та "
"інших."

msgid "PEP 327: Decimal Data Type"
msgstr "PEP 327: десятковий тип даних"

msgid ""
"Python has always supported floating-point (FP) numbers, based on the "
"underlying C :c:expr:`double` type, as a data type.  However, while most "
"programming languages provide a floating-point type, many people (even "
"programmers) are unaware that floating-point numbers don't represent certain "
"decimal fractions accurately.  The new :class:`Decimal` type can represent "
"these fractions accurately, up to a user-specified precision limit."
msgstr ""

msgid "Why is Decimal needed?"
msgstr "Навіщо потрібен Decimal?"

msgid ""
"The limitations arise from the representation used for floating-point "
"numbers. FP numbers are made up of three components:"
msgstr ""
"Обмеження виникають через представлення чисел з плаваючою комою. Номери FP "
"складаються з трьох компонентів:"

msgid "The sign, which is positive or negative."
msgstr "Знак, який є позитивним чи негативним."

msgid ""
"The mantissa, which is a single-digit binary number   followed by a "
"fractional part.  For example, ``1.01`` in base-2 notation is ``1 + 0/2 + "
"1/4``, or 1.25 in decimal notation."
msgstr ""
"Мантиса, яка є одноцифровим двійковим числом, після якого йде дробова "
"частина. Наприклад, \"1,01\" у нотації з основою 2 — це \"1 + 0/2 + 1/4\" "
"або 1,25 у десятковій системі числення."

msgid ""
"The exponent, which tells where the decimal point is located in the number "
"represented."
msgstr "Експонента, яка вказує, де в представленому числі розташована кома."

msgid ""
"For example, the number 1.25 has positive sign, a mantissa value of 1.01 (in "
"binary), and an exponent of 0 (the decimal point doesn't need to be "
"shifted). The number 5 has the same sign and mantissa, but the exponent is 2 "
"because the mantissa is multiplied by 4 (2 to the power of the exponent 2); "
"1.25 \\* 4 equals 5."
msgstr ""
"Наприклад, число 1,25 має додатний знак, значення мантиси 1,01 (у двійковій "
"системі) і експоненту 0 (десяткову кому не потрібно зміщувати). Число 5 має "
"той самий знак і мантису, але показник степеня дорівнює 2, оскільки мантиса "
"множиться на 4 (2 у ступені степеня 2); 1,25 \\* 4 дорівнює 5."

msgid ""
"Modern systems usually provide floating-point support that conforms to a "
"standard called IEEE 754.  C's :c:expr:`double` type is usually implemented "
"as a 64-bit IEEE 754 number, which uses 52 bits of space for the mantissa.  "
"This means that numbers can only be specified to 52 bits of precision.  If "
"you're trying to represent numbers whose expansion repeats endlessly, the "
"expansion is cut off after 52 bits. Unfortunately, most software needs to "
"produce output in base 10, and common fractions in base 10 are often "
"repeating decimals in binary. For example, 1.1 decimal is binary "
"``1.0001100110011 ...``; .1 = 1/16 + 1/32 + 1/256 plus an infinite number of "
"additional terms.  IEEE 754 has to chop off that infinitely repeated decimal "
"after 52 digits, so the representation is slightly inaccurate."
msgstr ""

msgid "Sometimes you can see this inaccuracy when the number is printed::"
msgstr "Іноді ви можете побачити цю неточність, коли надруковано номер:"

msgid ""
"The inaccuracy isn't always visible when you print the number because the FP-"
"to-decimal-string conversion is provided by the C library, and most C "
"libraries try to produce sensible output.  Even if it's not displayed, "
"however, the inaccuracy is still there and subsequent operations can magnify "
"the error."
msgstr ""
"Неточність не завжди помітна, коли ви друкуєте число, тому що перетворення "
"FP-рядка в десятковий рядок забезпечується бібліотекою C, і більшість "
"бібліотек C намагаються створити розумний результат. Однак навіть якщо вона "
"не відображається, неточність все одно існує, і наступні операції можуть "
"збільшити помилку."

msgid ""
"For many applications this doesn't matter.  If I'm plotting points and "
"displaying them on my monitor, the difference between 1.1 and "
"1.1000000000000001 is too small to be visible.  Reports often limit output "
"to a certain number of decimal places, and if you round the number to two or "
"three or even eight decimal places, the error is never apparent.  However, "
"for applications where it does matter,  it's a lot of work to implement your "
"own custom arithmetic routines."
msgstr ""
"Для багатьох програм це не має значення. Якщо я малюю точки та відображаю їх "
"на моніторі, різниця між 1,1 і 1,1000000000000001 надто мала, щоб її було "
"видно. Звіти часто обмежують виведення певною кількістю знаків після коми, і "
"якщо округлити число до двох, трьох або навіть восьми знаків після коми, "
"помилка ніколи не буде очевидною. Однак для додатків, де це має значення, "
"реалізація власних користувацьких арифметичних процедур вимагає багато "
"роботи."

msgid "Hence, the :class:`Decimal` type was created."
msgstr "Таким чином, був створений тип :class:`Decimal`."

msgid "The :class:`Decimal` type"
msgstr "Тип :class:`Decimal`"

msgid ""
"A new module, :mod:`decimal`, was added to Python's standard library.  It "
"contains two classes, :class:`Decimal` and :class:`Context`.  :class:"
"`Decimal` instances represent numbers, and :class:`Context` instances are "
"used to wrap up various settings such as the precision and default rounding "
"mode."
msgstr ""
"Новий модуль, :mod:`decimal`, було додано до стандартної бібліотеки Python. "
"Він містить два класи, :class:`Decimal` і :class:`Context`. Екземпляри :"
"class:`Decimal` представляють числа, а екземпляри :class:`Context` "
"використовуються для завершення різних налаштувань, таких як точність і "
"режим округлення за замовчуванням."

msgid ""
":class:`Decimal` instances are immutable, like regular Python integers and "
"FP numbers; once it's been created, you can't change the value an instance "
"represents.  :class:`Decimal` instances can be created from integers or "
"strings::"
msgstr ""
":class:`Decimal` екземпляри незмінні, як і звичайні цілі числа Python і "
"числа FP; після того, як його було створено, ви не можете змінити значення, "
"яке представляє екземпляр. :class:`Decimal` екземпляри можна створити з "
"цілих чисел або рядків::"

msgid ""
"You can also provide tuples containing the sign, the mantissa represented  "
"as a tuple of decimal digits, and the exponent::"
msgstr ""
"Ви також можете надати кортежі, що містять знак, мантису, представлену як "
"кортеж десяткових цифр, і експоненту:"

msgid ""
"Cautionary note: the sign bit is a Boolean value, so 0 is positive and 1 is "
"negative."
msgstr ""
"Застереження: знаковий біт є логічним значенням, тому 0 є позитивним, а 1 – "
"негативним."

msgid ""
"Converting from floating-point numbers poses a bit of a problem: should the "
"FP number representing 1.1 turn into the decimal number for exactly 1.1, or "
"for 1.1 plus whatever inaccuracies are introduced? The decision was to dodge "
"the issue and leave such a conversion out of the API.  Instead, you should "
"convert the floating-point number into a string using the desired precision "
"and pass the string to the :class:`Decimal` constructor::"
msgstr ""
"Перетворення чисел із плаваючою комою створює певну проблему: чи число FP, "
"що представляє 1,1, має перетворитися на десяткове число для точного 1,1 чи "
"для 1,1 плюс будь-які неточності, які вводяться? Рішення полягало в тому, "
"щоб уникнути проблеми та залишити таке перетворення поза API. Натомість вам "
"слід перетворити число з плаваючою комою на рядок із потрібною точністю та "
"передати рядок у конструктор :class:`Decimal`::"

msgid ""
"Once you have :class:`Decimal` instances, you can perform the usual "
"mathematical operations on them.  One limitation: exponentiation requires an "
"integer exponent::"
msgstr ""
"Коли у вас є екземпляри :class:`Decimal`, ви можете виконувати над ними "
"звичайні математичні операції. Одне обмеження: для піднесення до степеня "
"потрібен цілий показник:"

msgid ""
"You can combine :class:`Decimal` instances with integers, but not with "
"floating-point numbers::"
msgstr ""
"Ви можете комбінувати екземпляри :class:`Decimal` з цілими числами, але не з "
"числами з плаваючою комою::"

msgid ""
":class:`Decimal` numbers can be used with the :mod:`math` and :mod:`cmath` "
"modules, but note that they'll be immediately converted to  floating-point "
"numbers before the operation is performed, resulting in a possible loss of "
"precision and accuracy.  You'll also get back a regular floating-point "
"number and not a :class:`Decimal`.   ::"
msgstr ""
":class:`Decimal` числа можна використовувати з модулями :mod:`math` і :mod:"
"`cmath`, але зауважте, що вони будуть негайно перетворені на числа з "
"плаваючою комою перед виконанням операції, що призведе до можлива втрата "
"точності та акуратності. Ви також отримаєте звичайне число з плаваючою "
"комою, а не :class:`Decimal`. ::"

msgid ""
":class:`Decimal` instances have a :meth:`sqrt` method that returns a :class:"
"`Decimal`, but if you need other things such as trigonometric functions "
"you'll have to implement them. ::"
msgstr ""
"Екземпляри :class:`Decimal` мають метод :meth:`sqrt`, який повертає :class:"
"`Decimal`, але якщо вам потрібні інші речі, такі як тригонометричні функції, "
"вам доведеться їх реалізувати. ::"

msgid "The :class:`Context` type"
msgstr "Тип :class:`Context`"

msgid ""
"Instances of the :class:`Context` class encapsulate several settings for "
"decimal operations:"
msgstr ""
"Екземпляри класу :class:`Context` інкапсулюють кілька параметрів для "
"десяткових операцій:"

msgid ":attr:`prec` is the precision, the number of decimal places."
msgstr ":attr:`prec` — це точність, кількість знаків після коми."

msgid ""
":attr:`rounding` specifies the rounding mode.  The :mod:`decimal` module has "
"constants for the various possibilities: :const:`ROUND_DOWN`, :const:"
"`ROUND_CEILING`,  :const:`ROUND_HALF_EVEN`, and various others."
msgstr ""
":attr:`rounding` вказує режим округлення. Модуль :mod:`decimal` має "
"константи для різних можливостей: :const:`ROUND_DOWN`, :const:"
"`ROUND_CEILING`, :const:`ROUND_HALF_EVEN` та інші."

msgid ""
":attr:`traps` is a dictionary specifying what happens on encountering "
"certain error conditions: either  an exception is raised or  a value is "
"returned.  Some examples of error conditions are division by zero, loss of "
"precision, and overflow."
msgstr ""
":attr:`traps` — це словник, який визначає, що відбувається, коли трапляються "
"певні умови помилки: або виникає виняткова ситуація, або повертається "
"значення. Деякі приклади помилок: ділення на нуль, втрата точності та "
"переповнення."

msgid ""
"There's a thread-local default context available by calling :func:"
"`getcontext`; you can change the properties of this context to alter the "
"default precision, rounding, or trap handling.  The following example shows "
"the effect of changing the precision of the default context::"
msgstr ""
"Існує локальний контекст потоку за замовчуванням, доступний за допомогою "
"виклику :func:`getcontext`; ви можете змінити властивості цього контексту, "
"щоб змінити точність за замовчуванням, округлення або обробку перехоплень. У "
"наступному прикладі показано вплив зміни точності контексту за замовчуванням:"

msgid ""
"The default action for error conditions is selectable; the module can either "
"return a special value such as infinity or not-a-number, or exceptions can "
"be raised::"
msgstr ""
"Дію за умовчанням для умов помилки можна вибрати; модуль може або повертати "
"спеціальне значення, наприклад нескінченність або не-число, або можуть бути "
"викликані винятки::"

msgid ""
"The :class:`Context` instance also has various methods for formatting  "
"numbers such as :meth:`to_eng_string` and :meth:`to_sci_string`."
msgstr ""
"Екземпляр :class:`Context` також має різні методи форматування чисел, "
"наприклад :meth:`to_eng_string` і :meth:`to_sci_string`."

msgid ""
"For more information, see the documentation for the :mod:`decimal` module, "
"which includes a quick-start tutorial and a reference."
msgstr ""
"Для отримання додаткової інформації перегляньте документацію до модуля :mod:"
"`decimal`, яка містить короткий посібник і довідку."

msgid ":pep:`327` - Decimal Data Type"
msgstr ":pep:`327` - десятковий тип даних"

msgid ""
"Written by Facundo Batista and implemented by Facundo Batista, Eric Price, "
"Raymond Hettinger, Aahz, and Tim Peters."
msgstr ""
"Написаний Факундо Батістою та реалізований Факундо Батістою, Еріком Прайсом, "
"Реймондом Геттінгером, Аазом і Тімом Пітерсом."

msgid "http://www.lahey.com/float.htm"
msgstr "http://www.lahey.com/float.htm"

msgid ""
"The article uses Fortran code to illustrate many of the problems that "
"floating-point inaccuracy can cause."
msgstr ""
"У статті використовується код Fortran, щоб проілюструвати багато проблем, до "
"яких може призвести неточність числа з плаваючою комою."

msgid "http://speleotrove.com/decimal/"
msgstr "http://speleotrove.com/decimal/"

msgid ""
"A description of a decimal-based representation.  This representation is "
"being proposed as a standard, and underlies the new Python decimal type.  "
"Much of this material was written by Mike Cowlishaw, designer of the Rexx "
"language."
msgstr ""
"Опис десяткового представлення. Це представлення пропонується як стандарт і "
"лежить в основі нового десяткового типу Python. Значну частину цього "
"матеріалу написав Майк Коулішоу, розробник мови Rexx."

msgid "PEP 328: Multi-line Imports"
msgstr "PEP 328: Багаторядковий імпорт"

msgid ""
"One language change is a small syntactic tweak aimed at making it easier to "
"import many names from a module.  In a ``from module import names`` "
"statement, *names* is a sequence of names separated by commas.  If the "
"sequence is  very long, you can either write multiple imports from the same "
"module, or you can use backslashes to escape the line endings like this::"
msgstr ""
"Одна зміна мови — це невелике синтаксичне налаштування, спрямоване на "
"полегшення імпорту багатьох імен із модуля. У операторі ``from module import "
"names`` *names* — це послідовність імен, розділених комами. Якщо "
"послідовність дуже довга, ви можете або написати кілька імпортів з одного "
"модуля, або ви можете використовувати зворотні похилі риски, щоб уникнути "
"закінчення рядків, як це::"

msgid ""
"The syntactic change in Python 2.4 simply allows putting the names within "
"parentheses.  Python ignores newlines within a parenthesized expression, so "
"the backslashes are no longer needed::"
msgstr ""
"Синтаксичні зміни в Python 2.4 просто дозволяють поміщати імена в дужки. "
"Python ігнорує нові рядки у виразі в дужках, тому зворотна похила риска "
"більше не потрібна::"

msgid ""
"The PEP also proposes that all :keyword:`import` statements be absolute "
"imports, with a leading ``.`` character to indicate a relative import.  This "
"part of the PEP was not implemented for Python 2.4, but was completed for "
"Python 2.5."
msgstr ""
"PEP також пропонує, щоб усі оператори :keyword:`import` були абсолютними "
"імпортами, із символом ``.`` на початку, який вказує на відносний імпорт. Ця "
"частина PEP не була реалізована для Python 2.4, але була завершена для "
"Python 2.5."

msgid ":pep:`328` - Imports: Multi-Line and Absolute/Relative"
msgstr ":pep:`328` - Імпорт: багаторядковий і абсолютний/відносний"

msgid "Written by Aahz.  Multi-line imports were implemented by Dima Dorfman."
msgstr "Написав Ааз. Багаторядковий імпорт реалізував Діма Дорфман."

msgid "PEP 331: Locale-Independent Float/String Conversions"
msgstr "PEP 331: Незалежне від мови перетворення Float/String"

msgid ""
"The :mod:`locale` modules lets Python software select various conversions "
"and display conventions that are localized to a particular country or "
"language. However, the module was careful to not change the numeric locale "
"because various functions in Python's implementation required that the "
"numeric locale remain set to the ``'C'`` locale.  Often this was because the "
"code was using the C library's :c:func:`atof` function."
msgstr ""
"Модулі :mod:`locale` дозволяють програмному забезпеченню Python вибирати "
"різні перетворення та відображати конвенції, які локалізовані для певної "
"країни чи мови. Однак модуль був обережним, щоб не змінити числову локаль, "
"оскільки різні функції в реалізації Python вимагали, щоб числова локаль "
"залишалася встановленою на ``'C''`` локалі. Часто це було тому, що код "
"використовував функцію :c:func:`atof` бібліотеки C."

msgid ""
"Not setting the numeric locale caused trouble for extensions that used third-"
"party C libraries, however, because they wouldn't have the correct locale "
"set. The motivating example was GTK+, whose user interface widgets weren't "
"displaying numbers in the current locale."
msgstr ""
"Однак відсутність числової локалі спричиняла проблеми для розширень, які "
"використовували сторонні бібліотеки C, оскільки вони не мали правильного "
"налаштування локалі. Мотивуючим прикладом був GTK+, віджети інтерфейсу "
"користувача якого не відображали числа в поточній локалі."

msgid ""
"The solution described in the PEP is to add three new functions to the "
"Python API that perform ASCII-only conversions, ignoring the locale setting:"
msgstr ""
"Рішення, описане в PEP, полягає в додаванні трьох нових функцій до API "
"Python, які виконують перетворення лише ASCII, ігноруючи налаштування мови:"

msgid ""
"``PyOS_ascii_strtod(str, ptr)``  and ``PyOS_ascii_atof(str, ptr)`` both "
"convert a string to a C :c:expr:`double`."
msgstr ""

msgid ""
"``PyOS_ascii_formatd(buffer, buf_len, format, d)`` converts a :c:expr:"
"`double` to an ASCII string."
msgstr ""

msgid ""
"The code for these functions came from the GLib library (https://developer."
"gnome.org/glib/stable/), whose developers kindly relicensed the relevant "
"functions and donated them to the Python Software Foundation.  The :mod:"
"`locale` module  can now change the numeric locale, letting extensions such "
"as GTK+  produce the correct results."
msgstr ""
"Код для цих функцій надійшов із бібліотеки GLib (https://developer.gnome.org/"
"glib/stable/), розробники якої люб’язно повторно ліцензували відповідні "
"функції та передали їх Python Software Foundation. Модуль :mod:`locale` "
"тепер може змінювати числову локаль, дозволяючи таким розширенням, як GTK+, "
"видавати правильні результати."

msgid ":pep:`331` - Locale-Independent Float/String Conversions"
msgstr ":pep:`331` - Незалежне від мови перетворення Float/String"

msgid "Written by Christian R. Reis, and implemented by Gustavo Carneiro."
msgstr "Написаний Крістіаном Р. Рейсом, реалізований Густаво Карнейро."

msgid "Other Language Changes"
msgstr "Інші зміни мови"

msgid ""
"Here are all of the changes that Python 2.4 makes to the core Python "
"language."
msgstr "Ось усі зміни, які Python 2.4 вносить у основну мову Python."

msgid "Decorators for functions and methods were added (:pep:`318`)."
msgstr "Додано декоратори для функцій і методів (:pep:`318`)."

msgid ""
"Built-in :func:`set` and :func:`frozenset` types were  added (:pep:`218`). "
"Other new built-ins include the ``reversed(seq)`` function (:pep:`322`)."
msgstr ""
"Додано вбудовані типи :func:`set` і :func:`frozenset` (:pep:`218`). Інші "
"нові вбудовані функції включають функцію ``reversed(seq)`` (:pep:`322`)."

msgid "Generator expressions were added (:pep:`289`)."
msgstr "Додано генератор виразів (:pep:`289`)."

msgid ""
"Certain numeric expressions no longer return values restricted to 32 or 64 "
"bits (:pep:`237`)."
msgstr ""
"Деякі числові вирази більше не повертають значення, обмежені 32 або 64 "
"бітами (:pep:`237`)."

msgid ""
"You can now put parentheses around the list of names in a ``from module "
"import names`` statement (:pep:`328`)."
msgstr ""
"Тепер ви можете взяти дужки навколо списку імен у операторі ``from module "
"import names`` (:pep:`328`)."

msgid ""
"The :meth:`dict.update` method now accepts the same argument forms as the :"
"class:`dict` constructor.  This includes any mapping, any iterable of key/"
"value pairs, and keyword arguments. (Contributed by Raymond Hettinger.)"
msgstr ""
"Метод :meth:`dict.update` тепер приймає ті самі форми аргументів, що й "
"конструктор :class:`dict`. Це включає будь-яке відображення, будь-яке "
"повторення пар ключ/значення та аргументи ключового слова. (Надав Реймонд "
"Геттінгер.)"

msgid ""
"The string methods :meth:`ljust`, :meth:`rjust`, and :meth:`center` now take "
"an optional argument for specifying a fill character other than a space. "
"(Contributed by Raymond Hettinger.)"
msgstr ""
"Рядкові методи :meth:`ljust`, :meth:`rjust` і :meth:`center` тепер приймають "
"необов’язковий аргумент для визначення символу заповнення, відмінного від "
"пробілу. (Надав Реймонд Геттінгер.)"

msgid ""
"Strings also gained an :meth:`rsplit` method that works like the :meth:"
"`split` method but splits from the end of the string.   (Contributed by Sean "
"Reifschneider.) ::"
msgstr ""
"Рядки також отримали метод :meth:`rsplit`, який працює як метод :meth:"
"`split`, але розділяється з кінця рядка. (Надав Шон Райфшнайдер.) ::"

msgid ""
"Three keyword parameters, *cmp*, *key*, and *reverse*, were added to the :"
"meth:`sort` method of lists. These parameters make some common usages of :"
"meth:`sort` simpler. All of these parameters are optional."
msgstr ""
"Три параметри ключових слів, *cmp*, *key* і *reverse*, було додано до "
"методу :meth:`sort` списків. Ці параметри спрощують деякі типові "
"використання :meth:`sort`. Усі ці параметри є необов’язковими."

msgid ""
"For the *cmp* parameter, the value should be a comparison function that "
"takes two parameters and returns -1, 0, or +1 depending on how the "
"parameters compare. This function will then be used to sort the list.  "
"Previously this was the only parameter that could be provided to :meth:"
"`sort`."
msgstr ""
"Для параметра *cmp* значенням має бути функція порівняння, яка приймає два "
"параметри та повертає -1, 0 або +1 залежно від того, як параметри "
"порівнюються. Потім ця функція буде використана для сортування списку. "
"Раніше це був єдиний параметр, який можна було надати для :meth:`sort`."

msgid ""
"*key* should be a single-parameter function that takes a list element and "
"returns a comparison key for the element.  The list is then sorted using the "
"comparison keys.  The following example sorts a list case-insensitively::"
msgstr ""
"*key* має бути функцією з одним параметром, яка приймає елемент списку та "
"повертає ключ порівняння для елемента. Потім список сортується за допомогою "
"ключів порівняння. Наступний приклад сортує список без урахування регістру::"

msgid ""
"The last example, which uses the *cmp* parameter, is the old way to perform "
"a case-insensitive sort.  It works but is slower than using a *key* "
"parameter. Using *key* calls :meth:`lower` method once for each element in "
"the list while using *cmp* will call it twice for each comparison, so using "
"*key* saves on invocations of the :meth:`lower` method."
msgstr ""
"Останній приклад, у якому використовується параметр *cmp*, є старим способом "
"виконання сортування без урахування регістру. Це працює, але повільніше, ніж "
"використання параметра *key*. Використання *key* викликає метод :meth:"
"`lower` один раз для кожного елемента в списку, тоді як використання *cmp* "
"викликає його двічі для кожного порівняння, тому використання *key* "
"економить на викликах методу :meth:`lower`."

msgid ""
"For simple key functions and comparison functions, it is often possible to "
"avoid a :keyword:`lambda` expression by using an unbound method instead.  "
"For example, the above case-insensitive sort is best written as::"
msgstr ""
"Для простих ключових функцій і функцій порівняння часто можна уникнути "
"виразу :keyword:`lambda`, використовуючи натомість незв’язаний метод. "
"Наприклад, наведене вище сортування без урахування регістру найкраще "
"записати як::"

msgid ""
"Finally, the *reverse* parameter takes a Boolean value.  If the value is "
"true, the list will be sorted into reverse order. Instead of ``L.sort(); L."
"reverse()``, you can now write ``L.sort(reverse=True)``."
msgstr ""
"Нарешті, параметр *reverse* приймає логічне значення. Якщо значення має "
"значення true, список буде відсортовано у зворотному порядку. Замість ``L."
"sort(); L.reverse()``, тепер ви можете написати ``L.sort(reverse=True)``."

msgid ""
"The results of sorting are now guaranteed to be stable.  This means that two "
"entries with equal keys will be returned in the same order as they were "
"input. For example, you can sort a list of people by name, and then sort the "
"list by age, resulting in a list sorted by age where people with the same "
"age are in name-sorted order."
msgstr ""
"Результати сортування тепер гарантовано стабільні. Це означає, що два записи "
"з однаковими ключами буде повернено в тому ж порядку, у якому вони були "
"введені. Наприклад, ви можете відсортувати список людей за іменами, а потім "
"відсортувати список за віком, у результаті чого вийде список, відсортований "
"за віком, де люди одного віку розташовані в порядку за іменами."

msgid "(All changes to :meth:`sort` contributed by Raymond Hettinger.)"
msgstr "(Усі зміни до :meth:`sort` внесено Раймондом Геттінгером.)"

msgid ""
"There is a new built-in function ``sorted(iterable)`` that works like the in-"
"place :meth:`list.sort` method but can be used in expressions.  The "
"differences are:"
msgstr ""
"Існує нова вбудована функція ``sorted(iterable)``, яка працює як метод in-"
"place :meth:`list.sort`, але її можна використовувати у виразах. Відмінності:"

msgid "the input may be any iterable;"
msgstr "вхід може бути будь-яким ітерованим;"

msgid "a newly formed copy is sorted, leaving the original intact; and"
msgstr "новосформовану копію сортують, залишаючи оригінал недоторканим; і"

msgid "the expression returns the new sorted copy"
msgstr "вираз повертає нову відсортовану копію"

msgid "(Contributed by Raymond Hettinger.)"
msgstr "(Надав Реймонд Геттінгер.)"

msgid ""
"Integer operations will no longer trigger an :exc:`OverflowWarning`. The :"
"exc:`OverflowWarning` warning will disappear in Python 2.5."
msgstr ""
"Цілочисельні операції більше не викликатимуть :exc:`OverflowWarning`. "
"Попередження :exc:`OverflowWarning` зникне в Python 2.5."

msgid ""
"The interpreter gained a new switch, :option:`-m`, that takes a name, "
"searches for the corresponding  module on ``sys.path``, and runs the module "
"as a script. For example,  you can now run the Python profiler with ``python "
"-m profile``. (Contributed by Nick Coghlan.)"
msgstr ""
"Інтерпретатор отримав новий перемикач, :option:`-m`, який приймає назву, "
"шукає відповідний модуль у ``sys.path`` і запускає модуль як сценарій. "
"Наприклад, тепер ви можете запустити профайлер Python за допомогою ``python -"
"m profile``. (Надав Нік Коглан.)"

msgid ""
"The ``eval(expr, globals, locals)`` and ``execfile(filename, globals, "
"locals)`` functions and the ``exec`` statement now accept any mapping type "
"for the *locals* parameter.  Previously this had to be a regular Python "
"dictionary.  (Contributed by Raymond Hettinger.)"
msgstr ""
"Функції ``eval(expr, globals, locals)`` і ``execfile(filename, globals, "
"locals)`` і оператор ``exec`` тепер приймають будь-який тип зіставлення для "
"параметра *locals*. Раніше це мав бути звичайний словник Python. (Надав "
"Реймонд Геттінгер.)"

msgid ""
"The :func:`zip` built-in function and :func:`itertools.izip` now return an "
"empty list if called with no arguments. Previously they raised a :exc:"
"`TypeError` exception.  This makes them more suitable for use with variable "
"length argument lists::"
msgstr ""
"Вбудована функція :func:`zip` і :func:`itertools.izip` тепер повертають "
"порожній список, якщо викликаються без аргументів. Раніше вони викликали "
"виняток :exc:`TypeError`. Це робить їх більш придатними для використання зі "
"списками аргументів змінної довжини:"

msgid ""
"Encountering a failure while importing a module no longer leaves a partially "
"initialized module object in ``sys.modules``.  The incomplete module object "
"left behind would fool further imports of the same module into succeeding, "
"leading to confusing errors.   (Fixed by Tim Peters.)"
msgstr ""

msgid ""
":const:`None` is now a constant; code that binds a new value to  the name "
"``None`` is now a syntax error. (Contributed by Raymond Hettinger.)"
msgstr ""
":const:`None` тепер константа; код, який прив’язує нове значення до імені "
"``None``, тепер є синтаксичною помилкою. (Надав Реймонд Геттінгер.)"

msgid "Optimizations"
msgstr "Оптимізації"

msgid ""
"The inner loops for list and tuple slicing were optimized and now run about "
"one-third faster.  The inner loops for dictionaries were also optimized, "
"resulting in performance boosts for :meth:`keys`, :meth:`values`, :meth:"
"`items`, :meth:`iterkeys`, :meth:`itervalues`, and :meth:`iteritems`. "
"(Contributed by Raymond Hettinger.)"
msgstr ""
"Внутрішні цикли для нарізки списків і кортежів оптимізовано і тепер працюють "
"приблизно на третину швидше. Внутрішні цикли для словників також були "
"оптимізовані, що призвело до підвищення продуктивності для :meth:`keys`, :"
"meth:`values`, :meth:`items`, :meth:`iterkeys`, :meth:`itervalues` та :meth:"
"`iteritems`. (Надав Реймонд Геттінгер.)"

msgid ""
"The machinery for growing and shrinking lists was optimized for speed and "
"for space efficiency.  Appending and popping from lists now runs faster due "
"to more efficient code paths and less frequent use of the underlying system :"
"c:func:`realloc`.  List comprehensions also benefit.   :meth:`list.extend` "
"was also optimized and no longer converts its argument into a temporary list "
"before extending the base list.  (Contributed by Raymond Hettinger.)"
msgstr ""
"Обладнання для збільшення та скорочення списків було оптимізовано з точки "
"зору швидкості та економії місця. Додавання та видалення зі списків тепер "
"виконується швидше завдяки більш ефективним шляхам коду та менш частому "
"використанню основної системи :c:func:`realloc`. Розуміння списків також "
"корисне. :meth:`list.extend` також оптимізовано і більше не перетворює свій "
"аргумент у тимчасовий список перед розширенням базового списку. (Надав "
"Реймонд Геттінгер.)"

msgid ""
":func:`list`, :func:`tuple`, :func:`map`, :func:`filter`, and :func:`zip` "
"now run several times faster with non-sequence arguments that supply a :meth:"
"`__len__` method.  (Contributed by Raymond Hettinger.)"
msgstr ""
":func:`list`, :func:`tuple`, :func:`map`, :func:`filter` і :func:`zip` тепер "
"працюють у кілька разів швидше з непослідовними аргументами, які надають :"
"meth:`__len__` метод. (Надав Реймонд Геттінгер.)"

msgid ""
"The methods :meth:`list.__getitem__`, :meth:`dict.__getitem__`, and :meth:"
"`dict.__contains__` are now implemented as :class:`method_descriptor` "
"objects rather than :class:`wrapper_descriptor` objects.  This form of  "
"access doubles their performance and makes them more suitable for use as "
"arguments to functionals: ``map(mydict.__getitem__, keylist)``. (Contributed "
"by Raymond Hettinger.)"
msgstr ""
"Методи :meth:`list.__getitem__`, :meth:`dict.__getitem__` і :meth:`dict."
"__contains__` тепер реалізовано як об’єкти :class:`method_descriptor`, а не "
"як об’єкти :class:`wrapper_descriptor`. Ця форма доступу подвоює їх "
"продуктивність і робить їх більш придатними для використання як аргументів "
"функціоналу: ``map(mydict.__getitem__, keylist)``. (Надав Реймонд Геттінгер.)"

msgid ""
"Added a new opcode, ``LIST_APPEND``, that simplifies the generated bytecode "
"for list comprehensions and speeds them up by about a third.  (Contributed "
"by Raymond Hettinger.)"
msgstr ""
"Додано новий код операції, ``LIST_APPEND``, який спрощує згенерований байт-"
"код для розуміння списків і прискорює їх приблизно на третину. (Надав "
"Реймонд Геттінгер.)"

msgid ""
"The peephole bytecode optimizer has been improved to  produce shorter, "
"faster bytecode; remarkably, the resulting bytecode is  more readable.  "
"(Enhanced by Raymond Hettinger.)"
msgstr ""
"Оптимізатор байт-коду peephole було вдосконалено для створення коротшого та "
"швидшого байт-коду; примітно, що отриманий байт-код більш читабельний. "
"(Покращено Раймондом Геттінгером.)"

msgid ""
"String concatenations in statements of the form ``s = s + \"abc\"`` and ``s "
"+= \"abc\"`` are now performed more efficiently in certain circumstances.  "
"This optimization won't be present in other Python implementations such as "
"Jython, so you shouldn't rely on it; using the :meth:`join` method of "
"strings is still recommended when you want to efficiently glue a large "
"number of strings together. (Contributed by Armin Rigo.)"
msgstr ""
"Конкатенації рядків у операторах у формі ``s = s + \"abc\"`` та ``s += "
"\"abc\"`` тепер виконуються більш ефективно за певних обставин. Ця "
"оптимізація не буде присутня в інших реалізаціях Python, таких як Jython, "
"тому вам не слід покладатися на неї; використання методу рядків :meth:`join` "
"все ще рекомендується, якщо ви хочете ефективно склеїти велику кількість "
"рядків. (Надав Армін Ріго.)"

msgid ""
"The net result of the 2.4 optimizations is that Python 2.4 runs the pystone "
"benchmark around 5% faster than Python 2.3 and 35% faster than Python 2.2. "
"(pystone is not a particularly good benchmark, but it's the most commonly "
"used measurement of Python's performance.  Your own applications may show "
"greater or smaller benefits from Python 2.4.)"
msgstr ""
"Кінцевим результатом оптимізації 2.4 є те, що Python 2.4 виконує тест "
"pystone приблизно на 5% швидше, ніж Python 2.3, і на 35% швидше, ніж Python "
"2.2. (pystone не є особливо хорошим тестом, але це найбільш часто "
"використовуваний метод вимірювання продуктивності Python. Ваші власні "
"програми можуть продемонструвати більшу чи меншу користь від Python 2.4.)"

msgid "New, Improved, and Deprecated Modules"
msgstr "Нові, покращені та застарілі модулі"

msgid ""
"As usual, Python's standard library received a number of enhancements and "
"bug fixes.  Here's a partial list of the most notable changes, sorted "
"alphabetically by module name. Consult the :file:`Misc/NEWS` file in the "
"source tree for a more complete list of changes, or look through the CVS "
"logs for all the details."
msgstr ""
"Як завжди, стандартна бібліотека Python отримала низку вдосконалень і "
"виправлень помилок. Ось неповний список найбільш помітних змін, "
"відсортованих за алфавітом назв модулів. Зверніться до файлу :file:`Misc/"
"NEWS` у дереві вихідних кодів, щоб отримати більш повний список змін, або "
"перегляньте журнали CVS, щоб отримати всі деталі."

msgid ""
"The :mod:`asyncore` module's :func:`loop` function now has a *count* "
"parameter that lets you perform a limited number of passes through the "
"polling loop.  The default is still to loop forever."
msgstr ""
"Функція :func:`loop` модуля :mod:`asyncore` тепер має параметр *count*, який "
"дозволяє виконувати обмежену кількість проходів через цикл опитування. За "
"замовчуванням все ще цикл вічно."

msgid ""
"The :mod:`base64` module now has more complete :rfc:`3548` support for "
"Base64, Base32, and Base16 encoding and decoding, including optional case "
"folding and optional alternative alphabets. (Contributed by Barry Warsaw.)"
msgstr ""
"Модуль :mod:`base64` тепер має більш повну підтримку :rfc:`3548` кодування "
"та декодування Base64, Base32 і Base16, включаючи необов’язкове згортання "
"регістру та альтернативні алфавіти. (Надав Баррі Варшау.)"

msgid ""
"The :mod:`bisect` module now has an underlying C implementation for improved "
"performance. (Contributed by Dmitry Vasiliev.)"
msgstr ""
"Модуль :mod:`bisect` тепер має базову реалізацію C для покращення "
"продуктивності. (Надав Дмитро Васильєв.)"

msgid ""
"The CJKCodecs collections of East Asian codecs, maintained by Hye-Shik "
"Chang, was integrated into 2.4.   The new encodings are:"
msgstr ""
"Колекції кодеків Східної Азії CJKCodecs, які підтримує Hye-Shik Chang, були "
"інтегровані у 2.4. Нові кодування:"

msgid "Chinese (PRC): gb2312, gbk, gb18030, big5hkscs, hz"
msgstr "Китайська (КНР): gb2312, gbk, gb18030, big5hkscs, hz"

msgid "Chinese (ROC): big5, cp950"
msgstr "Китайська (ROC): big5, cp950"

msgid "Japanese: cp932, euc-jis-2004, euc-jp, euc-jisx0213, iso-2022-jp,"
msgstr "Японська: cp932, euc-jis-2004, euc-jp, euc-jisx0213, iso-2022-jp,"

msgid ""
"iso-2022-jp-1, iso-2022-jp-2, iso-2022-jp-3, iso-2022-jp-ext, iso-2022-"
"jp-2004, shift-jis, shift-jisx0213, shift-jis-2004"
msgstr ""
"iso-2022-jp-1, iso-2022-jp-2, iso-2022-jp-3, iso-2022-jp-ext, iso-2022-"
"jp-2004, shift-jis, shift-jisx0213, shift- jis-2004"

msgid "Korean: cp949, euc-kr, johab, iso-2022-kr"
msgstr "Корейська: cp949, euc-kr, johab, iso-2022-kr"

msgid ""
"Some other new encodings were added: HP Roman8,  ISO_8859-11, ISO_8859-16, "
"PCTP-154, and TIS-620."
msgstr ""
"Додано деякі інші нові кодування: HP Roman8, ISO_8859-11, ISO_8859-16, "
"PCTP-154 і TIS-620."

msgid ""
"The UTF-8 and UTF-16 codecs now cope better with receiving partial input. "
"Previously the :class:`StreamReader` class would try to read more data, "
"making it impossible to resume decoding from the stream.  The :meth:`read` "
"method will now return as much data as it can and future calls will resume "
"decoding where previous ones left off.  (Implemented by Walter Dörwald.)"
msgstr ""
"Кодеки UTF-8 і UTF-16 тепер краще справляються з отриманням часткового "
"введення. Раніше клас :class:`StreamReader` намагався прочитати більше "
"даних, унеможливлюючи відновлення декодування з потоку. Метод :meth:`read` "
"тепер повертатиме стільки даних, скільки зможе, а майбутні виклики "
"відновлюватимуть декодування там, де зупинилися попередні. (Реалізовано "
"Вальтером Дьорвальдом.)"

msgid ""
"There is a new :mod:`collections` module for  various specialized collection "
"datatypes.  Currently it contains just one type, :class:`deque`, a double-"
"ended queue that supports efficiently adding and removing elements from "
"either end::"
msgstr ""
"Існує новий модуль :mod:`collections` для різних спеціалізованих типів даних "
"колекції. Наразі він містить лише один тип, :class:`deque`, двосторонню "
"чергу, яка підтримує ефективне додавання та видалення елементів з будь-якого "
"кінця::"

msgid ""
"Several modules, such as the :mod:`Queue` and :mod:`threading` modules, now "
"take advantage of :class:`collections.deque` for improved performance.  "
"(Contributed by Raymond Hettinger.)"
msgstr ""
"Кілька модулів, наприклад модулі :mod:`Queue` і :mod:`threading`, тепер "
"використовують переваги :class:`collections.deque` для покращення "
"продуктивності. (Надав Реймонд Геттінгер.)"

msgid ""
"The :mod:`ConfigParser` classes have been enhanced slightly. The :meth:"
"`read` method now returns a list of the files that were successfully parsed, "
"and the :meth:`set` method raises :exc:`TypeError` if passed a *value* "
"argument that isn't a string.   (Contributed by John Belmonte and David "
"Goodger.)"
msgstr ""
"Класи :mod:`ConfigParser` були дещо вдосконалені. Метод :meth:`read` тепер "
"повертає список файлів, які були успішно проаналізовані, а метод :meth:`set` "
"викликає :exc:`TypeError`, якщо передано аргумент *value*, який не є рядком. "
"(Надано Джоном Белмонте та Девідом Гуджером.)"

msgid ""
"The :mod:`curses` module now supports the ncurses extension :func:"
"`use_default_colors`.  On platforms where the terminal supports "
"transparency, this makes it possible to use a transparent background. "
"(Contributed by Jörg Lehmann.)"
msgstr ""
"Модуль :mod:`curses` тепер підтримує розширення ncurses :func:"
"`use_default_colors`. На платформах, де термінал підтримує прозорість, це "
"дає змогу використовувати прозорий фон. (Надав Йорг Леманн.)"

msgid ""
"The :mod:`difflib` module now includes an :class:`HtmlDiff` class that "
"creates an HTML table showing a side by side comparison of two versions of a "
"text. (Contributed by Dan Gass.)"
msgstr ""
"Модуль :mod:`difflib` тепер містить клас :class:`HtmlDiff`, який створює "
"HTML-таблицю, що показує пліч-о-пліч порівняння двох версій тексту. (Надав "
"Ден Гасс.)"

msgid ""
"The :mod:`email` package was updated to version 3.0,  which dropped various "
"deprecated APIs and removes support for Python versions earlier than 2.3.  "
"The 3.0 version of the package uses a new incremental parser for MIME "
"messages, available in the :mod:`email.FeedParser` module.  The new parser "
"doesn't require reading the entire message into memory, and doesn't raise "
"exceptions if a message is malformed; instead it records any problems in "
"the  :attr:`defect` attribute of the message.  (Developed by Anthony Baxter, "
"Barry Warsaw, Thomas Wouters, and others.)"
msgstr ""
"Пакет :mod:`email` було оновлено до версії 3.0, у якій усунено різні "
"застарілі API та припинено підтримку версій Python, раніших за 2.3. Версія "
"пакета 3.0 використовує новий інкрементальний аналізатор для повідомлень "
"MIME, доступний у модулі :mod:`email.FeedParser`. Новий синтаксичний "
"аналізатор не вимагає читання всього повідомлення в пам’ять і не викликає "
"винятків, якщо повідомлення неправильно сформоване; замість цього він "
"записує всі проблеми в атрибуті :attr:`defect` повідомлення. (Розроблено "
"Ентоні Бакстером, Баррі Варсоу, Томасом Воутерсом та іншими.)"

msgid ""
"The :mod:`heapq` module has been converted to C.  The resulting tenfold "
"improvement in speed makes the module suitable for handling high volumes of "
"data.  In addition, the module has two new functions :func:`nlargest` and :"
"func:`nsmallest` that use heaps to find the N largest or smallest values in "
"a dataset without the expense of a full sort.  (Contributed by Raymond "
"Hettinger.)"
msgstr ""
"Модуль :mod:`heapq` було перетворено на C. Десятикратне підвищення швидкості "
"робить модуль придатним для роботи з великими обсягами даних. Крім того, "
"модуль має дві нові функції :func:`nlargest` і :func:`nsmallest`, які "
"використовують купи для пошуку N найбільших або найменших значень у наборі "
"даних без витрат на повне сортування. (Надав Реймонд Геттінгер.)"

msgid ""
"The :mod:`httplib` module now contains constants for HTTP status codes "
"defined in various HTTP-related RFC documents.  Constants have names such "
"as :const:`OK`, :const:`CREATED`, :const:`CONTINUE`, and :const:"
"`MOVED_PERMANENTLY`; use pydoc to get a full list.  (Contributed by Andrew "
"Eland.)"
msgstr ""
"Модуль :mod:`httplib` тепер містить константи для кодів стану HTTP, "
"визначених у різних документах RFC, пов’язаних з HTTP. Константи мають такі "
"імена, як :const:`OK`, :const:`CREATED`, :const:`CONTINUE` і :const:"
"`MOVED_PERMANENTLY`; використовуйте pydoc, щоб отримати повний список. "
"(Надав Ендрю Еланд.)"

msgid ""
"The :mod:`imaplib` module now supports IMAP's THREAD command (contributed by "
"Yves Dionne) and new :meth:`deleteacl` and :meth:`myrights` methods "
"(contributed by Arnaud Mazin)."
msgstr ""
"Модуль :mod:`imaplib` тепер підтримує команду THREAD IMAP (надано Yves "
"Dionne) і нові методи :meth:`deleteacl` і :meth:`myrights` (надано Arnaud "
"Mazin)."

msgid ""
"The :mod:`itertools` module gained a ``groupby(iterable[, *func*])`` "
"function. *iterable* is something that can be iterated over to return a "
"stream of elements, and the optional *func* parameter is a function that "
"takes an element and returns a key value; if omitted, the key is simply the "
"element itself.  :func:`groupby` then groups the elements into subsequences "
"which have matching values of the key, and returns a series of 2-tuples "
"containing the key value and an iterator over the subsequence."
msgstr ""
"Модуль :mod:`itertools` отримав функцію ``groupby(iterable[, *func*])``. "
"*iterable* — це те, що можна повторити, щоб повернути потік елементів, а "
"необов’язковий параметр *func* — це функція, яка приймає елемент і повертає "
"значення ключа; якщо опущено, ключ - це просто сам елемент. Потім :func:"
"`groupby` групує елементи в підпослідовності, які мають відповідні значення "
"ключа, і повертає серію 2-кортежів, що містять значення ключа та ітератор "
"над підпослідовністю."

msgid ""
"Here's an example to make this clearer.  The *key* function simply returns "
"whether a number is even or odd, so the result of :func:`groupby` is to "
"return consecutive runs of odd or even numbers. ::"
msgstr ""
"Ось приклад, щоб це було зрозуміліше. Функція *key* просто повертає, чи є "
"число парним чи непарним, тому результатом :func:`groupby` є повернення "
"послідовних циклів парних чи непарних чисел. ::"

msgid ""
":func:`groupby` is typically used with sorted input.  The logic for :func:"
"`groupby` is similar to the Unix ``uniq`` filter which makes it handy for "
"eliminating, counting, or identifying duplicate elements::"
msgstr ""
":func:`groupby` зазвичай використовується з відсортованим введенням. Логіка "
"для :func:`groupby` подібна до фільтра Unix ``uniq``, що робить його зручним "
"для видалення, підрахунку або ідентифікації повторюваних елементів:"

msgid "(Contributed by Hye-Shik Chang.)"
msgstr "(Надано Hye-Shik Chang.)"

msgid ""
":mod:`itertools` also gained a function named ``tee(iterator, N)`` that "
"returns *N* independent iterators that replicate *iterator*.  If *N* is "
"omitted, the default is 2. ::"
msgstr ""
":mod:`itertools` також отримав функцію під назвою ``tee(iterator, N)``, яка "
"повертає *N* незалежних ітераторів, які копіюють *iterator*. Якщо *N* "
"опущено, за замовчуванням буде 2. ::"

msgid ""
"Note that :func:`tee` has to keep copies of the values returned  by the "
"iterator; in the worst case, it may need to keep all of them.   This should "
"therefore be used carefully if the leading iterator can run far ahead of the "
"trailing iterator in a long stream of inputs. If the separation is large, "
"then you might as well use  :func:`list` instead.  When the iterators track "
"closely with one another, :func:`tee` is ideal.  Possible applications "
"include bookmarking, windowing, or lookahead iterators. (Contributed by "
"Raymond Hettinger.)"
msgstr ""
"Зауважте, що :func:`tee` має зберігати копії значень, які повертає ітератор; "
"у гіршому випадку, можливо, доведеться зберегти їх усі. Тому це слід "
"використовувати обережно, якщо провідний ітератор може працювати набагато "
"попереду кінцевого ітератора в довгому потоці вхідних даних. Якщо розділення "
"велике, ви також можете використати замість нього :func:`list`. Коли "
"ітератори тісно відстежують один одного, :func:`tee` є ідеальним. Можливі "
"програми включають закладки, вікна або ітератори з попереднім переглядом. "
"(Надав Реймонд Геттінгер.)"

msgid ""
"A number of functions were added to the :mod:`locale`  module, such as :func:"
"`bind_textdomain_codeset` to specify a particular encoding and a family of :"
"func:`l\\*gettext` functions that return messages in the chosen encoding. "
"(Contributed by Gustavo Niemeyer.)"
msgstr ""
"До модуля :mod:`locale` було додано ряд функцій, наприклад :func:"
"`bind_textdomain_codeset` для визначення конкретного кодування та сімейство "
"функцій :func:`l\\*gettext`, які повертають повідомлення у вибраному "
"кодуванні. . (Надав Густаво Німейєр.)"

msgid ""
"Some keyword arguments were added to the :mod:`logging` package's :func:"
"`basicConfig` function to simplify log configuration.  The default behavior "
"is to log messages to standard error, but various keyword arguments can be "
"specified to log to a particular file, change the logging format, or set the "
"logging level. For example::"
msgstr ""
"До функції :func:`basicConfig` пакета :mod:`logging` було додано деякі "
"аргументи ключових слів, щоб спростити налаштування журналу. Поведінка за "
"замовчуванням — реєстрація повідомлень до стандартної помилки, але можна "
"вказати різні ключові аргументи для реєстрації в певному файлі, зміни "
"формату журналювання або встановлення рівня журналювання. Наприклад::"

msgid ""
"Other additions to the :mod:`logging` package include a ``log(level, msg)`` "
"convenience method, as well as a :class:`TimedRotatingFileHandler` class "
"that rotates its log files at a timed interval.  The module already had :"
"class:`RotatingFileHandler`, which rotated logs once the file exceeded a "
"certain size.  Both classes derive from a new :class:`BaseRotatingHandler` "
"class that can be used to implement other rotating handlers."
msgstr ""
"Інші доповнення до пакета :mod:`logging` включають зручний метод "
"``log(level, msg)``, а також клас :class:`TimedRotatingFileHandler`, який "
"обертає свої файли журналу з певним інтервалом. Модуль уже мав :class:"
"`RotatingFileHandler`, який обертав журнали, коли файл перевищував певний "
"розмір. Обидва класи походять від нового класу :class:`BaseRotatingHandler`, "
"який можна використовувати для реалізації інших обертових обробників."

msgid "(Changes implemented by Vinay Sajip.)"
msgstr "(Зміни внесено Вінаєм Саджипом.)"

msgid ""
"The :mod:`marshal` module now shares interned strings on unpacking a  data "
"structure.  This may shrink the size of certain pickle strings, but the "
"primary effect is to make :file:`.pyc` files significantly smaller. "
"(Contributed by Martin von Löwis.)"
msgstr ""
"Модуль :mod:`marshal` тепер ділиться вбудованими рядками під час "
"розпакування структури даних. Це може зменшити розмір певних рядків pickle, "
"але основний ефект полягає в тому, щоб зробити файли :file:`.pyc` значно "
"меншими. (Надав Мартін фон Льовіс.)"

msgid ""
"The :mod:`nntplib` module's :class:`NNTP` class gained :meth:`description` "
"and :meth:`descriptions` methods to retrieve  newsgroup descriptions for a "
"single group or for a range of groups. (Contributed by Jürgen A. Erhard.)"
msgstr ""
"Клас :class:`NNTP` модуля :mod:`nntplib` отримав методи :meth:`description` "
"і :meth:`descriptions` для отримання описів груп новин для однієї групи або "
"для діапазону груп. (Надав Юрген А. Ерхард.)"

msgid ""
"Two new functions were added to the :mod:`operator` module, "
"``attrgetter(attr)`` and ``itemgetter(index)``. Both functions return "
"callables that take a single argument and return the corresponding attribute "
"or item; these callables make excellent data extractors when used with :func:"
"`map` or :func:`sorted`.  For example::"
msgstr ""
"До модуля :mod:`operator` додано дві нові функції, ``attrgetter(attr)`` та "
"``itemgetter(index)``. Обидві функції повертають виклики, які приймають один "
"аргумент і повертають відповідний атрибут або елемент; ці виклики створюють "
"чудові екстрактори даних при використанні з :func:`map` або :func:`sorted`. "
"Наприклад::"

msgid ""
"The :mod:`optparse` module was updated in various ways.  The module now "
"passes its messages through :func:`gettext.gettext`, making it possible to "
"internationalize Optik's help and error messages.  Help messages for options "
"can now include the string ``'%default'``, which will be replaced by the "
"option's default value.  (Contributed by Greg Ward.)"
msgstr ""
"Модуль :mod:`optparse` було оновлено різними способами. Тепер модуль передає "
"свої повідомлення через :func:`gettext.gettext`, що робить можливим "
"інтернаціоналізацію довідки та повідомлень про помилки Optik. Повідомлення "
"довідки для параметрів тепер можуть містити рядок ``'%default``, який буде "
"замінено значенням параметра за замовчуванням. (Надав Грег Ворд.)"

msgid ""
"The long-term plan is to deprecate the :mod:`rfc822` module in some future "
"Python release in favor of the :mod:`email` package. To this end, the :func:"
"`email.Utils.formatdate` function has been changed to make it usable as a "
"replacement for :func:`rfc822.formatdate`.  You may want to write new e-mail "
"processing code with this in mind.  (Change implemented by Anthony Baxter.)"
msgstr ""
"Довгостроковий план полягає в тому, щоб припинити підтримку модуля :mod:"
"`rfc822` в майбутньому випуску Python на користь пакета :mod:`email`. З цією "
"метою функцію :func:`email.Utils.formatdate` було змінено, щоб її можна було "
"використовувати як заміну для :func:`rfc822.formatdate`. Маючи це на увазі, "
"ви можете написати новий код обробки електронної пошти. (Зміну вніс Ентоні "
"Бакстер.)"

msgid ""
"A new ``urandom(n)`` function was added to the :mod:`os` module, returning a "
"string containing *n* bytes of random data.  This function provides access "
"to platform-specific sources of randomness such as :file:`/dev/urandom` on "
"Linux or the Windows CryptoAPI.  (Contributed by Trevor Perrin.)"
msgstr ""
"До модуля :mod:`os` було додано нову функцію ``urandom(n)``, яка повертає "
"рядок, що містить *n* байтів випадкових даних. Ця функція надає доступ до "
"специфічних для платформи джерел випадковості, таких як :file:`/dev/urandom` "
"у Linux або Windows CryptoAPI. (Надано Тревором Перріном.)"

msgid ""
"Another new function: ``os.path.lexists(path)``  returns true if the file "
"specified by *path* exists, whether or not it's a symbolic link.  This "
"differs from the existing ``os.path.exists(path)`` function, which returns "
"false if *path* is a symlink that points to a destination that doesn't "
"exist. (Contributed by Beni Cherniavsky.)"
msgstr ""
"Ще одна нова функція: ``os.path.lexists(path)`` повертає true, якщо файл, "
"визначений *path*, існує, незалежно від того, чи є це символічним "
"посиланням. Це відрізняється від існуючої функції ``os.path.exists(path)``, "
"яка повертає false, якщо *path* є символічним посиланням, яке вказує на "
"пункт призначення, якого не існує. (Надав Бені Чернявський.)"

msgid ""
"A new :func:`getsid` function was added to the :mod:`posix` module that "
"underlies the :mod:`os` module. (Contributed by J. Raynor.)"
msgstr ""
"Нову функцію :func:`getsid` було додано до модуля :mod:`posix`, який лежить "
"в основі модуля :mod:`os`. (Надав Дж. Рейнор.)"

msgid ""
"The :mod:`poplib` module now supports POP over SSL.  (Contributed by Hector "
"Urtubia.)"
msgstr ""
"Модуль :mod:`poplib` тепер підтримує POP через SSL. (Надав Гектор Уртубія.)"

msgid ""
"The :mod:`profile` module can now profile C extension functions. "
"(Contributed by Nick Bastin.)"
msgstr ""
"Модуль :mod:`profile` тепер може профілювати функції розширення C. (Надав "
"Нік Бастін.)"

msgid ""
"The :mod:`random` module has a new method called ``getrandbits(N)`` that "
"returns a long integer *N* bits in length.  The existing :meth:`randrange` "
"method now uses :meth:`getrandbits` where appropriate, making generation of "
"arbitrarily large random numbers more efficient.  (Contributed by Raymond "
"Hettinger.)"
msgstr ""
"Модуль :mod:`random` має новий метод під назвою ``getrandbits(N)``, який "
"повертає довге ціле число *N* біт. Існуючий метод :meth:`randrange` тепер "
"використовує :meth:`getrandbits`, де це доречно, що робить генерацію "
"довільно великих випадкових чисел більш ефективною. (Надав Реймонд "
"Геттінгер.)"

msgid ""
"The regular expression language accepted by the :mod:`re` module was "
"extended with simple conditional expressions, written as ``(?(group)A|B)``.  "
"*group* is either a numeric group ID or a group name defined with ``(?"
"P<group>...)`` earlier in the expression.  If the specified group matched, "
"the regular expression pattern *A* will be tested against the string; if the "
"group didn't match, the pattern *B* will be used instead. (Contributed by "
"Gustavo Niemeyer.)"
msgstr ""
"Мова регулярних виразів, прийнята модулем :mod:`re`, була розширена простими "
"умовними виразами, написаними як ``(?(group)A|B)``. *group* — це числовий "
"ідентифікатор групи або назва групи, визначена за допомогою ``(?P "
"<group> ...)`` раніше у виразі. Якщо вказана група збігається, шаблон "
"регулярного виразу *A* буде перевірено на відповідність рядку; якщо група не "
"збігається, замість неї буде використано шаблон *B*. (Надав Густаво Німейєр.)"

msgid ""
"The :mod:`re` module is also no longer recursive, thanks to a massive amount "
"of work by Gustavo Niemeyer.  In a recursive regular expression engine, "
"certain patterns result in a large amount of C stack space being consumed, "
"and it was possible to overflow the stack. For example, if you matched a "
"30000-byte string of ``a`` characters against the expression ``(a|b)+``, one "
"stack frame was consumed per character.  Python 2.3 tried to check for stack "
"overflow and raise a :exc:`RuntimeError` exception, but certain patterns "
"could sidestep the checking and if you were unlucky Python could segfault. "
"Python 2.4's regular expression engine can match this pattern without "
"problems."
msgstr ""
"Модуль :mod:`re` також більше не є рекурсивним, завдяки величезній кількості "
"роботи Густаво Німейєра. У механізмі рекурсивних регулярних виразів певні "
"шаблони призводять до використання великої кількості стеку C, і стек може "
"бути переповнений. Наприклад, якщо ви зіставили 30000-байтовий рядок "
"символів ``a`` із виразом ``(a|b)+``, один кадр стека споживався на символ. "
"Python 2.3 намагався перевірити переповнення стеку та викликати виняток :exc:"
"`RuntimeError`, але певні шаблони могли обійти перевірку, і якщо вам не "
"пощастило, Python міг стати segfault. Механізм регулярних виразів Python 2.4 "
"може без проблем відповідати цьому шаблону."

msgid ""
"The :mod:`signal` module now performs tighter error-checking on the "
"parameters to the :func:`signal.signal` function.  For example, you can't "
"set a handler on the :const:`SIGKILL` signal; previous versions of Python "
"would quietly accept this, but 2.4 will raise a :exc:`RuntimeError` "
"exception."
msgstr ""
"Модуль :mod:`signal` тепер виконує ретельнішу перевірку параметрів функції :"
"func:`signal.signal` на помилки. Наприклад, ви не можете встановити обробник "
"для сигналу :const:`SIGKILL`; попередні версії Python спокійно прийняли це, "
"але 2.4 викличе виняток :exc:`RuntimeError`."

msgid ""
"Two new functions were added to the :mod:`socket` module. :func:`socketpair` "
"returns a pair of connected sockets and ``getservbyport(port)`` looks up the "
"service name for a given port number. (Contributed by Dave Cole and Barry "
"Warsaw.)"
msgstr ""
"До модуля :mod:`socket` додано дві нові функції. :func:`socketpair` повертає "
"пару підключених сокетів, а ``getservbyport(port)`` шукає назву служби для "
"даного номера порту. (Надано Дейвом Коулом і Баррі Варшау.)"

msgid ""
"The :func:`sys.exitfunc` function has been deprecated.  Code should be using "
"the existing :mod:`atexit` module, which correctly handles calling multiple "
"exit functions.  Eventually :func:`sys.exitfunc` will become a purely "
"internal interface, accessed only by :mod:`atexit`."
msgstr ""
"Функція :func:`sys.exitfunc` застаріла. У коді має використовуватися "
"існуючий модуль :mod:`atexit`, який правильно обробляє виклик кількох "
"функцій виходу. Згодом :func:`sys.exitfunc` стане суто внутрішнім "
"інтерфейсом, доступ до якого буде мати лише :mod:`atexit`."

msgid ""
"The :mod:`tarfile` module now generates GNU-format tar files by default. "
"(Contributed by Lars Gustäbel.)"
msgstr ""
"Модуль :mod:`tarfile` тепер за замовчуванням створює файли tar у форматі "
"GNU. (Надав Ларс Густебель.)"

msgid ""
"The :mod:`threading` module now has an elegantly simple way to support "
"thread-local data.  The module contains a :class:`local` class whose "
"attribute values are local to different threads. ::"
msgstr ""
"Модуль :mod:`threading` тепер має елегантно простий спосіб підтримки "
"локальних даних потоку. Модуль містить клас :class:`local`, значення "
"атрибутів якого є локальними для різних потоків. ::"

msgid ""
"Other threads can assign and retrieve their own values for the :attr:"
"`number` and :attr:`url` attributes.  You can subclass :class:`local` to "
"initialize attributes or to add methods. (Contributed by Jim Fulton.)"
msgstr ""
"Інші потоки можуть призначати та отримувати власні значення для атрибутів :"
"attr:`number` і :attr:`url`. Ви можете створити підклас :class:`local`, щоб "
"ініціалізувати атрибути або додати методи. (Надав Джим Фултон.)"

msgid ""
"The :mod:`timeit` module now automatically disables periodic garbage "
"collection during the timing loop.  This change makes consecutive timings "
"more comparable.  (Contributed by Raymond Hettinger.)"
msgstr ""
"Модуль :mod:`timeit` тепер автоматично вимикає періодичне збирання сміття "
"під час циклу синхронізації. Ця зміна робить послідовні таймінги більш "
"порівнянними. (Надав Реймонд Геттінгер.)"

msgid ""
"The :mod:`weakref` module now supports a wider variety of objects including "
"Python functions, class instances, sets, frozensets, deques, arrays, files, "
"sockets, and regular expression pattern objects. (Contributed by Raymond "
"Hettinger.)"
msgstr ""
"Модуль :mod:`weakref` тепер підтримує більшу різноманітність об’єктів, "
"включаючи функції Python, екземпляри класів, набори, заморожені набори, дві "
"версії, масиви, файли, сокети та шаблони регулярних виразів. (Надав Реймонд "
"Геттінгер.)"

msgid ""
"The :mod:`xmlrpclib` module now supports a multi-call extension for "
"transmitting multiple XML-RPC calls in a single HTTP operation. (Contributed "
"by Brian Quinlan.)"
msgstr ""
"Модуль :mod:`xmlrpclib` тепер підтримує розширення кількох викликів для "
"передачі кількох викликів XML-RPC в одній операції HTTP. (Надав Браян "
"Квінлан.)"

msgid ""
"The :mod:`mpz`, :mod:`rotor`, and :mod:`xreadlines` modules have  been "
"removed."
msgstr "Модулі :mod:`mpz`, :mod:`rotor` і :mod:`xreadlines` видалено."

msgid "cookielib"
msgstr "cookielib"

msgid ""
"The :mod:`cookielib` library supports client-side handling for HTTP cookies, "
"mirroring the :mod:`Cookie` module's server-side cookie support. Cookies are "
"stored in cookie jars; the library transparently stores cookies offered by "
"the web server in the cookie jar, and fetches the cookie from the jar when "
"connecting to the server. As in web browsers, policy objects control whether "
"cookies are accepted or not."
msgstr ""
"Бібліотека :mod:`cookielib` підтримує обробку файлів cookie HTTP на стороні "
"клієнта, віддзеркалюючи підтримку файлів cookie на стороні сервера модуля :"
"mod:`Cookie`. Печиво зберігається в банках для печива; бібліотека прозоро "
"зберігає файли cookie, запропоновані веб-сервером, у контейнері файлів "
"cookie та отримує файли cookie з контейнера під час підключення до сервера. "
"Як і у веб-браузерах, об’єкти політики контролюють, приймаються чи ні файли "
"cookie."

msgid ""
"In order to store cookies across sessions, two implementations of cookie "
"jars are provided: one that stores cookies in the Netscape format so "
"applications can use the Mozilla or Lynx cookie files, and one that stores "
"cookies in the same format as the Perl libwww library."
msgstr ""
"Щоб зберігати файли cookie протягом сеансів, передбачено дві реалізації "
"файлів cookie: один, який зберігає файли cookie у форматі Netscape, щоб "
"програми могли використовувати файли cookie Mozilla або Lynx, і інший, який "
"зберігає файли cookie у тому самому форматі, що й бібліотека Perl libwww."

msgid ""
":mod:`urllib2` has been changed to interact with :mod:`cookielib`: :class:"
"`HTTPCookieProcessor` manages a cookie jar that is used when accessing URLs."
msgstr ""
":mod:`urllib2` змінено для взаємодії з :mod:`cookielib`: :class:"
"`HTTPCookieProcessor` керує файлом cookie, який використовується під час "
"доступу до URL-адрес."

msgid "This module was contributed by John J. Lee."
msgstr "Цей модуль створено Джоном Дж. Лі."

msgid "doctest"
msgstr "doctest"

msgid ""
"The :mod:`doctest` module underwent considerable refactoring thanks to "
"Edward Loper and Tim Peters.  Testing can still be as simple as running :"
"func:`doctest.testmod`, but the refactorings allow customizing the module's "
"operation in various ways"
msgstr ""
"Модуль :mod:`doctest` зазнав значного рефакторингу завдяки Едварду Лоперу та "
"Тіму Пітерсу. Тестування може бути таким же простим, як запуск :func:"
"`doctest.testmod`, але рефакторинг дозволяє налаштувати роботу модуля "
"різними способами"

msgid ""
"The new :class:`DocTestFinder` class extracts the tests from a given  "
"object's docstrings::"
msgstr ""
"Новий клас :class:`DocTestFinder` витягує тести з рядків документації даного "
"об’єкта::"

msgid ""
"The new :class:`DocTestRunner` class then runs individual tests and can "
"produce a summary of the results::"
msgstr ""
"Потім новий клас :class:`DocTestRunner` запускає окремі тести та може "
"створювати зведення результатів:"

msgid "The above example produces the following output::"
msgstr "Наведений вище приклад дає такий вихід:"

msgid ""
":class:`DocTestRunner` uses an instance of the :class:`OutputChecker` class "
"to compare the expected output with the actual output.  This class takes a "
"number of different flags that customize its behaviour; ambitious users can "
"also write a completely new subclass of :class:`OutputChecker`."
msgstr ""
":class:`DocTestRunner` використовує екземпляр класу :class:`OutputChecker` "
"для порівняння очікуваного результату з фактичним результатом. Цей клас "
"приймає кілька різних прапорів, які налаштовують його поведінку; амбітні "
"користувачі також можуть написати абсолютно новий підклас :class:"
"`OutputChecker`."

msgid ""
"The default output checker provides a number of handy features. For example, "
"with the :const:`doctest.ELLIPSIS` option flag, an ellipsis (``...``) in the "
"expected output matches any substring,  making it easier to accommodate "
"outputs that vary in minor ways::"
msgstr ""
"Засіб перевірки виводу за замовчуванням надає ряд зручних функцій. "
"Наприклад, з прапорцем опції :const:`doctest.ELLIPSIS` три крапки (``...``) "
"в очікуваному виведенні відповідають будь-якому підрядку, що полегшує "
"розміщення виходів, які незначно відрізняються:"

msgid "Another special string, ``<BLANKLINE>``, matches a blank line::"
msgstr ""
"Інший спеціальний рядок, ``<BLANKLINE>``, відповідає порожньому рядку::"

msgid ""
"Another new capability is producing a diff-style display of the output by "
"specifying the :const:`doctest.REPORT_UDIFF` (unified diffs), :const:"
"`doctest.REPORT_CDIFF` (context diffs), or :const:`doctest.REPORT_NDIFF` "
"(delta-style) option flags.  For example::"
msgstr ""
"Іншою новою можливістю є створення відображення вихідних даних у стилі "
"відмінностей, вказуючи :const:`doctest.REPORT_UDIFF` (уніфіковані "
"відмінності), :const:`doctest.REPORT_CDIFF` (контекстні відмінності) або :"
"const:`doctest.REPORT_NDIFF` (дельта-стиль) позначки параметрів. Наприклад::"

msgid ""
"Running the above function's tests with :const:`doctest.REPORT_UDIFF` "
"specified, you get the following output:"
msgstr ""
"Запустивши тести наведеної вище функції з указаним :const:`doctest."
"REPORT_UDIFF`, ви отримаєте такий результат:"

msgid "Build and C API Changes"
msgstr "Зміни збірки та C API"

msgid "Some of the changes to Python's build process and to the C API are:"
msgstr "Деякі зміни в процесі збирання Python і в API C:"

msgid ""
"Three new convenience macros were added for common return values from "
"extension functions: :c:macro:`Py_RETURN_NONE`, :c:macro:`Py_RETURN_TRUE`, "
"and :c:macro:`Py_RETURN_FALSE`. (Contributed by Brett Cannon.)"
msgstr ""
"Додано три нові зручні макроси для типових значень, що повертаються "
"функціями розширення: :c:macro:`Py_RETURN_NONE`, :c:macro:`Py_RETURN_TRUE` "
"і :c:macro:`Py_RETURN_FALSE`. (Надав Бретт Кеннон.)"

msgid ""
"Another new macro, :c:macro:`Py_CLEAR`,  decreases the reference count of "
"*obj* and sets *obj* to the null pointer.  (Contributed by Jim Fulton.)"
msgstr ""

msgid ""
"A new function, ``PyTuple_Pack(N, obj1, obj2, ..., objN)``, constructs "
"tuples from a variable length argument list of Python objects.  (Contributed "
"by Raymond Hettinger.)"
msgstr ""
"Нова функція, ``PyTuple_Pack(N, obj1, obj2, ..., objN)``, створює кортежі зі "
"списку аргументів змінної довжини об’єктів Python. (Надав Реймонд Геттінгер.)"

msgid ""
"A new function, ``PyDict_Contains(d, k)``, implements fast dictionary "
"lookups without masking exceptions raised during the look-up process. "
"(Contributed by Raymond Hettinger.)"
msgstr ""
"Нова функція, ``PyDict_Contains(d, k)``, реалізує швидкий пошук у словнику "
"без маскування винятків, які виникають під час процесу пошуку. (Надав "
"Реймонд Геттінгер.)"

msgid ""
"The :c:expr:`Py_IS_NAN(X)` macro returns 1 if  its float or double argument "
"*X* is a NaN.   (Contributed by Tim Peters.)"
msgstr ""

msgid ""
"C code can avoid unnecessary locking by using the new :c:func:"
"`PyEval_ThreadsInitialized` function to tell  if any thread operations have "
"been performed.  If this function  returns false, no lock operations are "
"needed. (Contributed by Nick Coghlan.)"
msgstr ""
"Код C може уникнути непотрібного блокування, використовуючи нову функцію :c:"
"func:`PyEval_ThreadsInitialized`, щоб дізнатися, чи були виконані будь-які "
"операції потоку. Якщо ця функція повертає false, операції блокування не "
"потрібні. (Надав Нік Коглан.)"

msgid ""
"A new function, :c:func:`PyArg_VaParseTupleAndKeywords`, is the same as :c:"
"func:`PyArg_ParseTupleAndKeywords` but takes a  :c:type:`va_list` instead of "
"a number of arguments. (Contributed by Greg Chapman.)"
msgstr ""
"Нова функція, :c:func:`PyArg_VaParseTupleAndKeywords`, така сама, як :c:func:"
"`PyArg_ParseTupleAndKeywords`, але приймає :c:type:`va_list` замість кількох "
"аргументів. (Надав Грег Чепмен.)"

msgid ""
"A new method flag, :const:`METH_COEXISTS`, allows a function defined in "
"slots to co-exist with a :c:type:`PyCFunction` having the same name.  This "
"can halve the access time for a method such as :meth:`set.__contains__`.  "
"(Contributed by Raymond Hettinger.)"
msgstr ""
"Новий прапор методу, :const:`METH_COEXISTS`, дозволяє функції, визначеній у "
"слотах, співіснувати з :c:type:`PyCFunction`, що має таке ж ім’я. Це може "
"вдвічі скоротити час доступу для такого методу, як :meth:`set.__contains__`. "
"(Надав Реймонд Геттінгер.)"

msgid ""
"Python can now be built with additional profiling for the interpreter "
"itself, intended as an aid to people developing the Python core.  Providing :"
"option:`!--enable-profiling` to the :program:`configure` script will let you "
"profile the interpreter with :program:`gprof`, and providing the :option:`!--"
"with-tsc` switch enables profiling using the Pentium's Time-Stamp-Counter "
"register.  Note that the :option:`!--with-tsc` switch is slightly misnamed, "
"because the profiling feature also works on the PowerPC platform, though "
"that processor architecture doesn't call that register \"the TSC "
"register\".  (Contributed by Jeremy Hylton.)"
msgstr ""
"Тепер Python можна створювати з додатковим профілюванням для самого "
"інтерпретатора, призначеного як допомога людям, які розробляють ядро Python. "
"Надання :option:`!--enable-profiling` сценарію :program:`configure` "
"дозволить вам профілювати інтерпретатор за допомогою :program:`gprof` і "
"надання перемикача :option:`!--with-tsc` дозволяє профілювання за допомогою "
"реєстру Time-Stamp-Counter Pentium. Зауважте, що перемикач :option:`!--with-"
"tsc` трохи неправильно названо, тому що функція профілювання також працює на "
"платформі PowerPC, хоча ця архітектура процесора не називає цей регістр "
"\"реєстром TSC\". (Надав Джеремі Гілтон.)"

msgid ""
"The :c:type:`tracebackobject` type has been renamed to :c:type:"
"`PyTracebackObject`."
msgstr ""
"Тип :c:type:`tracebackobject` було перейменовано на :c:type:"
"`PyTracebackObject`."

msgid "Port-Specific Changes"
msgstr "Зміни, що стосуються порту"

msgid ""
"The Windows port now builds under MSVC++ 7.1 as well as version 6. "
"(Contributed by Martin von Löwis.)"
msgstr ""
"Порт Windows тепер створено під MSVC++ 7.1, а також версію 6. (Надано "
"Мартіном фон Льовісом.)"

msgid "Porting to Python 2.4"
msgstr "Перенесення на Python 2.4"

msgid ""
"This section lists previously described changes that may require changes to "
"your code:"
msgstr ""
"У цьому розділі перераховано описані раніше зміни, які можуть потребувати "
"змін у вашому коді:"

msgid ""
"Left shifts and hexadecimal/octal constants that are too  large no longer "
"trigger a :exc:`FutureWarning` and return  a value limited to 32 or 64 bits; "
"instead they return a long integer."
msgstr ""
"Зрушення вліво та шістнадцяткові/вісімкові константи, які є занадто "
"великими, більше не викликають :exc:`FutureWarning` і повертають значення, "
"обмежене 32 або 64 бітами; замість цього вони повертають довге ціле число."

msgid ""
"The :func:`zip` built-in function and :func:`itertools.izip` now return  an "
"empty list instead of raising a :exc:`TypeError` exception if called with no "
"arguments."
msgstr ""
"Вбудована функція :func:`zip` і :func:`itertools.izip` тепер повертають "
"порожній список замість того, щоб викликати виняток :exc:`TypeError`, якщо "
"викликати її без аргументів."

msgid ""
"You can no longer compare the :class:`date` and :class:`~datetime.datetime` "
"instances provided by the :mod:`datetime` module.  Two  instances of "
"different classes will now always be unequal, and  relative comparisons "
"(``<``, ``>``) will raise a :exc:`TypeError`."
msgstr ""
"Ви більше не можете порівнювати екземпляри :class:`date` і :class:`~datetime."
"datetime`, надані модулем :mod:`datetime`. Два екземпляри різних класів "
"тепер завжди будуть нерівними, а відносні порівняння (``<``, ``>``) "
"викличуть :exc:`TypeError`."

msgid ""
":func:`dircache.listdir` now passes exceptions to the caller instead of "
"returning empty lists."
msgstr ""
":func:`dircache.listdir` тепер передає винятки викликаючому замість того, "
"щоб повертати порожні списки."

msgid ""
":func:`LexicalHandler.startDTD` used to receive the public and system IDs in "
"the wrong order.  This has been corrected; applications relying on the wrong "
"order need to be fixed."
msgstr ""
":func:`LexicalHandler.startDTD` використовувався для отримання публічних і "
"системних ідентифікаторів у неправильному порядку. Це було виправлено; "
"потрібно виправити програми, які використовують неправильний порядок."

msgid ""
":func:`fcntl.ioctl` now warns if the *mutate*  argument is omitted and "
"relevant."
msgstr ""
":func:`fcntl.ioctl` тепер попереджає, якщо аргумент *mutate* пропущений і "
"доречний."

msgid ""
"The :mod:`tarfile` module now generates GNU-format tar files by default."
msgstr ""
"Модуль :mod:`tarfile` тепер за замовчуванням створює файли tar у форматі GNU."

msgid ""
"Encountering a failure while importing a module no longer leaves a partially "
"initialized module object in ``sys.modules``."
msgstr ""

msgid ""
":const:`None` is now a constant; code that binds a new value to  the name "
"``None`` is now a syntax error."
msgstr ""
":const:`None` тепер константа; код, який прив’язує нове значення до імені "
"``None``, тепер є синтаксичною помилкою."

msgid ""
"The :func:`signals.signal` function now raises a :exc:`RuntimeError` "
"exception for certain illegal values; previously these errors would pass "
"silently.  For example, you can no longer set a handler on the :const:"
"`SIGKILL` signal."
msgstr ""
"Функція :func:`signals.signal` тепер викликає виключення :exc:`RuntimeError` "
"для певних недозволених значень; раніше ці помилки проходили мовчки. "
"Наприклад, ви більше не можете встановити обробник для сигналу :const:"
"`SIGKILL`."

msgid "Acknowledgements"
msgstr "Подяки"

msgid ""
"The author would like to thank the following people for offering "
"suggestions, corrections and assistance with various drafts of this article: "
"Koray Can, Hye-Shik Chang, Michael Dyck, Raymond Hettinger, Brian Hurt, "
"Hamish Lawson, Fredrik Lundh, Sean Reifschneider, Sadruddin Rejeb."
msgstr ""
"Автор хотів би подякувати наступним особам за пропозиції, виправлення та "
"допомогу з різними чернетками цієї статті: Корай Кан, Хе-Шік Чанг, Майкл "
"Дайк, Реймонд Геттінгер, Браян Херт, Хеміш Лоусон, Фредрік Лунд, Шон "
"Рейфшнайдер, Садруддін Реджеб."
