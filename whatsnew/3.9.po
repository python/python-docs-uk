# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-29 13:04+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "What's New In Python 3.9"
msgstr "Що нового в Python 3.9"

msgid "Release"
msgstr "Реліз"

msgid "|release|"
msgstr "|release|"

msgid "Date"
msgstr "Дата"

msgid "|today|"
msgstr "|today|"

msgid "Editor"
msgstr "редактор"

msgid "Łukasz Langa"
msgstr "Łukasz Langa"

msgid ""
"This article explains the new features in Python 3.9, compared to 3.8. "
"Python 3.9 was released on October 5, 2020."
msgstr ""
"У цій статті пояснюється нові функції в Python 3.9 порівняно з 3.8. Python "
"3.9 було випущено 5 жовтня 2020 року."

msgid "For full details, see the :ref:`changelog <changelog>`."
msgstr ""
"Щоб отримати повну інформацію, перегляньте :ref:`журнал змін <changelog>`."

msgid ":pep:`596` - Python 3.9 Release Schedule"
msgstr ":pep:`596` - Графік випуску Python 3.9"

msgid "Summary -- Release highlights"
msgstr "Підсумок – основні моменти випуску"

msgid "New syntax features:"
msgstr "Нові функції синтаксису:"

msgid ":pep:`584`, union operators added to ``dict``;"
msgstr ":pep:`584`, оператори об’єднання додано до ``dict``;"

msgid ":pep:`585`, type hinting generics in standard collections;"
msgstr ":pep:`585`, генерики підказок типів у стандартних колекціях;"

msgid ":pep:`614`, relaxed grammar restrictions on decorators."
msgstr ":pep:`614`, послаблені граматичні обмеження для декораторів."

msgid "New built-in features:"
msgstr "Нові вбудовані функції:"

msgid ":pep:`616`, string methods to remove prefixes and suffixes."
msgstr ":pep:`616`, рядкові методи для видалення префіксів і суфіксів."

msgid "New features in the standard library:"
msgstr "Нові можливості стандартної бібліотеки:"

msgid ":pep:`593`, flexible function and variable annotations;"
msgstr ":pep:`593`, гнучка функція та анотації змінних;"

msgid ""
":func:`os.pidfd_open` added that allows process management without races and "
"signals."
msgstr ""
":func:`os.pidfd_open` додано, що дозволяє керувати процесом без гонок і "
"сигналів."

msgid "Interpreter improvements:"
msgstr "Покращення перекладача:"

msgid ""
":pep:`573`, fast access to module state from methods of C extension types;"
msgstr ""
":pep:`573`, швидкий доступ до стану модуля з методів типів розширення C;"

msgid ":pep:`617`, CPython now uses a new parser based on PEG;"
msgstr ":pep:`617`, CPython тепер використовує новий аналізатор на основі PEG;"

msgid ""
"a number of Python builtins (range, tuple, set, frozenset, list, dict) are "
"now sped up using :pep:`590` vectorcall;"
msgstr ""
"ряд вбудованих компонентів Python (діапазон, кортеж, набір, заморожений "
"набір, список, dict) тепер пришвидшено за допомогою :pep:`590` vectorcall;"

msgid "garbage collection does not block on resurrected objects;"
msgstr "збір сміття не блокується на відроджених об'єктах;"

msgid ""
"a number of Python modules (:mod:`_abc`, :mod:`audioop`, :mod:`_bz2`, :mod:"
"`_codecs`, :mod:`_contextvars`, :mod:`_crypt`, :mod:`_functools`, :mod:"
"`_json`, :mod:`_locale`, :mod:`math`, :mod:`operator`, :mod:`resource`, :mod:"
"`time`, :mod:`_weakref`) now use multiphase initialization as defined by PEP "
"489;"
msgstr ""
"декілька модулів Python (:mod:`_abc`, :mod:`audioop`, :mod:`_bz2`, :mod:"
"`_codecs`, :mod:`_contextvars`, :mod:`_crypt`, :mod:`_functools`, :mod:"
"`_json`, :mod:`_locale`, :mod:`math`, :mod:`operator`, :mod:`resource`, :mod:"
"`time`, :mod:`_weakref`) тепер використовує багатофазову ініціалізацію, як "
"визначено PEP 489;"

msgid ""
"a number of standard library modules (:mod:`audioop`, :mod:`ast`, :mod:"
"`grp`, :mod:`_hashlib`, :mod:`pwd`, :mod:`_posixsubprocess`, :mod:`random`, :"
"mod:`select`, :mod:`struct`, :mod:`termios`, :mod:`zlib`) are now using the "
"stable ABI defined by PEP 384."
msgstr ""
"кілька стандартних бібліотечних модулів (:mod:`audioop`, :mod:`ast`, :mod:"
"`grp`, :mod:`_hashlib`, :mod:`pwd`, :mod:`_posixsubprocess`,  :mod:"
"`random`, :mod:`select`, :mod:`struct`, :mod:`termios`, :mod:`zlib`) тепер "
"використовують стабільний ABI, визначений PEP 384."

msgid "New library modules:"
msgstr "Нові бібліотечні модулі:"

msgid ""
":pep:`615`, the IANA Time Zone Database is now present in the standard "
"library in the :mod:`zoneinfo` module;"
msgstr ""
":pep:`615`, база даних часових поясів IANA тепер присутня в стандартній "
"бібліотеці в модулі :mod:`zoneinfo`;"

msgid ""
"an implementation of a topological sort of a graph is now provided in the "
"new :mod:`graphlib` module."
msgstr ""
"реалізація топологічного сортування графа тепер доступна в новому модулі :"
"mod:`graphlib`."

msgid "Release process changes:"
msgstr "Зміни в процесі випуску:"

msgid ":pep:`602`, CPython adopts an annual release cycle."
msgstr ":pep:`602`, CPython використовує щорічний цикл випуску."

msgid "You should check for DeprecationWarning in your code"
msgstr "Вам слід перевірити DeprecationWarning у вашому коді"

msgid ""
"When Python 2.7 was still supported, a lot of functionality in Python 3 was "
"kept for backward compatibility with Python 2.7. With the end of Python 2 "
"support, these backward compatibility layers have been removed, or will be "
"removed soon. Most of them emitted a :exc:`DeprecationWarning` warning for "
"several years. For example, using ``collections.Mapping`` instead of "
"``collections.abc.Mapping`` emits a :exc:`DeprecationWarning` since Python "
"3.3, released in 2012."
msgstr ""
"Коли Python 2.7 ще підтримувався, багато функціональних можливостей Python 3 "
"було збережено для зворотної сумісності з Python 2.7. З припиненням "
"підтримки Python 2 ці рівні зворотної сумісності були видалені або будуть "
"видалені незабаром. Більшість із них видавали попередження :exc:"
"`DeprecationWarning` протягом кількох років. Наприклад, використання "
"``collections.Mapping`` замість ``collections.abc.Mapping`` видає :exc:"
"`DeprecationWarning`, починаючи з Python 3.3, випущеного в 2012 році."

msgid ""
"Test your application with the :option:`-W` ``default`` command-line option "
"to see :exc:`DeprecationWarning` and :exc:`PendingDeprecationWarning`, or "
"even with :option:`-W` ``error`` to treat them as errors. :ref:`Warnings "
"Filter <warning-filter>` can be used to ignore warnings from third-party "
"code."
msgstr ""
"Перевірте свою програму за допомогою параметра командного рядка :option:`-W` "
"``default``, щоб побачити :exc:`DeprecationWarning` і :exc:"
"`PendingDeprecationWarning`, або навіть за допомогою :option:`-W` ``error`` "
"розглядати їх як помилки. :ref:`Фільтр попереджень <warning-filter>` можна "
"використовувати для ігнорування попереджень від стороннього коду."

msgid ""
"Python 3.9 is the last version providing those Python 2 backward "
"compatibility layers, to give more time to Python projects maintainers to "
"organize the removal of the Python 2 support and add support for Python 3.9."
msgstr ""
"Python 3.9 є останньою версією, яка забезпечує рівні зворотної сумісності "
"Python 2, щоб дати більше часу супроводжувачам проектів Python для "
"організації видалення підтримки Python 2 і додавання підтримки для Python "
"3.9."

msgid ""
"Aliases to :ref:`Abstract Base Classes <collections-abstract-base-classes>` "
"in the :mod:`collections` module, like ``collections.Mapping`` alias to :"
"class:`collections.abc.Mapping`, are kept for one last release for backward "
"compatibility. They will be removed from Python 3.10."
msgstr ""
"Псевдоніми :ref:`Abstract Base Classes <collections-abstract-base-classes>` "
"в модулі :mod:`collections`, як-от псевдонім ``collections.Mapping`` для :"
"class:`collections.abc.Mapping`, зберігаються для останнього випуску для "
"повернення сумісність. Їх буде видалено з Python 3.10."

msgid ""
"More generally, try to run your tests in the :ref:`Python Development Mode "
"<devmode>` which helps to prepare your code to make it compatible with the "
"next Python version."
msgstr ""
"Загалом, спробуйте запустити свої тести в режимі :ref:`Python Development "
"Mode <devmode>`, який допоможе підготувати ваш код до сумісності з наступною "
"версією Python."

msgid ""
"Note: a number of pre-existing deprecations were removed in this version of "
"Python as well. Consult the :ref:`removed-in-python-39` section."
msgstr ""
"Примітка: у цій версії Python також було видалено низку існуючих застарілих "
"програм. Зверніться до розділу :ref:`removed-in-python-39`."

msgid "New Features"
msgstr "Нові можливості"

msgid "Dictionary Merge & Update Operators"
msgstr "Оператори злиття та оновлення словника"

msgid ""
"Merge (``|``) and update (``|=``) operators have been added to the built-in :"
"class:`dict` class. Those complement the existing ``dict.update`` and "
"``{**d1, **d2}`` methods of merging dictionaries."
msgstr ""
"До вбудованого класу :class:`dict` додано оператори Merge (``|``) і Update "
"(``|=``). Вони доповнюють існуючі методи об’єднання словників ``dict."
"update`` і ``{**d1, **d2}``."

msgid "Example::"
msgstr "Приклад::"

msgid ""
"See :pep:`584` for a full description. (Contributed by Brandt Bucher in :"
"issue:`36144`.)"
msgstr ""
"Дивіться :pep:`584` для повного опису. (Надав Брандт Бухер у :issue:`36144`.)"

msgid "New String Methods to Remove Prefixes and Suffixes"
msgstr "Нові рядкові методи для видалення префіксів і суфіксів"

msgid ""
":meth:`str.removeprefix(prefix)<str.removeprefix>` and :meth:`str."
"removesuffix(suffix)<str.removesuffix>` have been added to easily remove an "
"unneeded prefix or a suffix from a string. Corresponding ``bytes``, "
"``bytearray``, and ``collections.UserString`` methods have also been added. "
"See :pep:`616` for a full description. (Contributed by Dennis Sweeney in :"
"issue:`39939`.)"
msgstr ""
"Додано :meth:`str.removeprefix(prefix) <str.removeprefix>` і :meth:`str."
"removesuffix(suffix) <str.removesuffix>`, щоб легко видалити непотрібний "
"префікс або суфікс із рядка. Також додано відповідні методи ``bytes``, "
"``bytearray`` і ``collections.UserString``. Дивіться :pep:`616` для повного "
"опису. (Надав Денніс Суїні в :issue:`39939`.)"

msgid "Type Hinting Generics in Standard Collections"
msgstr "Універсальні підказки типів у стандартних колекціях"

msgid ""
"In type annotations you can now use built-in collection types such as "
"``list`` and ``dict`` as generic types instead of importing the "
"corresponding capitalized types (e.g. ``List`` or ``Dict``) from "
"``typing``.  Some other types in the standard library are also now generic, "
"for example ``queue.Queue``."
msgstr ""
"В анотаціях типів тепер можна використовувати вбудовані типи колекцій, такі "
"як ``list`` і ``dict``, як загальні типи замість імпорту відповідних типів, "
"написаних великими літерами (наприклад, ``List`` або ``Dict``) із "
"``введення``. Деякі інші типи стандартної бібліотеки також тепер є "
"загальними, наприклад ``queue.Queue``."

msgid "Example:"
msgstr "приклад:"

msgid ""
"See :pep:`585` for more details.  (Contributed by Guido van Rossum, Ethan "
"Smith, and Batuhan Taşkaya in :issue:`39481`.)"
msgstr ""
"Дивіться :pep:`585` для більш детальної інформації. (Надано Гвідо ван "
"Россумом, Ітаном Смітом і Батуханом Ташкаєю в :issue:`39481`.)"

msgid "New Parser"
msgstr "Новий парсер"

msgid ""
"Python 3.9 uses a new parser, based on `PEG <https://en.wikipedia.org/wiki/"
"Parsing_expression_grammar>`_ instead of `LL(1) <https://en.wikipedia.org/"
"wiki/LL_parser>`_.  The new parser's performance is roughly comparable to "
"that of the old parser, but the PEG formalism is more flexible than LL(1) "
"when it comes to designing new language features.  We'll start using this "
"flexibility in Python 3.10 and later."
msgstr ""
"Python 3.9 використовує новий аналізатор на основі `PEG <https://en."
"wikipedia.org/wiki/Parsing_expression_grammar>`_ замість `LL(1) <https://en."
"wikipedia.org/wiki/LL_parser>`_. Продуктивність нового синтаксичного "
"аналізатора приблизно порівнянна з продуктивністю старого парсера, але "
"формалізм PEG є більш гнучким, ніж LL(1), коли справа доходить до розробки "
"нових функцій мови. Ми почнемо використовувати цю гнучкість у Python 3.10 і "
"пізніших версіях."

msgid ""
"The :mod:`ast` module uses the new parser and produces the same AST as the "
"old parser."
msgstr ""
"Модуль :mod:`ast` використовує новий аналізатор і створює той самий AST, що "
"й старий аналізатор."

msgid ""
"In Python 3.10, the old parser will be deleted and so will all functionality "
"that depends on it (primarily the :mod:`parser` module, which has long been "
"deprecated).  In Python 3.9 *only*, you can switch back to the LL(1) parser "
"using a command line switch (``-X oldparser``) or an environment variable "
"(``PYTHONOLDPARSER=1``)."
msgstr ""
"У Python 3.10 старий синтаксичний аналізатор буде видалено, а також усі "
"функціональні можливості, які від нього залежать (передусім модуль :mod:"
"`parser`, який уже давно застарів). Лише в Python 3.9 ви можете повернутися "
"до синтаксичного аналізатора LL(1) за допомогою параметра командного рядка "
"(``-X oldparser``) або змінної середовища (``PYTHONOLDPARSER=1``)."

msgid ""
"See :pep:`617` for more details.  (Contributed by Guido van Rossum, Pablo "
"Galindo and Lysandros Nikolaou in :issue:`40334`.)"
msgstr ""
"Дивіться :pep:`617` для більш детальної інформації. (Надано Гвідо ван "
"Россумом, Пабло Галіндо та Лісандросом Ніколау в :issue:`40334`.)"

msgid "Other Language Changes"
msgstr "Інші зміни мови"

msgid ""
":func:`__import__` now raises :exc:`ImportError` instead of :exc:"
"`ValueError`, which used to occur when a relative import went past its top-"
"level package. (Contributed by Ngalim Siregar in :issue:`37444`.)"
msgstr ""
":func:`__import__` тепер викликає :exc:`ImportError` замість :exc:"
"`ValueError`, який раніше траплявся, коли відносний імпорт проходив поза "
"пакетом верхнього рівня. (Надав Нгалім Сірегар у :issue:`37444`.)"

msgid ""
"Python now gets the absolute path of the script filename specified on the "
"command line (ex: ``python3 script.py``): the ``__file__`` attribute of the :"
"mod:`__main__` module became an absolute path, rather than a relative path. "
"These paths now remain valid after the current directory is changed by :func:"
"`os.chdir`. As a side effect, the traceback also displays the absolute path "
"for :mod:`__main__` module frames in this case. (Contributed by Victor "
"Stinner in :issue:`20443`.)"
msgstr ""
"Тепер Python отримує абсолютний шлях до імені файлу сценарію, указаного в "
"командному рядку (наприклад: ``python3 script.py``): атрибут ``__file__`` "
"модуля :mod:`__main__` став абсолютним шляхом, а не ніж відносний шлях. "
"Тепер ці шляхи залишаються дійсними після того, як поточний каталог змінено :"
"func:`os.chdir`. Як побічний ефект, у цьому випадку трасування також "
"відображає абсолютний шлях для фреймів модуля :mod:`__main__`. (Надав Віктор "
"Стіннер у :issue:`20443`.)"

msgid ""
"In the :ref:`Python Development Mode <devmode>` and in :ref:`debug build "
"<debug-build>`, the *encoding* and *errors* arguments are now checked for "
"string encoding and decoding operations. Examples: :func:`open`, :meth:`str."
"encode` and :meth:`bytes.decode`."
msgstr ""
"У режимі :ref:`Python Development Mode <devmode>` і в :ref:`debug build "
"<debug-build>`, аргументи *encoding* і *errors* тепер перевіряються на "
"наявність операцій кодування та декодування рядків. Приклади: :func:`open`, :"
"meth:`str.encode` і :meth:`bytes.decode`."

msgid ""
"By default, for best performance, the *errors* argument is only checked at "
"the first encoding/decoding error and the *encoding* argument is sometimes "
"ignored for empty strings. (Contributed by Victor Stinner in :issue:`37388`.)"
msgstr ""
"За замовчуванням для найкращої продуктивності аргумент *errors* "
"перевіряється лише при першій помилці кодування/декодування, а аргумент "
"*encoding* іноді ігнорується для порожніх рядків. (Надав Віктор Стіннер у :"
"issue:`37388`.)"

msgid ""
"``\"\".replace(\"\", s, n)`` now returns ``s`` instead of an empty string "
"for all non-zero ``n``.  It is now consistent with ``\"\".replace(\"\", "
"s)``. There are similar changes for :class:`bytes` and :class:`bytearray` "
"objects. (Contributed by Serhiy Storchaka in :issue:`28029`.)"
msgstr ""
"``\"\".replace(\"\", s, n)`` тепер повертає ``s`` замість порожнього рядка "
"для всіх ненульових ``n``. Тепер це сумісно з ``\"\".replace(\"\", s)``. "
"Існують подібні зміни для об’єктів :class:`bytes` і :class:`bytearray`. "
"(Надав Сергій Сторчака в :issue:`28029`.)"

msgid ""
"Any valid expression can now be used as a :term:`decorator`.  Previously, "
"the grammar was much more restrictive.  See :pep:`614` for details. "
"(Contributed by Brandt Bucher in :issue:`39702`.)"
msgstr ""
"Будь-який дійсний вираз тепер можна використовувати як :term:`decorator`. "
"Раніше граматика була набагато жорсткішою. Подробиці див. :pep:`614`. (Надав "
"Брандт Бухер у :issue:`39702`.)"

msgid ""
"Improved help for the :mod:`typing` module. Docstrings are now shown for all "
"special forms and special generic aliases (like ``Union`` and ``List``). "
"Using :func:`help` with generic alias like ``List[int]`` will show the help "
"for the correspondent concrete type (``list`` in this case). (Contributed by "
"Serhiy Storchaka in :issue:`40257`.)"
msgstr ""
"Покращена довідка для модуля :mod:`typing`. Рядки документів тепер "
"відображаються для всіх спеціальних форм і спеціальних загальних псевдонімів "
"(наприклад, ``Union`` і ``List``). Використання :func:`help` із загальним "
"псевдонімом, таким як ``List[int]``, покаже довідку для відповідного "
"конкретного типу (``list`` у цьому випадку). (Надав Сергій Сторчака в :issue:"
"`40257`.)"

msgid ""
"Parallel running of :meth:`~agen.aclose` / :meth:`~agen.asend` / :meth:"
"`~agen.athrow` is now prohibited, and ``ag_running`` now reflects the actual "
"running status of the async generator. (Contributed by Yury Selivanov in :"
"issue:`30773`.)"
msgstr ""
"Паралельний запуск :meth:`~agen.aclose` / :meth:`~agen.asend` / :meth:`~agen."
"athrow` тепер заборонено, а ``ag_running`` тепер відображає фактичний статус "
"роботи асинхронний генератор. (Надав Юрій Селіванов у :issue:`30773`.)"

msgid ""
"Unexpected errors in calling the ``__iter__`` method are no longer masked by "
"``TypeError`` in the :keyword:`in` operator and functions :func:`~operator."
"contains`, :func:`~operator.indexOf` and :func:`~operator.countOf` of the :"
"mod:`operator` module. (Contributed by Serhiy Storchaka in :issue:`40824`.)"
msgstr ""
"Неочікувані помилки під час виклику методу ``__iter__`` більше не маскуються "
"``TypeError`` в операторі :keyword:`in` і функціях :func:`~operator."
"contains`, :func:`~operator.indexOf` і :func:`~operator.countOf` модуля :mod:"
"`operator`. (Надав Сергій Сторчака в :issue:`40824`.)"

msgid ""
"Unparenthesized lambda expressions can no longer be the expression part in "
"an ``if`` clause in comprehensions and generator expressions. See :issue:"
"`41848` and :issue:`43755` for details."
msgstr ""
"Лямбда-вирази без круглих дужок більше не можуть бути частиною виразу в "
"реченні ``if`` у виразах розуміння та генераторі. Дивіться :issue:`41848` і :"
"issue:`43755` для отримання додаткової інформації."

msgid "New Modules"
msgstr "Нові модулі"

msgid "zoneinfo"
msgstr "зонаінфо"

msgid ""
"The :mod:`zoneinfo` module brings support for the IANA time zone database to "
"the standard library. It adds :class:`zoneinfo.ZoneInfo`, a concrete :class:"
"`datetime.tzinfo` implementation backed by the system's time zone data."
msgstr ""
"Модуль :mod:`zoneinfo` забезпечує підтримку бази даних часових поясів IANA "
"до стандартної бібліотеки. Він додає :class:`zoneinfo.ZoneInfo`, конкретну "
"реалізацію :class:`datetime.tzinfo`, яка підтримується даними про часовий "
"пояс системи."

msgid ""
"As a fall-back source of data for platforms that don't ship the IANA "
"database, the |tzdata|_ module was released as a first-party package -- "
"distributed via PyPI and maintained by the CPython core team."
msgstr ""
"Як резервне джерело даних для платформ, які не постачають базу даних IANA, "
"модуль |tzdata|_ було випущено як пакет першої сторони, який поширюється "
"через PyPI та підтримується основною командою CPython."

msgid ""
":pep:`615` -- Support for the IANA Time Zone Database in the Standard Library"
msgstr ""
":pep:`615` -- Підтримка бази даних часових поясів IANA в стандартній "
"бібліотеці"

msgid "PEP written and implemented by Paul Ganssle"
msgstr "PEP написаний і реалізований Полом Ганссле"

msgid "graphlib"
msgstr "graphlib"

msgid ""
"A new module, :mod:`graphlib`, was added that contains the :class:`graphlib."
"TopologicalSorter` class to offer functionality to perform topological "
"sorting of graphs. (Contributed by Pablo Galindo, Tim Peters and Larry "
"Hastings in :issue:`17005`.)"
msgstr ""
"Було додано новий модуль :mod:`graphlib`, який містить клас :class:`graphlib."
"TopologicalSorter`, який пропонує функції для виконання топологічного "
"сортування графів. (Надано Пабло Галіндо, Тімом Пітерсом і Ларрі Гастінгсом "
"у :issue:`17005`.)"

msgid "Improved Modules"
msgstr "Покращені модулі"

msgid "ast"
msgstr "аст"

msgid ""
"Added the *indent* option to :func:`~ast.dump` which allows it to produce a "
"multiline indented output. (Contributed by Serhiy Storchaka in :issue:"
"`37995`.)"
msgstr ""
"Додано опцію *indent* до :func:`~ast.dump`, яка дозволяє створювати "
"багаторядковий вивід із відступом. (Надав Сергій Сторчака в :issue:`37995`.)"

msgid ""
"Added :func:`ast.unparse` as a function in the :mod:`ast` module that can be "
"used to unparse an :class:`ast.AST` object and produce a string with code "
"that would produce an equivalent :class:`ast.AST` object when parsed. "
"(Contributed by Pablo Galindo and Batuhan Taskaya in :issue:`38870`.)"
msgstr ""
"Додано :func:`ast.unparse` як функцію в модулі :mod:`ast`, яку можна "
"використовувати для розбору об’єкта :class:`ast.AST` і створення рядка з "
"кодом, який створить еквівалентний :class:`ast.AST` об'єкт під час аналізу. "
"(Надано Пабло Галіндо та Батуханом Таською в :issue:`38870`.)"

msgid ""
"Added docstrings to AST nodes that contains the ASDL signature used to "
"construct that node. (Contributed by Batuhan Taskaya in :issue:`39638`.)"
msgstr ""
"До вузлів AST додано рядки документів, які містять підпис ASDL, використаний "
"для створення цього вузла. (Надано Batuhan Taskaya в :issue:`39638`.)"

msgid "asyncio"
msgstr "asyncio"

msgid ""
"Due to significant security concerns, the *reuse_address* parameter of :meth:"
"`asyncio.loop.create_datagram_endpoint` is no longer supported. This is "
"because of the behavior of the socket option ``SO_REUSEADDR`` in UDP. For "
"more details, see the documentation for ``loop.create_datagram_endpoint()``. "
"(Contributed by Kyle Stanley, Antoine Pitrou, and Yury Selivanov in :issue:"
"`37228`.)"
msgstr ""
"Через серйозні проблеми безпеки параметр *reuse_address* :meth:`asyncio.loop."
"create_datagram_endpoint` більше не підтримується. Це через поведінку опції "
"сокета ``SO_REUSEADDR`` в UDP. Для отримання додаткової інформації див. "
"документацію для ``loop.create_datagram_endpoint()``. (Надано Кайлом Стенлі, "
"Антуаном Пітру та Юрієм Селівановим у :issue:`37228`.)"

msgid ""
"Added a new :term:`coroutine` :meth:`~asyncio.loop."
"shutdown_default_executor` that schedules a shutdown for the default "
"executor that waits on the :class:`~concurrent.futures.ThreadPoolExecutor` "
"to finish closing. Also, :func:`asyncio.run` has been updated to use the "
"new :term:`coroutine`. (Contributed by Kyle Stanley in :issue:`34037`.)"
msgstr ""
"Додано новий :term:`coroutine` :meth:`~asyncio.loop."
"shutdown_default_executor`, який планує завершення роботи для виконавця за "
"замовчуванням, який очікує завершення закриття :class:`~concurrent.futures."
"ThreadPoolExecutor`. Крім того, :func:`asyncio.run` було оновлено, щоб "
"використовувати нову :term:`coroutine`. (Надав Кайл Стенлі в :issue:`34037`.)"

msgid ""
"Added :class:`asyncio.PidfdChildWatcher`, a Linux-specific child watcher "
"implementation that polls process file descriptors. (:issue:`38692`)"
msgstr ""
"Додано :class:`asyncio.PidfdChildWatcher`, реалізацію дочірнього "
"спостерігача для Linux, яка опитує дескриптори файлів процесу. (:issue:"
"`38692`)"

msgid ""
"Added a new :term:`coroutine` :func:`asyncio.to_thread`. It is mainly used "
"for running IO-bound functions in a separate thread to avoid blocking the "
"event loop, and essentially works as a high-level version of :meth:`~asyncio."
"loop.run_in_executor` that can directly take keyword arguments. (Contributed "
"by Kyle Stanley and Yury Selivanov in :issue:`32309`.)"
msgstr ""
"Додано нову :term:`coroutine` :func:`asyncio.to_thread`. Він в основному "
"використовується для запуску функцій, пов’язаних із введенням-виведенням, в "
"окремому потоці, щоб уникнути блокування циклу подій, і, по суті, працює як "
"високорівнева версія :meth:`~asyncio.loop.run_in_executor`, яка може "
"безпосередньо приймати ключові аргументи. (Надано Кайлом Стенлі та Юрієм "
"Селівановим у :issue:`32309`.)"

msgid ""
"When cancelling the task due to a timeout, :meth:`asyncio.wait_for` will now "
"wait until the cancellation is complete also in the case when *timeout* is "
"<= 0, like it does with positive timeouts. (Contributed by Elvis "
"Pranskevichus in :issue:`32751`.)"
msgstr ""
"Під час скасування завдання через тайм-аут :meth:`asyncio.wait_for` тепер "
"чекатиме до завершення скасування також у випадку, коли *timeout* <= 0, як "
"це відбувається з позитивними тайм-аутами. (Надав Елвіс Пранскявічус у :"
"issue:`32751`.)"

msgid ""
":mod:`asyncio` now raises :exc:`TyperError` when calling incompatible "
"methods with an :class:`ssl.SSLSocket` socket. (Contributed by Ido Michael "
"in :issue:`37404`.)"
msgstr ""
":mod:`asyncio` тепер викликає :exc:`TyperError` під час виклику несумісних "
"методів із сокетом :class:`ssl.SSLSocket`. (Надав Ідо Майкл у :issue:"
"`37404`.)"

msgid "compileall"
msgstr "compileall"

msgid ""
"Added new possibility to use hardlinks for duplicated ``.pyc`` files: "
"*hardlink_dupes* parameter and --hardlink-dupes command line option. "
"(Contributed by  Lumír 'Frenzy' Balhar in :issue:`40495`.)"
msgstr ""
"Додано нову можливість використовувати жорсткі посилання для дубльованих "
"файлів ``.pyc``: параметр *hardlink_dupes* і параметр командного рядка --"
"hardlink-dupes. (Надав Lumír 'Frenzy' Balhar у :issue:`40495`.)"

msgid ""
"Added new options for path manipulation in resulting ``.pyc`` files: "
"*stripdir*, *prependdir*, *limit_sl_dest* parameters and -s, -p, -e command "
"line options. Added the possibility to specify the option for an "
"optimization level multiple times. (Contributed by Lumír 'Frenzy' Balhar in :"
"issue:`38112`.)"
msgstr ""
"Додано нові параметри для маніпулювання шляхом у кінцевих файлах ``.pyc``: "
"параметри *stripdir*, *prependdir*, *limit_sl_dest* і параметри командного "
"рядка -s, -p, -e. Додана можливість багаторазово вказувати опцію для рівня "
"оптимізації. (Надав Lumír 'Frenzy' Balhar у :issue:`38112`.)"

msgid "concurrent.futures"
msgstr "concurrent.futures"

msgid ""
"Added a new *cancel_futures* parameter to :meth:`concurrent.futures.Executor."
"shutdown` that cancels all pending futures which have not started running, "
"instead of waiting for them to complete before shutting down the executor. "
"(Contributed by Kyle Stanley in :issue:`39349`.)"
msgstr ""
"Додано новий параметр *cancel_futures* до :meth:`concurrent.futures.Executor."
"shutdown`, який скасовує всі незавершені ф’ючерси, які ще не почали "
"виконуватися, замість того, щоб чекати їх завершення перед вимкненням "
"виконавця. (Надав Кайл Стенлі в :issue:`39349`.)"

msgid ""
"Removed daemon threads from :class:`~concurrent.futures.ThreadPoolExecutor` "
"and :class:`~concurrent.futures.ProcessPoolExecutor`. This improves "
"compatibility with subinterpreters and predictability in their shutdown "
"processes. (Contributed by Kyle Stanley in :issue:`39812`.)"
msgstr ""
"Видалено потоки демона з :class:`~concurrent.futures.ThreadPoolExecutor` і :"
"class:`~concurrent.futures.ProcessPoolExecutor`. Це покращує сумісність із "
"субінтерпретаторами та передбачуваність процесів їх завершення. (Надав Кайл "
"Стенлі в :issue:`39812`.)"

msgid ""
"Workers in :class:`~concurrent.futures.ProcessPoolExecutor` are now spawned "
"on demand, only when there are no available idle workers to reuse. This "
"optimizes startup overhead and reduces the amount of lost CPU time to idle "
"workers. (Contributed by Kyle Stanley in :issue:`39207`.)"
msgstr ""
"Воркери в :class:`~concurrent.futures.ProcessPoolExecutor` тепер створюються "
"на вимогу, лише коли немає доступних неактивних робочих елементів для "
"повторного використання. Це оптимізує накладні витрати на запуск і зменшує "
"кількість втраченого процесорного часу для простою працівників. (Надав Кайл "
"Стенлі в :issue:`39207`.)"

msgid "curses"
msgstr "прокльони"

msgid ""
"Added :func:`curses.get_escdelay`, :func:`curses.set_escdelay`, :func:"
"`curses.get_tabsize`, and :func:`curses.set_tabsize` functions. (Contributed "
"by Anthony Sottile in :issue:`38312`.)"
msgstr ""
"Додано функції :func:`curses.get_escdelay`, :func:`curses.set_escdelay`, :"
"func:`curses.get_tabsize` і :func:`curses.set_tabsize`. (Надав Ентоні "
"Соттіле в :issue:`38312`.)"

msgid "datetime"
msgstr "дата, час"

msgid ""
"The :meth:`~datetime.date.isocalendar()` of :class:`datetime.date` and :meth:"
"`~datetime.datetime.isocalendar()` of :class:`datetime.datetime` methods now "
"returns a :func:`~collections.namedtuple` instead of a :class:`tuple`. "
"(Contributed by Dong-hee Na in :issue:`24416`.)"
msgstr ""
":meth:`~datetime.date.isocalendar()` методів :class:`datetime.date` і :meth:"
"`~datetime.datetime.isocalendar()` :class:`datetime.datetime` тепер "
"повертає :func:`~collections.namedtuple` замість :class:`tuple`. (Надав Dong-"
"hee Na у :issue:`24416`.)"

msgid "distutils"
msgstr "distutils"

msgid ""
"The :command:`upload` command now creates SHA2-256 and Blake2b-256 hash "
"digests. It skips MD5 on platforms that block MD5 digest. (Contributed by "
"Christian Heimes in :issue:`40698`.)"
msgstr ""
"Команда :command:`upload` тепер створює хеш-дайджести SHA2-256 і "
"Blake2b-256. Він пропускає MD5 на платформах, які блокують дайджест MD5. "
"(Надав Крістіан Хеймс у :issue:`40698`.)"

msgid "fcntl"
msgstr "fcntl"

msgid ""
"Added constants :data:`~fcntl.F_OFD_GETLK`, :data:`~fcntl.F_OFD_SETLK` and :"
"data:`~fcntl.F_OFD_SETLKW`. (Contributed by Dong-hee Na in :issue:`38602`.)"
msgstr ""
"Додано константи :data:`~fcntl.F_OFD_GETLK`, :data:`~fcntl.F_OFD_SETLK` і :"
"data:`~fcntl.F_OFD_SETLKW`. (Надав Dong-hee Na у :issue:`38602`.)"

msgid "ftplib"
msgstr "ftplib"

msgid ""
":class:`~ftplib.FTP` and :class:`~ftplib.FTP_TLS` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""
":class:`~ftplib.FTP` і :class:`~ftplib.FTP_TLS` тепер викликають :class:"
"`ValueError`, якщо час очікування для їх конструктора дорівнює нулю, щоб "
"запобігти створенню неблокуючого сокета. (Надав Dong-hee Na у :issue:"
"`39259`.)"

msgid "gc"
msgstr "gc"

msgid ""
"When the garbage collector makes a collection in which some objects "
"resurrect (they are reachable from outside the isolated cycles after the "
"finalizers have been executed), do not block the collection of all objects "
"that are still unreachable. (Contributed by Pablo Galindo and Tim Peters in :"
"issue:`38379`.)"
msgstr ""
"Коли збирач сміття створює колекцію, у якій деякі об’єкти відроджуються "
"(вони доступні поза ізольованими циклами після виконання фіналізаторів), не "
"блокуйте колекцію всіх об’єктів, які все ще недоступні. (Надано Пабло "
"Галіндо та Тімом Пітерсом у :issue:`38379`.)"

msgid ""
"Added a new function :func:`gc.is_finalized` to check if an object has been "
"finalized by the garbage collector. (Contributed by Pablo Galindo in :issue:"
"`39322`.)"
msgstr ""
"Додано нову функцію :func:`gc.is_finalized`, щоб перевірити, чи завершив "
"об’єкт збирач сміття. (Надав Пабло Галіндо в :issue:`39322`.)"

msgid "hashlib"
msgstr "хешліб"

msgid ""
"The :mod:`hashlib` module can now use SHA3 hashes and SHAKE XOF from OpenSSL "
"when available. (Contributed by Christian Heimes in :issue:`37630`.)"
msgstr ""
"Модуль :mod:`hashlib` тепер може використовувати хеші SHA3 і SHAKE XOF з "
"OpenSSL, якщо вони доступні. (Надав Крістіан Хеймс у :issue:`37630`.)"

msgid ""
"Builtin hash modules can now be disabled with ``./configure --without-"
"builtin-hashlib-hashes`` or selectively enabled with e.g. ``./configure --"
"with-builtin-hashlib-hashes=sha3,blake2`` to force use of OpenSSL based "
"implementation. (Contributed by Christian Heimes in :issue:`40479`)"
msgstr ""
"Вбудовані хеш-модулі тепер можна вимкнути за допомогою ``./configure --"
"without-builtin-hashlib-hashes`` або вибірково ввімкнути за допомогою, "
"наприклад, ``./configure --with-builtin-hashlib-hashes=sha3,blake2``, щоб "
"примусово використовувати реалізацію на основі OpenSSL. (Надав Крістіан "
"Хеймс у :issue:`40479`)"

msgid "http"
msgstr "http"

msgid ""
"HTTP status codes ``103 EARLY_HINTS``, ``418 IM_A_TEAPOT`` and ``425 "
"TOO_EARLY`` are added to :class:`http.HTTPStatus`. (Contributed by Dong-hee "
"Na in :issue:`39509` and Ross Rhodes in :issue:`39507`.)"
msgstr ""
"Коди статусу HTTP ``103 EARLY_HINTS``, ``418 IM_A_TEAPOT`` і ``425 "
"TOO_EARLY`` додаються до :class:`http.HTTPStatus`. (Надано Dong-hee Na у :"
"issue:`39509` та Росс Роудс у :issue:`39507`.)"

msgid "IDLE and idlelib"
msgstr "IDLE і idlelib"

msgid ""
"Added option to toggle cursor blink off.  (Contributed by Zackery Spytz in :"
"issue:`4603`.)"
msgstr ""
"Додана опція для вимкнення блимання курсору. (Надав Закері Шпітц у :issue:"
"`4603`.)"

msgid ""
"Escape key now closes IDLE completion windows.  (Contributed by Johnny "
"Najera in :issue:`38944`.)"
msgstr ""
"Клавіша Escape тепер закриває вікна завершення IDLE. (Надав Джонні Наджера "
"в :issue:`38944`.)"

msgid ""
"Added keywords to module name completion list.  (Contributed by Terry J. "
"Reedy in :issue:`37765`.)"
msgstr ""
"Додано ключові слова до списку завершення імен модуля. (Надано Террі Дж. "
"Ріді в :issue:`37765`.)"

msgid "New in 3.9 maintenance releases"
msgstr "Нове у випусках обслуговування 3.9"

msgid ""
"Make IDLE invoke :func:`sys.excepthook` (when started without '-n'). User "
"hooks were previously ignored.  (Contributed by Ken Hilton in :issue:"
"`43008`.)"
msgstr ""
"Зробити IDLE викликом :func:`sys.excepthook` (якщо запускається без '-n'). "
"Хуки користувача раніше ігнорувалися. (Надав Кен Хілтон у :issue:`43008`.)"

msgid "The changes above have been backported to 3.8 maintenance releases."
msgstr "Зазначені вище зміни було перенесено до випусків обслуговування 3.8."

msgid ""
"Rearrange the settings dialog.  Split the General tab into Windows and Shell/"
"Ed tabs.  Move help sources, which extend the Help menu, to the Extensions "
"tab.  Make space for new options and shorten the dialog. The latter makes "
"the dialog better fit small screens.  (Contributed by Terry Jan Reedy in :"
"issue:`40468`.)  Move the indent space setting from the Font tab to the new "
"Windows tab.  (Contributed by Mark Roseman and Terry Jan Reedy in :issue:"
"`33962`.)"
msgstr ""
"Перевпорядкування діалогового вікна налаштувань. Розділіть вкладку Загальні "
"на вкладки Windows і Shell/Ed. Перемістіть джерела довідки, які розширюють "
"меню \"Довідка\", на вкладку \"Розширення\". Звільніть місце для нових "
"параметрів і скоротіть діалогове вікно. Останнє робить діалог краще "
"адаптованим до маленьких екранів. (Надано Террі Джаном Ріді в :issue:"
"`40468`.) Перемістіть налаштування відступу з вкладки \"Шрифт\" на нову "
"вкладку Windows. (Надано Марком Розманом і Террі Джен Ріді в :issue:`33962`.)"

msgid ""
"Apply syntax highlighting to ``.pyi`` files. (Contributed by Alex Waygood "
"and Terry Jan Reedy in :issue:`45447`.)"
msgstr ""

msgid "imaplib"
msgstr "імапліб"

msgid ""
":class:`~imaplib.IMAP4` and :class:`~imaplib.IMAP4_SSL` now have an optional "
"*timeout* parameter for their constructors. Also, the :meth:`~imaplib.IMAP4."
"open` method now has an optional *timeout* parameter with this change. The "
"overridden methods of :class:`~imaplib.IMAP4_SSL` and :class:`~imaplib."
"IMAP4_stream` were applied to this change. (Contributed by Dong-hee Na in :"
"issue:`38615`.)"
msgstr ""
":class:`~imaplib.IMAP4` і :class:`~imaplib.IMAP4_SSL` тепер мають додатковий "
"параметр *timeout* для своїх конструкторів. Крім того, завдяки цій зміні "
"метод :meth:`~imaplib.IMAP4.open` тепер має додатковий параметр *timeout*. "
"До цієї зміни було застосовано перевизначені методи :class:`~imaplib."
"IMAP4_SSL` і :class:`~imaplib.IMAP4_stream`. (Надав Dong-hee Na у :issue:"
"`38615`.)"

msgid ""
":meth:`imaplib.IMAP4.unselect` is added. :meth:`imaplib.IMAP4.unselect` "
"frees server's resources associated with the selected mailbox and returns "
"the server to the authenticated state. This command performs the same "
"actions as :meth:`imaplib.IMAP4.close`, except that no messages are "
"permanently removed from the currently selected mailbox. (Contributed by "
"Dong-hee Na in :issue:`40375`.)"
msgstr ""
":meth:`imaplib.IMAP4.unselect` додано. :meth:`imaplib.IMAP4.unselect` "
"звільняє ресурси сервера, пов’язані з вибраною поштовою скринькою, і "
"повертає сервер до автентифікованого стану. Ця команда виконує ті самі дії, "
"що й :meth:`imaplib.IMAP4.close`, за винятком того, що повідомлення не "
"видаляються назавжди з поточної вибраної поштової скриньки. (Надав Dong-hee "
"Na у :issue:`40375`.)"

msgid "importlib"
msgstr "importlib"

msgid ""
"To improve consistency with import statements, :func:`importlib.util."
"resolve_name` now raises :exc:`ImportError` instead of :exc:`ValueError` for "
"invalid relative import attempts. (Contributed by Ngalim Siregar in :issue:"
"`37444`.)"
msgstr ""
"Щоб покращити узгодженість із операторами імпорту, :func:`importlib.util."
"resolve_name` тепер викликає :exc:`ImportError` замість :exc:`ValueError` "
"для недійсних відносних спроб імпорту. (Надав Нгалім Сірегар у :issue:"
"`37444`.)"

msgid ""
"Import loaders which publish immutable module objects can now publish "
"immutable packages in addition to individual modules. (Contributed by Dino "
"Viehland in :issue:`39336`.)"
msgstr ""
"Завантажувачі імпорту, які публікують незмінні об’єкти модулів, тепер можуть "
"публікувати незмінні пакети на додаток до окремих модулів. (Надав Діно "
"Віланд у :issue:`39336`.)"

msgid ""
"Added :func:`importlib.resources.files` function with support for "
"subdirectories in package data, matching backport in ``importlib_resources`` "
"version 1.5. (Contributed by Jason R. Coombs in :issue:`39791`.)"
msgstr ""
"Додано функцію :func:`importlib.resources.files` із підтримкою підкаталогів "
"у даних пакетів, що відповідає бекпорту в ``importlib_resources`` версії "
"1.5. (Надав Джейсон Р. Кумбс у :issue:`39791`.)"

msgid ""
"Refreshed ``importlib.metadata`` from ``importlib_metadata`` version 1.6.1."
msgstr "Оновлено ``importlib.metadata`` з ``importlib_metadata`` версії 1.6.1."

msgid "inspect"
msgstr "оглядати"

msgid ""
":attr:`inspect.BoundArguments.arguments` is changed from ``OrderedDict`` to "
"regular dict.  (Contributed by Inada Naoki in :issue:`36350` and :issue:"
"`39775`.)"
msgstr ""
":attr:`inspect.BoundArguments.arguments` змінено з ``OrderedDict`` на "
"звичайний dict. (Надано Інадою Наокі в :issue:`36350` і :issue:`39775`.)"

msgid "ipaddress"
msgstr "IP-адреса"

msgid ""
":mod:`ipaddress` now supports IPv6 Scoped Addresses (IPv6 address with "
"suffix ``%<scope_id>``)."
msgstr ""
":mod:`ipaddress` тепер підтримує IPv6 Scoped Addresses (адреса IPv6 із "
"суфіксом ``% <scope_id>``)."

msgid ""
"Scoped IPv6 addresses can be parsed using :class:`ipaddress.IPv6Address`. If "
"present, scope zone ID is available through the :attr:`~ipaddress."
"IPv6Address.scope_id` attribute. (Contributed by Oleksandr Pavliuk in :issue:"
"`34788`.)"
msgstr ""
"Адреси IPv6 із областю дії можна проаналізувати за допомогою :class:"
"`ipaddress.IPv6Address`. Якщо присутній, ідентифікатор зони дії доступний "
"через атрибут :attr:`~ipaddress.IPv6Address.scope_id`. (Надав Олександр "
"Павлюк у :issue:`34788`.)"

msgid ""
"Starting with Python 3.9.5 the :mod:`ipaddress` module no longer accepts any "
"leading zeros in IPv4 address strings. (Contributed by Christian Heimes in :"
"issue:`36384`)."
msgstr ""
"Починаючи з Python 3.9.5, модуль :mod:`ipaddress` більше не приймає жодних "
"початкових нулів у рядках адрес IPv4. (Надав Крістіан Хеймс у :issue:"
"`36384`)."

msgid "math"
msgstr "математика"

msgid ""
"Expanded the :func:`math.gcd` function to handle multiple arguments. "
"Formerly, it only supported two arguments. (Contributed by Serhiy Storchaka "
"in :issue:`39648`.)"
msgstr ""
"Розширено функцію :func:`math.gcd` для обробки кількох аргументів. Раніше "
"він підтримував лише два аргументи. (Надав Сергій Сторчака в :issue:`39648`.)"

msgid ""
"Added :func:`math.lcm`: return the least common multiple of specified "
"arguments. (Contributed by Mark Dickinson, Ananthakrishnan and Serhiy "
"Storchaka in :issue:`39479` and :issue:`39648`.)"
msgstr ""
"Додано :func:`math.lcm`: повертає найменше спільне кратне вказаних "
"аргументів. (Надано Марком Дікінсоном, Анантакрішнаном і Сергієм Сторчакою "
"в :issue:`39479` і :issue:`39648`.)"

msgid ""
"Added :func:`math.nextafter`: return the next floating-point value after *x* "
"towards *y*. (Contributed by Victor Stinner in :issue:`39288`.)"
msgstr ""
"Додано :func:`math.nextafter`: повертає наступне значення з плаваючою комою "
"після *x* до *y*. (Надав Віктор Стіннер у :issue:`39288`.)"

msgid ""
"Added :func:`math.ulp`: return the value of the least significant bit of a "
"float. (Contributed by Victor Stinner in :issue:`39310`.)"
msgstr ""
"Додано :func:`math.ulp`: повертає значення молодшого біта числа з плаваючою "
"точкою. (Надав Віктор Стіннер у :issue:`39310`.)"

msgid "multiprocessing"
msgstr "багатопроцесорність"

msgid ""
"The :class:`multiprocessing.SimpleQueue` class has a new :meth:"
"`~multiprocessing.SimpleQueue.close` method to explicitly close the queue. "
"(Contributed by Victor Stinner in :issue:`30966`.)"
msgstr ""
"Клас :class:`multiprocessing.SimpleQueue` має новий метод :meth:"
"`~multiprocessing.SimpleQueue.close` для явного закриття черги. (Надав "
"Віктор Стіннер у :issue:`30966`.)"

msgid "nntplib"
msgstr "nntplib"

msgid ""
":class:`~nntplib.NNTP` and :class:`~nntplib.NNTP_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""
":class:`~nntplib.NNTP` і :class:`~nntplib.NNTP_SSL` тепер викликають :class:"
"`ValueError`, якщо заданий тайм-аут для їхнього конструктора дорівнює нулю, "
"щоб запобігти створенню неблокуючого сокета. (Надав Dong-hee Na у :issue:"
"`39259`.)"

msgid "os"
msgstr "ос"

msgid ""
"Added :data:`~os.CLD_KILLED` and :data:`~os.CLD_STOPPED` for :attr:"
"`si_code`. (Contributed by Dong-hee Na in :issue:`38493`.)"
msgstr ""
"Додано :data:`~os.CLD_KILLED` і :data:`~os.CLD_STOPPED` для :attr:`si_code`. "
"(Надав Dong-hee Na у :issue:`38493`.)"

msgid ""
"Exposed the Linux-specific :func:`os.pidfd_open` (:issue:`38692`) and :data:"
"`os.P_PIDFD` (:issue:`38713`) for process management with file descriptors."
msgstr ""
"Розкрито специфічні для Linux :func:`os.pidfd_open` (:issue:`38692`) і :data:"
"`os.P_PIDFD` (:issue:`38713`) для керування процесами за допомогою "
"дескрипторів файлів."

msgid ""
"The :func:`os.unsetenv` function is now also available on Windows. "
"(Contributed by Victor Stinner in :issue:`39413`.)"
msgstr ""
"Функція :func:`os.unsetenv` тепер також доступна в Windows. (Надав Віктор "
"Стіннер у :issue:`39413`.)"

msgid ""
"The :func:`os.putenv` and :func:`os.unsetenv` functions are now always "
"available. (Contributed by Victor Stinner in :issue:`39395`.)"
msgstr ""
"Функції :func:`os.putenv` і :func:`os.unsetenv` тепер завжди доступні. "
"(Надав Віктор Стіннер у :issue:`39395`.)"

msgid ""
"Added :func:`os.waitstatus_to_exitcode` function: convert a wait status to "
"an exit code. (Contributed by Victor Stinner in :issue:`40094`.)"
msgstr ""
"Додано функцію :func:`os.waitstatus_to_exitcode`: перетворює стан очікування "
"на код виходу. (Надав Віктор Стіннер у :issue:`40094`.)"

msgid "pathlib"
msgstr "pathlib"

msgid ""
"Added :meth:`pathlib.Path.readlink()` which acts similarly to :func:`os."
"readlink`. (Contributed by Girts Folkmanis in :issue:`30618`)"
msgstr ""
"Додано :meth:`pathlib.Path.readlink()`, який діє подібно до :func:`os."
"readlink`. (Надав Гіртс Фолкманіс у :issue:`30618`)"

msgid "pdb"
msgstr "pdb"

msgid ""
"On Windows now :class:`~pdb.Pdb` supports ``~/.pdbrc``. (Contributed by Tim "
"Hopper and Dan Lidral-Porter in :issue:`20523`.)"
msgstr ""
"У Windows тепер :class:`~pdb.Pdb` підтримує ``~/.pdbrc``. (Надано Тімом "
"Хоппером і Деном Лідралом-Портером у :issue:`20523`.)"

msgid "poplib"
msgstr "попліб"

msgid ""
":class:`~poplib.POP3` and :class:`~poplib.POP3_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""
":class:`~poplib.POP3` і :class:`~poplib.POP3_SSL` тепер викликають :class:"
"`ValueError`, якщо час очікування для їх конструктора дорівнює нулю, щоб "
"запобігти створенню неблокуючого сокета. (Надав Dong-hee Na у :issue:"
"`39259`.)"

msgid "pprint"
msgstr "pprint"

msgid ""
":mod:`pprint` can now pretty-print :class:`types.SimpleNamespace`. "
"(Contributed by Carl Bordum Hansen in :issue:`37376`.)"
msgstr ""
":mod:`pprint` тепер може красиво друкувати :class:`types.SimpleNamespace`. "
"(Надав Карл Бордум Хансен у :issue:`37376`.)"

msgid "pydoc"
msgstr "pydoc"

msgid ""
"The documentation string is now shown not only for class, function, method "
"etc, but for any object that has its own ``__doc__`` attribute. (Contributed "
"by Serhiy Storchaka in :issue:`40257`.)"
msgstr ""
"Рядок документації тепер відображається не лише для класу, функції, методу "
"тощо, але й для будь-якого об’єкта, який має власний атрибут ``__doc__``. "
"(Надав Сергій Сторчака в :issue:`40257`.)"

msgid "random"
msgstr "випадковий"

msgid ""
"Added a new :attr:`random.Random.randbytes` method: generate random bytes. "
"(Contributed by Victor Stinner in :issue:`40286`.)"
msgstr ""
"Додано новий метод :attr:`random.Random.randbytes`: генерувати випадкові "
"байти. (Надав Віктор Стіннер у :issue:`40286`.)"

msgid "signal"
msgstr "сигнал"

msgid ""
"Exposed the Linux-specific :func:`signal.pidfd_send_signal` for sending to "
"signals to a process using a file descriptor instead of a pid. (:issue:"
"`38712`)"
msgstr ""
"Розкритий специфічний для Linux :func:`signal.pidfd_send_signal` для "
"надсилання сигналів до процесу за допомогою файлового дескриптора замість "
"pid. (:issue:`38712`)"

msgid "smtplib"
msgstr "smtplib"

msgid ""
":class:`~smtplib.SMTP` and :class:`~smtplib.SMTP_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""
":class:`~smtplib.SMTP` і :class:`~smtplib.SMTP_SSL` тепер викликають :class:"
"`ValueError`, якщо заданий тайм-аут для їхнього конструктора дорівнює нулю, "
"щоб запобігти створенню неблокуючого сокета. (Надав Dong-hee Na у :issue:"
"`39259`.)"

msgid ""
":class:`~smtplib.LMTP` constructor  now has an optional *timeout* parameter. "
"(Contributed by Dong-hee Na in :issue:`39329`.)"
msgstr ""
":class:`~smtplib.LMTP` конструктор тепер має додатковий параметр *timeout*. "
"(Надав Dong-hee Na у :issue:`39329`.)"

msgid "socket"
msgstr "гніздо"

msgid ""
"The :mod:`socket` module now exports the :data:`~socket."
"CAN_RAW_JOIN_FILTERS` constant on Linux 4.1 and greater. (Contributed by "
"Stefan Tatschner and Zackery Spytz in :issue:`25780`.)"
msgstr ""
"Модуль :mod:`socket` тепер експортує константу :data:`~socket."
"CAN_RAW_JOIN_FILTERS` у Linux 4.1 і новіших версіях. (Надано Стефаном "
"Татшнером і Закері Шпітцом у :issue:`25780`.)"

msgid ""
"The socket module now supports the :data:`~socket.CAN_J1939` protocol on "
"platforms that support it.  (Contributed by Karl Ding in :issue:`40291`.)"
msgstr ""
"Модуль сокета тепер підтримує протокол :data:`~socket.CAN_J1939` на "
"платформах, які його підтримують. (Надав Карл Дінг у :issue:`40291`.)"

msgid ""
"The socket module now has the :func:`socket.send_fds` and :func:`socket."
"recv_fds` functions. (Contributed by Joannah Nanjekye, Shinya Okano and "
"Victor Stinner in :issue:`28724`.)"
msgstr ""
"Модуль сокета тепер має функції :func:`socket.send_fds` і :func:`socket."
"recv_fds`. (Надано Joannah Nanjekye, Shinya Okano та Victor Stinner у :issue:"
"`28724`.)"

msgid "time"
msgstr "час"

msgid ""
"On AIX, :func:`~time.thread_time` is now implemented with "
"``thread_cputime()`` which has nanosecond resolution, rather than "
"``clock_gettime(CLOCK_THREAD_CPUTIME_ID)`` which has a resolution of 10 "
"milliseconds. (Contributed by Batuhan Taskaya in :issue:`40192`)"
msgstr ""

msgid "sys"
msgstr "система"

msgid ""
"Added a new :attr:`sys.platlibdir` attribute: name of the platform-specific "
"library directory. It is used to build the path of standard library and the "
"paths of installed extension modules. It is equal to ``\"lib\"`` on most "
"platforms.  On Fedora and SuSE, it is equal to ``\"lib64\"`` on 64-bit "
"platforms. (Contributed by Jan Matějek, Matěj Cepl, Charalampos Stratakis "
"and Victor Stinner in :issue:`1294959`.)"
msgstr ""
"Додано новий атрибут :attr:`sys.platlibdir`: ім’я каталогу бібліотеки для "
"певної платформи. Використовується для побудови шляху стандартної бібліотеки "
"та шляхів встановлених модулів розширення. На більшості платформ він "
"дорівнює ``\"lib\"``. У Fedora та SuSE він дорівнює ``\"lib64\"`` на 64-"
"розрядних платформах. (Надано Яном Матєйком, Матєєм Чеплем, Харалампосом "
"Стратакісом і Віктором Стіннером у :issue:`1294959`.)"

msgid ""
"Previously, :attr:`sys.stderr` was block-buffered when non-interactive. Now "
"``stderr`` defaults to always being line-buffered. (Contributed by Jendrik "
"Seipp in :issue:`13601`.)"
msgstr ""
"Раніше :attr:`sys.stderr` був блочно буферизований, коли не був "
"інтерактивним. Тепер ``stderr`` за замовчуванням завжди буферизується "
"рядком. (Надав Jendrik Seipp у :issue:`13601`.)"

msgid "tracemalloc"
msgstr "tracemalloc"

msgid ""
"Added :func:`tracemalloc.reset_peak` to set the peak size of traced memory "
"blocks to the current size, to measure the peak of specific pieces of code. "
"(Contributed by Huon Wilson in :issue:`40630`.)"
msgstr ""
"Додано :func:`tracemalloc.reset_peak` для встановлення максимального розміру "
"відстежуваних блоків пам’яті на поточний розмір, щоб виміряти пік певних "
"фрагментів коду. (Надав Хуон Вілсон у :issue:`40630`.)"

msgid "typing"
msgstr "введення тексту"

msgid ""
":pep:`593` introduced an :data:`typing.Annotated` type to decorate existing "
"types with context-specific metadata and new ``include_extras`` parameter "
"to :func:`typing.get_type_hints` to access the metadata at runtime. "
"(Contributed by Till Varoquaux and Konstantin Kashin.)"
msgstr ""
":pep:`593` представив тип :data:`typing.Annotated`, щоб прикрасити існуючі "
"типи контекстно-залежними метаданими та новий параметр ``include_extras`` "
"для :func:`typing.get_type_hints` для доступу до метаданих під час "
"виконання. (Надано Тіллем Варокво та Костянтином Кашиним.)"

msgid "unicodedata"
msgstr "unicodedata"

msgid ""
"The Unicode database has been updated to version 13.0.0. (:issue:`39926`)."
msgstr "Базу даних Unicode оновлено до версії 13.0.0. (:issue:`39926`)."

msgid "venv"
msgstr "venv"

msgid ""
"The activation scripts provided by :mod:`venv` now all specify their prompt "
"customization consistently by always using the value specified by "
"``__VENV_PROMPT__``. Previously some scripts unconditionally used "
"``__VENV_PROMPT__``, others only if it happened to be set (which was the "
"default case), and one used ``__VENV_NAME__`` instead. (Contributed by Brett "
"Cannon in :issue:`37663`.)"
msgstr ""
"Усі сценарії активації, надані :mod:`venv`, тепер узгоджено вказують "
"налаштування підказок, завжди використовуючи значення, визначене "
"``__VENV_PROMPT__``. Раніше деякі сценарії беззастережно використовували "
"``__VENV_PROMPT__``, інші, лише якщо його було встановлено (що було випадком "
"за замовчуванням), а один замість цього використовував ``__VENV_NAME__``. "
"(Надано Бреттом Кенноном у :issue:`37663`.)"

msgid "xml"
msgstr "xml"

msgid ""
"White space characters within attributes are now preserved when serializing :"
"mod:`xml.etree.ElementTree` to XML file. EOLNs are no longer normalized to "
"\"\\n\". This is the result of discussion about how to interpret section "
"2.11 of XML spec. (Contributed by Mefistotelis in :issue:`39011`.)"
msgstr ""
"Пробіли в атрибутах тепер зберігаються під час серіалізації :mod:`xml.etree."
"ElementTree` у файл XML. EOLN більше не нормалізуються до \"\\n\". Це "
"результат обговорення того, як інтерпретувати розділ 2.11 специфікації XML. "
"(Надано Mefistotelis у :issue:`39011`.)"

msgid "Optimizations"
msgstr "Оптимізації"

msgid ""
"Optimized the idiom for assignment a temporary variable in comprehensions. "
"Now ``for y in [expr]`` in comprehensions is as fast as a simple assignment "
"``y = expr``.  For example:"
msgstr ""
"Оптимізовано ідіому для призначення тимчасової змінної в розумінні. Тепер "
"``для y в [expr]`` в розуміннях так само швидко, як просте присвоєння ``y = "
"expr``. Наприклад:"

msgid "sums = [s for s in [0] for x in data for s in [s + x]]"
msgstr "суми = [s для s у [0] для x у даних для s у [s + x]]"

msgid ""
"Unlike the ``:=`` operator this idiom does not leak a variable to the outer "
"scope."
msgstr ""
"На відміну від оператора ``:=``, ця ідіома не пропускає змінну до зовнішньої "
"області."

msgid "(Contributed by Serhiy Storchaka in :issue:`32856`.)"
msgstr "(Надав Сергій Сторчака в :issue:`32856`.)"

msgid ""
"Optimized signal handling in multithreaded applications. If a thread "
"different than the main thread gets a signal, the bytecode evaluation loop "
"is no longer interrupted at each bytecode instruction to check for pending "
"signals which cannot be handled. Only the main thread of the main "
"interpreter can handle signals."
msgstr ""
"Оптимізована обробка сигналів у багатопоточних програмах. Якщо потік, "
"відмінний від основного, отримує сигнал, цикл оцінки байт-коду більше не "
"переривається при кожній інструкції байт-коду, щоб перевірити наявність "
"незавершених сигналів, які не можуть бути оброблені. Тільки основний потік "
"головного інтерпретатора може обробляти сигнали."

msgid ""
"Previously, the bytecode evaluation loop was interrupted at each instruction "
"until the main thread handles signals. (Contributed by Victor Stinner in :"
"issue:`40010`.)"
msgstr ""
"Раніше цикл оцінки байт-коду переривався на кожній інструкції, доки основний "
"потік не обробить сигнали. (Надав Віктор Стіннер у :issue:`40010`.)"

msgid ""
"Optimized the :mod:`subprocess` module on FreeBSD using ``closefrom()``. "
"(Contributed by Ed Maste, Conrad Meyer, Kyle Evans, Kubilay Kocak and Victor "
"Stinner in :issue:`38061`.)"
msgstr ""
"Оптимізовано модуль :mod:`subprocess` у FreeBSD за допомогою "
"``closefrom()``. (Надано Едом Масте, Конрадом Майєром, Кайлом Евансом, "
"Кубілаєм Коцаком і Віктором Стіннером у :issue:`38061`.)"

msgid ""
":c:func:`PyLong_FromDouble` is now up to 1.87x faster for values that fit "
"into :c:expr:`long`. (Contributed by Sergey Fedoseev in :issue:`37986`.)"
msgstr ""

msgid ""
"A number of Python builtins (:class:`range`, :class:`tuple`, :class:`set`, :"
"class:`frozenset`, :class:`list`, :class:`dict`) are now sped up by using :"
"pep:`590` vectorcall protocol. (Contributed by Dong-hee Na, Mark Shannon, "
"Jeroen Demeyer and Petr Viktorin in :issue:`37207`.)"
msgstr ""
"Низка вбудованих модулів Python (:class:`range`, :class:`tuple`, :class:"
"`set`, :class:`frozenset`, :class:`list`, :class:`dict`) тепер прискорюється "
"за допомогою протоколу vectorcall :pep:`590`. (Надано Dong-hee Na, Mark "
"Shannon, Jeroen Demeyer та Petr Viktorin у :issue:`37207`.)"

msgid ""
"Optimized :func:`~set.difference_update` for the case when the other set is "
"much larger than the base set. (Suggested by Evgeny Kapun with code "
"contributed by Michele Orrù in :issue:`8425`.)"
msgstr ""
"Оптимізовано :func:`~set.difference_update` для випадку, коли інший набір "
"набагато більший за базовий набір. (Запропоновано Євгеном Капуном із кодом, "
"наданим Мікеле Орру в :issue:`8425`.)"

msgid ""
"Python's small object allocator (``obmalloc.c``) now allows (no more than) "
"one empty arena to remain available for immediate reuse, without returning "
"it to the OS.  This prevents thrashing in simple loops where an arena could "
"be created and destroyed anew on each iteration. (Contributed by Tim Peters "
"in :issue:`37257`.)"
msgstr ""
"Розподіл малих об’єктів Python (``obmalloc.c``) тепер дозволяє (не більше) "
"одній порожній арені залишатися доступною для негайного повторного "
"використання без повернення її в ОС. Це запобігає трішу в простих циклах, де "
"арена може бути створена та знищена заново на кожній ітерації. (Надав Тім "
"Пітерс у :issue:`37257`.)"

msgid ""
":term:`floor division` of float operation now has a better performance. Also "
"the message of :exc:`ZeroDivisionError` for this operation is updated. "
"(Contributed by Dong-hee Na in :issue:`39434`.)"
msgstr ""
":term:`floor division` операції float тепер має кращу продуктивність. Також "
"оновлено повідомлення :exc:`ZeroDivisionError` для цієї операції. (Надав "
"Dong-hee Na у :issue:`39434`.)"

msgid ""
"Decoding short ASCII strings with UTF-8 and ascii codecs is now about 15% "
"faster.  (Contributed by Inada Naoki in :issue:`37348`.)"
msgstr ""
"Декодування коротких рядків ASCII за допомогою кодеків UTF-8 і ascii тепер "
"приблизно на 15% швидше. (Надано Інадою Наокі в :issue:`37348`.)"

msgid ""
"Here's a summary of performance improvements from Python 3.4 through Python "
"3.9:"
msgstr "Ось підсумок покращень продуктивності від Python 3.4 до Python 3.9:"

msgid ""
"These results were generated from the variable access benchmark script at: "
"``Tools/scripts/var_access_benchmark.py``. The benchmark script displays "
"timings in nanoseconds.  The benchmarks were measured on an `Intel® Core™ "
"i7-4960HQ processor <https://ark.intel.com/content/www/us/en/ark/"
"products/76088/intel-core-i7-4960hq-processor-6m-cache-up-to-3-80-ghz."
"html>`_ running the macOS 64-bit builds found at `python.org <https://www."
"python.org/downloads/mac-osx/>`_."
msgstr ""
"Ці результати були згенеровані зі сценарію тестування доступу до змінних за "
"адресою: ``Tools/scripts/var_access_benchmark.py``. Еталонний сценарій "
"відображає таймінги в наносекундах. Контрольні показники вимірювалися на "
"процесорі `Intel® Core™ i7-4960HQ <https://ark.intel.com/content/www/us/en/"
"ark/products/76088/intel-core-i7-4960hq-processor-6m-cache-up-to-3-80-ghz."
"html>`_ під керуванням 64-розрядних збірок macOS, доступних на `python.org "
"<https://www.python.org/downloads/mac-osx/>`_."

msgid "Deprecated"
msgstr "Застаріле"

msgid ""
"The distutils ``bdist_msi`` command is now deprecated, use ``bdist_wheel`` "
"(wheel packages) instead. (Contributed by Hugo van Kemenade in :issue:"
"`39586`.)"
msgstr ""
"Команда distutils ``bdist_msi`` тепер застаріла, замість неї використовуйте "
"``bdist_wheel`` (пакети колеса). (Надав Хуго ван Кеменаде в :issue:`39586`.)"

msgid ""
"Currently :func:`math.factorial` accepts :class:`float` instances with non-"
"negative integer values (like ``5.0``).  It raises a :exc:`ValueError` for "
"non-integral and negative floats.  It is now deprecated.  In future Python "
"versions it will raise a :exc:`TypeError` for all floats. (Contributed by "
"Serhiy Storchaka in :issue:`37315`.)"
msgstr ""
"Наразі :func:`math.factorial` приймає екземпляри :class:`float` із "
"невід’ємними цілими значеннями (наприклад, ``5.0``). Він викликає помилку :"
"exc:`ValueError` для нецілісних і від’ємних чисел з плаваючою точкою. Зараз "
"це застаріле. У майбутніх версіях Python він викличе :exc:`TypeError` для "
"всіх плаваючих значень. (Надав Сергій Сторчака в :issue:`37315`.)"

msgid ""
"The :mod:`parser` and :mod:`symbol` modules are deprecated and will be "
"removed in future versions of Python. For the majority of use cases, users "
"can leverage the Abstract Syntax Tree (AST) generation and compilation "
"stage, using the :mod:`ast` module."
msgstr ""
"Модулі :mod:`parser` і :mod:`symbol` застаріли та будуть видалені в "
"майбутніх версіях Python. Для більшості випадків використання користувачі "
"можуть використовувати етап генерації та компіляції абстрактного "
"синтаксичного дерева (AST) за допомогою модуля :mod:`ast`."

msgid ""
"The Public C API functions :c:func:`PyParser_SimpleParseStringFlags`, :c:"
"func:`PyParser_SimpleParseStringFlagsFilename`, :c:func:"
"`PyParser_SimpleParseFileFlags` and :c:func:`PyNode_Compile` are deprecated "
"and will be removed in Python 3.10 together with the old parser."
msgstr ""
"Функції Public C API :c:func:`PyParser_SimpleParseStringFlags`, :c:func:"
"`PyParser_SimpleParseStringFlagsFilename`, :c:func:"
"`PyParser_SimpleParseFileFlags` і :c:func:`PyNode_Compile` застаріли та "
"будуть видалені разом у Python 3.10 зі старим парсером."

msgid ""
"Using :data:`NotImplemented` in a boolean context has been deprecated, as it "
"is almost exclusively the result of incorrect rich comparator "
"implementations. It will be made a :exc:`TypeError` in a future version of "
"Python. (Contributed by Josh Rosenberg in :issue:`35712`.)"
msgstr ""
"Використання :data:`NotImplemented` у логічному контексті застаріло, "
"оскільки це майже виключно результат неправильних реалізацій багатого "
"компаратора. У майбутній версії Python це буде зроблено як :exc:`TypeError`. "
"(Надав Джош Розенберг у :issue:`35712`.)"

msgid ""
"The :mod:`random` module currently accepts any hashable type as a possible "
"seed value.  Unfortunately, some of those types are not guaranteed to have a "
"deterministic hash value.  After Python 3.9, the module will restrict its "
"seeds to :const:`None`, :class:`int`, :class:`float`, :class:`str`, :class:"
"`bytes`, and :class:`bytearray`."
msgstr ""
"Модуль :mod:`random` наразі приймає будь-який хешований тип як можливе "
"початкове значення. На жаль, деякі з цих типів не гарантовано матимуть "
"детерміноване хеш-значення. Після Python 3.9 модуль обмежуватиме початкові "
"значення до :const:`None`, :class:`int`, :class:`float`, :class:`str`, :"
"class:`bytes` і :class:`bytearray`."

msgid ""
"Opening the :class:`~gzip.GzipFile` file for writing without specifying the "
"*mode* argument is deprecated.  In future Python versions it will always be "
"opened for reading by default.  Specify the *mode* argument for opening it "
"for writing and silencing a warning. (Contributed by Serhiy Storchaka in :"
"issue:`28286`.)"
msgstr ""
"Відкриття файлу :class:`~gzip.GzipFile` для запису без вказівки аргументу "
"*mode* застаріло. У наступних версіях Python він завжди буде відкритий для "
"читання за умовчанням. Укажіть аргумент *mode*, щоб відкрити його для запису "
"та вимкнення попередження. (Надав Сергій Сторчака в :issue:`28286`.)"

msgid ""
"Deprecated the ``split()`` method of :class:`_tkinter.TkappType` in favour "
"of the ``splitlist()`` method which has more consistent and predicable "
"behavior. (Contributed by Serhiy Storchaka in :issue:`38371`.)"
msgstr ""
"Застарів метод ``split()`` :class:`_tkinter.TkappType` на користь методу "
"``splitlist()``, який має більш узгоджену та передбачувану поведінку. (Надав "
"Сергій Сторчака в :issue:`38371`.)"

msgid ""
"The explicit passing of coroutine objects to :func:`asyncio.wait` has been "
"deprecated and will be removed in version 3.11. (Contributed by Yury "
"Selivanov and Kyle Stanley in :issue:`34790`.)"
msgstr ""
"Явне передавання об’єктів співпрограми до :func:`asyncio.wait` застаріло та "
"буде видалено у версії 3.11. (Надано Юрієм Селівановим і Кайлом Стенлі в :"
"issue:`34790`.)"

msgid ""
"binhex4 and hexbin4 standards are now deprecated. The :mod:`binhex` module "
"and the following :mod:`binascii` functions are now deprecated:"
msgstr ""
"Стандарти binhex4 і hexbin4 тепер застаріли. Модуль :mod:`binhex` і такі "
"функції :mod:`binascii` тепер застаріли:"

msgid ":func:`~binascii.b2a_hqx`, :func:`~binascii.a2b_hqx`"
msgstr ":func:`~binascii.b2a_hqx`, :func:`~binascii.a2b_hqx`"

msgid ":func:`~binascii.rlecode_hqx`, :func:`~binascii.rledecode_hqx`"
msgstr ":func:`~binascii.rlecode_hqx`, :func:`~binascii.rledecode_hqx`"

msgid "(Contributed by Victor Stinner in :issue:`39353`.)"
msgstr "(Надав Віктор Стіннер у :issue:`39353`.)"

msgid ""
":mod:`ast` classes ``slice``, ``Index`` and ``ExtSlice`` are considered "
"deprecated and will be removed in future Python versions.  ``value`` itself "
"should be used instead of ``Index(value)``.  ``Tuple(slices, Load())`` "
"should be used instead of ``ExtSlice(slices)``. (Contributed by Serhiy "
"Storchaka in :issue:`34822`.)"
msgstr ""
":mod:`ast` класи ``slice``, ``Index`` і ``ExtSlice`` вважаються застарілими "
"та будуть видалені в майбутніх версіях Python. Саме ``значення`` слід "
"використовувати замість ``Індекс(значення)``. ``Tuple(slices, Load())`` слід "
"використовувати замість ``ExtSlice(slices)``. (Надав Сергій Сторчака в :"
"issue:`34822`.)"

msgid ""
":mod:`ast` classes ``Suite``, ``Param``, ``AugLoad`` and ``AugStore`` are "
"considered deprecated and will be removed in future Python versions. They "
"were not generated by the parser and not accepted by the code generator in "
"Python 3. (Contributed by Batuhan Taskaya in :issue:`39639` and :issue:"
"`39969` and Serhiy Storchaka in :issue:`39988`.)"
msgstr ""
":mod:`ast` класи ``Suite``, ``Param``, ``AugLoad`` і ``AugStore`` вважаються "
"застарілими та будуть видалені в майбутніх версіях Python. Вони не були "
"згенеровані парсером і не прийняті генератором коду в Python 3. (Надано "
"Batuhan Taskaya в :issue:`39639` і :issue:`39969` та Сергій Сторчака в :"
"issue:`39988`.)"

msgid ""
"The :c:func:`PyEval_InitThreads` and :c:func:`PyEval_ThreadsInitialized` "
"functions are now deprecated and will be removed in Python 3.11. Calling :c:"
"func:`PyEval_InitThreads` now does nothing. The :term:`GIL` is initialized "
"by :c:func:`Py_Initialize()` since Python 3.7. (Contributed by Victor "
"Stinner in :issue:`39877`.)"
msgstr ""
"Функції :c:func:`PyEval_InitThreads` і :c:func:`PyEval_ThreadsInitialized` "
"тепер застаріли та будуть видалені в Python 3.11. Виклик :c:func:"
"`PyEval_InitThreads` тепер нічого не робить. :term:`GIL` ініціалізується :c:"
"func:`Py_Initialize()` починаючи з Python 3.7. (Надав Віктор Стіннер у :"
"issue:`39877`.)"

msgid ""
"Passing ``None`` as the first argument to the :func:`shlex.split` function "
"has been deprecated.  (Contributed by Zackery Spytz in :issue:`33262`.)"
msgstr ""
"Передача ``None`` як першого аргументу функції :func:`shlex.split` "
"застаріла. (Надав Закері Шпітц у :issue:`33262`.)"

msgid ""
":func:`smtpd.MailmanProxy` is now deprecated as it is unusable without an "
"external module, ``mailman``.  (Contributed by Samuel Colvin in :issue:"
"`35800`.)"
msgstr ""
":func:`smtpd.MailmanProxy` тепер не підтримується, оскільки його не можна "
"використовувати без зовнішнього модуля, ``mailman``. (Надав Семюель Колвін "
"у :issue:`35800`.)"

msgid ""
"The :mod:`lib2to3` module now emits a :exc:`PendingDeprecationWarning`. "
"Python 3.9 switched to a PEG parser (see :pep:`617`), and Python 3.10 may "
"include new language syntax that is not parsable by lib2to3's LL(1) parser. "
"The ``lib2to3`` module may be removed from the standard library in a future "
"Python version. Consider third-party alternatives such as `LibCST`_ or "
"`parso`_. (Contributed by Carl Meyer in :issue:`40360`.)"
msgstr ""
"Модуль :mod:`lib2to3` тепер видає :exc:`PendingDeprecationWarning`. Python "
"3.9 перейшов на синтаксичний аналізатор PEG (див. :pep:`617`), а Python 3.10 "
"може включати новий синтаксис мови, який не аналізується парсером LL(1) "
"lib2to3. Модуль ``lib2to3`` може бути видалено зі стандартної бібліотеки в "
"майбутній версії Python. Розгляньте сторонні альтернативи, такі як `LibCST`_ "
"або `parso`_. (Надано Карлом Майєром у :issue:`40360`.)"

msgid ""
"The *random* parameter of :func:`random.shuffle` has been deprecated. "
"(Contributed by Raymond Hettinger in :issue:`40465`)"
msgstr ""
"Параметр *random* :func:`random.shuffle` застарів. (Надав Реймонд Геттінгер "
"у :issue:`40465`)"

msgid "Removed"
msgstr "Видалено"

msgid ""
"The erroneous version at :data:`unittest.mock.__version__` has been removed."
msgstr "Помилкову версію в :data:`unittest.mock.__version__` було видалено."

msgid ""
":class:`nntplib.NNTP`: ``xpath()`` and ``xgtitle()`` methods have been "
"removed. These methods are deprecated since Python 3.3. Generally, these "
"extensions are not supported or not enabled by NNTP server administrators. "
"For ``xgtitle()``, please use :meth:`nntplib.NNTP.descriptions` or :meth:"
"`nntplib.NNTP.description` instead. (Contributed by Dong-hee Na in :issue:"
"`39366`.)"
msgstr ""
":class:`nntplib.NNTP`: методи ``xpath()`` і ``xgtitle()`` видалено. Ці "
"методи застаріли з Python 3.3. Як правило, ці розширення не підтримуються "
"або не ввімкнені адміністраторами NNTP-сервера. Для ``xgtitle()`` "
"використовуйте замість цього :meth:`nntplib.NNTP.descriptions` або :meth:"
"`nntplib.NNTP.description`. (Надав Dong-hee Na у :issue:`39366`.)"

msgid ""
":class:`array.array`: ``tostring()`` and ``fromstring()`` methods have been "
"removed. They were aliases to ``tobytes()`` and ``frombytes()``, deprecated "
"since Python 3.2. (Contributed by Victor Stinner in :issue:`38916`.)"
msgstr ""
":class:`array.array`: методи ``tostring()`` та ``fromstring()`` видалено. Це "
"були псевдоніми для ``tobytes()`` і ``frombytes()``, застарілих з Python "
"3.2. (Надав Віктор Стіннер у :issue:`38916`.)"

msgid ""
"The undocumented ``sys.callstats()`` function has been removed. Since Python "
"3.7, it was deprecated and always returned :const:`None`. It required a "
"special build option ``CALL_PROFILE`` which was already removed in Python "
"3.7. (Contributed by Victor Stinner in :issue:`37414`.)"
msgstr ""
"Недокументовану функцію ``sys.callstats()`` було видалено. Починаючи з "
"Python 3.7, він був застарілим і завжди повертав :const:`None`. Для цього "
"потрібен був спеціальний параметр збірки ``CALL_PROFILE``, який уже було "
"видалено в Python 3.7. (Надав Віктор Стіннер у :issue:`37414`.)"

msgid ""
"The ``sys.getcheckinterval()`` and ``sys.setcheckinterval()`` functions have "
"been removed. They were deprecated since Python 3.2. Use :func:`sys."
"getswitchinterval` and :func:`sys.setswitchinterval` instead. (Contributed "
"by Victor Stinner in :issue:`37392`.)"
msgstr ""
"Функції ``sys.getcheckinterval()`` і ``sys.setcheckinterval()`` були "
"видалені. Вони застаріли з Python 3.2. Замість цього використовуйте :func:"
"`sys.getswitchinterval` і :func:`sys.setswitchinterval`. (Надав Віктор "
"Стіннер у :issue:`37392`.)"

msgid ""
"The C function ``PyImport_Cleanup()`` has been removed. It was documented "
"as: \"Empty the module table.  For internal use only.\" (Contributed by "
"Victor Stinner in :issue:`36710`.)"
msgstr ""
"Функцію C ``PyImport_Cleanup()`` видалено. Це було задокументовано як: "
"\"Очистити таблицю модулів. Тільки для внутрішнього використання\". (Надав "
"Віктор Стіннер у :issue:`36710`.)"

msgid ""
"``_dummy_thread`` and ``dummy_threading`` modules have been removed. These "
"modules were deprecated since Python 3.7 which requires threading support. "
"(Contributed by Victor Stinner in :issue:`37312`.)"
msgstr ""
"Модулі ``_dummy_thread`` і ``dummy_threading`` видалено. Ці модулі застаріли "
"з Python 3.7, який потребує підтримки потоків. (Надав Віктор Стіннер у :"
"issue:`37312`.)"

msgid ""
"``aifc.openfp()`` alias to ``aifc.open()``, ``sunau.openfp()`` alias to "
"``sunau.open()``, and ``wave.openfp()`` alias to :func:`wave.open()` have "
"been removed. They were deprecated since Python 3.7. (Contributed by Victor "
"Stinner in :issue:`37320`.)"
msgstr ""
"``aifc.openfp()`` псевдонім ``aifc.open()``, ``sunau.openfp()`` псевдонім "
"``sunau.open()`` та ``wave.openfp()`` Псевдонім :func:`wave.open()` було "
"видалено. Вони застаріли з Python 3.7. (Надав Віктор Стіннер у :issue:"
"`37320`.)"

msgid ""
"The :meth:`~threading.Thread.isAlive()` method of :class:`threading.Thread` "
"has been removed. It was deprecated since Python 3.8. Use :meth:`~threading."
"Thread.is_alive()` instead. (Contributed by Dong-hee Na in :issue:`37804`.)"
msgstr ""
"Метод :meth:`~threading.Thread.isAlive()` :class:`threading.Thread` "
"видалено. Він був застарілим, починаючи з Python 3.8. Замість цього "
"використовуйте :meth:`~threading.Thread.is_alive()`. (Надав Dong-hee Na у :"
"issue:`37804`.)"

msgid ""
"Methods ``getchildren()`` and ``getiterator()`` of classes :class:`~xml."
"etree.ElementTree.ElementTree` and :class:`~xml.etree.ElementTree.Element` "
"in the :mod:`~xml.etree.ElementTree` module have been removed.  They were "
"deprecated in Python 3.2. Use ``iter(x)`` or ``list(x)`` instead of ``x."
"getchildren()`` and ``x.iter()`` or ``list(x.iter())`` instead of ``x."
"getiterator()``. (Contributed by Serhiy Storchaka in :issue:`36543`.)"
msgstr ""
"Методи ``getchildren()`` і ``getiterator()`` класів :class:`~xml.etree."
"ElementTree.ElementTree` і :class:`~xml.etree.ElementTree.Element` в Модуль :"
"mod:`~xml.etree.ElementTree` видалено. Вони були застарілі в Python 3.2. "
"Використовуйте ``iter(x)`` або ``list(x)`` замість ``x.getchildren()`` та "
"``x.iter()`` або ``list(x.iter())`` замість ``x.getiterator()``. (Надав "
"Сергій Сторчака в :issue:`36543`.)"

msgid ""
"The old :mod:`plistlib` API has been removed, it was deprecated since Python "
"3.4. Use the :func:`~plistlib.load`, :func:`~plistlib.loads`, :func:"
"`~plistlib.dump`, and :func:`~plistlib.dumps` functions. Additionally, the "
"*use_builtin_types* parameter was removed, standard :class:`bytes` objects "
"are always used instead. (Contributed by Jon Janzen in :issue:`36409`.)"
msgstr ""
"Старий API :mod:`plistlib` було видалено, він застарів з Python 3.4. "
"Використовуйте функції :func:`~plistlib.load`, :func:`~plistlib.loads`, :"
"func:`~plistlib.dump` і :func:`~plistlib.dumps`. Крім того, було видалено "
"параметр *use_builtin_types*, замість нього завжди використовуються "
"стандартні об’єкти :class:`bytes`. (Надав Джон Янзен у :issue:`36409`.)"

msgid ""
"The C function ``PyGen_NeedsFinalizing`` has been removed. It was not "
"documented, tested, or used anywhere within CPython after the implementation "
"of :pep:`442`. Patch by Joannah Nanjekye. (Contributed by Joannah Nanjekye "
"in :issue:`15088`)"
msgstr ""
"Функцію C ``PyGen_NeedsFinalizing`` видалено. Він не був задокументований, "
"протестований або використаний будь-де в CPython після впровадження :pep:"
"`442`. Патч від Joannah Nanjekye. (Надано Joannah Nanjekye в :issue:`15088`)"

msgid ""
"``base64.encodestring()`` and ``base64.decodestring()``, aliases deprecated "
"since Python 3.1, have been removed: use :func:`base64.encodebytes` and :"
"func:`base64.decodebytes` instead. (Contributed by Victor Stinner in :issue:"
"`39351`.)"
msgstr ""
"``base64.encodestring()`` і ``base64.decodestring()``, псевдоніми, які "
"застаріли з Python 3.1, були видалені: замість них використовуйте :func:"
"`base64.encodebytes` і :func:`base64.decodebytes`. (Надав Віктор Стіннер у :"
"issue:`39351`.)"

msgid ""
"``fractions.gcd()`` function has been removed, it was deprecated since "
"Python 3.5 (:issue:`22486`): use :func:`math.gcd` instead. (Contributed by "
"Victor Stinner in :issue:`39350`.)"
msgstr ""
"Функцію ``fractions.gcd()`` видалено, вона застаріла з Python 3.5 (:issue:"
"`22486`): замість неї використовуйте :func:`math.gcd`. (Надав Віктор Стіннер "
"у :issue:`39350`.)"

msgid ""
"The *buffering* parameter of :class:`bz2.BZ2File` has been removed. Since "
"Python 3.0, it was ignored and using it emitted a :exc:`DeprecationWarning`. "
"Pass an open file object to control how the file is opened. (Contributed by "
"Victor Stinner in :issue:`39357`.)"
msgstr ""
"Параметр *buffering* :class:`bz2.BZ2File` було видалено. Починаючи з Python "
"3.0, він ігнорувався, і його використання видавало :exc:"
"`DeprecationWarning`. Передайте відкритий файловий об’єкт, щоб контролювати, "
"як відкривається файл. (Надав Віктор Стіннер у :issue:`39357`.)"

msgid ""
"The *encoding* parameter of :func:`json.loads` has been removed. As of "
"Python 3.1, it was deprecated and ignored; using it has emitted a :exc:"
"`DeprecationWarning` since Python 3.8. (Contributed by Inada Naoki in :issue:"
"`39377`)"
msgstr ""
"Параметр *encoding* :func:`json.loads` видалено. Починаючи з Python 3.1, він "
"був застарілим і ігнорувався; його використання видавало :exc:"
"`DeprecationWarning`, починаючи з Python 3.8. (Надано Інадою Наокі в :issue:"
"`39377`)"

msgid ""
"``with (await asyncio.lock):`` and ``with (yield from asyncio.lock):`` "
"statements are not longer supported, use ``async with lock`` instead.  The "
"same is correct for ``asyncio.Condition`` and ``asyncio.Semaphore``. "
"(Contributed by Andrew Svetlov in :issue:`34793`.)"
msgstr ""
"Оператори ``with (чекати asyncio.lock):`` і ``with (вихід від asyncio.lock):"
"`` більше не підтримуються, використовуйте замість них ``async with lock``. "
"Те саме правильно для ``asyncio.Condition`` і ``asyncio.Semaphore``. (Надав "
"Ендрю Свєтлов у :issue:`34793`.)"

msgid ""
"The :func:`sys.getcounts` function, the ``-X showalloccount`` command line "
"option and the ``show_alloc_count`` field of the C structure :c:type:"
"`PyConfig` have been removed. They required a special Python build by "
"defining ``COUNT_ALLOCS`` macro. (Contributed by Victor Stinner in :issue:"
"`39489`.)"
msgstr ""
"Функцію :func:`sys.getcounts`, параметр командного рядка ``-X "
"showalloccount`` і поле ``show_alloc_count`` структури C :c:type:`PyConfig` "
"видалено. Їм потрібна була спеціальна збірка Python із визначенням макросу "
"``COUNT_ALLOCS``. (Надав Віктор Стіннер у :issue:`39489`.)"

msgid ""
"The ``_field_types`` attribute of the :class:`typing.NamedTuple` class has "
"been removed.  It was deprecated since Python 3.8.  Use the "
"``__annotations__`` attribute instead. (Contributed by Serhiy Storchaka in :"
"issue:`40182`.)"
msgstr ""
"Атрибут ``_field_types`` класу :class:`typing.NamedTuple` було видалено. Він "
"був застарілим, починаючи з Python 3.8. Натомість використовуйте атрибут "
"``__annotations__``. (Надав Сергій Сторчака в :issue:`40182`.)"

msgid ""
"The :meth:`symtable.SymbolTable.has_exec` method has been removed. It was "
"deprecated since 2006, and only returning ``False`` when it's called. "
"(Contributed by Batuhan Taskaya in :issue:`40208`)"
msgstr ""
"Метод :meth:`symtable.SymbolTable.has_exec` видалено. Він застарів з 2006 "
"року, і повертає лише ``False`` під час виклику. (Надано Batuhan Taskaya в :"
"issue:`40208`)"

msgid ""
"The :meth:`asyncio.Task.current_task` and :meth:`asyncio.Task.all_tasks` "
"have been removed. They were deprecated since Python 3.7 and you can use :"
"func:`asyncio.current_task` and :func:`asyncio.all_tasks` instead. "
"(Contributed by Rémi Lapeyre in :issue:`40967`)"
msgstr ""
":meth:`asyncio.Task.current_task` і :meth:`asyncio.Task.all_task` було "
"видалено. Вони застаріли з Python 3.7, і замість них можна використовувати :"
"func:`asyncio.current_task` і :func:`asyncio.all_tasks`. (Надав Ремі Лапейр "
"у :issue:`40967`)"

msgid ""
"The ``unescape()`` method in the :class:`html.parser.HTMLParser` class has "
"been removed (it was deprecated since Python 3.4).  :func:`html.unescape` "
"should be used for converting character references to the corresponding "
"unicode characters."
msgstr ""
"Метод ``unescape()`` у класі :class:`html.parser.HTMLParser` було видалено "
"(він був застарілим з Python 3.4). :func:`html.unescape` слід "
"використовувати для перетворення посилань на символи у відповідні символи "
"Unicode."

msgid "Porting to Python 3.9"
msgstr "Перенесення на Python 3.9"

msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"У цьому розділі наведено описані раніше зміни та інші виправлення помилок, "
"які можуть потребувати змін у вашому коді."

msgid "Changes in the Python API"
msgstr "Зміни в API Python"

msgid ""
":func:`__import__` and :func:`importlib.util.resolve_name` now raise :exc:"
"`ImportError` where it previously raised :exc:`ValueError`. Callers catching "
"the specific exception type and supporting both Python 3.9 and earlier "
"versions will need to catch both using ``except (ImportError, ValueError):``."
msgstr ""
":func:`__import__` і :func:`importlib.util.resolve_name` тепер викликають :"
"exc:`ImportError` там, де раніше викликали :exc:`ValueError`. Викликачі, які "
"перехоплюють певний тип винятку та підтримують як Python 3.9, так і "
"попередні версії, повинні будуть перехопити обидва за допомогою ``except "
"(ImportError, ValueError):``."

msgid ""
"The :mod:`venv` activation scripts no longer special-case when "
"``__VENV_PROMPT__`` is set to ``\"\"``."
msgstr ""
"Скрипти активації :mod:`venv` більше не виключають особливий випадок, коли "
"для ``__VENV_PROMPT__`` встановлено значення ``\"\"``."

msgid ""
"The :meth:`select.epoll.unregister` method no longer ignores the :data:"
"`~errno.EBADF` error. (Contributed by Victor Stinner in :issue:`39239`.)"
msgstr ""
"Метод :meth:`select.epoll.unregister` більше не ігнорує помилку :data:"
"`~errno.EBADF`. (Надав Віктор Стіннер у :issue:`39239`.)"

msgid ""
"The *compresslevel* parameter of :class:`bz2.BZ2File` became keyword-only, "
"since the *buffering* parameter has been removed. (Contributed by Victor "
"Stinner in :issue:`39357`.)"
msgstr ""
"Параметр *compresslevel* :class:`bz2.BZ2File` став лише ключовим словом, "
"оскільки параметр *buffering* було видалено. (Надав Віктор Стіннер у :issue:"
"`39357`.)"

msgid ""
"Simplified AST for subscription. Simple indices will be represented by their "
"value, extended slices will be represented as tuples. ``Index(value)`` will "
"return a ``value`` itself, ``ExtSlice(slices)`` will return ``Tuple(slices, "
"Load())``. (Contributed by Serhiy Storchaka in :issue:`34822`.)"
msgstr ""
"Спрощений AST для підписки. Прості індекси будуть представлені їх "
"значеннями, розширені зрізи будуть представлені як кортежі. ``Index(value)`` "
"поверне саме ``value``, ``ExtSlice(slices)`` поверне ``Tuple(slices, "
"Load())``. (Надав Сергій Сторчака в :issue:`34822`.)"

msgid ""
"The :mod:`importlib` module now ignores the :envvar:`PYTHONCASEOK` "
"environment variable when the :option:`-E` or :option:`-I` command line "
"options are being used."
msgstr ""
"Модуль :mod:`importlib` тепер ігнорує змінну середовища :envvar:"
"`PYTHONCASEOK`, коли використовуються параметри командного рядка :option:`-"
"E` або :option:`-I`."

msgid ""
"The *encoding* parameter has been added to the classes :class:`ftplib.FTP` "
"and :class:`ftplib.FTP_TLS` as a keyword-only parameter, and the default "
"encoding is changed from Latin-1 to UTF-8 to follow :rfc:`2640`."
msgstr ""
"Параметр *encoding* додано до класів :class:`ftplib.FTP` і :class:`ftplib."
"FTP_TLS` як параметр лише для ключового слова, а стандартне кодування "
"змінено з Latin-1 на UTF-8 на слідувати :rfc:`2640`."

msgid ""
":meth:`asyncio.loop.shutdown_default_executor` has been added to :class:"
"`~asyncio.AbstractEventLoop`, meaning alternative event loops that inherit "
"from it should have this method defined. (Contributed by Kyle Stanley in :"
"issue:`34037`.)"
msgstr ""
":meth:`asyncio.loop.shutdown_default_executor` додано до :class:`~asyncio."
"AbstractEventLoop`, тобто альтернативні цикли подій, які успадковуються від "
"нього, повинні мати цей метод. (Надав Кайл Стенлі в :issue:`34037`.)"

msgid ""
"The constant values of future flags in the :mod:`__future__` module is "
"updated in order to prevent collision with compiler flags. Previously "
"``PyCF_ALLOW_TOP_LEVEL_AWAIT`` was clashing with ``CO_FUTURE_DIVISION``. "
"(Contributed by Batuhan Taskaya in :issue:`39562`)"
msgstr ""
"Постійні значення майбутніх прапорів у модулі :mod:`__future__` оновлюються, "
"щоб запобігти зіткненню з прапорами компілятора. Раніше "
"``PyCF_ALLOW_TOP_LEVEL_AWAIT`` конфліктував з ``CO_FUTURE_DIVISION``. (Надав "
"Batuhan Taskaya в :issue:`39562`)"

msgid ""
"``array('u')`` now uses ``wchar_t`` as C type instead of ``Py_UNICODE``. "
"This change doesn't affect to its behavior because ``Py_UNICODE`` is alias "
"of ``wchar_t`` since Python 3.3. (Contributed by Inada Naoki in :issue:"
"`34538`.)"
msgstr ""
"``array('u')`` тепер використовує ``wchar_t`` як тип C замість "
"``Py_UNICODE``. Ця зміна не впливає на його поведінку, оскільки "
"``Py_UNICODE`` є псевдонімом ``wchar_t``, починаючи з Python 3.3. (Надано "
"Інадою Наокі в :issue:`34538`.)"

msgid ""
"The :func:`logging.getLogger` API now returns the root logger when passed "
"the name ``'root'``, whereas previously it returned a non-root logger named "
"``'root'``. This could affect cases where user code explicitly wants a non-"
"root logger named ``'root'``, or instantiates a logger using ``logging."
"getLogger(__name__)`` in some top-level module called ``'root.py'``. "
"(Contributed by Vinay Sajip in :issue:`37742`.)"
msgstr ""
":func:`logging.getLogger` API тепер повертає кореневий реєстратор, коли йому "
"передається ім’я ``'root'``, тоді як раніше він повертав некореневий "
"реєстратор під назвою ``'root'``. Це може вплинути на випадки, коли код "
"користувача явно бажає мати некореневий реєстратор під назвою ``'root'`` або "
"створює екземпляр реєстратора за допомогою ``logging.getLogger(__name__)`` в "
"якомусь модулі верхнього рівня під назвою ``'root. py''``. (Надав Віней "
"Саджип у :issue:`37742`.)"

msgid ""
"Division handling of :class:`~pathlib.PurePath` now returns "
"``NotImplemented`` instead of raising a :exc:`TypeError` when passed "
"something other than an instance of ``str`` or :class:`~pathlib.PurePath`.  "
"This allows creating compatible classes that don't inherit from those "
"mentioned types. (Contributed by Roger Aiudi in :issue:`34775`)."
msgstr ""
"Обробка ділення :class:`~pathlib.PurePath` тепер повертає ``NotImplemented`` "
"замість того, щоб викликати :exc:`TypeError`, коли передається щось інше, "
"ніж примірник ``str`` або :class:`~pathlib. PurePath`. Це дозволяє "
"створювати сумісні класи, які не успадковують ці типи. (Надав Роджер Аюді в :"
"issue:`34775`)."

msgid ""
"Starting with Python 3.9.5 the :mod:`ipaddress` module no longer accepts any "
"leading zeros in IPv4 address strings. Leading zeros are ambiguous and "
"interpreted as octal notation by some libraries. For example the legacy "
"function :func:`socket.inet_aton` treats leading zeros as octal notatation. "
"glibc implementation of modern :func:`~socket.inet_pton` does not accept any "
"leading zeros. (Contributed by Christian Heimes in :issue:`36384`)."
msgstr ""
"Починаючи з Python 3.9.5, модуль :mod:`ipaddress` більше не приймає жодних "
"початкових нулів у рядках адрес IPv4. Початкові нулі є неоднозначними та "
"інтерпретуються деякими бібліотеками як вісімкове позначення. Наприклад, "
"застаріла функція :func:`socket.inet_aton` розглядає початкові нулі як "
"вісімкове позначення. glibc реалізація сучасного :func:`~socket.inet_pton` "
"не приймає жодних початкових нулів. (Надав Крістіан Хеймс у :issue:`36384`)."

msgid ""
":func:`codecs.lookup` now normalizes the encoding name the same way as :func:"
"`encodings.normalize_encoding`, except that :func:`codecs.lookup` also "
"converts the name to lower case. For example, ``\"latex+latin1\"`` encoding "
"name is now normalized to ``\"latex_latin1\"``. (Contributed by Jordon Xu "
"in :issue:`37751`.)"
msgstr ""
":func:`codecs.lookup` тепер нормалізує назву кодування так само, як :func:"
"`encodings.normalize_encoding`, за винятком того, що :func:`codecs.lookup` "
"також перетворює назву на нижній регістр. Наприклад, назву кодування "
"``\"latex+latin1\"`` тепер нормалізовано до ``\"latex_latin1\"``. (Надав "
"Джордон Сю в :issue:`37751`.)"

msgid "Changes in the C API"
msgstr "Зміни в C API"

msgid ""
"Instances of :ref:`heap-allocated types <heap-types>` (such as those created "
"with :c:func:`PyType_FromSpec` and similar APIs) hold a reference to their "
"type object since Python 3.8. As indicated in the \"Changes in the C API\" "
"of Python 3.8, for the vast majority of cases, there should be no side "
"effect but for types that have a custom :c:member:`~PyTypeObject."
"tp_traverse` function, ensure that all custom ``tp_traverse`` functions of "
"heap-allocated types visit the object's type."
msgstr ""
"Екземпляри :ref:`виділених у купі типів <heap-types>` (наприклад, створених "
"за допомогою :c:func:`PyType_FromSpec` та подібних API) містять посилання на "
"свій об’єкт типу, починаючи з Python 3.8. Як зазначено в розділі \"Зміни в "
"API C\" Python 3.8, у переважній більшості випадків побічних ефектів не "
"повинно бути, але для типів, які мають спеціальну функцію :c:member:"
"`~PyTypeObject.tp_traverse`, переконайтеся, що усі призначені для "
"користувача функції ``tp_traverse`` типів, виділених у купі, відвідують тип "
"об’єкта."

msgid ""
"If your traverse function delegates to ``tp_traverse`` of its base class (or "
"another type), ensure that ``Py_TYPE(self)`` is visited only once. Note that "
"only :ref:`heap type <heap-types>` are expected to visit the type in "
"``tp_traverse``."
msgstr ""
"Якщо ваша функція переходу делегує ``tp_traverse`` свого базового класу (або "
"іншого типу), переконайтеся, що ``Py_TYPE(self)`` відвідується лише один "
"раз. Зауважте, що очікується, що лише :ref:`тип купи <heap-types>` відвідає "
"тип у ``tp_traverse``."

msgid "For example, if your ``tp_traverse`` function includes:"
msgstr "Наприклад, якщо ваша функція ``tp_traverse`` містить:"

msgid "then add:"
msgstr "потім додайте:"

msgid "(See :issue:`35810` and :issue:`40217` for more information.)"
msgstr ""
"(Див. :issue:`35810` і :issue:`40217` для отримання додаткової інформації.)"

msgid ""
"The functions ``PyEval_CallObject``, ``PyEval_CallFunction``, "
"``PyEval_CallMethod`` and ``PyEval_CallObjectWithKeywords`` are deprecated. "
"Use :c:func:`PyObject_Call` and its variants instead. (See more details in :"
"issue:`29548`.)"
msgstr ""
"Функції ``PyEval_CallObject``, ``PyEval_CallFunction``, "
"``PyEval_CallMethod`` і ``PyEval_CallObjectWithKeywords`` застаріли. Замість "
"цього використовуйте :c:func:`PyObject_Call` та його варіанти. (Детальніше "
"див. у :issue:`29548`.)"

msgid "CPython bytecode changes"
msgstr "Зміни байт-коду CPython"

msgid ""
"The :opcode:`LOAD_ASSERTION_ERROR` opcode was added for handling the :"
"keyword:`assert` statement. Previously, the assert statement would not work "
"correctly if the :exc:`AssertionError` exception was being shadowed. "
"(Contributed by Zackery Spytz in :issue:`34880`.)"
msgstr ""
"Код операції :opcode:`LOAD_ASSERTION_ERROR` додано для обробки оператора :"
"keyword:`assert`. Раніше оператор assert не працював належним чином, якщо "
"виняток :exc:`AssertionError` затінявся. (Надав Закері Шпітц у :issue:"
"`34880`.)"

msgid ""
"The :opcode:`COMPARE_OP` opcode was split into four distinct instructions:"
msgstr ""
"Код операції :opcode:`COMPARE_OP` було розділено на чотири окремі інструкції:"

msgid "``COMPARE_OP`` for rich comparisons"
msgstr "``COMPARE_OP`` для насичених порівнянь"

msgid "``IS_OP`` for 'is' and 'is not' tests"
msgstr "``IS_OP`` для тестів \"є\" і \"не є\"."

msgid "``CONTAINS_OP`` for 'in' and 'not in' tests"
msgstr "``CONTAINS_OP`` для тестів \"in\" і \"not in\"."

msgid ""
"``JUMP_IF_NOT_EXC_MATCH`` for checking exceptions in 'try-except' statements."
msgstr ""
"``JUMP_IF_NOT_EXC_MATCH`` для перевірки винятків у операторах 'try-except'."

msgid "(Contributed by Mark Shannon in :issue:`39156`.)"
msgstr "(Надав Марк Шеннон у :issue:`39156`.)"

msgid "Build Changes"
msgstr "Зміни збірки"

msgid ""
"Added ``--with-platlibdir`` option to the ``configure`` script: name of the "
"platform-specific library directory, stored in the new :attr:`sys."
"platlibdir` attribute. See :attr:`sys.platlibdir` attribute for more "
"information. (Contributed by Jan Matějek, Matěj Cepl, Charalampos Stratakis "
"and Victor Stinner in :issue:`1294959`.)"
msgstr ""
"До сценарію ``configure`` додано опцію ``--with-platlibdir``: ім’я каталогу "
"бібліотеки для певної платформи, що зберігається в новому атрибуті :attr:"
"`sys.platlibdir`. Дивіться атрибут :attr:`sys.platlibdir` для отримання "
"додаткової інформації. (Надано Яном Матєйком, Матєєм Чеплем, Харалампосом "
"Стратакісом і Віктором Стіннером у :issue:`1294959`.)"

msgid ""
"The ``COUNT_ALLOCS`` special build macro has been removed. (Contributed by "
"Victor Stinner in :issue:`39489`.)"
msgstr ""
"Спеціальний макрос збірки ``COUNT_ALLOCS`` видалено. (Надав Віктор Стіннер "
"у :issue:`39489`.)"

msgid ""
"On non-Windows platforms, the :c:func:`setenv` and :c:func:`unsetenv` "
"functions are now required to build Python. (Contributed by Victor Stinner "
"in :issue:`39395`.)"
msgstr ""
"На платформах, відмінних від Windows, для створення Python тепер потрібні "
"функції :c:func:`setenv` і :c:func:`unsetenv`. (Надав Віктор Стіннер у :"
"issue:`39395`.)"

msgid ""
"On non-Windows platforms, creating ``bdist_wininst`` installers is now "
"officially unsupported.  (See :issue:`10945` for more details.)"
msgstr ""
"На платформах, відмінних від Windows, створення інсталяторів "
"``bdist_wininst`` тепер офіційно не підтримується. (Додаткову інформацію "
"див. :issue:`10945`.)"

msgid ""
"When building Python on macOS from source, ``_tkinter`` now links with non-"
"system Tcl and Tk frameworks if they are installed in ``/Library/"
"Frameworks``, as had been the case on older releases of macOS. If a macOS "
"SDK is explicitly configured, by using :option:`--enable-universalsdk` or ``-"
"isysroot``, only the SDK itself is searched. The default behavior can still "
"be overridden with ``--with-tcltk-includes`` and ``--with-tcltk-libs``. "
"(Contributed by Ned Deily in :issue:`34956`.)"
msgstr ""

msgid ""
"Python can now be built for Windows 10 ARM64. (Contributed by Steve Dower "
"in :issue:`33125`.)"
msgstr ""
"Тепер Python можна створити для Windows 10 ARM64. (Надав Стів Дауер у :issue:"
"`33125`.)"

msgid ""
"Some individual tests are now skipped when ``--pgo`` is used.  The tests in "
"question increased the PGO task time significantly and likely didn't help "
"improve optimization of the final executable. This speeds up the task by a "
"factor of about 15x.  Running the full unit test suite is slow.  This change "
"may result in a slightly less optimized build since not as many code "
"branches will be executed.  If you are willing to wait for the much slower "
"build, the old behavior can be restored using ``./configure [..] "
"PROFILE_TASK=\"-m test --pgo-extended\"``.  We make no guarantees as to "
"which PGO task set produces a faster build.  Users who care should run their "
"own relevant benchmarks as results can depend on the environment, workload, "
"and compiler tool chain. (See :issue:`36044` and :issue:`37707` for more "
"details.)"
msgstr ""
"Деякі окремі тести тепер пропускаються, коли використовується ``--pgo``. "
"Тести, про які йдеться, значно збільшили час виконання завдання PGO і, "
"ймовірно, не допомогли покращити оптимізацію остаточного виконуваного файлу. "
"Це прискорює завдання приблизно в 15 разів. Запуск повного набору модульних "
"тестів повільний. Ця зміна може призвести до дещо менш оптимізованої збірки, "
"оскільки буде виконано не так багато гілок коду. Якщо ви бажаєте почекати на "
"набагато повільнішу збірку, стару поведінку можна відновити за допомогою ``./"
"configure [..] PROFILE_TASK=\"-m test --pgo-extended\"``. Ми не гарантуємо, "
"який набір завдань PGO забезпечує швидшу збірку. Небайдужі користувачі "
"повинні запускати власні релевантні тести, оскільки результати можуть "
"залежати від середовища, робочого навантаження та ланцюга інструментів "
"компілятора. (Додаткову інформацію див. у :issue:`36044` і :issue:`37707`.)"

msgid "C API Changes"
msgstr "Зміни C API"

msgid ""
":pep:`573`: Added :c:func:`PyType_FromModuleAndSpec` to associate a module "
"with a class; :c:func:`PyType_GetModule` and :c:func:`PyType_GetModuleState` "
"to retrieve the module and its state; and :c:data:`PyCMethod` and :c:data:"
"`METH_METHOD` to allow a method to access the class it was defined in. "
"(Contributed by Marcel Plch and Petr Viktorin in :issue:`38787`.)"
msgstr ""
":pep:`573`: Додано :c:func:`PyType_FromModuleAndSpec` для асоціації модуля з "
"класом; :c:func:`PyType_GetModule` і :c:func:`PyType_GetModuleState` для "
"отримання модуля та його стану; і :c:data:`PyCMethod` і :c:data:"
"`METH_METHOD`, щоб дозволити методу отримати доступ до класу, у якому його "
"було визначено. (Надано Марселем Плхом і Петром Вікторіним у :issue:`38787`.)"

msgid ""
"Added :c:func:`PyFrame_GetCode` function: get a frame code. Added :c:func:"
"`PyFrame_GetBack` function: get the frame next outer frame. (Contributed by "
"Victor Stinner in :issue:`40421`.)"
msgstr ""
"Додано функцію :c:func:`PyFrame_GetCode`: отримати код кадру. Додано "
"функцію :c:func:`PyFrame_GetBack`: отримати кадр наступного зовнішнього "
"кадру. (Надав Віктор Стіннер у :issue:`40421`.)"

msgid ""
"Added :c:func:`PyFrame_GetLineNumber` to the limited C API. (Contributed by "
"Victor Stinner in :issue:`40421`.)"
msgstr ""
"Додано :c:func:`PyFrame_GetLineNumber` до обмеженого C API. (Надав Віктор "
"Стіннер у :issue:`40421`.)"

msgid ""
"Added :c:func:`PyThreadState_GetInterpreter` and :c:func:"
"`PyInterpreterState_Get` functions to get the interpreter. Added :c:func:"
"`PyThreadState_GetFrame` function to get the current frame of a Python "
"thread state. Added :c:func:`PyThreadState_GetID` function: get the unique "
"identifier of a Python thread state. (Contributed by Victor Stinner in :"
"issue:`39947`.)"
msgstr ""
"Додано функції :c:func:`PyThreadState_GetInterpreter` і :c:func:"
"`PyInterpreterState_Get` для отримання інтерпретатора. Додано функцію :c:"
"func:`PyThreadState_GetFrame` для отримання поточного кадру стану потоку "
"Python. Додано функцію :c:func:`PyThreadState_GetID`: отримати унікальний "
"ідентифікатор стану потоку Python. (Надав Віктор Стіннер у :issue:`39947`.)"

msgid ""
"Added a new public :c:func:`PyObject_CallNoArgs` function to the C API, "
"which calls a callable Python object without any arguments. It is the most "
"efficient way to call a callable Python object without any argument. "
"(Contributed by Victor Stinner in :issue:`37194`.)"
msgstr ""
"Додано нову загальнодоступну функцію :c:func:`PyObject_CallNoArgs` до C API, "
"яка викликає об’єкт Python без аргументів. Це найефективніший спосіб "
"викликати викликаний об’єкт Python без аргументів. (Надав Віктор Стіннер у :"
"issue:`37194`.)"

msgid "Changes in the limited C API (if ``Py_LIMITED_API`` macro is defined):"
msgstr "Зміни в обмеженому API C (якщо визначено макрос ``Py_LIMITED_API``):"

msgid ""
"Provide :c:func:`Py_EnterRecursiveCall` and :c:func:`Py_LeaveRecursiveCall` "
"as regular functions for the limited API. Previously, there were defined as "
"macros, but these macros didn't compile with the limited C API which cannot "
"access ``PyThreadState.recursion_depth`` field (the structure is opaque in "
"the limited C API)."
msgstr ""
"Надайте :c:func:`Py_EnterRecursiveCall` і :c:func:`Py_LeaveRecursiveCall` як "
"звичайні функції для обмеженого API. Раніше вони були визначені як макроси, "
"але ці макроси не компілювалися з обмеженим C API, який не може отримати "
"доступ до поля ``PyThreadState.recursion_depth`` (структура непрозора в "
"обмеженому C API)."

msgid ""
"``PyObject_INIT()`` and ``PyObject_INIT_VAR()`` become regular \"opaque\" "
"function to hide implementation details."
msgstr ""
"``PyObject_INIT()`` і ``PyObject_INIT_VAR()`` стають звичайними "
"\"непрозорими\" функціями для приховування деталей реалізації."

msgid "(Contributed by Victor Stinner in :issue:`38644` and :issue:`39542`.)"
msgstr "(Надав Віктор Стіннер у :issue:`38644` і :issue:`39542`.)"

msgid ""
"The :c:func:`PyModule_AddType` function is added to help adding a type to a "
"module. (Contributed by Dong-hee Na in :issue:`40024`.)"
msgstr ""
"Додано функцію :c:func:`PyModule_AddType`, щоб допомогти додати тип до "
"модуля. (Надав Dong-hee Na у :issue:`40024`.)"

msgid ""
"Added the functions :c:func:`PyObject_GC_IsTracked` and :c:func:"
"`PyObject_GC_IsFinalized` to the public API to allow to query if Python "
"objects are being currently tracked or have been already finalized by the "
"garbage collector respectively. (Contributed by Pablo Galindo Salgado in :"
"issue:`40241`.)"
msgstr ""
"До загальнодоступного API додано функції :c:func:`PyObject_GC_IsTracked` і :"
"c:func:`PyObject_GC_IsFinalized`, щоб дозволити запитувати, чи об’єкти "
"Python зараз відстежуються чи вони вже завершені збирачем сміття відповідно. "
"(Надав Пабло Галіндо Сальгадо в :issue:`40241`.)"

msgid ""
"Added :c:func:`_PyObject_FunctionStr` to get a user-friendly string "
"representation of a function-like object. (Patch by Jeroen Demeyer in :issue:"
"`37645`.)"
msgstr ""
"Додано :c:func:`_PyObject_FunctionStr`, щоб отримати зручне рядкове "
"представлення об’єкта, подібного до функції. (Патч від Jeroen Demeyer у :"
"issue:`37645`.)"

msgid ""
"Added :c:func:`PyObject_CallOneArg` for calling an object with one "
"positional argument (Patch by Jeroen Demeyer in :issue:`37483`.)"
msgstr ""
"Додано :c:func:`PyObject_CallOneArg` для виклику об’єкта з одним позиційним "
"аргументом (Патч від Jeroen Demeyer у :issue:`37483`.)"

msgid ""
"``PyInterpreterState.eval_frame`` (:pep:`523`) now requires a new mandatory "
"*tstate* parameter (``PyThreadState*``). (Contributed by Victor Stinner in :"
"issue:`38500`.)"
msgstr ""
"``PyInterpreterState.eval_frame`` (:pep:`523`) тепер вимагає нового "
"обов’язкового параметра *tstate* (``PyThreadState*``). (Надав Віктор Стіннер "
"у :issue:`38500`.)"

msgid ""
"Extension modules: :c:member:`~PyModuleDef.m_traverse`, :c:member:"
"`~PyModuleDef.m_clear` and :c:member:`~PyModuleDef.m_free` functions of :c:"
"type:`PyModuleDef` are no longer called if the module state was requested "
"but is not allocated yet. This is the case immediately after the module is "
"created and before the module is executed (:c:data:`Py_mod_exec` function). "
"More precisely, these functions are not called if :c:member:`~PyModuleDef."
"m_size` is greater than 0 and the module state (as returned by :c:func:"
"`PyModule_GetState`) is ``NULL``."
msgstr ""
"Модулі розширення: :c:member:`~PyModuleDef.m_traverse`, :c:member:"
"`~PyModuleDef.m_clear` і :c:member:`~PyModuleDef.m_free` функції :c:type:"
"`PyModuleDef` відсутні більше викликається, якщо стан модуля було запитано, "
"але ще не виділено. Це відбувається одразу після створення модуля та перед "
"його виконанням (функція :c:data:`Py_mod_exec`). Точніше, ці функції не "
"викликаються, якщо :c:member:`~PyModuleDef.m_size` більше 0 і стан модуля "
"(як повертається :c:func:`PyModule_GetState`) є ``NULL``."

msgid ""
"Extension modules without module state (``m_size <= 0``) are not affected."
msgstr "Модулі розширення без стану модуля (``m_size <= 0``) не впливають."

msgid ""
"If :c:func:`Py_AddPendingCall` is called in a subinterpreter, the function "
"is now scheduled to be called from the subinterpreter, rather than being "
"called from the main interpreter. Each subinterpreter now has its own list "
"of scheduled calls. (Contributed by Victor Stinner in :issue:`39984`.)"
msgstr ""
"Якщо :c:func:`Py_AddPendingCall` викликається в субінтерпретаторі, функція "
"тепер запланована для виклику з субінтерпретатора, а не з основного "
"інтерпретатора. Кожен субінтерпретатор тепер має власний список запланованих "
"викликів. (Надав Віктор Стіннер у :issue:`39984`.)"

msgid ""
"The Windows registry is no longer used to initialize :data:`sys.path` when "
"the ``-E`` option is used (if :c:member:`PyConfig.use_environment` is set to "
"``0``). This is significant when embedding Python on Windows. (Contributed "
"by Zackery Spytz in :issue:`8901`.)"
msgstr ""
"Реєстр Windows більше не використовується для ініціалізації :data:`sys."
"path`, коли використовується параметр ``-E`` (якщо :c:member:`PyConfig."
"use_environment` має значення ``0``). Це важливо під час вбудовування Python "
"у Windows. (Надав Закері Шпітц у :issue:`8901`.)"

msgid ""
"The global variable :c:data:`PyStructSequence_UnnamedField` is now a "
"constant and refers to a constant string. (Contributed by Serhiy Storchaka "
"in :issue:`38650`.)"
msgstr ""
"Глобальна змінна :c:data:`PyStructSequence_UnnamedField` тепер є константою "
"та посилається на постійний рядок. (Надав Сергій Сторчака в :issue:`38650`.)"

msgid ""
"The :c:type:`PyGC_Head` structure is now opaque. It is only defined in the "
"internal C API (``pycore_gc.h``). (Contributed by Victor Stinner in :issue:"
"`40241`.)"
msgstr ""
"Структура :c:type:`PyGC_Head` тепер непрозора. Він визначений лише у "
"внутрішньому API C (``pycore_gc.h``). (Надав Віктор Стіннер у :issue:"
"`40241`.)"

msgid ""
"The ``Py_UNICODE_COPY``, ``Py_UNICODE_FILL``, ``PyUnicode_WSTR_LENGTH``, :c:"
"func:`PyUnicode_FromUnicode`, :c:func:`PyUnicode_AsUnicode`, "
"``_PyUnicode_AsUnicode``, and :c:func:`PyUnicode_AsUnicodeAndSize` are "
"marked as deprecated in C.  They have been deprecated by :pep:`393` since "
"Python 3.3. (Contributed by Inada Naoki in :issue:`36346`.)"
msgstr ""
"``Py_UNICODE_COPY``, ``Py_UNICODE_FILL``, ``PyUnicode_WSTR_LENGTH``, :c:func:"
"`PyUnicode_FromUnicode`, :c:func:`PyUnicode_AsUnicode`, "
"``_PyUnicode_AsUnicode`` і :c:func:`PyUnicode_AsUnicodeAndSize` позначені як "
"застарілі в C. Вони були застарілими :pep:`393`, починаючи з Python 3.3. "
"(Надано Інадою Наокі в :issue:`36346`.)"

msgid ""
"The :c:func:`Py_FatalError` function is replaced with a macro which logs "
"automatically the name of the current function, unless the "
"``Py_LIMITED_API`` macro is defined. (Contributed by Victor Stinner in :"
"issue:`39882`.)"
msgstr ""
"Функцію :c:func:`Py_FatalError` замінено на макрос, який автоматично записує "
"назву поточної функції, якщо не визначено макрос ``Py_LIMITED_API``. (Надав "
"Віктор Стіннер у :issue:`39882`.)"

msgid ""
"The vectorcall protocol now requires that the caller passes only strings as "
"keyword names. (See :issue:`37540` for more information.)"
msgstr ""
"Протокол vectorcall тепер вимагає, щоб абонент передавав лише рядки як імена "
"ключових слів. (Додаткову інформацію див. :issue:`37540`.)"

msgid ""
"Implementation details of a number of macros and functions are now hidden:"
msgstr "Деталі реалізації ряду макросів і функцій тепер приховано:"

msgid ":c:func:`PyObject_IS_GC` macro was converted to a function."
msgstr ":c:func:`PyObject_IS_GC` макрос перетворено на функцію."

msgid ""
"The :c:func:`PyObject_NEW` macro becomes an alias to the :c:func:"
"`PyObject_New` macro, and the :c:func:`PyObject_NEW_VAR` macro becomes an "
"alias to the :c:func:`PyObject_NewVar` macro. They no longer access directly "
"the :c:member:`PyTypeObject.tp_basicsize` member."
msgstr ""
"Макрос :c:func:`PyObject_NEW` стає псевдонімом макросу :c:func:"
"`PyObject_New`, а макрос :c:func:`PyObject_NEW_VAR` стає псевдонімом "
"макросу :c:func:`PyObject_NewVar` . Вони більше не мають прямого доступу до "
"члена :c:member:`PyTypeObject.tp_basicsize`."

msgid ""
":c:func:`PyObject_GET_WEAKREFS_LISTPTR` macro was converted to a function: "
"the macro accessed directly the :c:member:`PyTypeObject.tp_weaklistoffset` "
"member."
msgstr ""
"Макрос :c:func:`PyObject_GET_WEAKREFS_LISTPTR` було перетворено на функцію: "
"макрос мав прямий доступ до елемента :c:member:`PyTypeObject."
"tp_weaklistoffset`."

msgid ""
":c:func:`PyObject_CheckBuffer` macro was converted to a function: the macro "
"accessed directly the :c:member:`PyTypeObject.tp_as_buffer` member."
msgstr ""
"Макрос :c:func:`PyObject_CheckBuffer` було перетворено на функцію: макрос "
"мав прямий доступ до елемента :c:member:`PyTypeObject.tp_as_buffer`."

msgid ""
":c:func:`PyIndex_Check` is now always declared as an opaque function to hide "
"implementation details: removed the ``PyIndex_Check()`` macro. The macro "
"accessed directly the :c:member:`PyTypeObject.tp_as_number` member."
msgstr ""
":c:func:`PyIndex_Check` тепер завжди оголошується як непрозора функція, щоб "
"приховати деталі реалізації: видалено макрос ``PyIndex_Check()``. Макрос "
"звертався безпосередньо до члена :c:member:`PyTypeObject.tp_as_number`."

msgid "(See :issue:`40170` for more details.)"
msgstr "(Додаткову інформацію див. :issue:`40170`.)"

msgid ""
"Excluded ``PyFPE_START_PROTECT()`` and ``PyFPE_END_PROTECT()`` macros of "
"``pyfpe.h`` from the limited C API. (Contributed by Victor Stinner in :issue:"
"`38835`.)"
msgstr ""
"Макроси ``PyFPE_START_PROTECT()`` і ``PyFPE_END_PROTECT()`` макроси ``pyfpe."
"h`` виключено з обмеженого C API. (Надав Віктор Стіннер у :issue:`38835`.)"

msgid ""
"The ``tp_print`` slot of :ref:`PyTypeObject <type-structs>` has been "
"removed. It was used for printing objects to files in Python 2.7 and before. "
"Since Python 3.0, it has been ignored and unused. (Contributed by Jeroen "
"Demeyer in :issue:`36974`.)"
msgstr ""
"Слот ``tp_print`` :ref:`PyTypeObject <type-structs>` видалено. Він "
"використовувався для друку об’єктів у файли в Python 2.7 і раніше. Починаючи "
"з Python 3.0, він ігнорувався та не використовувався. (Надано Jeroen Demeyer "
"у :issue:`36974`.)"

msgid "Excluded the following functions from the limited C API:"
msgstr "Виключено такі функції з обмеженого C API:"

msgid ""
"``PyThreadState_DeleteCurrent()`` (Contributed by Joannah Nanjekye in :issue:"
"`37878`.)"
msgstr ""
"``PyThreadState_DeleteCurrent()`` (Надано Joannah Nanjekye в :issue:`37878`.)"

msgid "``_Py_CheckRecursionLimit``"
msgstr "``_Py_CheckRecursionLimit``"

msgid "``_Py_NewReference()``"
msgstr "``_Py_NewReference()``"

msgid "``_Py_ForgetReference()``"
msgstr "``_Py_ForgetReference()``"

msgid "``_PyTraceMalloc_NewReference()``"
msgstr "``_PyTraceMalloc_NewReference()``"

msgid "``_Py_GetRefTotal()``"
msgstr "``_Py_GetRefTotal()``"

msgid "The trashcan mechanism which never worked in the limited C API."
msgstr "Механізм кошика, який ніколи не працював в обмеженому C API."

msgid "``PyTrash_UNWIND_LEVEL``"
msgstr "``PyTrash_UNWIND_LEVEL``"

msgid "``Py_TRASHCAN_BEGIN_CONDITION``"
msgstr "``Py_TRASHCAN_BEGIN_CONDITION``"

msgid "``Py_TRASHCAN_BEGIN``"
msgstr "``Py_TRASHCAN_BEGIN``"

msgid "``Py_TRASHCAN_END``"
msgstr "``Py_TRASHCAN_END``"

msgid "``Py_TRASHCAN_SAFE_BEGIN``"
msgstr "``Py_TRASHCAN_SAFE_BEGIN``"

msgid "``Py_TRASHCAN_SAFE_END``"
msgstr "``Py_TRASHCAN_SAFE_END``"

msgid "Moved following functions and definitions to the internal C API:"
msgstr "Перенесено такі функції та визначення до внутрішнього C API:"

msgid "``_PyDebug_PrintTotalRefs()``"
msgstr "``_PyDebug_PrintTotalRefs()``"

msgid "``_Py_PrintReferences()``"
msgstr "``_Py_PrintReferences()``"

msgid "``_Py_PrintReferenceAddresses()``"
msgstr "``_Py_PrintReferenceAddresses()``"

msgid "``_Py_tracemalloc_config``"
msgstr "``_Py_tracemalloc_config``"

msgid "``_Py_AddToAllObjects()`` (specific to ``Py_TRACE_REFS`` build)"
msgstr "``_Py_AddToAllObjects()`` (специфічний для збірки ``Py_TRACE_REFS``)"

msgid ""
"Removed ``_PyRuntime.getframe`` hook and removed ``_PyThreadState_GetFrame`` "
"macro which was an alias to ``_PyRuntime.getframe``. They were only exposed "
"by the internal C API. Removed also ``PyThreadFrameGetter`` type. "
"(Contributed by Victor Stinner in :issue:`39946`.)"
msgstr ""
"Вилучено хук ``_PyRuntime.getframe`` і видалено макрос "
"``_PyThreadState_GetFrame``, який був псевдонімом ``_PyRuntime.getframe``. "
"Їх відкривав лише внутрішній C API. Видалено також тип "
"``PyThreadFrameGetter``. (Надав Віктор Стіннер у :issue:`39946`.)"

msgid ""
"Removed the following functions from the C API. Call :c:func:`PyGC_Collect` "
"explicitly to clear all free lists. (Contributed by Inada Naoki and Victor "
"Stinner in :issue:`37340`, :issue:`38896` and :issue:`40428`.)"
msgstr ""
"Видалено наступні функції з C API. Викличте :c:func:`PyGC_Collect` явно, щоб "
"очистити всі вільні списки. (Надано Інадою Наокі та Віктором Стіннером у :"
"issue:`37340`, :issue:`38896` та :issue:`40428`.)"

msgid "``PyAsyncGen_ClearFreeLists()``"
msgstr "``PyAsyncGen_ClearFreeLists()``"

msgid "``PyContext_ClearFreeList()``"
msgstr "``PyContext_ClearFreeList()``"

msgid "``PyDict_ClearFreeList()``"
msgstr "``PyDict_ClearFreeList()``"

msgid "``PyFloat_ClearFreeList()``"
msgstr "``PyFloat_ClearFreeList()``"

msgid "``PyFrame_ClearFreeList()``"
msgstr "``PyFrame_ClearFreeList()``"

msgid "``PyList_ClearFreeList()``"
msgstr "``PyList_ClearFreeList()``"

msgid ""
"``PyMethod_ClearFreeList()`` and ``PyCFunction_ClearFreeList()``: the free "
"lists of bound method objects have been removed."
msgstr ""
"``PyMethod_ClearFreeList()`` і ``PyCFunction_ClearFreeList()``: вільні "
"списки зв’язаних об’єктів методу видалено."

msgid ""
"``PySet_ClearFreeList()``: the set free list has been removed in Python 3.4."
msgstr "``PySet_ClearFreeList()``: у Python 3.4 видалено список вільних."

msgid "``PyTuple_ClearFreeList()``"
msgstr "``PyTuple_ClearFreeList()``"

msgid ""
"``PyUnicode_ClearFreeList()``: the Unicode free list has been removed in "
"Python 3.3."
msgstr ""
"``PyUnicode_ClearFreeList()``: у Python 3.3 видалено список вільних кодів "
"Unicode."

msgid ""
"Removed ``_PyUnicode_ClearStaticStrings()`` function. (Contributed by Victor "
"Stinner in :issue:`39465`.)"
msgstr ""
"Вилучено функцію ``_PyUnicode_ClearStaticStrings()``. (Надав Віктор Стіннер "
"у :issue:`39465`.)"

msgid ""
"Removed ``Py_UNICODE_MATCH``. It has been deprecated by :pep:`393`, and "
"broken since Python 3.3. The :c:func:`PyUnicode_Tailmatch` function can be "
"used instead. (Contributed by Inada Naoki in :issue:`36346`.)"
msgstr ""
"Видалено ``Py_UNICODE_MATCH``. Він був застарілим :pep:`393` і зламався з "
"Python 3.3. Замість цього можна використовувати функцію :c:func:"
"`PyUnicode_Tailmatch`. (Надано Інадою Наокі в :issue:`36346`.)"

msgid ""
"Cleaned header files of interfaces defined but with no implementation. The "
"public API symbols being removed are: "
"``_PyBytes_InsertThousandsGroupingLocale``, "
"``_PyBytes_InsertThousandsGrouping``, ``_Py_InitializeFromArgs``, "
"``_Py_InitializeFromWideArgs``, ``_PyFloat_Repr``, ``_PyFloat_Digits``, "
"``_PyFloat_DigitsInit``, ``PyFrame_ExtendStack``, ``_PyAIterWrapper_Type``, "
"``PyNullImporter_Type``, ``PyCmpWrapper_Type``, ``PySortWrapper_Type``, "
"``PyNoArgsFunction``. (Contributed by Pablo Galindo Salgado in :issue:"
"`39372`.)"
msgstr ""
"Очищені файли заголовків визначених інтерфейсів, але без реалізації. The "
"public API symbols being removed are: "
"``_PyBytes_InsertThousandsGroupingLocale``, "
"``_PyBytes_InsertThousandsGrouping``, ``_Py_InitializeFromArgs``, "
"``_Py_InitializeFromWideArgs``, ``_PyFloat_Repr``, ``_PyFloat_Digits``, "
"``_PyFloat_DigitsInit``, ``PyFrame_ExtendStack``, ``_PyAIterWrapper_Type``, "
"``PyNullImporter_Type``, ``PyCmpWrapper_Type``, ``PySortWrapper_Type``, "
"``PyNoArgsFunction``. (Надав Пабло Галіндо Сальгадо в :issue:`39372`.)"

msgid "Notable changes in Python 3.9.1"
msgstr "Помітні зміни в Python 3.9.1"

msgid ""
"The behavior of :class:`typing.Literal` was changed to conform with :pep:"
"`586` and to match the behavior of static type checkers specified in the PEP."
msgstr ""
"Поведінку :class:`typing.Literal` було змінено, щоб вона відповідала :pep:"
"`586` і відповідала поведінці засобів перевірки статичних типів, указаних у "
"PEP."

msgid "``Literal`` now de-duplicates parameters."
msgstr "``Літерал`` тепер усуває дублікати параметрів."

msgid ""
"Equality comparisons between ``Literal`` objects are now order independent."
msgstr ""
"Порівняння рівності між об’єктами ``Literal`` тепер не залежить від порядку."

msgid ""
"``Literal`` comparisons now respect types.  For example, ``Literal[0] == "
"Literal[False]`` previously evaluated to ``True``.  It is now ``False``.  To "
"support this change, the internally used type cache now supports "
"differentiating types."
msgstr ""
"``Літеральні`` порівняння тепер поважають типи. Наприклад, ``Literal[0] == "
"Literal[False]``, попередньо оцінене як ``True``. Тепер це ``False``. Для "
"підтримки цієї зміни внутрішній кеш типів тепер підтримує розрізняючі типи."

msgid ""
"``Literal`` objects will now raise a :exc:`TypeError` exception during "
"equality comparisons if any of their parameters are not :term:`hashable`. "
"Note that declaring ``Literal`` with mutable parameters will not throw an "
"error::"
msgstr ""
"Об’єкти ``Literal`` тепер створюватимуть виняток :exc:`TypeError` під час "
"порівняння рівності, якщо будь-який з їхніх параметрів не :term:`hashable`. "
"Зверніть увагу, що оголошення ``Literal`` зі змінними параметрами не викличе "
"помилку:"

msgid "(Contributed by Yurii Karabas in :issue:`42345`.)"
msgstr "(Надав Юрій Карабас у :issue:`42345`.)"

msgid "macOS 11.0 (Big Sur) and Apple Silicon Mac support"
msgstr "Підтримка macOS 11.0 (Big Sur) і Apple Silicon Mac"

msgid ""
"As of 3.9.1, Python now fully supports building and running on macOS 11.0 "
"(Big Sur) and on Apple Silicon Macs (based on the ``ARM64`` architecture). A "
"new universal build variant, ``universal2``, is now available to natively "
"support both ``ARM64`` and ``Intel 64`` in one set of executables. Binaries "
"can also now be built on current versions of macOS to be deployed on a range "
"of older macOS versions (tested to 10.9) while making some newer OS "
"functions and options conditionally available based on the operating system "
"version in use at runtime (\"weaklinking\")."
msgstr ""
"Починаючи з версії 3.9.1, Python тепер повністю підтримує збірку та роботу "
"на macOS 11.0 (Big Sur) і на Apple Silicon Mac (на основі архітектури "
"``ARM64``). Новий універсальний варіант збірки, ``universal2``, тепер "
"доступний для підтримки як ``ARM64``, так і ``Intel 64`` в одному наборі "
"виконуваних файлів. Двійкові файли тепер також можна створювати на поточних "
"версіях macOS для розгортання в ряді старіших версій macOS (перевірено до "
"10.9), при цьому деякі новіші функції та параметри ОС стають умовно "
"доступними на основі версії операційної системи, яка використовується під "
"час виконання (\"слабкі зв’язки\" )."

msgid "(Contributed by Ronald Oussoren and Lawrence D'Anna in :issue:`41100`.)"
msgstr "(Надано Рональдом Усореном і Лоуренсом Д'Анною в :issue:`41100`.)"

msgid "Notable changes in Python 3.9.2"
msgstr "Помітні зміни в Python 3.9.2"

msgid "collections.abc"
msgstr "колекції.abc"

msgid ""
":class:`collections.abc.Callable` generic now flattens type parameters, "
"similar to what :data:`typing.Callable` currently does.  This means that "
"``collections.abc.Callable[[int, str], str]`` will have ``__args__`` of "
"``(int, str, str)``; previously this was ``([int, str], str)``.  To allow "
"this change, :class:`types.GenericAlias` can now be subclassed, and a "
"subclass will be returned when subscripting the :class:`collections.abc."
"Callable` type. Code which accesses the arguments via :func:`typing."
"get_args` or ``__args__`` need to account for this change.  A :exc:"
"`DeprecationWarning` may be emitted for invalid forms of parameterizing :"
"class:`collections.abc.Callable` which may have passed silently in Python "
"3.9.1.  This :exc:`DeprecationWarning` will become a :exc:`TypeError` in "
"Python 3.10. (Contributed by Ken Jin in :issue:`42195`.)"
msgstr ""
":class:`collections.abc.Callable` generic тепер зводить параметри типу, "
"подібно до того, що зараз робить :data:`typing.Callable`. Це означає, що "
"``collections.abc.Callable[[int, str], str]`` матиме ``__args__`` ``(int, "
"str, str)``; раніше це було ``([int, str], str)``. Щоб дозволити цю зміну, :"
"class:`types.GenericAlias` тепер можна створювати підкласи, і підклас "
"повертатиметься під час підписки типу :class:`collections.abc.Callable`. "
"Код, який отримує доступ до аргументів через :func:`typing.get_args` або "
"``__args__``, повинен враховувати цю зміну. :exc:`DeprecationWarning` може "
"видаватись для недійсних форм параметризації :class:`collections.abc."
"Callable`, які могли пройти мовчки в Python 3.9.1. Це :exc:"
"`DeprecationWarning` стане :exc:`TypeError` у Python 3.10. (Надав Кен Джин "
"у :issue:`42195`.)"

msgid "urllib.parse"
msgstr "urllib.parse"

msgid ""
"Earlier Python versions allowed using both ``;`` and ``&`` as query "
"parameter separators in :func:`urllib.parse.parse_qs` and :func:`urllib."
"parse.parse_qsl`.  Due to security concerns, and to conform with newer W3C "
"recommendations, this has been changed to allow only a single separator key, "
"with ``&`` as the default.  This change also affects :func:`cgi.parse` and :"
"func:`cgi.parse_multipart` as they use the affected functions internally. "
"For more details, please see their respective documentation. (Contributed by "
"Adam Goldschmidt, Senthil Kumaran and Ken Jin in :issue:`42967`.)"
msgstr ""
"Попередні версії Python дозволяли використовувати як ``;``, так і ``&`` як "
"роздільники параметрів запиту в :func:`urllib.parse.parse_qs` і :func:"
"`urllib.parse.parse_qsl`. З міркувань безпеки та для відповідності новим "
"рекомендаціям W3C це було змінено, щоб дозволити лише один роздільний ключ "
"із ``&`` за замовчуванням. Ця зміна також впливає на :func:`cgi.parse` і :"
"func:`cgi.parse_multipart`, оскільки вони використовують уражені функції "
"внутрішньо. Щоб дізнатися більше, перегляньте відповідну документацію. "
"(Надано Адамом Ґолдшмідтом, Сентилом Кумараном і Кеном Джином у :issue:"
"`42967`.)"
