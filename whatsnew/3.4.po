# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-29 13:04+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "What's New In Python 3.4"
msgstr "Що нового в Python 3.4"

msgid "Author"
msgstr "Автор"

msgid "R. David Murray <rdmurray@bitdance.com> (Editor)"
msgstr "R. David Murray <rdmurray@bitdance.com> (Редактор)"

msgid ""
"This article explains the new features in Python 3.4, compared to 3.3. "
"Python 3.4 was released on March 16, 2014.  For full details, see the "
"`changelog <https://docs.python.org/3.4/whatsnew/changelog.html>`_."
msgstr ""
"У цій статті пояснюється нові функції в Python 3.4 порівняно з 3.3. Python "
"3.4 було випущено 16 березня 2014 року. Щоб отримати повну інформацію, "
"перегляньте `журнал змін <https://docs.python.org/3.4/whatsnew/changelog."
"html>`_."

msgid ":pep:`429` -- Python 3.4 Release Schedule"
msgstr ":pep:`429` -- Графік випуску Python 3.4"

msgid "Summary -- Release Highlights"
msgstr "Підсумок -- Основні моменти випуску"

msgid "New syntax features:"
msgstr "Нові функції синтаксису:"

msgid "No new syntax features were added in Python 3.4."
msgstr "У Python 3.4 не було додано нових функцій синтаксису."

msgid "Other new features:"
msgstr "Інші нові функції:"

msgid ":ref:`pip should always be available <whatsnew-pep-453>` (:pep:`453`)."
msgstr ":ref:`pip завжди має бути доступним <whatsnew-pep-453>` (:pep:`453`)."

msgid ""
":ref:`Newly created file descriptors are non-inheritable <whatsnew-pep-446>` "
"(:pep:`446`)."
msgstr ""
":ref:`Новостворені дескриптори файлів не успадковуються <whatsnew-pep-446>` "
"(:pep:`446`)."

msgid ""
"command line option for :ref:`isolated mode <whatsnew-isolated-mode>` (:"
"issue:`16499`)."
msgstr ""
"параметр командного рядка для :ref:`ізольованого режиму <whatsnew-isolated-"
"mode>` (:issue:`16499`)."

msgid ""
":ref:`improvements in the handling of codecs <codec-handling-improvements>` "
"that are not text encodings (multiple issues)."
msgstr ""
":ref:`покращення в обробці кодеків <codec-handling-improvements>`, які не є "
"текстовими кодуваннями (кілька проблем)."

msgid ""
":ref:`A ModuleSpec Type <whatsnew-pep-451>` for the Import System (:pep:"
"`451`).  (Affects importer authors.)"
msgstr ""
":ref:`A ModuleSpec Type <whatsnew-pep-451>` для системи імпорту (:pep:"
"`451`). (Впливає на авторів-імпортерів.)"

msgid ""
"The :mod:`marshal` format has been made :ref:`more compact and efficient "
"<whatsnew-marshal-3>` (:issue:`16475`)."
msgstr ""
"Формат :mod:`marshal` зроблено :ref:`компактнішим і ефективнішим <whatsnew-"
"marshal-3>` (:issue:`16475`)."

msgid "New library modules:"
msgstr "Нові бібліотечні модулі:"

msgid ""
":mod:`asyncio`: :ref:`New provisional API for asynchronous IO <whatsnew-"
"asyncio>` (:pep:`3156`)."
msgstr ""
":mod:`asyncio`: :ref:`Новий тимчасовий API для асинхронного введення-"
"виведення <whatsnew-asyncio>` (:pep:`3156`)."

msgid ""
":mod:`ensurepip`: :ref:`Bootstrapping the pip installer <whatsnew-"
"ensurepip>` (:pep:`453`)."
msgstr ""
":mod:`ensurepip`: :ref:`Завантаження інсталятора pip <whatsnew-ensurepip>` (:"
"pep:`453`)."

msgid ""
":mod:`enum`: :ref:`Support for enumeration types <whatsnew-enum>` (:pep:"
"`435`)."
msgstr ""
":mod:`enum`: :ref:`Підтримка типів перерахування <whatsnew-enum>` (:pep:"
"`435`)."

msgid ""
":mod:`pathlib`: :ref:`Object-oriented filesystem paths <whatsnew-pathlib>` (:"
"pep:`428`)."
msgstr ""
":mod:`pathlib`: :ref:`Шляхи об’єктно-орієнтованої файлової системи <whatsnew-"
"pathlib>` (:pep:`428`)."

msgid ""
":mod:`selectors`: :ref:`High-level and efficient I/O multiplexing <whatsnew-"
"selectors>`, built upon the :mod:`select` module primitives (part of :pep:"
"`3156`)."
msgstr ""
":mod:`selectors`: :ref:`Високорівневе й ефективне мультиплексування введення/"
"виведення <whatsnew-selectors>`, побудоване на примітивах модуля :mod:"
"`select` (частина :pep:`3156`)."

msgid ""
":mod:`statistics`: A basic :ref:`numerically stable statistics library "
"<whatsnew-statistics>` (:pep:`450`)."
msgstr ""
":mod:`statistics`: базова :ref:`бібліотека чисельно стабільної статистики "
"<whatsnew-statistics>` (:pep:`450`)."

msgid ""
":mod:`tracemalloc`: :ref:`Trace Python memory allocations <whatsnew-"
"tracemalloc>` (:pep:`454`)."
msgstr ""
":mod:`tracemalloc`: :ref:`Відстеження розподілу пам’яті Python <whatsnew-"
"tracemalloc>` (:pep:`454`)."

msgid "Significantly improved library modules:"
msgstr "Значно вдосконалені модулі бібліотеки:"

msgid ""
":ref:`Single-dispatch generic functions <whatsnew-singledispatch>` in :mod:"
"`functools` (:pep:`443`)."
msgstr ""
":ref:`Загальні функції одноразового відправлення <whatsnew-singledispatch>` "
"у :mod:`functools` (:pep:`443`)."

msgid ""
"New :mod:`pickle` :ref:`protocol 4 <whatsnew-protocol-4>` (:pep:`3154`)."
msgstr ""
"Новий :mod:`pickle` :ref:`протокол 4 <whatsnew-protocol-4>` (:pep:`3154`)."

msgid ""
":mod:`multiprocessing` now has :ref:`an option to avoid using os.fork on "
"Unix <whatsnew-multiprocessing-no-fork>` (:issue:`8713`)."
msgstr ""
":mod:`multiprocessing` тепер має :ref:`опцію, щоб уникнути використання os."
"fork на Unix <whatsnew-multiprocessing-no-fork>` (:issue:`8713`)."

msgid ""
":mod:`email` has a new submodule, :mod:`~email.contentmanager`, and a new :"
"mod:`~email.message.Message` subclass (:class:`~email.contentmanager."
"EmailMessage`) that :ref:`simplify MIME handling "
"<whatsnew_email_contentmanager>` (:issue:`18891`)."
msgstr ""
":mod:`email` має новий підмодуль :mod:`~email.contentmanager` і новий "
"підклас :mod:`~email.message.Message` (:class:`~email.contentmanager."
"EmailMessage`), який :ref:`спрощення обробки MIME "
"<whatsnew_email_contentmanager>` (:issue:`18891`)."

msgid ""
"The :mod:`inspect` and :mod:`pydoc` modules are now capable of correct "
"introspection of a much wider variety of callable objects, which improves "
"the output of the Python :func:`help` system."
msgstr ""
"Модулі :mod:`inspect` і :mod:`pydoc` тепер здатні до правильного аналізу "
"набагато ширшого спектру викликаних об’єктів, що покращує результат роботи "
"системи :func:`help` Python."

msgid "The :mod:`ipaddress` module API has been declared stable"
msgstr "API модуля :mod:`ipaddress` оголошено стабільним"

msgid "Security improvements:"
msgstr "Покращення безпеки:"

msgid ""
":ref:`Secure and interchangeable hash algorithm <whatsnew-pep-456>` (:pep:"
"`456`)."
msgstr ""
":ref:`Безпечний і взаємозамінний хеш-алгоритм <whatsnew-pep-456>` (:pep:"
"`456`)."

msgid ""
":ref:`Make newly created file descriptors non-inheritable <whatsnew-"
"pep-446>` (:pep:`446`) to avoid leaking file descriptors to child processes."
msgstr ""
":ref:`Зробити новостворені дескриптори файлів неуспадкованими <whatsnew-"
"pep-446>` (:pep:`446`), щоб уникнути витоку дескрипторів файлів у дочірні "
"процеси."

msgid ""
"New command line option for :ref:`isolated mode <whatsnew-isolated-mode>`, (:"
"issue:`16499`)."
msgstr ""
"Нова опція командного рядка для :ref:`ізольованого режиму <whatsnew-isolated-"
"mode>`, (:issue:`16499`)."

msgid ""
":mod:`multiprocessing` now has :ref:`an option to avoid using os.fork on "
"Unix <whatsnew-multiprocessing-no-fork>`.  *spawn* and *forkserver* are more "
"secure because they avoid sharing data with child processes."
msgstr ""
":mod:`multiprocessing` тепер має :ref:`опцію, щоб уникнути використання os."
"fork на Unix <whatsnew-multiprocessing-no-fork>`. *spawn* і *forkserver* "
"більш безпечні, оскільки вони уникають обміну даними з дочірніми процесами."

msgid ""
":mod:`multiprocessing` child processes on Windows no longer inherit all of "
"the parent's inheritable handles, only the necessary ones."
msgstr ""
":mod:`multiprocessing` дочірні процеси в Windows більше не успадковують усі "
"успадковані дескриптори батьківського процесу, лише необхідні."

msgid ""
"A new :func:`hashlib.pbkdf2_hmac` function provides the `PKCS#5 password-"
"based key derivation function 2 <https://en.wikipedia.org/wiki/PBKDF2>`_."
msgstr ""
"Нова функція :func:`hashlib.pbkdf2_hmac` забезпечує функцію виведення ключа "
"на основі пароля `PKCS#5 2 <https://en.wikipedia.org/wiki/PBKDF2>`_."

msgid ":ref:`TLSv1.1 and TLSv1.2 support <whatsnew-tls-11-12>` for :mod:`ssl`."
msgstr ""
":ref:`TLSv1.1 і TLSv1.2 підтримують <whatsnew-tls-11-12>` для :mod:`ssl`."

msgid ""
":ref:`Retrieving certificates from the Windows system cert store support "
"<whatsnew34-win-cert-store>` for :mod:`ssl`."
msgstr ""
":ref:`Отримання сертифікатів із сховища сертифікатів системи Windows "
"підтримує <whatsnew34-win-cert-store>` для :mod:`ssl`."

msgid ""
":ref:`Server-side SNI (Server Name Indication) support <whatsnew34-sni>` "
"for :mod:`ssl`."
msgstr ""
":ref:`Server-side SNI (Server Name Indication) support <whatsnew34-sni>` "
"for :mod:`ssl`."

msgid ""
"The :class:`ssl.SSLContext` class has a :ref:`lot of improvements "
"<whatsnew34-sslcontext>`."
msgstr ""
"Клас :class:`ssl.SSLContext` має :ref:`багато покращень <whatsnew34-"
"sslcontext>`."

msgid ""
"All modules in the standard library that support SSL now support server "
"certificate verification, including hostname matching (:func:`ssl."
"match_hostname`) and CRLs (Certificate Revocation lists, see :func:`ssl."
"SSLContext.load_verify_locations`)."
msgstr ""
"Усі модулі в стандартній бібліотеці, які підтримують SSL, тепер підтримують "
"перевірку сертифікатів сервера, включаючи відповідність імен хостів (:func:"
"`ssl.match_hostname`) і CRL (списки відкликаних сертифікатів, див. :func:"
"`ssl.SSLContext.load_verify_locations`)."

msgid "CPython implementation improvements:"
msgstr "Покращення реалізації CPython:"

msgid ":ref:`Safe object finalization <whatsnew-pep-442>` (:pep:`442`)."
msgstr ":ref:`Безпечна фіналізація об’єкта <whatsnew-pep-442>` (:pep:`442`)."

msgid ""
"Leveraging :pep:`442`, in most cases :ref:`module globals are no longer set "
"to None during finalization <whatsnew-pep-442>` (:issue:`18214`)."
msgstr ""
"Використовуючи :pep:`442`, у більшості випадків :ref:`глобальні параметри "
"модуля більше не встановлюються на None під час фіналізації <whatsnew-"
"pep-442>` (:issue:`18214`)."

msgid ":ref:`Configurable memory allocators <whatsnew-pep-445>` (:pep:`445`)."
msgstr ""
":ref:`Настроювані розподілювачі пам’яті <whatsnew-pep-445>` (:pep:`445`)."

msgid ":ref:`Argument Clinic <whatsnew-pep-436>` (:pep:`436`)."
msgstr ":ref:`Argument Clinic <whatsnew-pep-436>` (:pep:`436`)."

msgid ""
"Please read on for a comprehensive list of user-facing changes, including "
"many other smaller improvements, CPython optimizations, deprecations, and "
"potential porting issues."
msgstr ""
"Будь ласка, прочитайте повний список змін, які стосуються користувача, "
"включаючи багато інших менших покращень, оптимізацію CPython, застарілі та "
"потенційні проблеми з перенесенням."

msgid "New Features"
msgstr "Нові можливості"

msgid "PEP 453: Explicit Bootstrapping of PIP in Python Installations"
msgstr "PEP 453: Явне початкове завантаження PIP у встановленнях Python"

msgid "Bootstrapping pip By Default"
msgstr "За замовчуванням завантажувальний pip"

msgid ""
"The new :mod:`ensurepip` module (defined in :pep:`453`) provides a standard "
"cross-platform mechanism to bootstrap the pip installer into Python "
"installations and virtual environments. The version of ``pip`` included with "
"Python 3.4.0 is ``pip`` 1.5.4, and future 3.4.x maintenance releases will "
"update the bundled version to the latest version of ``pip`` that is "
"available at the time of creating the release candidate."
msgstr ""
"Новий модуль :mod:`ensurepip` (визначений у :pep:`453`) забезпечує "
"стандартний міжплатформний механізм для завантаження інсталятора pip у "
"інсталяції Python і віртуальні середовища. Версія ``pip``, що входить до "
"складу Python 3.4.0, — це ``pip`` 1.5.4, і в майбутніх випусках технічного "
"обслуговування 3.4.x оновлюватиметься пакетна версія до останньої версії "
"``pip``, доступної за адресою час створення реліз-кандидата."

msgid ""
"By default, the commands ``pipX`` and ``pipX.Y`` will be installed on all "
"platforms (where X.Y stands for the version of the Python installation), "
"along with the ``pip`` Python package and its dependencies. On Windows and "
"in virtual environments on all platforms, the unversioned ``pip`` command "
"will also be installed. On other platforms, the system wide unversioned "
"``pip`` command typically refers to the separately installed Python 2 "
"version."
msgstr ""
"За замовчуванням команди ``pipX`` і ``pipX.Y`` будуть встановлені на всіх "
"платформах (де X.Y означає версію інсталяції Python), а також пакет ``pip`` "
"Python і його залежності . У Windows і у віртуальних середовищах на всіх "
"платформах також буде встановлено неверсійну команду ``pip``. На інших "
"платформах загальносистемна неверсійна команда ``pip`` зазвичай відноситься "
"до окремо встановленої версії Python 2."

msgid ""
"The ``pyvenv`` command line utility and the :mod:`venv` module make use of "
"the :mod:`ensurepip` module to make ``pip`` readily available in virtual "
"environments. When using the command line utility, ``pip`` is installed by "
"default, while when using the :mod:`venv` module :ref:`venv-api` "
"installation of ``pip`` must be requested explicitly."
msgstr ""
"Утиліта командного рядка ``pyvenv`` і модуль :mod:`venv` використовують "
"модуль :mod:`ensurepip`, щоб зробити ``pip`` доступним у віртуальних "
"середовищах. Під час використання утиліти командного рядка ``pip`` "
"встановлено за замовчуванням, тоді як при використанні модуля :mod:`venv` :"
"ref:`venv-api` встановлення ``pip`` має бути запитане явно."

msgid ""
"For CPython :ref:`source builds on POSIX systems <building-python-on-unix>`, "
"the ``make install`` and ``make altinstall`` commands bootstrap ``pip`` by "
"default.  This behaviour can be controlled through configure options, and "
"overridden through Makefile options."
msgstr ""
"Для CPython :ref:`source будується на системах POSIX <building-python-on-"
"unix>`, команди ``make install`` і ``make altinstall`` завантажують ``pip`` "
"за замовчуванням. Цю поведінку можна контролювати за допомогою параметрів "
"конфігурації та перевизначати за допомогою параметрів Makefile."

msgid ""
"On Windows and Mac OS X, the CPython installers now default to installing "
"``pip`` along with CPython itself (users may opt out of installing it during "
"the installation process). Window users will need to opt in to the automatic "
"``PATH`` modifications to have ``pip`` available from the command line by "
"default, otherwise it can still be accessed through the Python launcher for "
"Windows as ``py -m pip``."
msgstr ""
"У Windows і Mac OS X інсталятори CPython тепер за замовчуванням встановлюють "
"``pip`` разом із самим CPython (користувачі можуть відмовитися від його "
"встановлення під час процесу встановлення). Користувачам Windows потрібно "
"буде ввімкнути автоматичні зміни PATH, щоб за замовчуванням мати pip "
"доступним із командного рядка, інакше до нього можна отримати доступ через "
"засіб запуску Python для Windows за допомогою ``py -m pip``."

msgid ""
"As `discussed in the PEP`__, platform packagers may choose not to install "
"these commands by default, as long as, when invoked, they provide clear and "
"simple directions on how to install them on that platform (usually using the "
"system package manager)."
msgstr ""
"Як `обговорювалося в PEP`__, пакувальники платформи можуть не встановлювати "
"ці команди за замовчуванням, якщо під час виклику вони надають чіткі та "
"прості вказівки щодо їх встановлення на цій платформі (зазвичай за допомогою "
"системного менеджера пакетів) ."

msgid ""
"To avoid conflicts between parallel Python 2 and Python 3 installations, "
"only the versioned ``pip3`` and ``pip3.4`` commands are bootstrapped by "
"default when ``ensurepip`` is invoked directly - the ``--default-pip`` "
"option is needed to also request the unversioned ``pip`` command. ``pyvenv`` "
"and the Windows installer ensure that the unqualified ``pip`` command is "
"made available in those environments, and ``pip`` can always be invoked via "
"the ``-m`` switch rather than directly to avoid ambiguity on systems with "
"multiple Python installations."
msgstr ""
"Щоб уникнути конфліктів між паралельними інсталяціями Python 2 і Python 3, "
"лише версії команд ``pip3`` і ``pip3.4`` завантажуються за замовчуванням, "
"коли ``ensurepip`` викликається безпосередньо - ``--default- Опція pip "
"потрібна для запиту неверсійної команди pip. ``pyvenv`` і інсталятор Windows "
"забезпечують доступність некваліфікованої команди ``pip`` у цих середовищах, "
"а ``pip`` завжди можна викликати за допомогою перемикача ``-m``, а не "
"безпосередньо, щоб уникнути неоднозначність у системах із кількома "
"інсталяціями Python."

msgid "Documentation Changes"
msgstr "Зміни в документації"

msgid ""
"As part of this change, the :ref:`installing-index` and :ref:`distributing-"
"index` sections of the documentation have been completely redesigned as "
"short getting started and FAQ documents. Most packaging documentation has "
"now been moved out to the Python Packaging Authority maintained `Python "
"Packaging User Guide <https://packaging.python.org>`__ and the documentation "
"of the individual projects."
msgstr ""
"У рамках цієї зміни розділи :ref:`installing-index` і :ref:`distributing-"
"index` документації були повністю перероблені як короткі документи про "
"початок роботи та FAQ. Більшість пакетної документації тепер переміщено до "
"Python Packaging Authority, який підтримується `Python Packaging User Guide "
"<https://packaging.python.org>`__ і документація окремих проектів."

msgid ""
"However, as this migration is currently still incomplete, the legacy "
"versions of those guides remaining available as :ref:`install-index` and :"
"ref:`distutils-index`."
msgstr ""
"Однак, оскільки ця міграція ще не завершена, застарілі версії цих посібників "
"залишаються доступними як :ref:`install-index` і :ref:`distutils-index`."

msgid ":pep:`453` -- Explicit bootstrapping of pip in Python installations"
msgstr ":pep:`453` -- Явне початкове завантаження pip у інсталяціях Python"

msgid ""
"PEP written by Donald Stufft and Nick Coghlan, implemented by Donald Stufft, "
"Nick Coghlan, Martin von Löwis and Ned Deily."
msgstr ""
"PEP, написаний Дональдом Стаффтом і Ніком Когланом, реалізований Дональдом "
"Стаффтом, Ніком Когланом, Мартіном фон Льовісом і Недом Дейлі."

msgid "PEP 446: Newly Created File Descriptors Are Non-Inheritable"
msgstr "PEP 446: щойно створені дескриптори файлів не успадковуються"

msgid ""
":pep:`446` makes newly created file descriptors :ref:`non-inheritable "
"<fd_inheritance>`.  In general, this is the behavior an application will "
"want: when launching a new process, having currently open files also open in "
"the new process can lead to all sorts of hard to find bugs, and potentially "
"to security issues."
msgstr ""
":pep:`446` робить новостворені дескриптори файлів :ref:`неуспадкованими "
"<fd_inheritance>`. Загалом це те, чого захоче програма: під час запуску "
"нового процесу наявність відкритих файлів, також відкритих у новому процесі, "
"може призвести до різного роду помилок, які важко знайти, і потенційно до "
"проблем безпеки."

msgid ""
"However, there are occasions when inheritance is desired.  To support these "
"cases, the following new functions and methods are available:"
msgstr ""
"Однак бувають випадки, коли бажано отримати спадок. Для підтримки цих "
"випадків доступні такі нові функції та методи:"

msgid ":func:`os.get_inheritable`, :func:`os.set_inheritable`"
msgstr ":func:`os.get_inheritable`, :func:`os.set_inheritable`"

msgid ":func:`os.get_handle_inheritable`, :func:`os.set_handle_inheritable`"
msgstr ":func:`os.get_handle_inheritable`, :func:`os.set_handle_inheritable`"

msgid ""
":meth:`socket.socket.get_inheritable`, :meth:`socket.socket.set_inheritable`"
msgstr ""
":meth:`socket.socket.get_inheritable`, :meth:`socket.socket.set_inheritable`"

msgid ":pep:`446` -- Make newly created file descriptors non-inheritable"
msgstr ""
":pep:`446` -- Зробити новостворені дескриптори файлів неуспадковуваними"

msgid "PEP written and implemented by Victor Stinner."
msgstr "PEP написав і реалізував Віктор Стіннер."

msgid "Improvements to Codec Handling"
msgstr "Покращення обробки кодеків"

msgid ""
"Since it was first introduced, the :mod:`codecs` module has always been "
"intended to operate as a type-neutral dynamic encoding and decoding system. "
"However, its close coupling with the Python text model, especially the type "
"restricted convenience methods on the builtin :class:`str`, :class:`bytes` "
"and :class:`bytearray` types, has historically obscured that fact."
msgstr ""
"З моменту появи вперше модуль :mod:`codecs` завжди був призначений для "
"роботи як нейтральна до типу система динамічного кодування та декодування. "
"Однак його тісний зв’язок із текстовою моделлю Python, особливо зручні "
"методи з обмеженим типом у вбудованих типах :class:`str`, :class:`bytes` і :"
"class:`bytearray`, історично приховав цей факт."

msgid ""
"As a key step in clarifying the situation, the :meth:`codecs.encode` and :"
"meth:`codecs.decode` convenience functions are now properly documented in "
"Python 2.7, 3.3 and 3.4. These functions have existed in the :mod:`codecs` "
"module (and have been covered by the regression test suite) since Python "
"2.4, but were previously only discoverable through runtime introspection."
msgstr ""
"Як ключовий крок у проясненні ситуації, зручні функції :meth:`codecs.encode` "
"і :meth:`codecs.decode` тепер належним чином задокументовані в Python 2.7, "
"3.3 і 3.4. Ці функції існували в модулі :mod:`codecs` (і були охоплені "
"набором тестів регресії) з Python 2.4, але раніше їх можна було виявити лише "
"під час самоаналізу."

msgid ""
"Unlike the convenience methods on :class:`str`, :class:`bytes` and :class:"
"`bytearray`, the :mod:`codecs` convenience functions support arbitrary "
"codecs in both Python 2 and Python 3, rather than being limited to Unicode "
"text encodings (in Python 3) or ``basestring`` <-> ``basestring`` "
"conversions (in Python 2)."
msgstr ""
"На відміну від зручних методів :class:`str`, :class:`bytes` і :class:"
"`bytearray`, зручні функції :mod:`codecs` підтримують довільні кодеки в "
"Python 2 і Python 3, а не обмежені у кодування тексту Unicode (у Python 3) "
"або перетворення ``basestring`` <-> ``basestring`` (у Python 2)."

msgid ""
"In Python 3.4, the interpreter is able to identify the known non-text "
"encodings provided in the standard library and direct users towards these "
"general purpose convenience functions when appropriate::"
msgstr ""
"У Python 3.4 інтерпретатор може ідентифікувати відомі нетекстові кодування, "
"надані в стандартній бібліотеці, і спрямовувати користувачів до цих зручних "
"функцій загального призначення, коли це необхідно:"

msgid ""
"In a related change, whenever it is feasible without breaking backwards "
"compatibility, exceptions raised during encoding and decoding operations are "
"wrapped in a chained exception of the same type that mentions the name of "
"the codec responsible for producing the error::"
msgstr ""
"У зв’язаних змінах, коли це можливо без порушення зворотної сумісності, "
"винятки, які виникають під час операцій кодування та декодування, "
"загортаються в ланцюговий виняток того самого типу, у якому згадується ім’я "
"кодека, відповідального за створення помилки:"

msgid ""
"Finally, as the examples above show, these improvements have permitted the "
"restoration of the convenience aliases for the non-Unicode codecs that were "
"themselves restored in Python 3.2. This means that encoding binary data to "
"and from its hexadecimal representation (for example) can now be written as::"
msgstr ""
"Нарешті, як показують наведені вище приклади, ці вдосконалення дозволили "
"відновити зручні псевдоніми для кодеків, відмінних від Unicode, які самі "
"були відновлені в Python 3.2. Це означає, що кодування двійкових даних у їх "
"шістнадцяткове представлення та з них (наприклад) тепер можна записати так:"

msgid ""
"The binary and text transforms provided in the standard library are detailed "
"in :ref:`binary-transforms` and :ref:`text-transforms`."
msgstr ""
"Двійкові та текстові перетворення, надані в стандартній бібліотеці, детально "
"описані в :ref:`binary-transforms` і :ref:`text-transforms`."

msgid ""
"(Contributed by Nick Coghlan in :issue:`7475`, :issue:`17827`, :issue:"
"`17828` and :issue:`19619`.)"
msgstr ""
"(Надано Ніком Когланом у :issue:`7475`, :issue:`17827`, :issue:`17828` та :"
"issue:`19619`.)"

msgid "PEP 451: A ModuleSpec Type for the Import System"
msgstr "PEP 451: тип ModuleSpec для системи імпорту"

msgid ""
":pep:`451` provides an encapsulation of the information about a module that "
"the import machinery will use to load it (that is, a module specification).  "
"This helps simplify both the import implementation and several import-"
"related APIs. The change is also a stepping stone for `several future import-"
"related improvements`__."
msgstr ""
":pep:`451` забезпечує інкапсуляцію інформації про модуль, яку механізм "
"імпорту використовуватиме для його завантаження (тобто специфікацію модуля). "
"Це допомагає спростити як реалізацію імпорту, так і кілька пов’язаних з "
"імпортом API. Ця зміна також є кроком до `декількох майбутніх покращень, "
"пов’язаних з імпортом`__."

msgid ""
"The public-facing changes from the PEP are entirely backward-compatible. "
"Furthermore, they should be transparent to everyone but importer authors.  "
"Key finder and loader methods have been deprecated, but they will continue "
"working. New importers should use the new methods described in the PEP.  "
"Existing importers should be updated to implement the new methods.  See the :"
"ref:`deprecated-3.4` section for a list of methods that should be replaced "
"and their replacements."
msgstr ""
"Загальнодоступні зміни від PEP повністю сумісні з попередніми версіями. Крім "
"того, вони мають бути прозорими для всіх, крім авторів-імпортерів. Методи "
"пошуку та завантаження ключів застаріли, але вони продовжуватимуть "
"працювати. Нові імпортери повинні використовувати нові методи, описані в "
"PEP. Існуючі імпортери мають бути оновлені для впровадження нових методів. "
"Перегляньте розділ :ref:`deprecated-3.4` для списку методів, які слід "
"замінити, і їх замін."

msgid "Other Language Changes"
msgstr "Інші зміни мови"

msgid "Some smaller changes made to the core Python language are:"
msgstr "Деякі менші зміни, внесені до основної мови Python:"

msgid "Unicode database updated to UCD version 6.3."
msgstr "Базу даних Unicode оновлено до UCD версії 6.3."

msgid ""
":func:`min` and :func:`max` now accept a *default* keyword-only argument "
"that can be used to specify the value they return if the iterable they are "
"evaluating has no elements.  (Contributed by Julian Berman in :issue:"
"`18111`.)"
msgstr ""
":func:`min` і :func:`max` тепер приймають аргумент *за замовчуванням*, що "
"містить лише ключове слово, яке можна використовувати для вказівки значення, "
"яке вони повертають, якщо ітерація, яку вони оцінюють, не має елементів. "
"(Надав Джуліан Берман у :issue:`18111`.)"

msgid "Module objects are now :ref:`weakly referenceable <mod-weakref>`."
msgstr ""

msgid ""
"Module ``__file__`` attributes (and related values) should now always "
"contain absolute paths by default, with the sole exception of ``__main__."
"__file__`` when a script has been executed directly using a relative path.  "
"(Contributed by Brett Cannon in :issue:`18416`.)"
msgstr ""
"Атрибути модуля ``__file__`` (та відповідні значення) тепер завжди повинні "
"містити абсолютні шляхи за замовчуванням, за єдиним винятком ``__main__."
"__file__``, коли сценарій виконується безпосередньо за допомогою відносного "
"шляху. (Надано Бреттом Кенноном у :issue:`18416`.)"

msgid ""
"All the UTF-\\* codecs (except UTF-7) now reject surrogates during both "
"encoding and decoding unless the ``surrogatepass`` error handler is used, "
"with the exception of the UTF-16 decoder (which accepts valid surrogate "
"pairs) and the UTF-16 encoder (which produces them while encoding non-BMP "
"characters). (Contributed by Victor Stinner, Kang-Hao (Kenny) Lu and Serhiy "
"Storchaka in :issue:`12892`.)"
msgstr ""
"Усі кодеки UTF-\\* (крім UTF-7) тепер відхиляють сурогати як під час "
"кодування, так і під час декодування, якщо не використовується обробник "
"помилок ``surrogatepass``, за винятком декодера UTF-16 (який приймає дійсні "
"пари сурогатів) і кодувальник UTF-16 (який створює їх під час кодування "
"символів, відмінних від BMP). (Надано Віктором Стіннером, Кан-Хао (Кенні) Лу "
"та Сергієм Сторчакою в :issue:`12892`.)"

msgid ""
"New German EBCDIC :ref:`codec <standard-encodings>` ``cp273``.  (Contributed "
"by Michael Bierenfeld and Andrew Kuchling in :issue:`1097797`.)"
msgstr ""
"Новий німецький EBCDIC :ref:`codec <standard-encodings>` ``cp273``. (Надано "
"Майклом Біренфельдом та Ендрю Кухлінгом у :issue:`1097797`.)"

msgid ""
"New Ukrainian :ref:`codec <standard-encodings>` ``cp1125``.  (Contributed by "
"Serhiy Storchaka in :issue:`19668`.)"
msgstr ""
"Новий український :ref:`codec <standard-encodings>` ``cp1125``. (Надав "
"Сергій Сторчака в :issue:`19668`.)"

msgid ""
":class:`bytes`.join() and :class:`bytearray`.join() now accept arbitrary "
"buffer objects as arguments.  (Contributed by Antoine Pitrou in :issue:"
"`15958`.)"
msgstr ""
":class:`bytes`.join() і :class:`bytearray`.join() тепер приймають довільні "
"буферні об’єкти як аргументи. (Надав Антуан Пітру в :issue:`15958`.)"

msgid ""
"The :class:`int` constructor now accepts any object that has an "
"``__index__`` method for its *base* argument.  (Contributed by Mark "
"Dickinson in :issue:`16772`.)"
msgstr ""
"Конструктор :class:`int` тепер приймає будь-який об’єкт, який має метод "
"``__index__`` для аргументу *base*. (Надав Марк Дікінсон у :issue:`16772`.)"

msgid ""
"Frame objects now have a :func:`~frame.clear` method that clears all "
"references to local variables from the frame.  (Contributed by Antoine "
"Pitrou in :issue:`17934`.)"
msgstr ""
"Об’єкти фрейму тепер мають метод :func:`~frame.clear`, який очищає всі "
"посилання на локальні змінні з фрейму. (Надав Антуан Пітру в :issue:`17934`.)"

msgid ""
":class:`memoryview` is now registered as a :class:`Sequence <collections."
"abc>`, and supports the :func:`reversed` builtin.  (Contributed by Nick "
"Coghlan and Claudiu Popa in :issue:`18690` and :issue:`19078`.)"
msgstr ""
":class:`memoryview` тепер зареєстровано як :class:`Sequence <collections."
"abc>`, і підтримує вбудований :func:`reversed`. (Надано Ніком Когланом і "
"Клаудіу Попою в :issue:`18690` і :issue:`19078`.)"

msgid ""
"Signatures reported by :func:`help` have been modified and improved in "
"several cases as a result of the introduction of Argument Clinic and other "
"changes to the :mod:`inspect` and :mod:`pydoc` modules."
msgstr ""
"Сигнатури, про які повідомляє :func:`help`, були змінені та покращені в "
"кількох випадках у результаті впровадження Argument Clinic та інших змін до "
"модулів :mod:`inspect` і :mod:`pydoc`."

msgid ""
":meth:`~object.__length_hint__` is now part of the formal language "
"specification (see :pep:`424`).  (Contributed by Armin Ronacher in :issue:"
"`16148`.)"
msgstr ""
":meth:`~object.__length_hint__` тепер є частиною формальної специфікації "
"мови (див. :pep:`424`). (Надав Армін Роначер у :issue:`16148`.)"

msgid "New Modules"
msgstr "Нові модулі"

msgid "asyncio"
msgstr "asyncio"

msgid ""
"The new :mod:`asyncio` module (defined in :pep:`3156`) provides a standard "
"pluggable event loop model for Python, providing solid asynchronous IO "
"support in the standard library, and making it easier for other event loop "
"implementations to interoperate with the standard library and each other."
msgstr ""
"Новий модуль :mod:`asyncio` (визначений у :pep:`3156`) надає стандартну "
"підключаючу модель циклу подій для Python, надаючи надійну підтримку "
"асинхронного введення-виведення в стандартній бібліотеці та полегшуючи "
"взаємодію інших реалізацій циклу подій. зі стандартною бібліотекою та один з "
"одним."

msgid "For Python 3.4, this module is considered a :term:`provisional API`."
msgstr "Для Python 3.4 цей модуль вважається :term:`provisional API`."

msgid ":pep:`3156` -- Asynchronous IO Support Rebooted: the \"asyncio\" Module"
msgstr ""
":pep:`3156` -- Перезавантажено підтримку асинхронного вводу-виводу: модуль "
"\"asyncio\""

msgid "PEP written and implementation led by Guido van Rossum."
msgstr "Написання PEP та впровадження під керівництвом Гвідо ван Россума."

msgid "ensurepip"
msgstr "securepip"

msgid ""
"The new :mod:`ensurepip` module is the primary infrastructure for the :pep:"
"`453` implementation.  In the normal course of events end users will not "
"need to interact with this module, but it can be used to manually bootstrap "
"``pip`` if the automated bootstrapping into an installation or virtual "
"environment was declined."
msgstr ""
"Новий модуль :mod:`ensurepip` є основною інфраструктурою для реалізації :pep:"
"`453`. У звичайному перебігу подій кінцевим користувачам не потрібно буде "
"взаємодіяти з цим модулем, але його можна використовувати для ручного "
"завантаження ``pip``, якщо автоматичне завантаження у встановлене чи "
"віртуальне середовище було відхилено."

msgid ""
":mod:`ensurepip` includes a bundled copy of ``pip``, up-to-date as of the "
"first release candidate of the release of CPython with which it ships (this "
"applies to both maintenance releases and feature releases).  ``ensurepip`` "
"does not access the internet.  If the installation has internet access, "
"after ``ensurepip`` is run the bundled ``pip`` can be used to upgrade "
"``pip`` to a more recent release than the bundled one.  (Note that such an "
"upgraded version of ``pip`` is considered to be a separately installed "
"package and will not be removed if Python is uninstalled.)"
msgstr ""
":mod:`ensurepip` містить укомплектовану копію ``pip``, оновлену до першого "
"випуску-кандидата випуску CPython, з яким він поставляється (це стосується "
"як випусків підтримки, так і випусків функцій). ``ensurepip`` не має доступу "
"до Інтернету. Якщо інсталяція має доступ до Інтернету, після запуску "
"``ensurepip`` пакетний ``pip`` можна використовувати для оновлення ``pip`` "
"до новішого випуску, ніж пакетний випуск. (Зверніть увагу, що така оновлена "
"версія ``pip`` вважається окремо встановленим пакетом і не буде видалена, "
"якщо Python буде видалено.)"

msgid ""
"The module is named *ensure*\\ pip because if called when ``pip`` is already "
"installed, it does nothing.  It also has an ``--upgrade`` option that will "
"cause it to install the bundled copy of ``pip`` if the existing installed "
"version of ``pip`` is older than the bundled copy."
msgstr ""
"Модуль називається *ensure*\\ pip, тому що якщо його викликати, коли ``pip`` "
"уже встановлено, він нічого не робить. Він також має опцію ``--upgrade``, "
"яка змусить його встановити пакетну копію ``pip``, якщо наявна встановлена "
"версія ``pip`` старіша за пакетну копію."

msgid "enum"
msgstr "перелік"

msgid ""
"The new :mod:`enum` module (defined in :pep:`435`) provides a standard "
"implementation of enumeration types, allowing other modules (such as :mod:"
"`socket`) to provide more informative error messages and better debugging "
"support by replacing opaque integer constants with backwards compatible "
"enumeration values."
msgstr ""
"Новий модуль :mod:`enum` (визначений у :pep:`435`) забезпечує стандартну "
"реалізацію типів перерахування, що дозволяє іншим модулям (таким як :mod:"
"`socket`) надавати більш інформативні повідомлення про помилки та "
"покращувати підтримку налагодження. шляхом заміни непрозорих цілочисельних "
"констант на зворотно сумісні значення перерахування."

msgid ":pep:`435` -- Adding an Enum type to the Python standard library"
msgstr ":pep:`435` -- Додавання типу Enum до стандартної бібліотеки Python"

msgid ""
"PEP written by Barry Warsaw, Eli Bendersky and Ethan Furman, implemented by "
"Ethan Furman."
msgstr ""
"PEP, написаний Баррі Варшау, Елі Бендерскі та Ітаном Фурманом, реалізований "
"Ітаном Фурманом."

msgid "pathlib"
msgstr "pathlib"

msgid ""
"The new :mod:`pathlib` module offers classes representing filesystem paths "
"with semantics appropriate for different operating systems.  Path classes "
"are divided between *pure paths*, which provide purely computational "
"operations without I/O, and *concrete paths*, which inherit from pure paths "
"but also provide I/O operations."
msgstr ""
"Новий модуль :mod:`pathlib` пропонує класи, що представляють шляхи файлової "
"системи із семантикою, відповідною до різних операційних систем. Класи "
"шляхів поділяються на *чисті шляхи*, які забезпечують суто обчислювальні "
"операції без введення-виведення, і *конкретні шляхи*, які успадковують чисті "
"шляхи, але також забезпечують операції введення-виведення."

msgid ":pep:`428` -- The pathlib module -- object-oriented filesystem paths"
msgstr ""
":pep:`428` -- Модуль pathlib -- шляхи об'єктно-орієнтованої файлової системи"

msgid "PEP written and implemented by Antoine Pitrou."
msgstr "PEP написаний і реалізований Антуаном Пітру."

msgid "selectors"
msgstr "селектори"

msgid ""
"The new :mod:`selectors` module (created as part of implementing :pep:"
"`3156`) allows high-level and efficient I/O multiplexing, built upon the :"
"mod:`select` module primitives."
msgstr ""
"Новий модуль :mod:`selectors` (створений як частина реалізації :pep:`3156`) "
"забезпечує високорівневе й ефективне мультиплексування вводу/виводу, "
"побудоване на основі примітивів модуля :mod:`select`."

msgid "statistics"
msgstr "статистика"

msgid ""
"The new :mod:`statistics` module (defined in :pep:`450`) offers some core "
"statistics functionality directly in the standard library. This module "
"supports calculation of the mean, median, mode, variance and standard "
"deviation of a data series."
msgstr ""
"Новий модуль :mod:`statistics` (визначений у :pep:`450`) пропонує деякі "
"основні функції статистики безпосередньо в стандартній бібліотеці. Цей "
"модуль підтримує обчислення середнього значення, медіани, моди, дисперсії та "
"стандартного відхилення ряду даних."

msgid ":pep:`450` -- Adding A Statistics Module To The Standard Library"
msgstr ":pep:`450` -- Додавання модуля статистики до стандартної бібліотеки"

msgid "PEP written and implemented by Steven D'Aprano"
msgstr "PEP написаний і реалізований Стівеном Д'Апрано"

msgid "tracemalloc"
msgstr "tracemalloc"

msgid ""
"The new :mod:`tracemalloc` module (defined in :pep:`454`) is a debug tool to "
"trace memory blocks allocated by Python. It provides the following "
"information:"
msgstr ""
"Новий модуль :mod:`tracemalloc` (визначений у :pep:`454`) є інструментом "
"налагодження для відстеження блоків пам’яті, виділених Python. Він надає "
"таку інформацію:"

msgid "Trace where an object was allocated"
msgstr "Відстеження місця розміщення об’єкта"

msgid ""
"Statistics on allocated memory blocks per filename and per line number: "
"total size, number and average size of allocated memory blocks"
msgstr ""
"Статистика виділених блоків пам'яті на ім'я файлу та номер рядка: загальний "
"розмір, кількість і середній розмір виділених блоків пам'яті"

msgid "Compute the differences between two snapshots to detect memory leaks"
msgstr "Обчисліть різницю між двома знімками, щоб виявити витоки пам’яті"

msgid ""
":pep:`454` -- Add a new tracemalloc module to trace Python memory allocations"
msgstr ""
":pep:`454` -- Додайте новий модуль tracemalloc для відстеження розподілу "
"пам'яті Python"

msgid "PEP written and implemented by Victor Stinner"
msgstr "PEP написав і реалізував Віктор Стіннер"

msgid "Improved Modules"
msgstr "Покращені модулі"

msgid "abc"
msgstr "абв"

msgid ""
"New function :func:`abc.get_cache_token` can be used to know when to "
"invalidate caches that are affected by changes in the object graph.  "
"(Contributed by Łukasz Langa in :issue:`16832`.)"
msgstr ""
"Нову функцію :func:`abc.get_cache_token` можна використовувати, щоб знати, "
"коли робити кеші недійсними, на які впливають зміни в графі об’єктів. (Надав "
"Łukasz Langa в :issue:`16832`.)"

msgid ""
"New class :class:`~abc.ABC` has :class:`~abc.ABCMeta` as its meta class. "
"Using ``ABC`` as a base class has essentially the same effect as specifying "
"``metaclass=abc.ABCMeta``, but is simpler to type and easier to read. "
"(Contributed by Bruno Dupuis in :issue:`16049`.)"
msgstr ""
"Новий клас :class:`~abc.ABC` має :class:`~abc.ABCMeta` як мета-клас. "
"Використання ``ABC`` як базового класу має по суті той самий ефект, що й "
"визначення ``metaclass=abc.ABCMeta``, але його простіше вводити та легше "
"читати. (Надав Бруно Дюпюї в :issue:`16049`.)"

msgid "aifc"
msgstr "aifc"

msgid ""
"The :meth:`~aifc.aifc.getparams` method now returns a namedtuple rather than "
"a plain tuple.  (Contributed by Claudiu Popa in :issue:`17818`.)"
msgstr ""
"Метод :meth:`~aifc.aifc.getparams` тепер повертає іменований кортеж, а не "
"звичайний кортеж. (Надав Клаудіу Попа в :issue:`17818`.)"

msgid ""
":func:`aifc.open` now supports the context management protocol: when used in "
"a :keyword:`with` block, the :meth:`~aifc.aifc.close` method of the returned "
"object will be called automatically at the end of the block.  (Contributed "
"by Serhiy Storchacha in :issue:`16486`.)"
msgstr ""
":func:`aifc.open` тепер підтримує протокол керування контекстом: при "
"використанні в блоці :keyword:`with` метод :meth:`~aifc.aifc.close` "
"повернутого об’єкта буде викликано автоматично під час кінець блоку. (Надав "
"Сергій Сторчача в :issue:`16486`.)"

msgid ""
"The :meth:`~aifc.aifc.writeframesraw` and :meth:`~aifc.aifc.writeframes` "
"methods now accept any :term:`bytes-like object`.  (Contributed by Serhiy "
"Storchaka in :issue:`8311`.)"
msgstr ""
"Методи :meth:`~aifc.aifc.writeframesraw` і :meth:`~aifc.aifc.writeframes` "
"тепер приймають будь-які :term:`bytes-like object`. (Надав Сергій Сторчака "
"в :issue:`8311`.)"

msgid "argparse"
msgstr "argparse"

msgid ""
"The :class:`~argparse.FileType` class now accepts *encoding* and *errors* "
"arguments, which are passed through to :func:`open`.  (Contributed by Lucas "
"Maystre in :issue:`11175`.)"
msgstr ""
"Клас :class:`~argparse.FileType` тепер приймає аргументи *encoding* і "
"*errors*, які передаються до :func:`open`. (Надав Лукас Майстр у :issue:"
"`11175`.)"

msgid "audioop"
msgstr "аудіооп"

msgid ""
":mod:`audioop` now supports 24-bit samples.  (Contributed by Serhiy "
"Storchaka in :issue:`12866`.)"
msgstr ""
":mod:`audioop` тепер підтримує 24-бітні семпли. (Надав Сергій Сторчака в :"
"issue:`12866`.)"

msgid ""
"New :func:`~audioop.byteswap` function converts big-endian samples to little-"
"endian and vice versa.  (Contributed by Serhiy Storchaka in :issue:`19641`.)"
msgstr ""
"Нова функція :func:`~audioop.byteswap` перетворює вибірки з порядковим "
"порядком байтів у порядковий порядок байтів у порядковий порядок байтів і "
"навпаки. (Надав Сергій Сторчака в :issue:`19641`.)"

msgid ""
"All :mod:`audioop` functions now accept any :term:`bytes-like object`.  "
"Strings are not accepted: they didn't work before, now they raise an error "
"right away. (Contributed by Serhiy Storchaka in :issue:`16685`.)"
msgstr ""
"Усі функції :mod:`audioop` тепер приймають будь-які :term:`байт-подібні "
"об'єкти <bytes-like object>`. Рядки не приймаються: раніше не працювали, "
"тепер відразу видають помилку. (Надав Сергій Сторчака в :issue:`16685`.)"

msgid "base64"
msgstr "база64"

msgid ""
"The encoding and decoding functions in :mod:`base64` now accept any :term:"
"`bytes-like object` in cases where it previously required a :class:`bytes` "
"or :class:`bytearray` instance.  (Contributed by Nick Coghlan in :issue:"
"`17839`.)"
msgstr ""
"Функції кодування та декодування в :mod:`base64` тепер приймають будь-які :"
"term:`bytes-подібні об’єкти <bytes-like object>` у випадках, коли раніше "
"вимагали екземпляр :class:`bytes` або :class:`bytearray`. (Надав Нік Коглан "
"у :issue:`17839`.)"

msgid ""
"New functions :func:`~base64.a85encode`, :func:`~base64.a85decode`, :func:"
"`~base64.b85encode`, and :func:`~base64.b85decode` provide the ability to "
"encode and decode binary data from and to ``Ascii85`` and the git/mercurial "
"``Base85`` formats, respectively.  The ``a85`` functions have options that "
"can be used to make them compatible with the variants of the ``Ascii85`` "
"encoding, including the Adobe variant.  (Contributed by Martin Morrison, the "
"Mercurial project, Serhiy Storchaka, and Antoine Pitrou in :issue:`17618`.)"
msgstr ""
"Нові функції :func:`~base64.a85encode`, :func:`~base64.a85decode`, :func:"
"`~base64.b85encode` та :func:`~base64.b85decode` надають можливість кодувати "
"та декодувати двійкові дані з і до форматів ``Ascii85`` і git/mercurial "
"``Base85`` відповідно. Функції ``a85`` мають параметри, за допомогою яких "
"можна зробити їх сумісними з варіантами кодування ``Ascii85``, включно з "
"варіантом Adobe. (Надано Мартіном Моррісоном, проектом Mercurial, Сергієм "
"Сторчакою та Антуаном Пітру в :issue:`17618`.)"

msgid "collections"
msgstr "колекції"

msgid ""
"The :meth:`.ChainMap.new_child` method now accepts an *m* argument "
"specifying the child map to add to the chain.  This allows an existing "
"mapping and/or a custom mapping type to be used for the child.  (Contributed "
"by Vinay Sajip in :issue:`16613`.)"
msgstr ""
"Метод :meth:`.ChainMap.new_child` тепер приймає аргумент *m*, який визначає "
"дочірню карту, яку потрібно додати до ланцюжка. Це дозволяє використовувати "
"наявне зіставлення та/або настроюваний тип зіставлення для дочірнього "
"елемента. (Надав Віней Саджип у :issue:`16613`.)"

msgid "colorsys"
msgstr "colorys"

msgid ""
"The number of digits in the coefficients for the RGB --- YIQ conversions "
"have been expanded so that they match the FCC NTSC versions.  The change in "
"results should be less than 1% and may better match results found elsewhere. "
"(Contributed by Brian Landers and Serhiy Storchaka in :issue:`14323`.)"
msgstr ""
"Кількість цифр у коефіцієнтах для перетворень RGB --- YIQ було розширено, "
"щоб вони відповідали версіям FCC NTSC. Зміна в результатах має бути менше 1% "
"і може краще відповідати результатам, знайденим в інших місцях. (Надано "
"Браяном Лендерсом і Сергієм Сторчакою в :issue:`14323`.)"

msgid "contextlib"
msgstr "contextlib"

msgid ""
"The new :class:`contextlib.suppress` context manager helps to clarify the "
"intent of code that deliberately suppresses exceptions from a single "
"statement.  (Contributed by Raymond Hettinger in :issue:`15806` and Zero "
"Piraeus in :issue:`19266`.)"
msgstr ""
"Новий контекстний менеджер :class:`contextlib.suppress` допомагає прояснити "
"призначення коду, який навмисно пригнічує винятки з одного оператора. "
"(Надано Раймондом Хеттінгером у :issue:`15806` та Zero Piraeus у :issue:"
"`19266`.)"

msgid ""
"The new :func:`contextlib.redirect_stdout` context manager makes it easier "
"for utility scripts to handle inflexible APIs that write their output to :"
"data:`sys.stdout` and don't provide any options to redirect it.  Using the "
"context manager, the :data:`sys.stdout` output can be redirected to any "
"other stream or, in conjunction with :class:`io.StringIO`, to a string. The "
"latter can be especially useful, for example, to capture output from a "
"function that was written to implement a command line interface. It is "
"recommended only for utility scripts because it affects the global state of :"
"data:`sys.stdout`.  (Contributed by Raymond Hettinger in :issue:`15805`.)"
msgstr ""
"Новий контекстний менеджер :func:`contextlib.redirect_stdout` спрощує роботу "
"сценаріїв утиліт з негнучкими API, які записують свої виведення в :data:`sys."
"stdout` і не надають жодних опцій для його перенаправлення. За допомогою "
"диспетчера контексту вихід :data:`sys.stdout` можна перенаправити в будь-"
"який інший потік або, у поєднанні з :class:`io.StringIO`, у рядок. Останнє "
"може бути особливо корисним, наприклад, для захоплення виводу з функції, яка "
"була написана для реалізації інтерфейсу командного рядка. Рекомендовано лише "
"для службових сценаріїв, оскільки це впливає на глобальний стан :data:`sys."
"stdout`. (Надав Реймонд Геттінгер у :issue:`15805`.)"

msgid ""
"The :mod:`contextlib` documentation has also been updated to include a :ref:"
"`discussion <single-use-reusable-and-reentrant-cms>` of the differences "
"between single use, reusable and reentrant context managers."
msgstr ""
"Документацію :mod:`contextlib` також було оновлено, щоб включити :ref:"
"`обговорення <single-use-reusable-and-reentrant-cms>` відмінностей між "
"одноразовими, багаторазовими та повторними контекстними менеджерами."

msgid "dbm"
msgstr "dbm"

msgid ""
":func:`dbm.open` objects now support the context management protocol.  When "
"used in a :keyword:`with` statement, the ``close`` method of the database "
"object will be called automatically at the end of the block.  (Contributed "
"by Claudiu Popa and Nick Coghlan in :issue:`19282`.)"
msgstr ""
"Об’єкти :func:`dbm.open` тепер підтримують протокол керування контекстом. "
"При використанні в операторі :keyword:`with` метод ``close`` об'єкта бази "
"даних буде викликано автоматично в кінці блоку. (Надано Клаудіу Попою та "
"Ніком Когланом у :issue:`19282`.)"

msgid "dis"
msgstr "дис"

msgid ""
"Functions :func:`~dis.show_code`, :func:`~dis.dis`, :func:`~dis.distb`, and :"
"func:`~dis.disassemble` now accept a keyword-only *file* argument that "
"controls where they write their output."
msgstr ""
"Функції :func:`~dis.show_code`, :func:`~dis.dis`, :func:`~dis.distb` і :func:"
"`~dis.disassemble` тепер приймають *файл* лише з ключовими словами аргумент, "
"який керує місцем запису результату."

msgid ""
"The :mod:`dis` module is now built around an :class:`~dis.Instruction` class "
"that provides object oriented access to the details of each individual "
"bytecode operation."
msgstr ""
"Модуль :mod:`dis` тепер побудовано навколо класу :class:`~dis.Instruction`, "
"який забезпечує об’єктно-орієнтований доступ до деталей кожної окремої "
"операції байт-коду."

msgid ""
"A new method, :func:`~dis.get_instructions`, provides an iterator that emits "
"the Instruction stream for a given piece of Python code.  Thus it is now "
"possible to write a program that inspects and manipulates a bytecode object "
"in ways different from those provided by the :mod:`~dis` module itself.  For "
"example::"
msgstr ""
"Новий метод, :func:`~dis.get_instructions`, надає ітератор, який видає потік "
"інструкцій для певної частини коду Python. Таким чином, тепер можна написати "
"програму, яка перевіряє та обробляє об’єкт байт-коду способами, відмінними "
"від тих, які надає сам модуль :mod:`~dis`. Наприклад::"

msgid ""
"The various display tools in the :mod:`dis` module have been rewritten to "
"use these new components."
msgstr ""
"Різні інструменти відображення в модулі :mod:`dis` було переписано для "
"використання цих нових компонентів."

msgid ""
"In addition, a new application-friendly class :class:`~dis.Bytecode` "
"provides an object-oriented API for inspecting bytecode in both in human-"
"readable form and for iterating over instructions.  The :class:`~dis."
"Bytecode` constructor takes the same arguments that :func:`~dis."
"get_instruction` does (plus an optional *current_offset*), and the resulting "
"object can be iterated to produce :class:`~dis.Instruction` objects.  But it "
"also has a :mod:`~dis.Bytecode.dis` method, equivalent to calling :mod:`~dis."
"dis` on the constructor argument, but returned as a multi-line string::"
msgstr ""
"Крім того, новий зручний для додатків клас :class:`~dis.Bytecode` надає "
"об’єктно-орієнтований API для перевірки байт-коду як у зрозумілій людині "
"формі, так і для повторення інструкцій. Конструктор :class:`~dis.Bytecode` "
"приймає ті самі аргументи, що і :func:`~dis.get_instruction` (плюс "
"необов’язковий *current_offset*), і отриманий об’єкт можна повторювати для "
"створення Об'єкти :class:`~dis.Instruction`. Але він також має метод :mod:"
"`~dis.Bytecode.dis`, еквівалентний виклику :mod:`~dis.dis` в аргументі "
"конструктора, але повертається як багаторядковий рядок::"

msgid ""
":class:`~dis.Bytecode` also has a class method, :meth:`~dis.Bytecode."
"from_traceback`, that provides the ability to manipulate a traceback (that "
"is, ``print(Bytecode.from_traceback(tb).dis())`` is equivalent to "
"``distb(tb)``)."
msgstr ""
":class:`~dis.Bytecode` також має метод класу, :meth:`~dis.Bytecode."
"from_traceback`, який надає можливість маніпулювати трасуванням (тобто "
"``print(Bytecode.from_traceback(tb). dis())`` еквівалентно ``distb(tb)``)."

msgid ""
"(Contributed by Nick Coghlan, Ryan Kelly and Thomas Kluyver in :issue:"
"`11816` and Claudiu Popa in :issue:`17916`.)"
msgstr ""
"(Надано Ніком Когланом, Раяном Келлі та Томасом Клайвером у :issue:`11816` "
"та Клаудіу Попою у :issue:`17916`.)"

msgid ""
"New function :func:`~dis.stack_effect` computes the effect on the Python "
"stack of a given opcode and argument, information that is not otherwise "
"available. (Contributed by Larry Hastings in :issue:`19722`.)"
msgstr ""
"Нова функція :func:`~dis.stack_effect` обчислює вплив заданого коду операції "
"та аргументу на стек Python, інформації, яка інакше недоступна. (Надано "
"Ларрі Гастінгсом у :issue:`19722`.)"

msgid "doctest"
msgstr "doctest"

msgid ""
"A new :ref:`option flag <doctest-options>`, :data:`~doctest.FAIL_FAST`, "
"halts test running as soon as the first failure is detected.  (Contributed "
"by R. David Murray and Daniel Urban in :issue:`16522`.)"
msgstr ""
"Новий :ref:`прапор параметра <doctest-options>`, :data:`~doctest.FAIL_FAST`, "
"зупиняє виконання тесту, як тільки виявлено першу помилку. (Надано Р. "
"Девідом Мюрреєм і Деніелом Урбаном у :issue:`16522`.)"

msgid ""
"The :mod:`doctest` command line interface now uses :mod:`argparse`, and has "
"two new options, ``-o`` and ``-f``.  ``-o`` allows :ref:`doctest options "
"<doctest-options>` to be specified on the command line, and ``-f`` is a "
"shorthand for ``-o FAIL_FAST`` (to parallel the similar option supported by "
"the :mod:`unittest` CLI).  (Contributed by R. David Murray in :issue:"
"`11390`.)"
msgstr ""
"Інтерфейс командного рядка :mod:`doctest` тепер використовує :mod:`argparse` "
"і має два нові параметри, ``-o`` і ``-f``. ``-o`` дозволяє :ref:`doctest "
"options <doctest-options>` вказувати в командному рядку, а ``-f`` є "
"скороченням ``-o FAIL_FAST`` (для паралельного аналогічного параметра, який "
"підтримується :mod:`unittest` CLI). (Надав Р. Девід Мюррей у :issue:`11390`.)"

msgid ""
":mod:`doctest` will now find doctests in extension module ``__doc__`` "
"strings. (Contributed by Zachary Ware in :issue:`3158`.)"
msgstr ""
":mod:`doctest` тепер знаходитиме doctests у рядках ``__doc__`` модуля "
"розширення. (Надано Zachary Ware у :issue:`3158`.)"

msgid "email"
msgstr "електронною поштою"

msgid ""
":meth:`~email.message.Message.as_string` now accepts a *policy* argument to "
"override the default policy of the message when generating a string "
"representation of it.  This means that ``as_string`` can now be used in more "
"circumstances, instead of having to create and use a :mod:`~email.generator` "
"in order to pass formatting parameters to its ``flatten`` method.  "
"(Contributed by R. David Murray in :issue:`18600`.)"
msgstr ""
":meth:`~email.message.Message.as_string` тепер приймає аргумент *policy* для "
"заміни політики за замовчуванням повідомлення під час генерації його "
"представлення рядка. Це означає, що ``as_string`` тепер можна "
"використовувати в більшій кількості обставин, замість того, щоб створювати "
"та використовувати :mod:`~email.generator` для передачі параметрів "
"форматування його методу ``flatten``. (Надав Р. Девід Мюррей у :issue:"
"`18600`.)"

msgid ""
"New method :meth:`~email.message.Message.as_bytes` added to produce a bytes "
"representation of the message in a fashion similar to how ``as_string`` "
"produces a string representation.  It does not accept the *maxheaderlen* "
"argument, but does accept the *unixfrom* and *policy* arguments. The :class:"
"`~email.message.Message` :meth:`~email.message.Message.__bytes__` method "
"calls it, meaning that ``bytes(mymsg)`` will now produce the intuitive "
"result:  a bytes object containing the fully formatted message.  "
"(Contributed by R. David Murray in :issue:`18600`.)"
msgstr ""
"Новий метод :meth:`~email.message.Message.as_bytes` додано для створення "
"представлення повідомлення в байтах подібно до того, як ``as_string`` "
"створює представлення рядка. Він не приймає аргумент *maxheaderlen*, але "
"приймає аргументи *unixfrom* і *policy*. Метод :class:`~email.message."
"Message` :meth:`~email.message.Message.__bytes__` викликає його, що означає, "
"що ``bytes(mymsg)`` тепер створюватиме інтуїтивно зрозумілий результат: "
"об’єкт bytes, що містить повністю відформатованого повідомлення. (Надав Р. "
"Девід Мюррей у :issue:`18600`.)"

msgid ""
"The :meth:`.Message.set_param` message now accepts a *replace* keyword "
"argument. When specified, the associated header will be updated without "
"changing its location in the list of headers.  For backward compatibility, "
"the default is ``False``.  (Contributed by R. David Murray in :issue:"
"`18891`.)"
msgstr ""
"Повідомлення :meth:`.Message.set_param` тепер приймає аргумент ключового "
"слова *replace*. Якщо вказано, пов’язаний заголовок буде оновлено без зміни "
"його розташування в списку заголовків. Для зворотної сумісності стандартним "
"значенням є ``False``. (Надав Р. Девід Мюррей у :issue:`18891`.)"

msgid ""
"A pair of new subclasses of :class:`~email.message.Message` have been added "
"(:class:`.EmailMessage` and :class:`.MIMEPart`), along with a new sub-"
"module, :mod:`~email.contentmanager` and a new :mod:`~email.policy` "
"attribute :attr:`~email.policy.EmailPolicy.content_manager`.  All "
"documentation is currently in the new module, which is being added as part "
"of email's new :term:`provisional API`.  These classes provide a number of "
"new methods that make extracting content from and inserting content into "
"email messages much easier.  For details, see the :mod:`~email."
"contentmanager` documentation and the :ref:`email-examples`.  These API "
"additions complete the bulk of the work that was planned as part of the "
"email6 project.  The currently provisional API is scheduled to become final "
"in Python 3.5 (possibly with a few minor additions in the area of error "
"handling).  (Contributed by R. David Murray in :issue:`18891`.)"
msgstr ""
"Додано пару нових підкласів :class:`~email.message.Message` (:class:`."
"EmailMessage` і :class:`.MIMEPart`), а також новий підмодуль :mod:`~email."
"contentmanager` і новий атрибут :mod:`~email.policy` :attr:`~email.policy."
"EmailPolicy.content_manager`. Уся документація зараз знаходиться в новому "
"модулі, який додається як частина нового :term:`provisional API` електронної "
"пошти. Ці класи надають низку нових методів, які значно спрощують вилучення "
"вмісту з повідомлень електронної пошти та вставлення вмісту в нього. "
"Додаткову інформацію див. у документації :mod:`~email.contentmanager` і :ref:"
"`email-examples`. Ці доповнення API завершують основну частину роботи, яка "
"була запланована в рамках проекту email6. Наразі попередній API планується "
"стати остаточним у Python 3.5 (можливо, з кількома незначними доповненнями в "
"області обробки помилок). (Надав Р. Девід Мюррей у :issue:`18891`.)"

msgid "filecmp"
msgstr "filecmp"

msgid ""
"A new :func:`~filecmp.clear_cache` function provides the ability to clear "
"the :mod:`filecmp` comparison cache, which uses :func:`os.stat` information "
"to determine if the file has changed since the last compare.  This can be "
"used, for example, if the file might have been changed and re-checked in "
"less time than the resolution of a particular filesystem's file modification "
"time field. (Contributed by Mark Levitt in :issue:`18149`.)"
msgstr ""
"Нова функція :func:`~filecmp.clear_cache` надає можливість очистити кеш "
"порівняння :mod:`filecmp`, який використовує інформацію :func:`os.stat`, щоб "
"визначити, чи файл змінився з часу останнього порівняння. Це можна "
"використати, наприклад, якщо файл міг бути змінений і повторно перевірений "
"за менший час, ніж роздільна здатність поля часу модифікації файлу певної "
"файлової системи. (Надав Марк Левітт у :issue:`18149`.)"

msgid ""
"New module attribute :data:`~filecmp.DEFAULT_IGNORES` provides the list of "
"directories that are used as the default value for the *ignore* parameter of "
"the :func:`~filecmp.dircmp` function.  (Contributed by Eli Bendersky in :"
"issue:`15442`.)"
msgstr ""
"Новий атрибут модуля :data:`~filecmp.DEFAULT_IGNORES` надає список "
"каталогів, які використовуються як значення за замовчуванням для параметра "
"*ignore* функції :func:`~filecmp.dircmp`. (Надав Елі Бендерський у :issue:"
"`15442`.)"

msgid "functools"
msgstr "functools"

msgid ""
"The new :func:`~functools.partialmethod` descriptor brings partial argument "
"application to descriptors, just as :func:`~functools.partial` provides for "
"normal callables. The new descriptor also makes it easier to get arbitrary "
"callables (including :func:`~functools.partial` instances) to behave like "
"normal instance methods when included in a class definition. (Contributed by "
"Alon Horev and Nick Coghlan in :issue:`4331`.)"
msgstr ""
"Новий дескриптор :func:`~functools.partialmethod` забезпечує часткове "
"застосування аргументів до дескрипторів, так само як :func:`~functools."
"partial` забезпечує звичайні виклики. Новий дескриптор також полегшує роботу "
"довільних викликів (включно з екземплярами :func:`~functools.partial`) як "
"звичайні методи екземплярів, якщо їх включити у визначення класу. (Надано "
"Алоном Хоревом і Ніком Когланом у :issue:`4331`.)"

msgid ""
"The new :func:`~functools.singledispatch` decorator brings support for "
"single-dispatch generic functions to the Python standard library. Where "
"object oriented programming focuses on grouping multiple operations on a "
"common set of data into a class, a generic function focuses on grouping "
"multiple implementations of an operation that allows it to work with "
"*different* kinds of data."
msgstr ""
"Новий декоратор :func:`~functools.singledispatch` забезпечує підтримку "
"загальних функцій з одноразовим відправленням у стандартну бібліотеку "
"Python. Якщо об’єктно-орієнтоване програмування зосереджено на групуванні "
"кількох операцій із загальним набором даних у клас, загальна функція "
"фокусується на групуванні кількох реалізацій операції, що дозволяє працювати "
"з *різними* типами даних."

msgid ":pep:`443` -- Single-dispatch generic functions"
msgstr ":pep:`443` -- Загальні функції з одним відправленням"

msgid "PEP written and implemented by Łukasz Langa."
msgstr "PEP написав і реалізував Лукаш Ланга."

msgid ""
":func:`~functools.total_ordering` now supports a return value of :const:"
"`NotImplemented` from the underlying comparison function.  (Contributed by "
"Katie Miller in :issue:`10042`.)"
msgstr ""
":func:`~functools.total_ordering` тепер підтримує повернення значення :const:"
"`NotImplemented` від основної функції порівняння. (Надано Кеті Міллер у :"
"issue:`10042`.)"

msgid ""
"A pure-python version of the :func:`~functools.partial` function is now in "
"the stdlib; in CPython it is overridden by the C accelerated version, but it "
"is available for other implementations to use.  (Contributed by Brian Thorne "
"in :issue:`12428`.)"
msgstr ""
"Чиста версія функції :func:`~functools.partial` на Python тепер знаходиться "
"в stdlib; у CPython він перевизначений прискореною версією C, але він "
"доступний для використання в інших реалізаціях. (Надав Браян Торн у :issue:"
"`12428`.)"

msgid "gc"
msgstr "gc"

msgid ""
"New function :func:`~gc.get_stats` returns a list of three per-generation "
"dictionaries containing the collections statistics since interpreter "
"startup. (Contributed by Antoine Pitrou in :issue:`16351`.)"
msgstr ""
"Нова функція :func:`~gc.get_stats` повертає список із трьох словників для "
"кожного покоління, що містить статистику колекцій з моменту запуску "
"інтерпретатора. (Надав Антуан Пітру в :issue:`16351`.)"

msgid "glob"
msgstr "глоб"

msgid ""
"A new function :func:`~glob.escape` provides a way to escape special "
"characters in a filename so that they do not become part of the globbing "
"expansion but are instead matched literally.  (Contributed by Serhiy "
"Storchaka in :issue:`8402`.)"
msgstr ""
"Нова функція :func:`~glob.escape` надає спосіб екранувати спеціальні символи "
"в назві файлу, щоб вони не ставали частиною розширення globbing, а натомість "
"зіставлялися буквально. (Надав Сергій Сторчака в :issue:`8402`.)"

msgid "hashlib"
msgstr "хешліб"

msgid ""
"A new :func:`hashlib.pbkdf2_hmac` function provides the `PKCS#5 password-"
"based key derivation function 2 <https://en.wikipedia.org/wiki/PBKDF2>`_.  "
"(Contributed by Christian Heimes in :issue:`18582`.)"
msgstr ""
"Нова функція :func:`hashlib.pbkdf2_hmac` забезпечує функцію виведення ключа "
"на основі пароля `PKCS#5 2 <https://en.wikipedia.org/wiki/PBKDF2>`_. (Надав "
"Крістіан Хеймс у :issue:`18582`.)"

msgid ""
"The :attr:`~hashlib.hash.name` attribute of :mod:`hashlib` hash objects is "
"now a formally supported interface.  It has always existed in CPython's :mod:"
"`hashlib` (although it did not return lower case names for all supported "
"hashes), but it was not a public interface and so some other Python "
"implementations have not previously supported it.  (Contributed by Jason R. "
"Coombs in :issue:`18532`.)"
msgstr ""
"Атрибут :attr:`~hashlib.hash.name` хеш-об’єктів :mod:`hashlib` тепер "
"офіційно підтримується інтерфейсом. Він завжди існував у :mod:`hashlib` "
"CPython (хоча він не повертав імена нижнього регістру для всіх підтримуваних "
"хешів), але він не був загальнодоступним інтерфейсом, тому деякі інші "
"реалізації Python раніше його не підтримували. (Надав Джейсон Р. Кумбс у :"
"issue:`18532`.)"

msgid "hmac"
msgstr "hmac"

msgid ""
":mod:`hmac` now accepts ``bytearray`` as well as ``bytes`` for the *key* "
"argument to the :func:`~hmac.new` function, and the *msg* parameter to both "
"the :func:`~hmac.new` function and the :meth:`~hmac.HMAC.update` method now "
"accepts any type supported by the :mod:`hashlib` module.  (Contributed by "
"Jonas Borgström in :issue:`18240`.)"
msgstr ""
":mod:`hmac` тепер приймає ``bytearray``, а також ``bytes`` для аргументу "
"*key* для функції :func:`~hmac.new` і параметр *msg* для обох: Функція :func:"
"`~hmac.new` і метод :meth:`~hmac.HMAC.update` тепер приймають будь-який тип, "
"який підтримується модулем :mod:`hashlib`. (Надав Йонас Борґстрем у :issue:"
"`18240`.)"

msgid ""
"The *digestmod* argument to the :func:`hmac.new` function may now be any "
"hash digest name recognized by :mod:`hashlib`.  In addition, the current "
"behavior in which the value of *digestmod* defaults to ``MD5`` is "
"deprecated: in a future version of Python there will be no default value.  "
"(Contributed by Christian Heimes in :issue:`17276`.)"
msgstr ""
"Аргументом *digestmod* для функції :func:`hmac.new` тепер може бути будь-яке "
"ім’я дайджесту хешу, яке розпізнає :mod:`hashlib`. Крім того, поточна "
"поведінка, у якій значенням *digestmod* за замовчуванням є ``MD5``, є "
"застарілою: у майбутній версії Python значення за замовчуванням не буде. "
"(Надав Крістіан Хеймс у :issue:`17276`.)"

msgid ""
"With the addition of :attr:`~hmac.HMAC.block_size` and :attr:`~hmac.HMAC."
"name` attributes (and the formal documentation of the :attr:`~hmac.HMAC."
"digest_size` attribute), the :mod:`hmac` module now conforms fully to the :"
"pep:`247` API. (Contributed by Christian Heimes in :issue:`18775`.)"
msgstr ""
"З додаванням атрибутів :attr:`~hmac.HMAC.block_size` і :attr:`~hmac.HMAC."
"name` (та офіційної документації атрибута :attr:`~hmac.HMAC.digest_size`), "
"Модуль :mod:`hmac` тепер повністю відповідає :pep:`247` API. (Надав Крістіан "
"Хеймс у :issue:`18775`.)"

msgid "html"
msgstr "html"

msgid ""
"New function :func:`~html.unescape` function converts HTML5 character "
"references to the corresponding Unicode characters.  (Contributed by Ezio "
"Melotti in :issue:`2927`.)"
msgstr ""
"Нова функція :func:`~html.unescape` перетворює посилання на символи HTML5 на "
"відповідні символи Unicode. (Надав Еціо Мелотті в :issue:`2927`.)"

msgid ""
":class:`~html.parser.HTMLParser` accepts a new keyword argument "
"*convert_charrefs* that, when ``True``, automatically converts all character "
"references.  For backward-compatibility, its value defaults to ``False``, "
"but it will change to ``True`` in a future version of Python, so you are "
"invited to set it explicitly and update your code to use this new feature.  "
"(Contributed by Ezio Melotti in :issue:`13633`.)"
msgstr ""
":class:`~html.parser.HTMLParser` приймає новий аргумент ключового слова "
"*convert_charrefs*, який, коли ``True``, автоматично перетворює всі "
"посилання на символи. Для зворотної сумісності його значення за "
"замовчуванням ``False``, але воно зміниться на ``True`` у майбутніх версіях "
"Python, тому вам пропонується встановити його явно та оновити свій код, щоб "
"використовувати цю нову функцію. (Надав Еціо Мелотті в :issue:`13633`.)"

msgid ""
"The *strict* argument of :class:`~html.parser.HTMLParser` is now deprecated. "
"(Contributed by Ezio Melotti in :issue:`15114`.)"
msgstr ""
"*Строгий* аргумент :class:`~html.parser.HTMLParser` тепер застарів. (Надав "
"Еціо Мелотті в :issue:`15114`.)"

msgid "http"
msgstr "http"

msgid ""
":meth:`~http.server.BaseHTTPRequestHandler.send_error` now accepts an "
"optional additional *explain* parameter which can be used to provide an "
"extended error description, overriding the hardcoded default if there is "
"one. This extended error description will be formatted using the :attr:"
"`~http.server.HTTP.error_message_format` attribute and sent as the body of "
"the error response.  (Contributed by Karl Cow in :issue:`12921`.)"
msgstr ""
":meth:`~http.server.BaseHTTPRequestHandler.send_error` тепер приймає "
"необов’язковий додатковий параметр *explain*, який можна використовувати для "
"надання розширеного опису помилки, замінюючи жорстко запрограмоване за "
"умовчанням, якщо воно є. Цей розширений опис помилки буде відформатовано за "
"допомогою атрибута :attr:`~http.server.HTTP.error_message_format` і "
"надіслано як тіло відповіді про помилку. (Надав Карл Коу в :issue:`12921`.)"

msgid ""
"The :mod:`http.server` :ref:`command line interface <http-server-cli>` now "
"has a ``-b/--bind`` option that causes the server to listen on a specific "
"address. (Contributed by Malte Swart in :issue:`17764`.)"
msgstr ""
":mod:`http.server` :ref:`інтерфейс командного рядка <http-server-cli>` тепер "
"має опцію ``-b/--bind``, яка змушує сервер слухати певну адресу. (Надав "
"Малте Сварт у :issue:`17764`.)"

msgid "idlelib and IDLE"
msgstr "idlelib і IDLE"

msgid ""
"Since idlelib implements the IDLE shell and editor and is not intended for "
"import by other programs, it gets improvements with every release. See :file:"
"`Lib/idlelib/NEWS.txt` for a cumulative list of changes since 3.3.0, as well "
"as changes made in future 3.4.x releases. This file is also available from "
"the IDLE :menuselection:`Help --> About IDLE` dialog."
msgstr ""
"Оскільки idlelib реалізує оболонку та редактор IDLE і не призначений для "
"імпорту іншими програмами, він отримує покращення з кожним випуском. "
"Дивіться :file:`Lib/idlelib/NEWS.txt` для сукупного списку змін, починаючи з "
"3.3.0, а також змін, внесених у майбутніх випусках 3.4.x. Цей файл також "
"доступний у діалоговому вікні IDLE :menuselection:`Довідка --> Про IDLE`."

msgid "importlib"
msgstr "importlib"

msgid ""
"The :class:`~importlib.abc.InspectLoader` ABC defines a new method, :meth:"
"`~importlib.abc.InspectLoader.source_to_code` that accepts source data and a "
"path and returns a code object.  The default implementation is equivalent to "
"``compile(data, path, 'exec', dont_inherit=True)``. (Contributed by Eric "
"Snow and Brett Cannon in :issue:`15627`.)"
msgstr ""
":class:`~importlib.abc.InspectLoader` ABC визначає новий метод, :meth:"
"`~importlib.abc.InspectLoader.source_to_code`, який приймає вихідні дані та "
"шлях і повертає об’єкт коду. Реалізація за замовчуванням еквівалентна "
"``compile(data, path, 'exec', dont_inherit=True)``. (Надано Еріком Сноу та "
"Бреттом Кенноном у :issue:`15627`.)"

msgid ""
":class:`~importlib.abc.InspectLoader` also now has a default implementation "
"for the :meth:`~importlib.abc.InspectLoader.get_code` method.  However, it "
"will normally be desirable to override the default implementation for "
"performance reasons.  (Contributed by Brett Cannon in :issue:`18072`.)"
msgstr ""
":class:`~importlib.abc.InspectLoader` також тепер має реалізацію за "
"замовчуванням для методу :meth:`~importlib.abc.InspectLoader.get_code`. "
"Однак, як правило, бажано замінити реалізацію за замовчуванням з міркувань "
"продуктивності. (Надано Бреттом Кенноном у :issue:`18072`.)"

msgid ""
"The :func:`~importlib.reload` function has been moved from :mod:`imp` to :"
"mod:`importlib` as part of the :mod:`imp` module deprecation.  (Contributed "
"by Berker Peksag in :issue:`18193`.)"
msgstr ""
"Функцію :func:`~importlib.reload` було переміщено з :mod:`imp` до :mod:"
"`importlib` як частину застарілого модуля :mod:`imp`. (Надано Berker Peksag "
"у :issue:`18193`.)"

msgid ""
":mod:`importlib.util` now has a :data:`~importlib.util.MAGIC_NUMBER` "
"attribute providing access to the bytecode version number.  This replaces "
"the :func:`~imp.get_magic` function in the deprecated :mod:`imp` module. "
"(Contributed by Brett Cannon in :issue:`18192`.)"
msgstr ""
":mod:`importlib.util` тепер має атрибут :data:`~importlib.util."
"MAGIC_NUMBER`, який надає доступ до номера версії байт-коду. Це замінює "
"функцію :func:`~imp.get_magic` у застарілому модулі :mod:`imp`. (Надано "
"Бреттом Кенноном у :issue:`18192`.)"

msgid ""
"New :mod:`importlib.util` functions :func:`~importlib.util."
"cache_from_source` and :func:`~importlib.util.source_from_cache` replace the "
"same-named functions in the deprecated :mod:`imp` module.  (Contributed by "
"Brett Cannon in :issue:`18194`.)"
msgstr ""
"Нові функції :mod:`importlib.util` :func:`~importlib.util.cache_from_source` "
"і :func:`~importlib.util.source_from_cache` замінюють однойменні функції в "
"застарілому модулі :mod:`imp`. (Надано Бреттом Кенноном у :issue:`18194`.)"

msgid ""
"The :mod:`importlib` bootstrap :class:`.NamespaceLoader` now conforms to "
"the :class:`.InspectLoader` ABC, which means that ``runpy`` and ``python -"
"m`` can now be used with namespace packages.  (Contributed by Brett Cannon "
"in :issue:`18058`.)"
msgstr ""
"Завантажувач :mod:`importlib` :class:`.NamespaceLoader` тепер відповідає :"
"class:`.InspectLoader` ABC, що означає, що ``runpy`` і ``python -m`` тепер "
"можна використовувати з простором імен пакети. (Надано Бреттом Кенноном у :"
"issue:`18058`.)"

msgid ""
":mod:`importlib.util` has a new function :func:`~importlib.util."
"decode_source` that decodes source from bytes using universal newline "
"processing.  This is useful for implementing :meth:`.InspectLoader."
"get_source` methods."
msgstr ""
":mod:`importlib.util` має нову функцію :func:`~importlib.util."
"decode_source`, яка декодує джерело з байтів за допомогою універсальної "
"обробки нового рядка. Це корисно для реалізації методів :meth:`."
"InspectLoader.get_source`."

msgid ""
":class:`importlib.machinery.ExtensionFileLoader` now has a :meth:`~importlib."
"machinery.ExtensionFileLoader.get_filename` method.  This was inadvertently "
"omitted in the original implementation.  (Contributed by Eric Snow in :issue:"
"`19152`.)"
msgstr ""
":class:`importlib.machinery.ExtensionFileLoader` тепер має метод :meth:"
"`~importlib.machinery.ExtensionFileLoader.get_filename`. Це було ненавмисно "
"пропущено в початковій реалізації. (Надав Ерік Сноу в :issue:`19152`.)"

msgid "inspect"
msgstr "оглядати"

msgid ""
"The :mod:`inspect` module now offers a basic :ref:`command line interface "
"<inspect-module-cli>` to quickly display source code and other information "
"for modules, classes and functions.  (Contributed by Claudiu Popa and Nick "
"Coghlan in :issue:`18626`.)"
msgstr ""
"Модуль :mod:`inspect` тепер пропонує базовий :ref:`інтерфейс командного "
"рядка <inspect-module-cli>` для швидкого відображення вихідного коду та "
"іншої інформації для модулів, класів і функцій. (Надано Клаудіу Попою та "
"Ніком Когланом у :issue:`18626`.)"

msgid ""
":func:`~inspect.unwrap` makes it easy to unravel wrapper function chains "
"created by :func:`functools.wraps` (and any other API that sets the "
"``__wrapped__`` attribute on a wrapper function).  (Contributed by Daniel "
"Urban, Aaron Iles and Nick Coghlan in :issue:`13266`.)"
msgstr ""
":func:`~inspect.unwrap` полегшує розгадування ланцюжків функцій оболонки, "
"створених :func:`functools.wraps` (та будь-яким іншим API, який встановлює "
"атрибут ``__wrapped__`` для функції оболонки). (Надано Деніелом Урбаном, "
"Аароном Айлзом і Ніком Когланом у :issue:`13266`.)"

msgid ""
"As part of the implementation of the new :mod:`enum` module, the :mod:"
"`inspect` module now has substantially better support for custom ``__dir__`` "
"methods and dynamic class attributes provided through metaclasses.  "
"(Contributed by Ethan Furman in :issue:`18929` and :issue:`19030`.)"
msgstr ""
"Як частина реалізації нового модуля :mod:`enum`, модуль :mod:`inspect` тепер "
"має значно кращу підтримку користувацьких методів ``__dir__`` і атрибутів "
"динамічного класу, що надаються через метакласи. (Надав Ітан Фурман у :issue:"
"`18929` і :issue:`19030`.)"

msgid ""
":func:`~inspect.getfullargspec` and :func:`~inspect.getargspec` now use the :"
"func:`~inspect.signature` API. This allows them to support a much broader "
"range of callables, including those with ``__signature__`` attributes, those "
"with metadata provided by argument clinic, :func:`functools.partial` objects "
"and more. Note that, unlike :func:`~inspect.signature`, these functions "
"still ignore ``__wrapped__`` attributes, and report the already bound first "
"argument for bound methods, so it is still necessary to update your code to "
"use :func:`~inspect.signature` directly if those features are desired. "
"(Contributed by Yury Selivanov in :issue:`17481`.)"
msgstr ""
":func:`~inspect.getfullargspec` і :func:`~inspect.getargspec` тепер "
"використовують API :func:`~inspect.signature`. Це дозволяє їм підтримувати "
"набагато ширший діапазон викликів, включаючи ті, що мають атрибути "
"``__signature__``, ті, що мають метадані, надані клінікою аргументів, "
"об’єкти :func:`functools.partial` тощо. Зауважте, що, на відміну від :func:"
"`~inspect.signature`, ці функції все ще ігнорують атрибути ``__wrapped__`` і "
"повідомляють про вже прив’язаний перший аргумент для прив’язаних методів, "
"тому все одно необхідно оновити свій код, щоб використовувати :func:"
"`~inspect.signature` безпосередньо, якщо ці функції потрібні. (Надав Юрій "
"Селіванов у :issue:`17481`.)"

msgid ""
":func:`~inspect.signature` now supports duck types of CPython functions, "
"which adds support for functions compiled with Cython.  (Contributed by "
"Stefan Behnel and Yury Selivanov in :issue:`17159`.)"
msgstr ""
":func:`~inspect.signature` тепер підтримує типи качок функцій CPython, що "
"додає підтримку функцій, скомпільованих за допомогою Cython. (Надано "
"Стефаном Бенелем і Юрієм Селівановим у :issue:`17159`.)"

msgid "ipaddress"
msgstr "IP-адреса"

msgid ""
":mod:`ipaddress` was added to the standard library in Python 3.3 as a :term:"
"`provisional API`. With the release of Python 3.4, this qualification has "
"been removed: :mod:`ipaddress` is now considered a stable API, covered by "
"the normal standard library requirements to maintain backwards compatibility."
msgstr ""
":mod:`ipaddress` було додано до стандартної бібліотеки в Python 3.3 як :term:"
"`provisional API`. З випуском Python 3.4 цю кваліфікацію було видалено: :mod:"
"`ipaddress` тепер вважається стабільним API, охопленим нормальними "
"стандартними вимогами бібліотеки для підтримки зворотної сумісності."

msgid ""
"A new :attr:`~ipaddress.IPv4Address.is_global` property is ``True`` if an "
"address is globally routeable.  (Contributed by Peter Moody in :issue:"
"`17400`.)"
msgstr ""
"Нова властивість :attr:`~ipaddress.IPv4Address.is_global` має значення "
"``True``, якщо адресу можна глобально маршрутизувати. (Надав Пітер Муді в :"
"issue:`17400`.)"

msgid "logging"
msgstr "лісозаготівля"

msgid ""
"The :class:`~logging.handlers.TimedRotatingFileHandler` has a new *atTime* "
"parameter that can be used to specify the time of day when rollover should "
"happen.  (Contributed by Ronald Oussoren in :issue:`9556`.)"
msgstr ""
":class:`~logging.handlers.TimedRotatingFileHandler` має новий параметр "
"*atTime*, за допомогою якого можна вказати час доби, коли має відбутися "
"ролловер. (Надав Рональд Оуссорен у :issue:`9556`.)"

msgid ""
":class:`~logging.handlers.SocketHandler` and :class:`~logging.handlers."
"DatagramHandler` now support Unix domain sockets (by setting *port* to "
"``None``).  (Contributed by Vinay Sajip in commit ce46195b56a9.)"
msgstr ""
":class:`~logging.handlers.SocketHandler` і :class:`~logging.handlers."
"DatagramHandler` тепер підтримують сокети домену Unix (встановивши *port* на "
"``None``). (Надано Вінаєм Саджипом у коміті ce46195b56a9.)"

msgid ""
":func:`~logging.config.fileConfig` now accepts a :class:`configparser."
"RawConfigParser` subclass instance for the *fname* parameter.  This "
"facilitates using a configuration file when logging configuration is just a "
"part of the overall application configuration, or where the application "
"modifies the configuration before passing it to :func:`~logging.config."
"fileConfig`.  (Contributed by Vinay Sajip in :issue:`16110`.)"
msgstr ""
":func:`~logging.config.fileConfig` тепер приймає екземпляр підкласу :class:"
"`configparser.RawConfigParser` для параметра *fname*. Це полегшує "
"використання файлу конфігурації, коли конфігурація журналювання є лише "
"частиною загальної конфігурації програми або коли програма змінює "
"конфігурацію перед передачею її в :func:`~logging.config.fileConfig`. (Надав "
"Віней Саджип у :issue:`16110`.)"

msgid ""
"Logging configuration data received from a socket via the :func:`logging."
"config.listen` function can now be validated before being processed by "
"supplying a verification function as the argument to the new *verify* "
"keyword argument.  (Contributed by Vinay Sajip in :issue:`15452`.)"
msgstr ""
"Дані конфігурації журналу, отримані з сокета через функцію :func:`logging."
"config.listen`, тепер можна перевірити перед обробкою, надаючи функцію "
"перевірки як аргумент для нового аргументу ключового слова *verify*. (Надав "
"Віней Саджип у :issue:`15452`.)"

msgid "marshal"
msgstr "маршал"

msgid ""
"The default :mod:`marshal` version has been bumped to 3.  The code "
"implementing the new version restores the Python2 behavior of recording only "
"one copy of interned strings and preserving the interning on "
"deserialization, and extends this \"one copy\" ability to any object type "
"(including handling recursive references).  This reduces both the size of ``."
"pyc`` files and the amount of memory a module occupies in memory when it is "
"loaded from a ``.pyc`` (or ``.pyo``) file.  (Contributed by Kristján Valur "
"Jónsson in :issue:`16475`, with additional speedups by Antoine Pitrou in :"
"issue:`19219`.)"
msgstr ""
"Версію :mod:`marshal` за замовчуванням було збільшено до 3. Код, що реалізує "
"нову версію, відновлює поведінку Python2 щодо запису лише однієї копії "
"інтернованих рядків і збереження інтернінгу під час десеріалізації, а також "
"розширює цю можливість \"однієї копії\" на будь-які тип об’єкта (включаючи "
"обробку рекурсивних посилань). Це зменшує як розмір файлів ``.pyc``, так і "
"обсяг пам’яті, який модуль займає в пам’яті, коли він завантажується з файлу "
"``.pyc`` (або ``.pyo``). (Надав Крістіан Валур Йонссон у :issue:`16475`, з "
"додатковими прискореннями Антуаном Пітру в :issue:`19219`.)"

msgid "mmap"
msgstr "mmap"

msgid ""
"mmap objects are now :ref:`weakly referenceable <mod-weakref>`. (Contributed "
"by Valerie Lambert in :issue:`4885`.)"
msgstr ""

msgid "multiprocessing"
msgstr "багатопроцесорність"

msgid ""
"On Unix two new :ref:`start methods <multiprocessing-start-methods>`, "
"``spawn`` and ``forkserver``, have been added for starting processes using :"
"mod:`multiprocessing`.  These make the mixing of processes with threads more "
"robust, and the ``spawn`` method matches the semantics that multiprocessing "
"has always used on Windows.  New function :func:`~multiprocessing."
"get_all_start_methods` reports all start methods available on the platform, :"
"func:`~multiprocessing.get_start_method` reports the current start method, "
"and :func:`~multiprocessing.set_start_method` sets the start method.  "
"(Contributed by Richard Oudkerk in :issue:`8713`.)"
msgstr ""
"В Unix два нові :ref:`методи запуску <multiprocessing-start-methods>`, "
"``spawn`` і ``forkserver``, були додані для запуску процесів за допомогою :"
"mod:`multiprocessing`. Це робить змішування процесів із потоками більш "
"надійним, а метод ``spawn`` відповідає семантиці, яку багатопроцесорність "
"завжди використовувала в Windows. Нова функція :func:`~multiprocessing."
"get_all_start_methods` повідомляє про всі методи запуску, доступні на "
"платформі, :func:`~multiprocessing.get_start_method` повідомляє поточний "
"метод запуску, а :func:`~multiprocessing.set_start_method` встановлює метод "
"запуску. (Надав Річард Оудкерк у :issue:`8713`.)"

msgid ""
":mod:`multiprocessing` also now has the concept of a ``context``, which "
"determines how child processes are created.  New function :func:"
"`~multiprocessing.get_context` returns a context that uses a specified start "
"method.  It has the same API as the :mod:`multiprocessing` module itself, so "
"you can use it to create :class:`~multiprocessing.pool.Pool`\\ s and other "
"objects that will operate within that context.  This allows a framework and "
"an application or different parts of the same application to use "
"multiprocessing without interfering with each other.  (Contributed by "
"Richard Oudkerk in :issue:`18999`.)"
msgstr ""
":mod:`multiprocessing` також тепер має концепцію ``контексту``, який "
"визначає, як створюються дочірні процеси. Нова функція :func:"
"`~multiprocessing.get_context` повертає контекст, який використовує вказаний "
"метод запуску. Він має той самий API, що й сам модуль :mod:"
"`multiprocessing`, тож ви можете використовувати його для створення :class:"
"`~multiprocessing.pool.Pool`\\ та інших об’єктів, які працюватимуть у цьому "
"контексті. Це дозволяє інфраструктурі та програмі або різним частинам однієї "
"програми використовувати багатопроцесорність, не заважаючи одна одній. "
"(Надав Річард Оудкерк у :issue:`18999`.)"

msgid ""
"Except when using the old *fork* start method, child processes no longer "
"inherit unneeded handles/file descriptors from their parents (part of :issue:"
"`8713`)."
msgstr ""
"За винятком використання старого методу запуску *fork*, дочірні процеси "
"більше не успадковують непотрібні дескриптори/дескриптори файлів від своїх "
"батьків (частина :issue:`8713`)."

msgid ""
":mod:`multiprocessing` now relies on :mod:`runpy` (which implements the ``-"
"m`` switch) to initialise ``__main__`` appropriately in child processes when "
"using the ``spawn`` or ``forkserver`` start methods. This resolves some edge "
"cases where combining multiprocessing, the ``-m`` command line switch, and "
"explicit relative imports could cause obscure failures in child processes.  "
"(Contributed by Nick Coghlan in :issue:`19946`.)"
msgstr ""
":mod:`multiprocessing` тепер покладається на :mod:`runpy` (який реалізує "
"перемикач ``-m``), щоб належним чином ініціалізувати ``__main__`` у дочірніх "
"процесах під час використання ``spawn`` або ``forkserver`` методи запуску. "
"Це вирішує деякі граничні випадки, коли поєднання багатопроцесорності, "
"перемикача командного рядка ``-m`` і явного відносного імпорту може "
"спричинити незрозумілі збої в дочірніх процесах. (Надав Нік Коглан у :issue:"
"`19946`.)"

msgid "operator"
msgstr "оператор"

msgid ""
"New function :func:`~operator.length_hint` provides an implementation of the "
"specification for how the :meth:`~object.__length_hint__` special method "
"should be used, as part of the :pep:`424` formal specification of this "
"language feature.  (Contributed by Armin Ronacher in :issue:`16148`.)"
msgstr ""
"Нова функція :func:`~operator.length_hint` забезпечує реалізацію "
"специфікації того, як слід використовувати спеціальний метод :meth:`~object."
"__length_hint__` як частину :pep:`424` формальної специфікації цієї мови "
"функція. (Надав Армін Роначер у :issue:`16148`.)"

msgid ""
"There is now a pure-python version of the :mod:`operator` module available "
"for reference and for use by alternate implementations of Python.  "
"(Contributed by Zachary Ware in :issue:`16694`.)"
msgstr ""
"Тепер існує чиста версія модуля :mod:`operator` на Python, доступна для "
"довідки та для використання в альтернативних реалізаціях Python. (Надано "
"Zachary Ware у :issue:`16694`.)"

msgid "os"
msgstr "ос"

msgid ""
"There are new functions to get and set the :ref:`inheritable flag "
"<fd_inheritance>` of a file descriptor (:func:`os.get_inheritable`, :func:"
"`os.set_inheritable`) or a Windows handle (:func:`os."
"get_handle_inheritable`, :func:`os.set_handle_inheritable`)."
msgstr ""
"Є нові функції для отримання та встановлення :ref:`inheritable flag "
"<fd_inheritance>` файлового дескриптора (:func:`os.get_inheritable`, :func:"
"`os.set_inheritable`) або маркера Windows (:func:`os ."
"get_handle_inheritable`, :func:`os.set_handle_inheritable`)."

msgid ""
"New function :func:`~os.cpu_count` reports the number of CPUs available on "
"the platform on which Python is running (or ``None`` if the count can't be "
"determined).  The :func:`multiprocessing.cpu_count` function is now "
"implemented in terms of this function).  (Contributed by Trent Nelson, "
"Yogesh Chaudhari, Victor Stinner, and Charles-François Natali in :issue:"
"`17914`.)"
msgstr ""
"Нова функція :func:`~os.cpu_count` повідомляє кількість ЦП, доступних на "
"платформі, на якій працює Python (або ``None``, якщо кількість не може бути "
"визначена). Функція :func:`multiprocessing.cpu_count` тепер реалізована в "
"термінах цієї функції). (Надано Трентом Нельсоном, Йогешем Чаудхарі, "
"Віктором Стіннером і Чарльзом-Франсуа Наталі в :issue:`17914`.)"

msgid ""
":func:`os.path.samestat` is now available on the Windows platform (and the :"
"func:`os.path.samefile` implementation is now shared between Unix and "
"Windows).  (Contributed by Brian Curtin in :issue:`11939`.)"
msgstr ""
":func:`os.path.samestat` тепер доступний на платформі Windows (і реалізація :"
"func:`os.path.samefile` тепер спільно використовується між Unix і Windows). "
"(Надав Браян Кертін у :issue:`11939`.)"

msgid ""
":func:`os.path.ismount` now recognizes volumes mounted below a drive root on "
"Windows.  (Contributed by Tim Golden in :issue:`9035`.)"
msgstr ""
":func:`os.path.ismount` тепер розпізнає томи, змонтовані нижче кореня диска "
"в Windows. (Надав Тім Голден у :issue:`9035`.)"

msgid ""
":func:`os.open` supports two new flags on platforms that provide them, :data:"
"`~os.O_PATH` (un-opened file descriptor), and :data:`~os.O_TMPFILE` (unnamed "
"temporary file; as of 3.4.0 release available only on Linux systems with a "
"kernel version of 3.11 or newer that have uapi headers).  (Contributed by "
"Christian Heimes in :issue:`18673` and Benjamin Peterson, respectively.)"
msgstr ""
":func:`os.open` підтримує два нові позначки на платформах, які їх надають, :"
"data:`~os.O_PATH` (дескриптор невідкритого файлу) і :data:`~os.O_TMPFILE` "
"(тимчасовий файл без назви; починаючи з випуску 3.4.0, доступного лише в "
"системах Linux із версією ядра 3.11 або новішою, які мають заголовки uapi). "
"(Надано Крістіаном Хеймсом у :issue:`18673` та Бенджаміном Петерсоном "
"відповідно.)"

msgid "pdb"
msgstr "pdb"

msgid ""
":mod:`pdb` has been enhanced to handle generators, :keyword:`yield`, and "
"``yield from`` in a more useful fashion.  This is especially helpful when "
"debugging :mod:`asyncio` based programs.  (Contributed by Andrew Svetlov and "
"Xavier de Gaye in :issue:`16596`.)"
msgstr ""
":mod:`pdb` було вдосконалено, щоб працювати з генераторами, :keyword:`yield` "
"і ``yield from`` більш корисним способом. Це особливо корисно під час "
"налагодження програм на основі :mod:`asyncio`. (Надано Ендрю Свєтловим і "
"Ксав’є де Гає в :issue:`16596`.)"

msgid ""
"The ``print`` command has been removed from :mod:`pdb`, restoring access to "
"the Python :func:`print` function from the pdb command line.  Python2's "
"``pdb`` did not have a ``print`` command; instead, entering ``print`` "
"executed the ``print`` statement.  In Python3 ``print`` was mistakenly made "
"an alias for the pdb :pdbcmd:`p` command.  ``p``, however, prints the "
"``repr`` of its argument, not the ``str`` like the Python2 ``print`` command "
"did.  Worse, the Python3 ``pdb print`` command shadowed the Python3 "
"``print`` function, making it inaccessible at the ``pdb`` prompt.  "
"(Contributed by Connor Osborn in :issue:`18764`.)"
msgstr ""
"Команду ``print`` видалено з :mod:`pdb`, відновивши доступ до функції :func:"
"`print` Python з командного рядка pdb. ``pdb`` Python2 не мав команди "
"``print``; натомість введення ``print`` виконувало оператор ``print``. У "
"Python3 ``print`` було помилково зроблено псевдонімом для команди pdb :"
"pdbcmd:`p`. Проте ``p`` друкує ``repr`` свого аргументу, а не ``str``, як це "
"робила команда ``print`` Python2. Гірше того, команда Python3 ``pdb print`` "
"затьмарювала функцію ``print`` Python3, роблячи її недоступною у підказці "
"``pdb``. (Надав Коннор Осборн у :issue:`18764`.)"

msgid "pickle"
msgstr "маринований огірок"

msgid ""
":mod:`pickle` now supports (but does not use by default) a new pickle "
"protocol, protocol 4.  This new protocol addresses a number of issues that "
"were present in previous protocols, such as the serialization of nested "
"classes, very large strings and containers, and classes whose :meth:"
"`__new__` method takes keyword-only arguments.  It also provides some "
"efficiency improvements."
msgstr ""
":mod:`pickle` тепер підтримує (але не використовує за замовчуванням) новий "
"протокол pickle, протокол 4. Цей новий протокол вирішує ряд проблем, які "
"були присутні в попередніх протоколах, таких як серіалізація вкладених "
"класів, дуже великі рядки і контейнери, і класи, чий метод :meth:`__new__` "
"приймає лише ключові аргументи. Це також забезпечує деякі покращення "
"ефективності."

msgid ":pep:`3154` -- Pickle protocol 4"
msgstr ":pep:`3154` -- Протокол Pickle 4"

msgid "PEP written by Antoine Pitrou and implemented by Alexandre Vassalotti."
msgstr "PEP, написаний Антуаном Пітру та реалізований Александром Вассалотті."

msgid "plistlib"
msgstr "plistlib"

msgid ""
":mod:`plistlib` now has an API that is similar to the standard pattern for "
"stdlib serialization protocols, with new :func:`~plistlib.load`, :func:"
"`~plistlib.dump`, :func:`~plistlib.loads`, and :func:`~plistlib.dumps` "
"functions.  (The older API is now deprecated.)  In addition to the already "
"supported XML plist format (:data:`~plistlib.FMT_XML`), it also now supports "
"the binary plist format (:data:`~plistlib.FMT_BINARY`).  (Contributed by "
"Ronald Oussoren and others in :issue:`14455`.)"
msgstr ""
":mod:`plistlib` тепер має API, подібний до стандартного шаблону для "
"протоколів серіалізації stdlib, з новими :func:`~plistlib.load`, :func:"
"`~plistlib.dump`, :func:`~plistlib функції .loads` і :func:`~plistlib."
"dumps`. (Старіший API тепер не підтримується.) На додаток до вже "
"підтримуваного формату XML plist (:data:`~plistlib.FMT_XML`), він також "
"підтримує двійковий формат plist (:data:`~plistlib.FMT_BINARY`). (Надано "
"Рональдом Оуссореном та іншими в :issue:`14455`.)"

msgid "poplib"
msgstr "попліб"

msgid ""
"Two new methods have been added to :mod:`poplib`: :meth:`~poplib.POP3.capa`, "
"which returns the list of capabilities advertised by the POP server, and :"
"meth:`~poplib.POP3.stls`, which switches a clear-text POP3 session into an "
"encrypted POP3 session if the POP server supports it.  (Contributed by "
"Lorenzo Catucci in :issue:`4473`.)"
msgstr ""
"До :mod:`poplib`: :meth:`~poplib.POP3.capa` додано два нові методи, які "
"повертають список можливостей, рекламованих сервером POP, і :meth:`~poplib."
"POP3.stls` , який перемикає сеанс POP3 із відкритим текстом на зашифрований "
"сеанс POP3, якщо сервер POP це підтримує. (Надав Лоренцо Катуччі в :issue:"
"`4473`.)"

msgid "pprint"
msgstr "pprint"

msgid ""
"The :mod:`pprint` module's :class:`~pprint.PrettyPrinter` class and its :"
"func:`~pprint.pformat`, and :func:`~pprint.pprint` functions have a new "
"option, *compact*, that controls how the output is formatted.  Currently "
"setting *compact* to ``True`` means that sequences will be printed with as "
"many sequence elements as will fit within *width* on each (indented) line. "
"(Contributed by Serhiy Storchaka in :issue:`19132`.)"
msgstr ""
"Клас :class:`~pprint.PrettyPrinter` модуля :mod:`pprint` і його функції :"
"func:`~pprint.pformat` і :func:`~pprint.pprint` мають новий параметр, "
"*compact*, який керує форматуванням виводу. Наразі встановлення *compact* на "
"``True`` означає, що послідовності будуть надруковані з такою кількістю "
"елементів послідовності, скільки вміщуватиметься в межах *ширини* на кожному "
"(з відступом) рядку. (Надав Сергій Сторчака в :issue:`19132`.)"

msgid ""
"Long strings are now wrapped using Python's normal line continuation "
"syntax.  (Contributed by Antoine Pitrou in :issue:`17150`.)"
msgstr ""
"Довгі рядки тепер обертаються за допомогою звичайного синтаксису продовження "
"рядка Python. (Надав Антуан Пітру в :issue:`17150`.)"

msgid "pty"
msgstr "pty"

msgid ""
":func:`pty.spawn` now returns the status value from :func:`os.waitpid` on "
"the child process, instead of ``None``.  (Contributed by Gregory P. Smith.)"
msgstr ""
":func:`pty.spawn` тепер повертає значення стану з :func:`os.waitpid` "
"дочірнього процесу замість ``None``. (Надав Грегорі П. Сміт.)"

msgid "pydoc"
msgstr "pydoc"

msgid ""
"The :mod:`pydoc` module is now based directly on the :func:`inspect."
"signature` introspection API, allowing it to provide signature information "
"for a wider variety of callable objects. This change also means that "
"``__wrapped__`` attributes are now taken into account when displaying help "
"information. (Contributed by Larry Hastings in :issue:`19674`.)"
msgstr ""
"Модуль :mod:`pydoc` тепер базується безпосередньо на API інтроспекції :func:"
"`inspect.signature`, що дозволяє йому надавати інформацію про підпис для "
"більшої кількості викликаних об’єктів. Ця зміна також означає, що атрибути "
"``__wrapped__`` тепер враховуються під час відображення довідкової "
"інформації. (Надано Ларрі Гастінгсом у :issue:`19674`.)"

msgid ""
"The :mod:`pydoc` module no longer displays the ``self`` parameter for "
"already bound methods. Instead, it aims to always display the exact current "
"signature of the supplied callable.  (Contributed by Larry Hastings in :"
"issue:`20710`.)"
msgstr ""
"Модуль :mod:`pydoc` більше не відображає параметр ``self`` для вже зв’язаних "
"методів. Замість цього він прагне завжди відображати точний поточний підпис "
"наданого виклику. (Надано Ларрі Гастінгсом у :issue:`20710`.)"

msgid ""
"In addition to the changes that have been made to :mod:`pydoc` directly, its "
"handling of custom ``__dir__`` methods and various descriptor behaviours has "
"also been improved substantially by the underlying changes in the :mod:"
"`inspect` module."
msgstr ""
"На додаток до змін, внесених безпосередньо до :mod:`pydoc`, його обробка "
"користувацьких методів ``__dir__`` і різноманітна поведінка дескрипторів "
"також була суттєво покращена завдяки базовим змінам у модулі :mod:`inspect` ."

msgid ""
"As the :func:`help` builtin is based on :mod:`pydoc`, the above changes also "
"affect the behaviour of :func:`help`."
msgstr ""
"Оскільки вбудований :func:`help` базується на :mod:`pydoc`, наведені вище "
"зміни також впливають на поведінку :func:`help`."

msgid "re"
msgstr "повторно"

msgid ""
"New :func:`~re.fullmatch` function and :meth:`.regex.fullmatch` method "
"anchor the pattern at both ends of the string to match.  This provides a way "
"to be explicit about the goal of the match, which avoids a class of subtle "
"bugs where ``$`` characters get lost during code changes or the addition of "
"alternatives to an existing regular expression.  (Contributed by Matthew "
"Barnett in :issue:`16203`.)"
msgstr ""
"Нова функція :func:`~re.fullmatch` і метод :meth:`.regex.fullmatch` "
"закріплюють шаблон на обох кінцях рядка для відповідності. Це дає можливість "
"чітко вказати мету збігу, що дозволяє уникнути класу непомітних помилок, "
"через які символи ``$`` губляться під час змін коду або додавання "
"альтернатив до існуючого регулярного виразу. (Надав Метью Барнетт у :issue:"
"`16203`.)"

msgid ""
"The repr of :ref:`regex objects <re-objects>` now includes the pattern and "
"the flags; the repr of :ref:`match objects <match-objects>` now includes the "
"start, end, and the part of the string that matched.  (Contributed by Hugo "
"Lopes Tavares and Serhiy Storchaka in :issue:`13592` and :issue:`17087`.)"
msgstr ""
"Repr :ref:`regex об’єктів <re-objects>` тепер включає шаблон і прапори; "
"repr :ref:`match objects <match-objects>` тепер включає початок, кінець і "
"частину рядка, що збігається. (Надано Уго Лопесом Таваресом і Сергієм "
"Сторчакою в :issue:`13592` і :issue:`17087`.)"

msgid "resource"
msgstr "ресурс"

msgid ""
"New :func:`~resource.prlimit` function, available on Linux platforms with a "
"kernel version of 2.6.36 or later and glibc of 2.13 or later, provides the "
"ability to query or set the resource limits for processes other than the one "
"making the call.  (Contributed by Christian Heimes in :issue:`16595`.)"
msgstr ""
"Нова функція :func:`~resource.prlimit`, доступна на платформах Linux із "
"версією ядра 2.6.36 або новішою та glibc 2.13 або новішою, надає можливість "
"запитувати або встановлювати обмеження ресурсів для процесів, відмінних від "
"того, що створює виклик. (Надав Крістіан Хеймс у :issue:`16595`.)"

msgid ""
"On Linux kernel version 2.6.36 or later, there are also some new Linux "
"specific constants: :attr:`~resource.RLIMIT_MSGQUEUE`, :attr:`~resource."
"RLIMIT_NICE`, :attr:`~resource.RLIMIT_RTPRIO`, :attr:`~resource."
"RLIMIT_RTTIME`, and :attr:`~resource.RLIMIT_SIGPENDING`. (Contributed by "
"Christian Heimes in :issue:`19324`.)"
msgstr ""
"У ядрі Linux версії 2.6.36 або пізнішої також є деякі нові специфічні "
"константи Linux: :attr:`~resource.RLIMIT_MSGQUEUE`, :attr:`~resource."
"RLIMIT_NICE`, :attr:`~resource.RLIMIT_RTPRIO`,  :attr:`~resource."
"RLIMIT_RTTIME` і :attr:`~resource.RLIMIT_SIGPENDING`. (Надав Крістіан Хеймс "
"у :issue:`19324`.)"

msgid ""
"On FreeBSD version 9 and later, there some new FreeBSD specific constants: :"
"attr:`~resource.RLIMIT_SBSIZE`, :attr:`~resource.RLIMIT_SWAP`, and :attr:"
"`~resource.RLIMIT_NPTS`.  (Contributed by Claudiu Popa in :issue:`19343`.)"
msgstr ""
"У FreeBSD версії 9 і пізніших є деякі нові специфічні константи FreeBSD: :"
"attr:`~resource.RLIMIT_SBSIZE`, :attr:`~resource.RLIMIT_SWAP` і :attr:"
"`~resource.RLIMIT_NPTS`. (Надав Клаудіу Попа в :issue:`19343`.)"

msgid "select"
msgstr "вибрати"

msgid ""
":class:`~select.epoll` objects now support the context management protocol. "
"When used in a :keyword:`with` statement, the :meth:`~select.epoll.close` "
"method will be called automatically at the end of the block.  (Contributed "
"by Serhiy Storchaka in :issue:`16488`.)"
msgstr ""
"Об’єкти :class:`~select.epoll` тепер підтримують протокол керування "
"контекстом. При використанні в операторі :keyword:`with` метод :meth:"
"`~select.epoll.close` буде викликано автоматично в кінці блоку. (Надав "
"Сергій Сторчака в :issue:`16488`.)"

msgid ""
":class:`~select.devpoll` objects now have :meth:`~select.devpoll.fileno` "
"and :meth:`~select.devpoll.close` methods, as well as a new attribute :attr:"
"`~select.devpoll.closed`.  (Contributed by Victor Stinner in :issue:`18794`.)"
msgstr ""
"Об’єкти :class:`~select.devpoll` тепер мають методи :meth:`~select.devpoll."
"fileno` і :meth:`~select.devpoll.close`, а також новий атрибут :attr:"
"`~select. devpoll.closed`. (Надав Віктор Стіннер у :issue:`18794`.)"

msgid "shelve"
msgstr "полиця"

msgid ""
":class:`~shelve.Shelf` instances may now be used in :keyword:`with` "
"statements, and will be automatically closed at the end of the :keyword:`!"
"with` block. (Contributed by Filip Gruszczyński in :issue:`13896`.)"
msgstr ""
"Екземпляри :class:`~shelve.Shelf` тепер можна використовувати в операторах :"
"keyword:`with` і автоматично закриватимуться в кінці блоку :keyword:`!with`. "
"(Надав Філіп Грущинський у :issue:`13896`.)"

msgid "shutil"
msgstr "шутил"

msgid ""
":func:`~shutil.copyfile` now raises a specific :exc:`~shutil.Error` "
"subclass, :exc:`~shutil.SameFileError`, when the source and destination are "
"the same file, which allows an application to take appropriate action on "
"this specific error.  (Contributed by Atsuo Ishimoto and Hynek Schlawack in :"
"issue:`1492704`.)"
msgstr ""
":func:`~shutil.copyfile` тепер створює певний підклас :exc:`~shutil.Error`, :"
"exc:`~shutil.SameFileError`, коли джерело та місце призначення є тим самим "
"файлом, що дозволяє програмі приймати відповідні дії щодо цієї конкретної "
"помилки. (Надано Atsuo Ishimoto та Hynek Schlawack у :issue:`1492704`.)"

msgid "smtpd"
msgstr "smtpd"

msgid ""
"The :class:`~smtpd.SMTPServer` and :class:`~smtpd.SMTPChannel` classes now "
"accept a *map* keyword argument which, if specified, is passed in to :class:"
"`asynchat.async_chat` as its *map* argument.  This allows an application to "
"avoid affecting the global socket map.  (Contributed by Vinay Sajip in :"
"issue:`11959`.)"
msgstr ""
"Класи :class:`~smtpd.SMTPServer` і :class:`~smtpd.SMTPChannel` тепер "
"приймають аргумент ключового слова *map*, який, якщо вказано, передається в :"
"class:`asynchat.async_chat` як його *map* аргумент. Це дозволяє програмі "
"уникнути впливу на глобальну карту сокетів. (Надав Віней Саджип у :issue:"
"`11959`.)"

msgid "smtplib"
msgstr "smtplib"

msgid ""
":exc:`~smtplib.SMTPException` is now a subclass of :exc:`OSError`, which "
"allows both socket level errors and SMTP protocol level errors to be caught "
"in one try/except statement by code that only cares whether or not an error "
"occurred. (Contributed by Ned Jackson Lovely in :issue:`2118`.)"
msgstr ""
":exc:`~smtplib.SMTPException` тепер є підкласом :exc:`OSError`, який "
"дозволяє перехоплювати помилки рівня сокета та протоколу SMTP одним "
"оператором try/except за допомогою коду, який дбає лише про те, чи сталася "
"помилка. (Надав Нед Джексон Лавлі в :issue:`2118`.)"

msgid "socket"
msgstr "гніздо"

msgid ""
"The socket module now supports the :data:`~socket.CAN_BCM` protocol on "
"platforms that support it.  (Contributed by Brian Thorne in :issue:`15359`.)"
msgstr ""
"Модуль сокета тепер підтримує протокол :data:`~socket.CAN_BCM` на "
"платформах, які його підтримують. (Надав Браян Торн у :issue:`15359`.)"

msgid ""
"Socket objects have new methods to get or set their :ref:`inheritable flag "
"<fd_inheritance>`, :meth:`~socket.socket.get_inheritable` and :meth:`~socket."
"socket.set_inheritable`."
msgstr ""
"Об’єкти Socket мають нові методи отримання або встановлення свого :ref:"
"`inheritable flag <fd_inheritance>`, :meth:`~socket.socket.get_inheritable` "
"та :meth:`~socket.socket.set_inheritable`."

msgid ""
"The ``socket.AF_*`` and ``socket.SOCK_*`` constants are now enumeration "
"values using the new :mod:`enum` module.  This allows meaningful names to be "
"printed during debugging, instead of integer \"magic numbers\"."
msgstr ""
"Константи ``socket.AF_*`` і ``socket.SOCK_*`` тепер є значеннями "
"перерахування за допомогою нового модуля :mod:`enum`. Це дозволяє друкувати "
"осмислені імена під час налагодження замість цілих \"магічних чисел\"."

msgid "The :data:`~socket.AF_LINK` constant is now available on BSD and OSX."
msgstr "Константа :data:`~socket.AF_LINK` тепер доступна в BSD і OSX."

msgid ""
":func:`~socket.inet_pton` and :func:`~socket.inet_ntop` are now supported on "
"Windows.  (Contributed by Atsuo Ishimoto in :issue:`7171`.)"
msgstr ""
":func:`~socket.inet_pton` і :func:`~socket.inet_ntop` тепер підтримуються в "
"Windows. (Надав Ацуо Ісімото в :issue:`7171`.)"

msgid "sqlite3"
msgstr "sqlite3"

msgid ""
"A new boolean parameter to the :func:`~sqlite3.connect` function, *uri*, can "
"be used to indicate that the *database* parameter is a ``uri`` (see the "
"`SQLite URI documentation <https://www.sqlite.org/uri.html>`_).  "
"(Contributed by poq in :issue:`13773`.)"
msgstr ""
"Новий логічний параметр функції :func:`~sqlite3.connect`, *uri*, можна "
"використовувати, щоб вказати, що параметр *database* є ``uri`` (див. "
"`документацію SQLite URI <https://www.sqlite.org/uri.html>`_) . (Надано poq "
"у :issue:`13773`.)"

msgid "ssl"
msgstr "ssl"

msgid ""
":data:`~ssl.PROTOCOL_TLSv1_1` and :data:`~ssl.PROTOCOL_TLSv1_2` (TLSv1.1 and "
"TLSv1.2 support) have been added; support for these protocols is only "
"available if Python is linked with OpenSSL 1.0.1 or later.  (Contributed by "
"Michele Orrù and Antoine Pitrou in :issue:`16692`.)"
msgstr ""
"Додано :data:`~ssl.PROTOCOL_TLSv1_1` і :data:`~ssl.PROTOCOL_TLSv1_2` "
"(підтримка TLSv1.1 і TLSv1.2); підтримка цих протоколів доступна, лише якщо "
"Python пов’язано з OpenSSL 1.0.1 або новішої версії. (Надано Мікеле Орру та "
"Антуаном Пітру в :issue:`16692`.)"

msgid ""
"New function :func:`~ssl.create_default_context` provides a standard way to "
"obtain an :class:`~ssl.SSLContext` whose settings are intended to be a "
"reasonable balance between compatibility and security.  These settings are "
"more stringent than the defaults provided by the :class:`~ssl.SSLContext` "
"constructor, and may be adjusted in the future, without prior deprecation, "
"if best-practice security requirements change.  The new recommended best "
"practice for using stdlib libraries that support SSL is to use :func:`~ssl."
"create_default_context` to obtain an :class:`~ssl.SSLContext` object, modify "
"it if needed, and then pass it as the *context* argument of the appropriate "
"stdlib API.  (Contributed by Christian Heimes in :issue:`19689`.)"
msgstr ""
"Нова функція :func:`~ssl.create_default_context` надає стандартний спосіб "
"отримати :class:`~ssl.SSLContext`, налаштування якого створюють розумний "
"баланс між сумісністю та безпекою. Ці параметри суворіші, ніж стандартні, "
"надані конструктором :class:`~ssl.SSLContext`, і можуть бути скориговані в "
"майбутньому без попереднього припинення підтримки, якщо зміняться найкращі "
"вимоги безпеки. Нова рекомендована найкраща практика використання бібліотек "
"stdlib, які підтримують SSL, полягає в тому, щоб використовувати :func:`~ssl."
"create_default_context` для отримання об’єкта :class:`~ssl.SSLContext`, "
"змінювати його за потреби, а потім передавати як *аргумент context* "
"відповідного API stdlib. (Надав Крістіан Хаймес у :issue:`19689`.)"

msgid ""
":class:`~ssl.SSLContext` method :meth:`~ssl.SSLContext."
"load_verify_locations` accepts a new optional argument *cadata*, which can "
"be used to provide PEM or DER encoded certificates directly via strings or "
"bytes, respectively. (Contributed by Christian Heimes in :issue:`18138`.)"
msgstr ""
":class:`~ssl.SSLContext` метод :meth:`~ssl.SSLContext.load_verify_locations` "
"приймає новий необов’язковий аргумент *cadata*, який можна використовувати "
"для надання сертифікатів у кодуванні PEM або DER безпосередньо через рядки "
"або байти відповідно. (Надав Крістіан Хеймс у :issue:`18138`.)"

msgid ""
"New function :func:`~ssl.get_default_verify_paths` returns a named tuple of "
"the paths and environment variables that the :meth:`~ssl.SSLContext."
"set_default_verify_paths` method uses to set OpenSSL's default ``cafile`` "
"and ``capath``.  This can be an aid in debugging default verification "
"issues.  (Contributed by Christian Heimes in :issue:`18143`.)"
msgstr ""
"Нова функція :func:`~ssl.get_default_verify_paths` повертає іменований "
"кортеж шляхів і змінних середовища, які метод :meth:`~ssl.SSLContext."
"set_default_verify_paths` використовує для встановлення стандартних OpenSSL "
"``cafile`` і ``capath``. Це може допомогти у вирішенні проблем перевірки за "
"замовчуванням. (Надав Крістіан Хеймс у :issue:`18143`.)"

msgid ""
":class:`~ssl.SSLContext` has a new method, :meth:`~ssl.SSLContext."
"cert_store_stats`, that reports the number of loaded ``X.509`` certs, "
"``X.509 CA`` certs, and certificate revocation lists (``crl``\\ s), as well "
"as a :meth:`~ssl.SSLContext.get_ca_certs` method that returns a list of the "
"loaded ``CA`` certificates.  (Contributed by Christian Heimes in :issue:"
"`18147`.)"
msgstr ""
":class:`~ssl.SSLContext` має новий метод, :meth:`~ssl.SSLContext."
"cert_store_stats`, який повідомляє кількість завантажених сертифікатів "
"``X.509``, ``X.509 CA`` сертифікатів і списки відкликаних сертифікатів "
"(``crl``\\ s), а також метод :meth:`~ssl.SSLContext.get_ca_certs`, який "
"повертає список завантажених сертифікатів ``CA``. (Надав Крістіан Хеймс у :"
"issue:`18147`.)"

msgid ""
"If OpenSSL 0.9.8 or later is available, :class:`~ssl.SSLContext` has a new "
"attribute :attr:`~ssl.SSLContext.verify_flags` that can be used to control "
"the certificate verification process by setting it to some combination of "
"the new constants :data:`~ssl.VERIFY_DEFAULT`, :data:`~ssl."
"VERIFY_CRL_CHECK_LEAF`, :data:`~ssl.VERIFY_CRL_CHECK_CHAIN`, or :data:`~ssl."
"VERIFY_X509_STRICT`. OpenSSL does not do any CRL verification by default.  "
"(Contributed by Christien Heimes in :issue:`8813`.)"
msgstr ""
"Якщо доступний OpenSSL 0.9.8 або новішої версії, :class:`~ssl.SSLContext` "
"має новий атрибут :attr:`~ssl.SSLContext.verify_flags`, який можна "
"використовувати для керування процесом перевірки сертифіката, установивши "
"для нього певну комбінацію нових констант :data:`~ssl.VERIFY_DEFAULT`, :data:"
"`~ssl.VERIFY_CRL_CHECK_LEAF`, :data:`~ssl.VERIFY_CRL_CHECK_CHAIN` або :data:"
"`~ssl.VERIFY_X509_STRICT`. За замовчуванням OpenSSL не перевіряє CRL. "
"(Надано Christien Heimes у :issue:`8813`.)"

msgid ""
"New :class:`~ssl.SSLContext` method :meth:`~ssl.SSLContext."
"load_default_certs` loads a set of default \"certificate authority\" (CA) "
"certificates from default locations, which vary according to the platform.  "
"It can be used to load both TLS web server authentication certificates "
"(``purpose=``:data:`~ssl.Purpose.SERVER_AUTH`) for a client to use to verify "
"a server, and certificates for a server to use in verifying client "
"certificates (``purpose=``:data:`~ssl.Purpose.CLIENT_AUTH`).  (Contributed "
"by Christian Heimes in :issue:`19292`.)"
msgstr ""
"Новий метод :class:`~ssl.SSLContext` :meth:`~ssl.SSLContext."
"load_default_certs` завантажує набір стандартних сертифікатів \"центру "
"сертифікації\" (CA) із стандартних розташувань, які відрізняються залежно "
"від платформи. Його можна використовувати для завантаження як сертифікатів "
"автентифікації веб-сервера TLS (``purpose=``:data:`~ssl.Purpose."
"SERVER_AUTH`), які клієнт використовує для перевірки сервера, так і "
"сертифікатів для сервера, які використовують для перевірки клієнтські "
"сертифікати (``purpose=``:data:`~ssl.Purpose.CLIENT_AUTH`). (Надав Крістіан "
"Хаймес у :issue:`19292`.)"

msgid ""
"Two new windows-only functions, :func:`~ssl.enum_certificates` and :func:"
"`~ssl.enum_crls` provide the ability to retrieve certificates, certificate "
"information, and CRLs from the Windows cert store.  (Contributed by "
"Christian Heimes in :issue:`17134`.)"
msgstr ""
"Дві нові функції лише для Windows, :func:`~ssl.enum_certificates` і :func:"
"`~ssl.enum_crls` надають можливість отримувати сертифікати, інформацію про "
"сертифікати та CRL зі сховища сертифікатів Windows. (Надав Крістіан Хеймс у :"
"issue:`17134`.)"

msgid ""
"Support for server-side SNI (Server Name Indication) using the new :meth:"
"`ssl.SSLContext.set_servername_callback` method. (Contributed by Daniel "
"Black in :issue:`8109`.)"
msgstr ""
"Підтримка SNI на стороні сервера (Індикація імені сервера) за допомогою "
"нового методу :meth:`ssl.SSSLContext.set_servername_callback`. (Надав Деніел "
"Блек у :issue:`8109`.)"

msgid ""
"The dictionary returned by :meth:`.SSLSocket.getpeercert` contains "
"additional ``X509v3`` extension items: ``crlDistributionPoints``, "
"``calIssuers``, and ``OCSP`` URIs.  (Contributed by Christian Heimes in :"
"issue:`18379`.)"
msgstr ""
"Словник, який повертає :meth:`.SSLSocket.getpeercert`, містить додаткові "
"елементи розширення ``X509v3``: ``crlDistributionPoints``, ``calIssuers`` і "
"``OCSP`` URI. (Надав Крістіан Хеймс у :issue:`18379`.)"

msgid "stat"
msgstr "стат"

msgid ""
"The :mod:`stat` module is now backed by a C implementation in :mod:`_stat`. "
"A C implementation is required as most of the values aren't standardized and "
"are platform-dependent.  (Contributed by Christian Heimes in :issue:`11016`.)"
msgstr ""
"Модуль :mod:`stat` тепер підтримується реалізацією C у :mod:`_stat`. "
"Потрібна реалізація C, оскільки більшість значень не стандартизовані та "
"залежать від платформи. (Надав Крістіан Хеймс у :issue:`11016`.)"

msgid ""
"The module supports new :mod:`~stat.ST_MODE` flags, :mod:`~stat.S_IFDOOR`, :"
"attr:`~stat.S_IFPORT`, and :attr:`~stat.S_IFWHT`.  (Contributed by Christian "
"Hiemes in :issue:`11016`.)"
msgstr ""
"Модуль підтримує нові прапорці :mod:`~stat.ST_MODE`, :mod:`~stat.S_IFDOOR`, :"
"attr:`~stat.S_IFPORT` і :attr:`~stat.S_IFWHT`. (Надав Крістіан Гімес у :"
"issue:`11016`.)"

msgid "struct"
msgstr "структура"

msgid ""
"New function :mod:`~struct.iter_unpack` and a new :meth:`struct.Struct."
"iter_unpack` method on compiled formats provide streamed unpacking of a "
"buffer containing repeated instances of a given format of data. (Contributed "
"by Antoine Pitrou in :issue:`17804`.)"
msgstr ""
"Нова функція :mod:`~struct.iter_unpack` і новий метод :meth:`struct.Struct."
"iter_unpack` для скомпільованих форматів забезпечують потокове розпакування "
"буфера, що містить повторювані екземпляри даного формату даних. (Надав "
"Антуан Пітру в :issue:`17804`.)"

msgid "subprocess"
msgstr "підпроцес"

msgid ""
":func:`~subprocess.check_output` now accepts an *input* argument that can be "
"used to provide the contents of ``stdin`` for the command that is run. "
"(Contributed by Zack Weinberg in :issue:`16624`.)"
msgstr ""
":func:`~subprocess.check_output` тепер приймає аргумент *input*, який можна "
"використовувати для надання вмісту ``stdin`` для команди, яка виконується. "
"(Надав Зак Вайнберг у :issue:`16624`.)"

msgid ""
":func:`~subprocess.getstatus` and :func:`~subprocess.getstatusoutput` now "
"work on Windows.  This change was actually inadvertently made in 3.3.4. "
"(Contributed by Tim Golden in :issue:`10197`.)"
msgstr ""
":func:`~subprocess.getstatus` і :func:`~subprocess.getstatusoutput` тепер "
"працюють у Windows. Ця зміна фактично була зроблена ненавмисно в 3.3.4. "
"(Надав Тім Голден у :issue:`10197`.)"

msgid "sunau"
msgstr "sunau"

msgid ""
"The :meth:`~sunau.getparams` method now returns a namedtuple rather than a "
"plain tuple.  (Contributed by Claudiu Popa in :issue:`18901`.)"
msgstr ""
"Метод :meth:`~sunau.getparams` тепер повертає іменований кортеж, а не "
"звичайний кортеж. (Надав Клаудіу Попа в :issue:`18901`.)"

msgid ""
":meth:`sunau.open` now supports the context management protocol: when used "
"in a :keyword:`with` block, the ``close`` method of the returned object will "
"be called automatically at the end of the block.  (Contributed by Serhiy "
"Storchaka in :issue:`18878`.)"
msgstr ""
":meth:`sunau.open` тепер підтримує протокол керування контекстом: при "
"використанні в блоці :keyword:`with` метод ``close`` повернутого об'єкта "
"буде автоматично викликаний у кінці блоку. (Надав Сергій Сторчака в :issue:"
"`18878`.)"

msgid ""
":meth:`.AU_write.setsampwidth` now supports 24 bit samples, thus adding "
"support for writing 24 sample using the module.  (Contributed by Serhiy "
"Storchaka in :issue:`19261`.)"
msgstr ""
":meth:`.AU_write.setsampwidth` тепер підтримує 24-бітові зразки, таким чином "
"додаючи підтримку запису 24-х зразків за допомогою модуля. (Надав Сергій "
"Сторчака в :issue:`19261`.)"

msgid ""
"The :meth:`~sunau.AU_write.writeframesraw` and :meth:`~sunau.AU_write."
"writeframes` methods now accept any :term:`bytes-like object`.  (Contributed "
"by Serhiy Storchaka in :issue:`8311`.)"
msgstr ""
"Методи :meth:`~sunau.AU_write.writeframesraw` і :meth:`~sunau.AU_write."
"writeframes` тепер приймають будь-які :term:`bytes-like object`. (Надав "
"Сергій Сторчака в :issue:`8311`.)"

msgid "sys"
msgstr "система"

msgid ""
"New function :func:`sys.getallocatedblocks` returns the current number of "
"blocks allocated by the interpreter.  (In CPython with the default ``--with-"
"pymalloc`` setting, this is allocations made through the :c:func:"
"`PyObject_Malloc` API.)  This can be useful for tracking memory leaks, "
"especially if automated via a test suite.  (Contributed by Antoine Pitrou "
"in :issue:`13390`.)"
msgstr ""
"Нова функція :func:`sys.getallocatedblocks` повертає поточну кількість "
"блоків, виділених інтерпретатором. (У CPython із параметром за замовчуванням "
"``--with-pymalloc`` це виділення, зроблене через :c:func:`PyObject_Malloc` "
"API.) Це може бути корисним для відстеження витоків пам’яті, особливо якщо "
"це автоматизовано за допомогою набору тестів. . (Надав Антуан Пітру в :issue:"
"`13390`.)"

msgid ""
"When the Python interpreter starts in :ref:`interactive mode <tut-"
"interactive>`, it checks for an :data:`~sys.__interactivehook__` attribute "
"on the :mod:`sys` module.  If the attribute exists, its value is called with "
"no arguments just before interactive mode is started.  The check is made "
"after the :envvar:`PYTHONSTARTUP` file is read, so it can be set there.  "
"The :mod:`site` module :ref:`sets it <rlcompleter-config>` to a function "
"that enables tab completion and history saving (in :file:`~/.python-"
"history`) if the platform supports :mod:`readline`.  If you do not want this "
"(new) behavior, you can override it in :envvar:`PYTHONSTARTUP`, :mod:"
"`sitecustomize`, or :mod:`usercustomize` by deleting this attribute from :"
"mod:`sys` (or setting it to some other callable).  (Contributed by Éric "
"Araujo and Antoine Pitrou in :issue:`5845`.)"
msgstr ""
"Коли інтерпретатор Python запускається в :ref:`інтерактивному режимі <tut-"
"interactive>`, він перевіряє наявність атрибута :data:`~sys."
"__interactivehook__` в модулі :mod:`sys`. Якщо атрибут існує, його значення "
"викликається без аргументів безпосередньо перед запуском інтерактивного "
"режиму. Перевірка виконується після прочитання файлу :envvar:"
"`PYTHONSTARTUP`, тож його можна встановити там. Модуль :mod:`site` :ref:"
"`встановлює для нього <rlcompleter-config>` функцію, яка вмикає завершення "
"вкладки та збереження історії (у :file:`~/.python-history`), якщо платформа "
"підтримує :mod:`readline` . Якщо ви не бажаєте такої (нової) поведінки, ви "
"можете змінити її в :envvar:`PYTHONSTARTUP`, :mod:`sitecustomize` або :mod:"
"`usercustomize`, видаливши цей атрибут із :mod:`sys` (або встановлення його "
"на інший виклик). (Надано Еріком Араухо та Антуаном Пітру в :issue:`5845`.)"

msgid "tarfile"
msgstr "tarfile"

msgid ""
"The :mod:`tarfile` module now supports a simple :ref:`tarfile-commandline` "
"when called as a script directly or via ``-m``.  This can be used to create "
"and extract tarfile archives.  (Contributed by Berker Peksag in :issue:"
"`13477`.)"
msgstr ""
"Модуль :mod:`tarfile` тепер підтримує простий :ref:`tarfile-commandline` під "
"час безпосереднього виклику сценарію або через ``-m``. Це можна "
"використовувати для створення та розпакування архівів tarfile. (Надано "
"Berker Peksag у :issue:`13477`.)"

msgid "textwrap"
msgstr "обтікання текстом"

msgid ""
"The :class:`~textwrap.TextWrapper` class has two new attributes/constructor "
"arguments: :attr:`~textwrap.TextWrapper.max_lines`, which limits the number "
"of lines in the output, and :attr:`~textwrap.TextWrapper.placeholder`, which "
"is a string that will appear at the end of the output if it has been "
"truncated because of *max_lines*.  Building on these capabilities, a new "
"convenience function :func:`~textwrap.shorten` collapses all of the "
"whitespace in the input to single spaces and produces a single line of a "
"given *width* that ends with the *placeholder* (by default, ``[...]``).  "
"(Contributed by Antoine Pitrou and Serhiy Storchaka in :issue:`18585` and :"
"issue:`18725`.)"
msgstr ""
"Клас :class:`~textwrap.TextWrapper` має два нові атрибути/аргументи "
"конструктора: :attr:`~textwrap.TextWrapper.max_lines`, який обмежує "
"кількість рядків у виводі, і :attr:`~textwrap.TextWrapper .placeholder`, це "
"рядок, який з’явиться в кінці виводу, якщо його було скорочено через "
"*max_lines*. Спираючись на ці можливості, нова функція зручності :func:"
"`~textwrap.shorten` згортає всі пробіли у вхідних даних до окремих пробілів "
"і створює один рядок заданої *ширини*, який закінчується *заповнювачем* (за "
"замовчуванням). , ``[...]``). (Надано Антуаном Пітру та Сергієм Сторчакою в :"
"issue:`18585` та :issue:`18725`.)"

msgid "threading"
msgstr "різьблення"

msgid ""
"The :class:`~threading.Thread` object representing the main thread can be "
"obtained from the new :func:`~threading.main_thread` function.  In normal "
"conditions this will be the thread from which the Python interpreter was "
"started.  (Contributed by Andrew Svetlov in :issue:`18882`.)"
msgstr ""
"Об’єкт :class:`~threading.Thread`, що представляє основний потік, можна "
"отримати з нової функції :func:`~threading.main_thread`. У нормальних умовах "
"це буде потік, з якого було запущено інтерпретатор Python. (Надав Ендрю "
"Свєтлов у :issue:`18882`.)"

msgid "traceback"
msgstr "простежити"

msgid ""
"A new :func:`traceback.clear_frames` function takes a traceback object and "
"clears the local variables in all of the frames it references, reducing the "
"amount of memory consumed.  (Contributed by Andrew Kuchling in :issue:"
"`1565525`.)"
msgstr ""
"Нова функція :func:`traceback.clear_frames` приймає об’єкт трасування та "
"очищає локальні змінні в усіх кадрах, на які він посилається, зменшуючи "
"обсяг споживаної пам’яті. (Надав Ендрю Кухлінг у :issue:`1565525`.)"

msgid "types"
msgstr "види"

msgid ""
"A new :func:`~types.DynamicClassAttribute` descriptor provides a way to "
"define an attribute that acts normally when looked up through an instance "
"object, but which is routed to the *class* ``__getattr__`` when looked up "
"through the class.  This allows one to have properties active on a class, "
"and have virtual attributes on the class with the same name (see :mod:`Enum` "
"for an example). (Contributed by Ethan Furman in :issue:`19030`.)"
msgstr ""
"Новий дескриптор :func:`~types.DynamicClassAttribute` надає спосіб "
"визначення атрибута, який працює нормально під час пошуку через об’єкт "
"екземпляра, але який спрямовується до *класу* ``__getattr__`` під час пошуку "
"через клас . Це дозволяє мати активні властивості для класу та мати "
"віртуальні атрибути для класу з таким же іменем (див. :mod:`Enum` для "
"прикладу). (Надав Ітан Фурман у :issue:`19030`.)"

msgid "urllib"
msgstr "urllib"

msgid ""
":mod:`urllib.request` now supports ``data:`` URLs via the :class:`~urllib."
"request.DataHandler` class.  (Contributed by Mathias Panzenböck in :issue:"
"`16423`.)"
msgstr ""
":mod:`urllib.request` тепер підтримує URL-адреси ``data:`` через клас :class:"
"`~urllib.request.DataHandler`. (Надав Матіас Панценбьок у :issue:`16423`.)"

msgid ""
"The http method that will be used by a :class:`~urllib.request.Request` "
"class can now be specified by setting a :class:`~urllib.request.Request."
"method` class attribute on the subclass.  (Contributed by Jason R Coombs in :"
"issue:`18978`.)"
msgstr ""
"Метод http, який використовуватиметься класом :class:`~urllib.request."
"Request`, тепер можна вказати, встановивши атрибут класу :class:`~urllib."
"request.Request.method` у підкласі. (Надав Джейсон Р. Кумбс у :issue:"
"`18978`.)"

msgid ""
":class:`~urllib.request.Request` objects are now reusable: if the :attr:"
"`~urllib.request.Request.full_url` or :attr:`~urllib.request.Request.data` "
"attributes are modified, all relevant internal properties are updated.  This "
"means, for example, that it is now possible to use the same :class:`~urllib."
"request.Request` object in more than one :meth:`.OpenerDirector.open` call "
"with different *data* arguments, or to modify a :class:`~urllib.request."
"Request`\\ 's ``url`` rather than recomputing it from scratch.  There is "
"also a new :meth:`~urllib.request.Request.remove_header` method that can be "
"used to remove headers from a :class:`~urllib.request.Request`.  "
"(Contributed by Alexey Kachayev in :issue:`16464`, Daniel Wozniak in :issue:"
"`17485`, and Damien Brecht and Senthil Kumaran in :issue:`17272`.)"
msgstr ""
":class:`~urllib.request.Request` об’єкти тепер можна повторно "
"використовувати: якщо атрибути :attr:`~urllib.request.Request.full_url` або :"
"attr:`~urllib.request.Request.data` змінено, усі оновлено відповідні "
"внутрішні властивості. Це означає, наприклад, що тепер можна використовувати "
"той самий об’єкт :class:`~urllib.request.Request` у кількох викликах :meth:`."
"OpenerDirector.open` з різними аргументами *data* або для змінити URL-"
"адресу :class:`~urllib.request.Request`\\, а не перераховувати її з нуля. "
"Існує також новий метод :meth:`~urllib.request.Request.remove_header`, який "
"можна використовувати для видалення заголовків із :class:`~urllib.request."
"Request`. (Надано Олексієм Качаєвим у :issue:`16464`, Даніелем Возняком у :"
"issue:`17485`, а також Демієном Брехтом і Сентілом Кумараном у :issue:"
"`17272`.)"

msgid ""
":class:`~urllib.error.HTTPError` objects now have a :attr:`~urllib.error."
"HTTPError.headers` attribute that provides access to the HTTP response "
"headers associated with the error.  (Contributed by Berker Peksag in :issue:"
"`15701`.)"
msgstr ""
"Об’єкти :class:`~urllib.error.HTTPError` тепер мають атрибут :attr:`~urllib."
"error.HTTPError.headers`, який надає доступ до заголовків відповіді HTTP, "
"пов’язаних із помилкою. (Надано Berker Peksag у :issue:`15701`.)"

msgid "unittest"
msgstr "unittest"

msgid ""
"The :class:`~unittest.TestCase` class has a new method, :meth:`~unittest."
"TestCase.subTest`, that produces a context manager whose :keyword:`with` "
"block becomes a \"sub-test\".  This context manager allows a test method to "
"dynamically generate subtests  by, say, calling the ``subTest`` context "
"manager inside a loop.  A single test method can thereby produce an "
"indefinite number of separately identified and separately counted tests, all "
"of which will run even if one or more of them fail.  For example::"
msgstr ""

msgid ""
"will result in six subtests, each identified in the unittest verbose output "
"with a label consisting of the variable name ``i`` and a particular value "
"for that variable (``i=0``, ``i=1``, etc).  See :ref:`subtests` for the full "
"version of this example.  (Contributed by Antoine Pitrou in :issue:`16997`.)"
msgstr ""
"призведе до шести підтестів, кожен ідентифікований у докладному виведенні "
"модульного тесту з міткою, що складається з назви змінної ``i`` та певного "
"значення для цієї змінної (``i=0``, ``i=1``, тощо). Перегляньте :ref:"
"`subtests` повну версію цього прикладу. (Надав Антуан Пітру в :issue:"
"`16997`.)"

msgid ""
":func:`unittest.main` now accepts an iterable of test names for "
"*defaultTest*, where previously it only accepted a single test name as a "
"string.  (Contributed by Jyrki Pulliainen in :issue:`15132`.)"
msgstr ""
":func:`unittest.main` тепер приймає ітерацію імен тестів для *defaultTest*, "
"тоді як раніше він приймав лише одну назву тесту як рядок. (Надав Юркі "
"Пулляйнен у :issue:`15132`.)"

msgid ""
"If :class:`~unittest.SkipTest` is raised during test discovery (that is, at "
"the module level in the test file), it is now reported as a skip instead of "
"an error.  (Contributed by Zach Ware in :issue:`16935`.)"
msgstr ""
"Якщо :class:`~unittest.SkipTest` викликається під час виявлення тесту (тобто "
"на рівні модуля у файлі тесту), це тепер повідомляється як пропуск замість "
"помилки. (Надав Zach Ware у :issue:`16935`.)"

msgid ""
":meth:`~unittest.TestLoader.discover` now sorts the discovered files to "
"provide consistent test ordering.  (Contributed by Martin Melin and Jeff "
"Ramnani in :issue:`16709`.)"
msgstr ""
":meth:`~unittest.TestLoader.discover` тепер сортує виявлені файли для "
"забезпечення послідовного впорядкування тестів. (Надано Мартіном Меліном і "
"Джеффом Рамнані в :issue:`16709`.)"

msgid ""
":class:`~unittest.TestSuite` now drops references to tests as soon as the "
"test has been run, if the test is successful.  On Python interpreters that "
"do garbage collection, this allows the tests to be garbage collected if "
"nothing else is holding a reference to the test.  It is possible to override "
"this behavior by creating a :class:`~unittest.TestSuite` subclass that "
"defines a custom ``_removeTestAtIndex`` method.  (Contributed by Tom "
"Wardill, Matt McClure, and Andrew Svetlov in :issue:`11798`.)"
msgstr ""
":class:`~unittest.TestSuite` тепер видаляє посилання на тести, щойно тест "
"було запущено, якщо тест успішний. В інтерпретаторах Python, які виконують "
"збір сміття, це дозволяє тестам збиратися як сміття, якщо ніщо інше не "
"містить посилання на тест. Цю поведінку можна перевизначити, створивши "
"підклас :class:`~unittest.TestSuite`, який визначає спеціальний метод "
"``_removeTestAtIndex``. (Надано Томом Уорділлом, Метом МакКлуром та Ендрю "
"Свєтловим у :issue:`11798`.)"

msgid ""
"A new test assertion context-manager, :meth:`~unittest.TestCase.assertLogs`, "
"will ensure that a given block of code emits a log message using the :mod:"
"`logging` module.  By default the message can come from any logger and have "
"a priority of ``INFO`` or higher, but both the logger name and an "
"alternative minimum logging level may be specified.  The object returned by "
"the context manager can be queried for the :class:`~logging.LogRecord`\\ s "
"and/or formatted messages that were logged.  (Contributed by Antoine Pitrou "
"in :issue:`18937`.)"
msgstr ""
"Новий контекстний менеджер тестових тверджень, :meth:`~unittest.TestCase."
"assertLogs`, гарантує, що певний блок коду видає повідомлення журналу за "
"допомогою модуля :mod:`logging`. За замовчуванням повідомлення може "
"надходити з будь-якого реєстратора та мати пріоритет ``INFO`` або вищий, але "
"можна вказати як назву реєстратора, так і альтернативний мінімальний рівень "
"журналювання. Об’єкт, повернутий контекстним менеджером, може бути запитаний "
"для :class:`~logging.LogRecord`\\ s та/або відформатованих повідомлень, які "
"були зареєстровані. (Надав Антуан Пітру в :issue:`18937`.)"

msgid ""
"Test discovery now works with namespace packages (Contributed by Claudiu "
"Popa in :issue:`17457`.)"
msgstr ""
"Тестове виявлення тепер працює з пакетами простору імен (надано Клаудіу "
"Попою в :issue:`17457`.)"

msgid ""
":mod:`unittest.mock` objects now inspect their specification signatures when "
"matching calls, which means an argument can now be matched by either "
"position or name, instead of only by position.  (Contributed by Antoine "
"Pitrou in :issue:`17015`.)"
msgstr ""
"Об’єкти :mod:`unittest.mock` тепер перевіряють свої сигнатури специфікації "
"під час відповідних викликів, що означає, що аргумент тепер може бути "
"зіставлений або за позицією, або за назвою, а не лише за позицією. (Надав "
"Антуан Пітру в :issue:`17015`.)"

msgid ""
":func:`~mock.mock_open` objects now have ``readline`` and ``readlines`` "
"methods.  (Contributed by Toshio Kuratomi in :issue:`17467`.)"
msgstr ""
":func:`~mock.mock_open` об’єкти тепер мають методи ``readline`` і "
"``readlines``. (Надав Тошіо Куратомі в :issue:`17467`.)"

msgid "venv"
msgstr "venv"

msgid ""
":mod:`venv` now includes activation scripts for the ``csh`` and ``fish`` "
"shells.  (Contributed by Andrew Svetlov in :issue:`15417`.)"
msgstr ""
":mod:`venv` тепер містить скрипти активації для оболонок ``csh`` і ``fish``. "
"(Надав Ендрю Свєтлов у :issue:`15417`.)"

msgid ""
":class:`~venv.EnvBuilder` and the :func:`~venv.create` convenience function "
"take a new keyword argument *with_pip*, which defaults to ``False``, that "
"controls whether or not :class:`~venv.EnvBuilder` ensures that ``pip`` is "
"installed in the virtual environment.  (Contributed by Nick Coghlan in :"
"issue:`19552` as part of the :pep:`453` implementation.)"
msgstr ""
":class:`~venv.EnvBuilder` і функція зручності :func:`~venv.create` приймають "
"новий аргумент ключового слова *with_pip*, який за замовчуванням має "
"значення ``False``, який контролює, чи :class:`~venv.EnvBuilder` гарантує, "
"що pip встановлено у віртуальному середовищі. (Надано Ніком Когланом у :"
"issue:`19552` як частину реалізації :pep:`453`.)"

msgid "wave"
msgstr "хвиля"

msgid ""
"The :meth:`~wave.getparams` method now returns a namedtuple rather than a "
"plain tuple.  (Contributed by Claudiu Popa in :issue:`17487`.)"
msgstr ""
"Метод :meth:`~wave.getparams` тепер повертає іменований кортеж, а не "
"звичайний кортеж. (Надав Клаудіу Попа в :issue:`17487`.)"

msgid ""
":meth:`wave.open` now supports the context management protocol.  "
"(Contributed by Claudiu Popa in :issue:`17616`.)"
msgstr ""
":meth:`wave.open` тепер підтримує протокол керування контекстом. (Надав "
"Клаудіу Попа в :issue:`17616`.)"

msgid ""
":mod:`wave` can now :ref:`write output to unseekable files <wave-write-"
"objects>`.  (Contributed by David Jones, Guilherme Polo, and Serhiy "
"Storchaka in :issue:`5202`.)"
msgstr ""
":mod:`wave` тепер може :ref:`записувати вихідні дані у файли, які неможливо "
"шукати <wave-write-objects>`. (Надано Девідом Джонсом, Гільєрме Поло та "
"Сергієм Сторчакою в :issue:`5202`.)"

msgid ""
"The :meth:`~wave.Wave_write.writeframesraw` and :meth:`~wave.Wave_write."
"writeframes` methods now accept any :term:`bytes-like object`.  (Contributed "
"by Serhiy Storchaka in :issue:`8311`.)"
msgstr ""
"Методи :meth:`~wave.Wave_write.writeframesraw` і :meth:`~wave.Wave_write."
"writeframes` тепер приймають будь-які :term:`bytes-like object`. (Надав "
"Сергій Сторчака в :issue:`8311`.)"

msgid "weakref"
msgstr "слабкий реф"

msgid ""
"New :class:`~weakref.WeakMethod` class simulates weak references to bound "
"methods.  (Contributed by Antoine Pitrou in :issue:`14631`.)"
msgstr ""
"Новий клас :class:`~weakref.WeakMethod` моделює слабкі посилання на зв’язані "
"методи. (Надав Антуан Пітру в :issue:`14631`.)"

msgid ""
"New :class:`~weakref.finalize` class makes it possible to register a "
"callback to be invoked when an object is garbage collected, without needing "
"to carefully manage the lifecycle of the weak reference itself.  "
"(Contributed by Richard Oudkerk in :issue:`15528`.)"
msgstr ""
"Новий клас :class:`~weakref.finalize` дає змогу зареєструвати зворотний "
"виклик, який буде викликаний, коли об’єкт збирається сміттям, без "
"необхідності ретельно керувати життєвим циклом самого слабкого посилання. "
"(Надав Річард Оудкерк у :issue:`15528`.)"

msgid ""
"The callback, if any, associated with a :class:`~weakref.ref` is now exposed "
"via the :attr:`~weakref.ref.__callback__` attribute.  (Contributed by Mark "
"Dickinson in :issue:`17643`.)"
msgstr ""
"Зворотний виклик, якщо такий є, пов’язаний із :class:`~weakref.ref`, тепер "
"доступний через атрибут :attr:`~weakref.ref.__callback__`. (Надав Марк "
"Дікінсон у :issue:`17643`.)"

msgid "xml.etree"
msgstr "xml.etree"

msgid ""
"A new parser, :class:`~xml.etree.ElementTree.XMLPullParser`, allows a non-"
"blocking applications to parse XML documents.  An example can be seen at :"
"ref:`elementtree-pull-parsing`.  (Contributed by Antoine Pitrou in :issue:"
"`17741`.)"
msgstr ""
"Новий парсер, :class:`~xml.etree.ElementTree.XMLPullParser`, дозволяє "
"неблокуючим програмам аналізувати XML-документи. Приклад можна побачити на :"
"ref:`elementtree-pull-parsing`. (Надав Антуан Пітру в :issue:`17741`.)"

msgid ""
"The :mod:`xml.etree.ElementTree` :func:`~xml.etree.ElementTree.tostring` "
"and :func:`~xml.etree.ElementTree.tostringlist` functions, and the :class:"
"`~xml.etree.ElementTree.ElementTree` :meth:`~xml.etree.ElementTree."
"ElementTree.write` method, now have a *short_empty_elements* :ref:`keyword-"
"only parameter <keyword-only_parameter>` providing control over whether "
"elements with no content are written in abbreviated (``<tag />``) or "
"expanded (``<tag></tag>``) form.  (Contributed by Ariel Poliak and Serhiy "
"Storchaka in :issue:`14377`.)"
msgstr ""
"Функції :mod:`xml.etree.ElementTree` :func:`~xml.etree.ElementTree.tostring` "
"і :func:`~xml.etree.ElementTree.tostringlist`, а також :class:`~xml.etree ."
"ElementTree.ElementTree` :meth:`~xml.etree.ElementTree.ElementTree.write` "
"метод, тепер має *short_empty_elements* :ref:`ключовий параметр <keyword-"
"only_parameter>`, що забезпечує контроль над тим, чи елементи без вмісту "
"записуються скорочено (``<tag />``) або розгорнуту (``<tag> </tag>``) форму. "
"(Надано Аріелем Поляком і Сергієм Сторчакою в :issue:`14377`.)"

msgid "zipfile"
msgstr "zip-файл"

msgid ""
"The :meth:`~zipfile.PyZipFile.writepy` method of the :class:`~zipfile."
"PyZipFile` class has a new *filterfunc* option that can be used to control "
"which directories and files are added to the archive.  For example, this "
"could be used to exclude test files from the archive. (Contributed by "
"Christian Tismer in :issue:`19274`.)"
msgstr ""
"Метод :meth:`~zipfile.PyZipFile.writepy` класу :class:`~zipfile.PyZipFile` "
"має нову опцію *filterfunc*, за допомогою якої можна контролювати, які "
"каталоги та файли додаються до архіву. Наприклад, це можна використовувати "
"для виключення тестових файлів з архіву. (Надав Крістіан Тісмер у :issue:"
"`19274`.)"

msgid ""
"The *allowZip64* parameter to :class:`~zipfile.ZipFile` and :class:`~zipfile."
"PyZipfile` is now ``True`` by default.  (Contributed by William Mallard in :"
"issue:`17201`.)"
msgstr ""
"Параметр *allowZip64* для :class:`~zipfile.ZipFile` і :class:`~zipfile."
"PyZipfile` тепер має значення ``True`` за замовчуванням. (Надав Вільям "
"Маллард у :issue:`17201`.)"

msgid "CPython Implementation Changes"
msgstr "Зміни реалізації CPython"

msgid "PEP 445: Customization of CPython Memory Allocators"
msgstr "PEP 445: Налаштування розподілювачів пам’яті CPython"

msgid ""
":pep:`445` adds new C level interfaces to customize memory allocation in the "
"CPython interpreter."
msgstr ""
":pep:`445` додає нові інтерфейси рівня C для налаштування розподілу пам’яті "
"в інтерпретаторі CPython."

msgid ":pep:`445` -- Add new APIs to customize Python memory allocators"
msgstr ""
":pep:`445` -- Додайте нові API для налаштування розподільників пам’яті Python"

msgid "PEP 442: Safe Object Finalization"
msgstr "PEP 442: Завершення безпечного об’єкта"

msgid ""
":pep:`442` removes the current limitations and quirks of object finalization "
"in CPython. With it, objects with :meth:`__del__` methods, as well as "
"generators with :keyword:`finally` clauses, can be finalized when they are "
"part of a reference cycle."
msgstr ""
":pep:`442` усуває поточні обмеження та особливості фіналізації об’єктів у "
"CPython. З його допомогою об’єкти з методами :meth:`__del__`, а також "
"генератори з пропозиціями :keyword:`finally` можуть бути завершені, коли "
"вони є частиною еталонного циклу."

msgid ""
"As part of this change, module globals are no longer forcibly set to :const:"
"`None` during interpreter shutdown in most cases, instead relying on the "
"normal operation of the cyclic garbage collector.  This avoids a whole class "
"of interpreter-shutdown-time errors, usually involving ``__del__`` methods, "
"that have plagued Python since the cyclic GC was first introduced."
msgstr ""
"У рамках цієї зміни глобальні модулі більше не примусово встановлюються на :"
"const:`None` під час завершення роботи інтерпретатора в більшості випадків, "
"натомість покладаються на звичайну роботу циклічного збирача сміття. Це "
"дозволяє уникнути цілого класу помилок під час вимкнення інтерпретатора, які "
"зазвичай стосуються методів ``__del__``, які мучать Python з моменту "
"введення циклічного GC."

msgid ":pep:`442` -- Safe object finalization"
msgstr ":pep:`442` -- Безпечна фіналізація об'єкта"

msgid "PEP 456: Secure and Interchangeable Hash Algorithm"
msgstr "PEP 456: Безпечний і взаємозамінний хеш-алгоритм"

msgid ""
":pep:`456` follows up on earlier security fix work done on Python's hash "
"algorithm to address certain DOS attacks to which public facing APIs backed "
"by dictionary lookups may be subject.  (See :issue:`14621` for the start of "
"the current round of improvements.)  The PEP unifies CPython's hash code to "
"make it easier for a packager to substitute a different hash algorithm, and "
"switches Python's default implementation to a SipHash implementation on "
"platforms that have a 64 bit data type.  Any performance differences in "
"comparison with the older FNV algorithm are trivial."
msgstr ""
":pep:`456` є продовженням попередньої роботи з виправлення безпеки, "
"виконаної в алгоритмі гешування Python для вирішення певних атак DOS, яким "
"можуть піддаватися публічні API, що підтримуються пошуком у словнику. (Див. :"
"issue:`14621` для початку поточного раунду вдосконалень.) PEP уніфікує хеш-"
"код CPython, щоб полегшити пакувальнику заміну іншого алгоритму хешування, і "
"змінює реалізацію Python за замовчуванням на реалізацію SipHash на "
"платформах які мають 64-бітний тип даних. Будь-які відмінності в "
"продуктивності порівняно зі старим алгоритмом FNV незначні."

msgid ""
"The PEP adds additional fields to the :attr:`sys.hash_info` named tuple to "
"describe the hash algorithm in use by the currently executing binary.  "
"Otherwise, the PEP does not alter any existing CPython APIs."
msgstr ""
"PEP додає додаткові поля до іменованого кортежу :attr:`sys.hash_info` для "
"опису алгоритму хешування, який використовується двійковим файлом, що "
"виконується наразі. В іншому випадку PEP не змінює існуючі API CPython."

msgid "PEP 436: Argument Clinic"
msgstr "PEP 436: Клініка аргументів"

msgid ""
"\"Argument Clinic\" (:pep:`436`) is now part of the CPython build process "
"and can be used to simplify the process of defining and maintaining accurate "
"signatures for builtins and standard library extension modules implemented "
"in C."
msgstr ""
"\"Argument Clinic\" (:pep:`436`) тепер є частиною процесу збирання CPython і "
"може використовуватися для спрощення процесу визначення та підтримки точних "
"підписів для вбудованих модулів і стандартних модулів розширення бібліотеки, "
"реалізованих у C."

msgid ""
"Some standard library extension modules have been converted to use Argument "
"Clinic in Python 3.4, and :mod:`pydoc` and :mod:`inspect` have been updated "
"accordingly."
msgstr ""
"Деякі стандартні модулі розширення бібліотеки було перетворено на "
"використання Argument Clinic у Python 3.4, а :mod:`pydoc` і :mod:`inspect` "
"були відповідно оновлені."

msgid ""
"It is expected that signature metadata for programmatic introspection will "
"be added to additional callables implemented in C as part of Python 3.4 "
"maintenance releases."
msgstr ""
"Очікується, що метадані підпису для програмної інтроспекції будуть додані до "
"додаткових викликів, реалізованих у C, як частина випусків обслуговування "
"Python 3.4."

msgid ""
"The Argument Clinic PEP is not fully up to date with the state of the "
"implementation. This has been deemed acceptable by the release manager and "
"core development team in this case, as Argument Clinic will not be made "
"available as a public API for third party use in Python 3.4."
msgstr ""
"PEP клініки Argument не повністю оновлює стан впровадження. Менеджер випуску "
"та основна команда розробників визнали це прийнятним у цьому випадку, "
"оскільки Argument Clinic не буде доступним як загальнодоступний API для "
"використання третьою стороною в Python 3.4."

msgid ":pep:`436` -- The Argument Clinic DSL"
msgstr ":pep:`436` -- The Argument Clinic DSL"

msgid "PEP written and implemented by Larry Hastings."
msgstr "PEP написаний і реалізований Ларрі Гастінгсом."

msgid "Other Build and C API Changes"
msgstr "Інші зміни збірки та C API"

msgid ""
"The new :c:func:`PyType_GetSlot` function has been added to the stable ABI, "
"allowing retrieval of function pointers from named type slots when using the "
"limited API.  (Contributed by Martin von Löwis in :issue:`17162`.)"
msgstr ""
"Нову функцію :c:func:`PyType_GetSlot` додано до стабільного ABI, що дозволяє "
"отримувати покажчики функцій із слотів іменованих типів під час використання "
"обмеженого API. (Надано Мартіном фон Льовісом у :issue:`17162`.)"

msgid ""
"The new :c:func:`Py_SetStandardStreamEncoding` pre-initialization API allows "
"applications embedding the CPython interpreter to reliably force a "
"particular encoding and error handler for the standard streams. (Contributed "
"by Bastien Montagne and Nick Coghlan in :issue:`16129`.)"
msgstr ""
"Новий API попередньої ініціалізації :c:func:`Py_SetStandardStreamEncoding` "
"дозволяє програмам, які вбудовують інтерпретатор CPython, надійно примусово "
"застосовувати певне кодування та обробник помилок для стандартних потоків. "
"(Надано Бастьєном Монтанем і Ніком Когланом у :issue:`16129`.)"

msgid ""
"Most Python C APIs that don't mutate string arguments are now correctly "
"marked as accepting ``const char *`` rather than ``char *``.  (Contributed "
"by Serhiy Storchaka in :issue:`1772673`.)"
msgstr ""
"Більшість Python C API, які не змінюють рядкові аргументи, тепер правильно "
"позначені як такі, що приймають ``const char *``, а не ``char *``. (Надав "
"Сергій Сторчака в :issue:`1772673`.)"

msgid ""
"A new shell version of ``python-config`` can be used even when a python "
"interpreter is not available (for example, in cross compilation scenarios)."
msgstr ""
"Нову версію оболонки ``python-config`` можна використовувати, навіть якщо "
"інтерпретатор python недоступний (наприклад, у сценаріях крос-компіляції)."

msgid ""
":c:func:`PyUnicode_FromFormat` now supports width and precision "
"specifications for ``%s``, ``%A``, ``%U``, ``%V``, ``%S``, and ``%R``. "
"(Contributed by Ysj Ray and Victor Stinner in :issue:`7330`.)"
msgstr ""
":c:func:`PyUnicode_FromFormat` тепер підтримує специфікації ширини та "
"точності для ``%s``, ``%A``, ``%U``, ``%V``, ``%S`` і ``%R``. (Надано Ysj "
"Ray і Victor Stinner у :issue:`7330`.)"

msgid ""
"New function :c:func:`PyStructSequence_InitType2` supplements the existing :"
"c:func:`PyStructSequence_InitType` function.  The difference is that it "
"returns ``0`` on success and ``-1`` on failure."
msgstr ""
"Нова функція :c:func:`PyStructSequence_InitType2` доповнює існуючу функцію :"
"c:func:`PyStructSequence_InitType`. Різниця полягає в тому, що він повертає "
"``0`` у разі успіху та ``-1`` у випадку невдачі."

msgid ""
"The CPython source can now be compiled using the address sanity checking "
"features of recent versions of GCC and clang:  the false alarms in the small "
"object allocator have been silenced.  (Contributed by Dhiru Kholia in :issue:"
"`18596`.)"
msgstr ""
"Вихідний код CPython тепер можна скомпілювати за допомогою функцій перевірки "
"працездатності адрес останніх версій GCC і clang: помилкові тривоги в "
"розподільнику невеликих об’єктів було вимкнуто. (Надано Dhiru Kholia в :"
"issue:`18596`.)"

msgid ""
"The Windows build now uses `Address Space Layout Randomization <https://en."
"wikipedia.org/wiki/Address_space_layout_randomization>`_ and `Data Execution "
"Prevention <https://en.wikipedia.org/wiki/Data_Execution_Prevention>`_.  "
"(Contributed by Christian Heimes in :issue:`16632`.)"
msgstr ""
"У збірці Windows тепер використовуються `Address Space Layout Randomization "
"<https://en.wikipedia.org/wiki/Address_space_layout_randomization>`_ і `Data "
"Execution Prevention <https://en.wikipedia.org/wiki/"
"Data_Execution_Prevention>`_. (Надав Крістіан Хеймс у :issue:`16632`.)"

msgid ""
"New function :c:func:`PyObject_LengthHint` is the C API equivalent of :func:"
"`operator.length_hint`.  (Contributed by Armin Ronacher in :issue:`16148`.)"
msgstr ""
"Нова функція :c:func:`PyObject_LengthHint` є еквівалентом C API :func:"
"`operator.length_hint`. (Надав Армін Роначер у :issue:`16148`.)"

msgid "Other Improvements"
msgstr "Інші вдосконалення"

msgid ""
"The :ref:`python <using-on-cmdline>` command has a new :ref:`option <using-"
"on-misc-options>`, ``-I``, which causes it to run in \"isolated mode\", "
"which means that :data:`sys.path` contains neither the script's directory "
"nor the user's ``site-packages`` directory, and all :envvar:`PYTHON*` "
"environment variables are ignored (it implies both ``-s`` and ``-E``).  "
"Other restrictions may also be applied in the future, with the goal being to "
"isolate the execution of a script from the user's environment.  This is "
"appropriate, for example, when Python is used to run a system script.  On "
"most POSIX systems it can and should be used in the ``#!`` line of system "
"scripts.  (Contributed by Christian Heimes in :issue:`16499`.)"
msgstr ""
"Команда :ref:`python <using-on-cmdline>` має нову :ref:`опцію <using-on-misc-"
"options>`, ``-I``, яка змушує її працювати в \"ізольованому режимі\", що "
"означає, що :data:`sys.path` містить ані каталог сценарію, ані каталог "
"``site-packages`` користувача, а також усі змінні середовища :envvar:"
"`PYTHON*` ігноруються (це означає як ``-s``, так і ``-E``). Інші обмеження "
"також можуть бути застосовані в майбутньому з метою ізоляції виконання "
"сценарію від середовища користувача. Це доречно, наприклад, коли Python "
"використовується для запуску системного сценарію. У більшості систем POSIX "
"його можна і потрібно використовувати в рядку ``#!`` системних сценаріїв. "
"(Надав Крістіан Хеймс у :issue:`16499`.)"

msgid ""
"Tab-completion is now enabled by default in the interactive interpreter on "
"systems that support :mod:`readline`.  History is also enabled by default, "
"and is written to (and read from) the file :file:`~/.python-history`. "
"(Contributed by Antoine Pitrou and Éric Araujo in :issue:`5845`.)"
msgstr ""
"Завершення табуляції тепер увімкнено за замовчуванням в інтерактивному "
"інтерпретаторі в системах, які підтримують :mod:`readline`. Історія також "
"увімкнена за замовчуванням і записується (і зчитується) у файл :file:`~/."
"python-history`. (Надано Антуаном Пітру та Еріком Араужо в :issue:`5845`.)"

msgid ""
"Invoking the Python interpreter with ``--version`` now outputs the version "
"to standard output instead of standard error (:issue:`18338`). Similar "
"changes were made to :mod:`argparse` (:issue:`18920`) and other modules that "
"have script-like invocation capabilities (:issue:`18922`)."
msgstr ""
"Виклик інтерпретатора Python за допомогою ``--version`` тепер виводить "
"версію на стандартний вивід замість стандартної помилки (:issue:`18338`). "
"Подібні зміни було внесено до :mod:`argparse` (:issue:`18920`) та інших "
"модулів, які мають можливості виклику, подібні до сценарію (:issue:`18922`)."

msgid ""
"The CPython Windows installer now adds ``.py`` to the :envvar:`PATHEXT` "
"variable when extensions are registered, allowing users to run a python "
"script at the windows command prompt by just typing its name without the ``."
"py`` extension.  (Contributed by Paul Moore in :issue:`18569`.)"
msgstr ""
"Інсталятор CPython Windows тепер додає ``.py`` до змінної :envvar:`PATHEXT`, "
"коли зареєстровано розширення, дозволяючи користувачам запускати сценарій "
"python у командному рядку Windows, просто ввівши його назву без ``.py`` "
"розширення. (Надав Пол Мур у :issue:`18569`.)"

msgid ""
"A new ``make`` target `coverage-report <https://devguide.python.org/coverage/"
"#measuring-coverage-of-c-code-with-gcov-and-lcov>`_ will build python, run "
"the test suite, and generate an HTML coverage report for the C codebase "
"using ``gcov`` and `lcov <https://ltp.sourceforge.net/coverage/lcov.php>`_."
msgstr ""

msgid ""
"The ``-R`` option to the :ref:`python regression test suite <regrtest>` now "
"also checks for memory allocation leaks, using :func:`sys."
"getallocatedblocks()`.  (Contributed by Antoine Pitrou in :issue:`13390`.)"
msgstr ""
"Параметр ``-R`` для :ref:`набору регресійних тестів python <regrtest>` тепер "
"також перевіряє наявність витоків розподілу пам’яті за допомогою :func:`sys."
"getallocatedblocks()`. (Надав Антуан Пітру в :issue:`13390`.)"

msgid "``python -m`` now works with namespace packages."
msgstr "``python -m`` тепер працює з пакетами простору імен."

msgid ""
"The :mod:`stat` module is now implemented in C, which means it gets the "
"values for its constants from the C header files, instead of having the "
"values hard-coded in the python module as was previously the case."
msgstr ""
"Модуль :mod:`stat` тепер реалізовано в C, що означає, що він отримує "
"значення для своїх констант із файлів заголовків C замість того, щоб мати "
"жорстко закодовані значення в модулі python, як це було раніше."

msgid ""
"Loading multiple python modules from a single OS module (``.so``, ``.dll``) "
"now works correctly (previously it silently returned the first python module "
"in the file).  (Contributed by Václav Šmilauer in :issue:`16421`.)"
msgstr ""
"Завантаження кількох модулів python з одного модуля ОС (``.so``, ``.dll``) "
"тепер працює правильно (раніше він мовчки повертав перший модуль python у "
"файлі). (Надав Вацлав Шмілауер у :issue:`16421`.)"

msgid ""
"A new opcode, :opcode:`LOAD_CLASSDEREF`, has been added to fix a bug in the "
"loading of free variables in class bodies that could be triggered by certain "
"uses of :ref:`__prepare__ <prepare>`.  (Contributed by Benjamin Peterson in :"
"issue:`17853`.)"
msgstr ""
"Додано новий код операції, :opcode:`LOAD_CLASSDEREF`, щоб виправити помилку "
"під час завантаження вільних змінних у тілах класів, яка могла бути "
"викликана певним використанням :ref:`__prepare__ <prepare>`. (Надав "
"Бенджамін Петерсон у :issue:`17853`.)"

msgid ""
"A number of MemoryError-related crashes were identified and fixed by Victor "
"Stinner using his :pep:`445`-based ``pyfailmalloc`` tool (:issue:`18408`, :"
"issue:`18520`)."
msgstr ""
"Кілька збоїв, пов’язаних із MemoryError, було виявлено та виправлено "
"Віктором Стіннером за допомогою його інструменту ``pyfailmalloc`` на основі :"
"pep:`445` (:issue:`18408`, :issue:`18520`)."

msgid ""
"The ``pyvenv`` command now accepts a ``--copies`` option to use copies "
"rather than symlinks even on systems where symlinks are the default.  "
"(Contributed by Vinay Sajip in :issue:`18807`.)"
msgstr ""
"Команда ``pyvenv`` тепер приймає опцію ``--copies`` для використання копій "
"замість символічних посилань навіть у системах, де символічні посилання є "
"типовими. (Надав Віней Саджип у :issue:`18807`.)"

msgid ""
"The ``pyvenv`` command also accepts a ``--without-pip`` option to suppress "
"the otherwise-automatic bootstrapping of pip into the virtual environment.  "
"(Contributed by Nick Coghlan in :issue:`19552` as part of the :pep:`453` "
"implementation.)"
msgstr ""
"Команда ``pyvenv`` також приймає опцію ``--without-pip``, щоб придушити "
"автоматичне завантаження pip у віртуальне середовище. (Надано Ніком Когланом "
"у :issue:`19552` як частину реалізації :pep:`453`.)"

msgid ""
"The encoding name is now optional in the value set for the :envvar:"
"`PYTHONIOENCODING` environment variable.  This makes it possible to set just "
"the error handler, without changing the default encoding. (Contributed by "
"Serhiy Storchaka in :issue:`18818`.)"
msgstr ""
"Назва кодування тепер є необов’язковою для значення, установленого для "
"змінної середовища :envvar:`PYTHONIOENCODING`. Це дає змогу встановити лише "
"обробник помилок, не змінюючи стандартне кодування. (Надав Сергій Сторчака "
"в :issue:`18818`.)"

msgid ""
"The :mod:`bz2`, :mod:`lzma`, and :mod:`gzip` module ``open`` functions now "
"support ``x`` (exclusive creation) mode.  (Contributed by Tim Heaney and "
"Vajrasky Kok in :issue:`19201`, :issue:`19222`, and :issue:`19223`.)"
msgstr ""
"Функції ``open`` модуля :mod:`bz2`, :mod:`lzma` і :mod:`gzip` тепер "
"підтримують режим ``x`` (ексклюзивне створення). (Надано Тімом Хіні та "
"Ваджраскі Коком у :issue:`19201`, :issue:`19222` та :issue:`19223`.)"

msgid "Significant Optimizations"
msgstr "Значні оптимізації"

msgid ""
"The UTF-32 decoder is now 3x to 4x faster.  (Contributed by Serhiy Storchaka "
"in :issue:`14625`.)"
msgstr ""
"Декодер UTF-32 тепер у 3-4 рази швидший. (Надав Сергій Сторчака в :issue:"
"`14625`.)"

msgid ""
"The cost of hash collisions for sets is now reduced.  Each hash table probe "
"now checks a series of consecutive, adjacent key/hash pairs before "
"continuing to make random probes through the hash table.  This exploits "
"cache locality to make collision resolution less expensive. The collision "
"resolution scheme can be described as a hybrid of linear probing and open "
"addressing.  The number of additional linear probes defaults to nine.  This "
"can be changed at compile-time by defining LINEAR_PROBES to be any value.  "
"Set LINEAR_PROBES=0 to turn-off linear probing entirely.  (Contributed by "
"Raymond Hettinger in :issue:`18771`.)"
msgstr ""
"Вартість хеш-колізій для наборів тепер зменшена. Кожен зонд хеш-таблиці "
"тепер перевіряє серію послідовних суміжних пар ключ/хеш, перш ніж "
"продовжувати робити випадкові зонди через хеш-таблицю. Це використовує "
"локальність кешу, щоб зробити вирішення колізій менш дорогим. Схему "
"вирішення колізій можна описати як гібрид лінійного зондування та відкритої "
"адресації. Кількість додаткових лінійних зондів за замовчуванням становить "
"дев'ять. Це можна змінити під час компіляції, визначивши LINEAR_PROBES будь-"
"яким значенням. Встановіть LINEAR_PROBES=0, щоб повністю вимкнути лінійне "
"зондування. (Надав Реймонд Геттінгер у :issue:`18771`.)"

msgid ""
"The interpreter starts about 30% faster. A couple of measures lead to the "
"speedup. The interpreter loads fewer modules on startup, e.g. the :mod:"
"`re`, :mod:`collections` and :mod:`locale` modules and their dependencies "
"are no longer imported by default. The marshal module has been improved to "
"load compiled Python code faster.  (Contributed by Antoine Pitrou, Christian "
"Heimes and Victor Stinner in :issue:`19219`, :issue:`19218`, :issue:"
"`19209`, :issue:`19205` and :issue:`9548`.)"
msgstr ""
"Інтерпретатор запускається приблизно на 30% швидше. Кілька заходів "
"призводять до прискорення. Інтерпретатор завантажує менше модулів під час "
"запуску, напр. модулі :mod:`re`, :mod:`collections` і :mod:`locale` та їхні "
"залежності більше не імпортуються за замовчуванням. Модуль marshal було "
"покращено, щоб швидше завантажувати скомпільований код Python. (Надано "
"Антуаном Пітру, Крістіаном Хеймсом і Віктором Стіннером у :issue:`19219`, :"
"issue:`19218`, :issue:`19209`, :issue:`19205` і :issue:`9548`.)"

msgid ""
":class:`bz2.BZ2File` is now as fast or faster than the Python2 version for "
"most cases.  :class:`lzma.LZMAFile` has also been optimized.  (Contributed "
"by Serhiy Storchaka and Nadeem Vawda in :issue:`16034`.)"
msgstr ""
":class:`bz2.BZ2File` тепер такий же або швидший, ніж версія Python2 у "
"більшості випадків. :class:`lzma.LZMAFile` також було оптимізовано. (Надано "
"Сергієм Сторчакою та Надімом Вавдою в :issue:`16034`.)"

msgid ""
":func:`random.getrandbits` is 20%-40% faster for small integers (the most "
"common use case).  (Contributed by Serhiy Storchaka in :issue:`16674`.)"
msgstr ""
":func:`random.getrandbits` на 20%-40% швидше для малих цілих чисел "
"(найпоширеніший варіант використання). (Надав Сергій Сторчака в :issue:"
"`16674`.)"

msgid ""
"By taking advantage of the new storage format for strings, pickling of "
"strings is now significantly faster.  (Contributed by Victor Stinner and "
"Antoine Pitrou in :issue:`15596`.)"
msgstr ""
"Використовуючи переваги нового формату зберігання струн, декаплювання струн "
"тепер відбувається значно швидше. (Надано Віктором Стіннером і Антуаном "
"Пітру в :issue:`15596`.)"

msgid ""
"A performance issue in :meth:`io.FileIO.readall` has been solved.  This "
"particularly affects Windows, and significantly speeds up the case of piping "
"significant amounts of data through :mod:`subprocess`.  (Contributed by "
"Richard Oudkerk in :issue:`15758`.)"
msgstr ""
"Проблему продуктивності в :meth:`io.FileIO.readall` було вирішено. Це "
"особливо впливає на Windows і значно прискорює передачу значної кількості "
"даних через :mod:`subprocess`. (Надав Річард Оудкерк у :issue:`15758`.)"

msgid ""
":func:`html.escape` is now 10x faster.  (Contributed by Matt Bryant in :"
"issue:`18020`.)"
msgstr ""
":func:`html.escape` тепер у 10 разів швидший. (Надав Метт Брайант у :issue:"
"`18020`.)"

msgid ""
"On Windows, the native ``VirtualAlloc`` is now used instead of the CRT "
"``malloc`` in ``obmalloc``.  Artificial benchmarks show about a 3% memory "
"savings."
msgstr ""
"У Windows рідний ``VirtualAlloc`` тепер використовується замість CRT "
"``malloc`` в ``obmalloc``. Штучні бенчмарки показують близько 3% економії "
"пам'яті."

msgid ""
":func:`os.urandom` now uses a lazily opened persistent file descriptor so as "
"to avoid using many file descriptors when run in parallel from multiple "
"threads.  (Contributed by Antoine Pitrou in :issue:`18756`.)"
msgstr ""

msgid "Deprecated"
msgstr "Застаріле"

msgid ""
"This section covers various APIs and other features that have been "
"deprecated in Python 3.4, and will be removed in Python 3.5 or later.  In "
"most (but not all) cases, using the deprecated APIs will produce a :exc:"
"`DeprecationWarning` when the interpreter is run with deprecation warnings "
"enabled (for example, by using ``-Wd``)."
msgstr ""
"Цей розділ охоплює різні API та інші функції, які застаріли в Python 3.4 і "
"будуть видалені в Python 3.5 або пізнішої версії. У більшості (але не у "
"всіх) випадках використання застарілих API призведе до появи :exc:"
"`DeprecationWarning`, коли інтерпретатор запускається з увімкненими "
"попередженнями про застаріле (наприклад, за допомогою ``-Wd``)."

msgid "Deprecations in the Python API"
msgstr "Застарілі API Python"

msgid ""
"As mentioned in :ref:`whatsnew-pep-451`, a number of :mod:`importlib` "
"methods and functions are deprecated: :meth:`importlib.find_loader` is "
"replaced by :func:`importlib.util.find_spec`; :meth:`importlib.machinery."
"PathFinder.find_module` is replaced by :meth:`importlib.machinery.PathFinder."
"find_spec`; :meth:`importlib.abc.MetaPathFinder.find_module` is replaced by :"
"meth:`importlib.abc.MetaPathFinder.find_spec`; :meth:`importlib.abc."
"PathEntryFinder.find_loader` and :meth:`~importlib.abc.PathEntryFinder."
"find_module` are replaced by :meth:`importlib.abc.PathEntryFinder."
"find_spec`; all of the ``xxxLoader`` ABC ``load_module`` methods (:meth:"
"`importlib.abc.Loader.load_module`, :meth:`importlib.abc.InspectLoader."
"load_module`, :meth:`importlib.abc.FileLoader.load_module`, :meth:`importlib."
"abc.SourceLoader.load_module`) should no longer be implemented, instead "
"loaders should implement an ``exec_module`` method (:meth:`importlib.abc."
"Loader.exec_module`, :meth:`importlib.abc.InspectLoader.exec_module` :meth:"
"`importlib.abc.SourceLoader.exec_module`) and let the import system take "
"care of the rest; and :meth:`importlib.abc.Loader.module_repr`, :meth:"
"`importlib.util.module_for_loader`, :meth:`importlib.util.set_loader`, and :"
"meth:`importlib.util.set_package` are no longer needed because their "
"functions are now handled automatically by the import system."
msgstr ""
"Як зазначено в :ref:`whatsnew-pep-451`, низка методів і функцій :mod:"
"`importlib` застаріла: :meth:`importlib.find_loader` замінено на :func:"
"`importlib.util.find_spec` ; :meth:`importlib.machinery.PathFinder."
"find_module` замінено на :meth:`importlib.machinery.PathFinder.find_spec`; :"
"meth:`importlib.abc.MetaPathFinder.find_module` замінено на :meth:`importlib."
"abc.MetaPathFinder.find_spec`; :meth:`importlib.abc.PathEntryFinder."
"find_loader` і :meth:`~importlib.abc.PathEntryFinder.find_module` замінено "
"на :meth:`importlib.abc.PathEntryFinder.find_spec`; усі методи ``xxxLoader`` "
"ABC ``load_module`` (:meth:`importlib.abc.Loader.load_module`, :meth:"
"`importlib.abc.InspectLoader.load_module`, :meth:`importlib.abc. FileLoader."
"load_module`, :meth:`importlib.abc.SourceLoader.load_module`) більше не слід "
"реалізовувати, натомість завантажувачі мають реалізовувати метод "
"``exec_module`` (:meth:`importlib.abc.Loader.exec_module`,  :meth:`importlib."
"abc.InspectLoader.exec_module` :meth:`importlib.abc.SourceLoader."
"exec_module`) і нехай система імпорту подбає про все інше; і :meth:"
"`importlib.abc.Loader.module_repr`, :meth:`importlib.util."
"module_for_loader`, :meth:`importlib.util.set_loader` і :meth:`importlib."
"util.set_package` більше не є необхідні, тому що їхні функції тепер "
"автоматично обробляються системою імпорту."

msgid ""
"The :mod:`imp` module is pending deprecation. To keep compatibility with "
"Python 2/3 code bases, the module's removal is currently not scheduled."
msgstr ""
"Модуль :mod:`imp` очікує на припинення підтримки. Щоб зберегти сумісність із "
"кодовими базами Python 2/3, видалення модуля наразі не планується."

msgid ""
"The :mod:`formatter` module is pending deprecation and is slated for removal "
"in Python 3.6."
msgstr ""
"Модуль :mod:`formatter` очікує на припинення підтримки та планується для "
"видалення в Python 3.6."

msgid ""
"``MD5`` as the default *digestmod* for the :func:`hmac.new` function is "
"deprecated.  Python 3.6 will require an explicit digest name or constructor "
"as *digestmod* argument."
msgstr ""
"``MD5`` як типовий *digestmod* для функції :func:`hmac.new` не "
"підтримується. Python 3.6 вимагатиме явної назви дайджесту або конструктора "
"як аргументу *digestmod*."

msgid ""
"The internal ``Netrc`` class in the :mod:`ftplib` module has been documented "
"as deprecated in its docstring for quite some time.  It now emits a :exc:"
"`DeprecationWarning` and will be removed completely in Python 3.5."
msgstr ""
"Внутрішній клас ``Netrc`` у модулі :mod:`ftplib` був задокументований як "
"застарілий у його рядку документації протягом досить тривалого часу. Тепер "
"він видає :exc:`DeprecationWarning` і буде повністю видалено в Python 3.5."

msgid ""
"The undocumented *endtime* argument to :meth:`subprocess.Popen.wait` should "
"not have been exposed and is hopefully not in use; it is deprecated and will "
"mostly likely be removed in Python 3.5."
msgstr ""
"Недокументований аргумент *endtime* для :meth:`subprocess.Popen.wait` не мав "
"бути відкритим і, сподіваємось, не використовується; він застарів і, швидше "
"за все, буде видалений у Python 3.5."

msgid ""
"The *strict* argument of :class:`~html.parser.HTMLParser` is deprecated."
msgstr "Аргумент *строгий* :class:`~html.parser.HTMLParser` застарів."

msgid ""
"The :mod:`plistlib` :func:`~plistlib.readPlist`, :func:`~plistlib."
"writePlist`, :func:`~plistlib.readPlistFromBytes`, and :func:`~plistlib."
"writePlistToBytes` functions are deprecated in favor of the corresponding "
"new functions :func:`~plistlib.load`, :func:`~plistlib.dump`, :func:"
"`~plistlib.loads`, and :func:`~plistlib.dumps`.  :func:`~plistlib.Data` is "
"deprecated in favor of just using the :class:`bytes` constructor."
msgstr ""
"Функції :mod:`plistlib` :func:`~plistlib.readPlist`, :func:`~plistlib."
"writePlist`, :func:`~plistlib.readPlistFromBytes` і :func:`~plistlib."
"writePlistToBytes` застаріли на користь відповідних нових функцій :func:"
"`~plistlib.load`, :func:`~plistlib.dump`, :func:`~plistlib.loads` і :func:"
"`~plistlib.dumps`. :func:`~plistlib.Data` застаріло на користь простого "
"використання конструктора :class:`bytes`."

msgid ""
"The :mod:`sysconfig` key ``SO`` is deprecated, it has been replaced by "
"``EXT_SUFFIX``."
msgstr ""
"Ключ :mod:`sysconfig` ``SO`` застарів, його замінено на ``EXT_SUFFIX``."

msgid ""
"The ``U`` mode accepted by various ``open`` functions is deprecated. In "
"Python3 it does not do anything useful, and should be replaced by "
"appropriate uses of :class:`io.TextIOWrapper` (if needed) and its *newline* "
"argument."
msgstr ""
"Режим ``U``, прийнятий різними функціями ``open``, застарів. У Python3 це не "
"робить нічого корисного, і його слід замінити відповідним використанням :"
"class:`io.TextIOWrapper` (якщо потрібно) і його аргументу *нового рядка*."

msgid ""
"The *parser* argument of :func:`xml.etree.ElementTree.iterparse` has been "
"deprecated, as has the *html* argument of :func:`~xml.etree.ElementTree."
"XMLParser`.  To prepare for the removal of the latter, all arguments to "
"``XMLParser`` should be passed by keyword."
msgstr ""
"Аргумент *parser* :func:`xml.etree.ElementTree.iterparse` не підтримується, "
"як і аргумент *html* :func:`~xml.etree.ElementTree.XMLParser`. Щоб "
"підготуватися до видалення останнього, усі аргументи ``XMLParser`` повинні "
"бути передані за ключовим словом."

msgid "Deprecated Features"
msgstr "Застарілі функції"

msgid ""
"Running :ref:`idle` with the ``-n`` flag (no subprocess) is deprecated. "
"However, the feature will not be removed until :issue:`18823` is resolved."
msgstr ""
"Запуск :ref:`idle` з прапором ``-n`` (без підпроцесу) застарів. Однак цю "
"функцію не буде видалено, доки не буде вирішено :issue:`18823`."

msgid ""
"The site module adding a \"site-python\" directory to sys.path, if it "
"exists, is deprecated (:issue:`19375`)."
msgstr ""
"Модуль сайту, який додає каталог \"site-python\" до sys.path, якщо він "
"існує, вважається застарілим (:issue:`19375`)."

msgid "Removed"
msgstr "Видалено"

msgid "Operating Systems No Longer Supported"
msgstr "Операційні системи більше не підтримуються"

msgid ""
"Support for the following operating systems has been removed from the source "
"and build tools:"
msgstr ""
"Підтримку таких операційних систем видалено з джерела та інструментів збірки:"

msgid "OS/2 (:issue:`16135`)."
msgstr "OS/2 (:issue:`16135`)."

msgid "Windows 2000 (changeset e52df05b496a)."
msgstr "Windows 2000 (набір змін e52df05b496a)."

msgid ""
"Windows systems where ``COMSPEC`` points to ``command.com`` (:issue:`14470`)."
msgstr ""
"Системи Windows, де ``COMSPEC`` вказує на ``command.com`` (:issue:`14470`)."

msgid "VMS (:issue:`16136`)."
msgstr "VMS (:issue:`16136`)."

msgid "API and Feature Removals"
msgstr "Видалення API та функцій"

msgid ""
"The following obsolete and previously deprecated APIs and features have been "
"removed:"
msgstr ""
"Наступні застарілі API та функції, які раніше не підтримувалися, видалено:"

msgid ""
"The unmaintained ``Misc/TextMate`` and ``Misc/vim`` directories have been "
"removed (see the `devguide <https://devguide.python.org>`_ for suggestions "
"on what to use instead)."
msgstr ""
"Непідтримувані каталоги ``Misc/TextMate`` і ``Misc/vim`` було видалено "
"(перегляньте `devguide <https://devguide.python.org>`_, щоб дізнатися, що "
"використовувати натомість)."

msgid ""
"The ``SO`` makefile macro is removed (it was replaced by the "
"``SHLIB_SUFFIX`` and ``EXT_SUFFIX`` macros) (:issue:`16754`)."
msgstr ""
"Макрос makefile ``SO`` видалено (його замінено макросами ``SHLIB_SUFFIX`` і "
"``EXT_SUFFIX``) (:issue:`16754`)."

msgid ""
"The ``PyThreadState.tick_counter`` field has been removed; its value has "
"been meaningless since Python 3.2, when the \"new GIL\" was introduced (:"
"issue:`19199`)."
msgstr ""
"Поле ``PyThreadState.tick_counter`` було видалено; його значення не має "
"сенсу з Python 3.2, коли було представлено \"новий GIL\" (:issue:`19199`)."

msgid ""
"``PyLoader`` and ``PyPycLoader`` have been removed from :mod:`importlib`. "
"(Contributed by Taras Lyapun in :issue:`15641`.)"
msgstr ""
"``PyLoader`` і ``PyPycLoader`` видалено з :mod:`importlib`. (Надав Тарас "
"Ляпун у :issue:`15641`.)"

msgid ""
"The *strict* argument to :class:`~http.client.HTTPConnection` and :class:"
"`~http.client.HTTPSConnection` has been removed.  HTTP 0.9-style \"Simple "
"Responses\" are no longer supported."
msgstr ""
"Аргумент *строгий* для :class:`~http.client.HTTPConnection` і :class:`~http."
"client.HTTPSConnection` видалено. \"Прості відповіді\" у стилі HTTP 0.9 "
"більше не підтримуються."

msgid ""
"The deprecated :mod:`urllib.request.Request` getter and setter methods "
"``add_data``, ``has_data``, ``get_data``, ``get_type``, ``get_host``, "
"``get_selector``, ``set_proxy``, ``get_origin_req_host``, and "
"``is_unverifiable`` have been removed (use direct attribute access instead)."
msgstr ""
"Застарілі :mod:`urllib.request.Request` методи отримання та встановлення "
"``add_data``, ``has_data``, ``get_data``, ``get_type``, ``get_host``, "
"``get_selector``, ``set_proxy``, ``get_origin_req_host`` і "
"``is_unverifiable`` були видалені (замість цього використовуйте прямий "
"доступ до атрибутів)."

msgid ""
"Support for loading the deprecated ``TYPE_INT64`` has been removed from :mod:"
"`marshal`.  (Contributed by Dan Riti in :issue:`15480`.)"
msgstr ""
"Підтримку завантаження застарілого ``TYPE_INT64`` було видалено з :mod:"
"`marshal`. (Надав Ден Ріті в :issue:`15480`.)"

msgid ""
":class:`inspect.Signature`: positional-only parameters are now required to "
"have a valid name."
msgstr ""
":class:`inspect.Signature`: лише позиційні параметри тепер повинні мати "
"дійсне ім’я."

msgid ""
":meth:`object.__format__` no longer accepts non-empty format strings, it now "
"raises a :exc:`TypeError` instead.  Using a non-empty string has been "
"deprecated since Python 3.2.  This change has been made to prevent a "
"situation where previously working (but incorrect) code would start failing "
"if an object gained a __format__ method, which means that your code may now "
"raise a :exc:`TypeError` if you are using an ``'s'`` format code with "
"objects that do not have a __format__ method that handles it.  See :issue:"
"`7994` for background."
msgstr ""
":meth:`object.__format__` більше не приймає непорожні рядки формату, замість "
"цього він викликає :exc:`TypeError`. Використання непорожнього рядка "
"застаріло з Python 3.2. Цю зміну було внесено, щоб запобігти ситуації, коли "
"раніше працюючий (але неправильний) код почав виходити з ладу, якщо об’єкт "
"отримав метод __format__, що означає, що ваш код тепер може викликати :exc:"
"`TypeError`, якщо ви використовуєте Код формату ``'s'`` з об'єктами, які не "
"мають методу __format__, який його обробляє. Див. :issue:`7994` для "
"довідкової інформації."

msgid ""
":meth:`difflib.SequenceMatcher.isbjunk` and :meth:`difflib.SequenceMatcher."
"isbpopular` were deprecated in 3.2, and have now been removed: use ``x in sm."
"bjunk`` and ``x in sm.bpopular``, where *sm* is a :class:`~difflib."
"SequenceMatcher` object (:issue:`13248`)."
msgstr ""
":meth:`difflib.SequenceMatcher.isbjunk` і :meth:`difflib.SequenceMatcher."
"isbpopular` були застарілими в 3.2, і тепер їх видалено: використовуйте ``x "
"в sm.bjunk`` і ``x в sm.bpopular``, де *sm* є об’єктом :class:`~difflib."
"SequenceMatcher` (:issue:`13248`)."

msgid "Code Cleanups"
msgstr "Очищення коду"

msgid ""
"The unused and undocumented internal ``Scanner`` class has been removed from "
"the :mod:`pydoc` module."
msgstr ""
"Невикористаний і недокументований внутрішній клас ``Scanner`` було видалено "
"з модуля :mod:`pydoc`."

msgid ""
"The private and effectively unused ``_gestalt`` module has been removed, "
"along with the private :mod:`platform` functions ``_mac_ver_lookup``, "
"``_mac_ver_gstalt``, and ``_bcd2str``, which would only have ever been "
"called on badly broken OSX systems (see :issue:`18393`)."
msgstr ""
"Приватний і фактично невикористаний модуль ``_gestalt`` було видалено разом "
"із приватними функціями :mod:`platform` ``_mac_ver_lookup``, "
"``_mac_ver_gstalt`` і ``_bcd2str``, які б тільки коли-небудь викликано на "
"сильно зламаних системах OSX (див. :issue:`18393`)."

msgid ""
"The hardcoded copies of certain :mod:`stat` constants that were included in "
"the :mod:`tarfile` module namespace have been removed."
msgstr ""
"Жорстко закодовані копії певних констант :mod:`stat`, які були включені в "
"простір імен модуля :mod:`tarfile`, було видалено."

msgid "Porting to Python 3.4"
msgstr "Перенесення на Python 3.4"

msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"У цьому розділі наведено описані раніше зміни та інші виправлення помилок, "
"які можуть потребувати змін у вашому коді."

msgid "Changes in 'python' Command Behavior"
msgstr "Зміни в поведінці команд \"python\"."

msgid ""
"In a posix shell, setting the :envvar:`PATH` environment variable to an "
"empty value is equivalent to not setting it at all.  However, setting :"
"envvar:`PYTHONPATH` to an empty value was *not* equivalent to not setting it "
"at all: setting :envvar:`PYTHONPATH` to an empty value was equivalent to "
"setting it to ``.``, which leads to confusion when reasoning by analogy to "
"how :envvar:`PATH` works.  The behavior now conforms to the posix convention "
"for :envvar:`PATH`."
msgstr ""
"У posix-оболонці встановлення змінної середовища :envvar:`PATH` на порожнє "
"значення еквівалентно невстановленню її взагалі. Однак встановлення :envvar:"
"`PYTHONPATH` на порожнє значення *не* еквівалентно тому, що його не "
"встановлювати взагалі: встановлення :envvar:`PYTHONPATH` на порожнє значення "
"було еквівалентно встановленню його на ``.``, що призводить до до плутанини, "
"міркуючи за аналогією з тим, як працює :envvar:`PATH`. Поведінка тепер "
"відповідає угоді posix для :envvar:`PATH`."

msgid ""
"The [X refs, Y blocks] output of a debug (``--with-pydebug``) build of the "
"CPython interpreter is now off by default.  It can be re-enabled using the "
"``-X showrefcount`` option.  (Contributed by Ezio Melotti in :issue:`17323`.)"
msgstr ""
"[X refs, Y blocks] вихід збірки налагодження (``--with-pydebug``) "
"інтерпретатора CPython тепер вимкнено за замовчуванням. Його можна повторно "
"ввімкнути за допомогою параметра ``-X showrefcount``. (Надав Еціо Мелотті в :"
"issue:`17323`.)"

msgid ""
"The python command and most stdlib scripts (as well as :mod:`argparse`) now "
"output ``--version`` information to ``stdout`` instead of ``stderr`` (for "
"issue list see :ref:`other-improvements-3.4` above)."
msgstr ""
"Команда python і більшість сценаріїв stdlib (а також :mod:`argparse`) тепер "
"виводять інформацію ``--version`` на ``stdout`` замість ``stderr`` (перелік "
"проблем див. :ref:`other-improvements-3.4` вище)."

msgid "Changes in the Python API"
msgstr "Зміни в API Python"

msgid ""
"The ABCs defined in :mod:`importlib.abc` now either raise the appropriate "
"exception or return a default value instead of raising :exc:"
"`NotImplementedError` blindly. This will only affect code calling :func:"
"`super` and falling through all the way to the ABCs. For compatibility, "
"catch both :exc:`NotImplementedError` or the appropriate exception as needed."
msgstr ""
"ABC, визначені в :mod:`importlib.abc`, тепер або викликають відповідний "
"виняток, або повертають значення за замовчуванням замість виклику :exc:"
"`NotImplementedError` наосліп. Це вплине лише на код, що викликає :func:"
"`super` і потрапляє до ABC. Для сумісності перехопіть обидва :exc:"
"`NotImplementedError` або відповідний виняток за потреби."

msgid ""
"The module type now initializes the :attr:`__package__` and :attr:"
"`__loader__` attributes to ``None`` by default. To determine if these "
"attributes were set in a backwards-compatible fashion, use e.g. "
"``getattr(module, '__loader__', None) is not None``.  (:issue:`17115`.)"
msgstr ""
"Тип модуля тепер ініціалізує атрибути :attr:`__package__` і :attr:"
"`__loader__` як ``None`` за замовчуванням. Щоб визначити, чи ці атрибути "
"були встановлені у зворотній сумісності, використовуйте, наприклад. "
"``getattr(module, '__loader__', None) не є None``. (:issue:`17115`.)"

msgid ""
":meth:`importlib.util.module_for_loader` now sets ``__loader__`` and "
"``__package__`` unconditionally to properly support reloading. If this is "
"not desired then you will need to set these attributes manually. You can "
"use :func:`importlib.util.module_to_load` for module management."
msgstr ""
":meth:`importlib.util.module_for_loader` тепер безумовно встановлює "
"``__loader__`` і ``__package__`` для належної підтримки перезавантаження. "
"Якщо це небажано, вам потрібно буде встановити ці атрибути вручну. Ви можете "
"використовувати :func:`importlib.util.module_to_load` для керування модулями."

msgid ""
"Import now resets relevant attributes (e.g. ``__name__``, ``__loader__``, "
"``__package__``, ``__file__``, ``__cached__``) unconditionally when "
"reloading. Note that this restores a pre-3.3 behavior in that it means a "
"module is re-found when re-loaded (:issue:`19413`)."
msgstr ""
"Імпорт тепер безумовно скидає відповідні атрибути (наприклад, ``__name__``, "
"``__loader__``, ``__package__``, ``__file__``, ``__cached__``) під час "
"перезавантаження. Зауважте, що це відновлює поведінку до 3.3, оскільки це "
"означає, що модуль повторно знайдено під час повторного завантаження (:issue:"
"`19413`)."

msgid ""
"Frozen packages no longer set ``__path__`` to a list containing the package "
"name, they now set it to an empty list.  The previous behavior could cause "
"the import system to do the wrong thing on submodule imports if there was "
"also a directory with the same name as the frozen package.  The correct way "
"to determine if a module is a package or not is to use ``hasattr(module, "
"'__path__')`` (:issue:`18065`)."
msgstr ""
"Заморожені пакунки більше не встановлюють ``__path__`` як список, що містить "
"назву пакета, тепер вони встановлюють його як порожній список. Попередня "
"поведінка могла спричинити неправильну дію системи імпорту під час імпорту "
"підмодуля, якщо існував також каталог із такою ж назвою, як і заморожений "
"пакет. Правильний спосіб визначити, чи є модуль пакетом чи ні, це "
"використати ``hasattr(module, '__path__')`` (:issue:`18065`)."

msgid ""
"Frozen modules no longer define a ``__file__`` attribute. It's semantically "
"incorrect for frozen modules to set the attribute as they are not loaded "
"from any explicit location. If you must know that a module comes from frozen "
"code then you can see if the module's ``__spec__.location`` is set to "
"``'frozen'``, check if the loader is a subclass of :class:`importlib."
"machinery.FrozenImporter`, or if Python 2 compatibility is necessary you can "
"use :func:`imp.is_frozen`."
msgstr ""
"Заморожені модулі більше не визначають атрибут ``__file__``. Для заморожених "
"модулів семантично неправильно встановлювати атрибут, оскільки вони не "
"завантажуються з будь-якого явного місця. Якщо вам потрібно знати, що модуль "
"походить із замороженого коду, ви можете побачити, чи ``__spec__.location`` "
"модуля встановлено на ``'frozen'``, перевірте, чи завантажувач є підкласом :"
"class:`importlib. machinery.FrozenImporter`, або, якщо потрібна сумісність з "
"Python 2, ви можете використовувати :func:`imp.is_frozen`."

msgid ""
":func:`py_compile.compile` now raises :exc:`FileExistsError` if the file "
"path it would write to is a symlink or a non-regular file. This is to act as "
"a warning that import will overwrite those files with a regular file "
"regardless of what type of file path they were originally."
msgstr ""
":func:`py_compile.compile` тепер викликає :exc:`FileExistsError`, якщо шлях "
"до файлу, куди він буде писати, є символічним посиланням або незвичайним "
"файлом. Це є попередженням про те, що імпортування перезапише ці файли "
"звичайним файлом незалежно від того, яким типом шляху до файлу вони були "
"спочатку."

msgid ""
":meth:`importlib.abc.SourceLoader.get_source` no longer raises :exc:"
"`ImportError` when the source code being loaded triggers a :exc:"
"`SyntaxError` or :exc:`UnicodeDecodeError`. As :exc:`ImportError` is meant "
"to be raised only when source code cannot be found but it should, it was "
"felt to be over-reaching/overloading of that meaning when the source code is "
"found but improperly structured. If you were catching ImportError before and "
"wish to continue to ignore syntax or decoding issues, catch all three "
"exceptions now."
msgstr ""
":meth:`importlib.abc.SourceLoader.get_source` більше не викликає :exc:"
"`ImportError`, коли вихідний код, що завантажується, викликає :exc:"
"`SyntaxError` або :exc:`UnicodeDecodeError`. Оскільки помилка :exc:"
"`ImportError` має виникати лише тоді, коли вихідний код не може бути "
"знайдений, але він має бути знайдений, було зрозуміло, що це означає "
"надмірне/перевантажене значення, коли вихідний код знайдено, але неналежно "
"структурований. Якщо ви раніше виявляли помилку ImportError і бажаєте й "
"надалі ігнорувати проблеми з синтаксисом або декодуванням, виловіть усі три "
"винятки зараз."

msgid ""
":func:`functools.update_wrapper` and :func:`functools.wraps` now correctly "
"set the ``__wrapped__`` attribute to the function being wrapped, even if "
"that function also had its ``__wrapped__`` attribute set. This means "
"``__wrapped__`` attributes now correctly link a stack of decorated functions "
"rather than every ``__wrapped__`` attribute in the chain referring to the "
"innermost function. Introspection libraries that assumed the previous "
"behaviour was intentional can use :func:`inspect.unwrap` to access the first "
"function in the chain that has no ``__wrapped__`` attribute."
msgstr ""
":func:`functools.update_wrapper` і :func:`functools.wraps` тепер правильно "
"встановлюють атрибут ``__wrapped__`` для функції, яку обгортають, навіть "
"якщо ця функція також має свій атрибут ``__wrapped__``. Це означає, що "
"атрибути ``__wrapped__`` тепер правильно пов’язують стек декорованих "
"функцій, а не кожен атрибут ``__wrapped__`` у ланцюжку, який посилається на "
"найвнутрішню функцію. Бібліотеки самоаналізу, які припускали, що попередня "
"поведінка була навмисною, можуть використовувати :func:`inspect.unwrap` для "
"доступу до першої функції в ланцюжку, яка не має атрибута ``__wrapped__``."

msgid ""
":func:`inspect.getfullargspec` has been reimplemented on top of :func:"
"`inspect.signature` and hence handles a much wider variety of callable "
"objects than it did in the past. It is expected that additional builtin and "
"extension module callables will gain signature metadata over the course of "
"the Python 3.4 series. Code that assumes that :func:`inspect.getfullargspec` "
"will fail on non-Python callables may need to be adjusted accordingly."
msgstr ""
":func:`inspect.getfullargspec` було повторно реалізовано поверх :func:"
"`inspect.signature` і, отже, обробляє набагато більше різноманітних "
"викликаних об’єктів, ніж це було в минулому. Очікується, що додаткові "
"вбудовані модулі та модулі розширення отримають метадані підпису протягом "
"серії Python 3.4. Код, який припускає, що :func:`inspect.getfullargspec` не "
"вдасться викликати виклики, відмінні від Python, може потребувати "
"відповідних змін."

msgid ""
":class:`importlib.machinery.PathFinder` now passes on the current working "
"directory to objects in :data:`sys.path_hooks` for the empty string. This "
"results in :data:`sys.path_importer_cache` never containing ``''``, thus "
"iterating through :data:`sys.path_importer_cache` based on :data:`sys.path` "
"will not find all keys. A module's ``__file__`` when imported in the current "
"working directory will also now have an absolute path, including when using "
"``-m`` with the interpreter (except for ``__main__.__file__`` when a script "
"has been executed directly using a relative path) (Contributed by Brett "
"Cannon in :issue:`18416`).  is specified on the command-line) (:issue:"
"`18416`)."
msgstr ""
":class:`importlib.machinery.PathFinder` тепер передає поточний робочий "
"каталог об’єктам у :data:`sys.path_hooks` для порожнього рядка. Це "
"призводить до того, що :data:`sys.path_importer_cache` ніколи не містить "
"``''``, тому ітерація через :data:`sys.path_importer_cache` на основі :data:"
"`sys.path` не знайде всіх ключів. ``__file__`` модуля під час імпорту в "
"поточний робочий каталог також тепер матиме абсолютний шлях, включно з "
"використанням ``-m`` з інтерпретатором (за винятком ``__main__.__file__``, "
"коли сценарій було виконано безпосередньо за допомогою відносного шляху) "
"(надано Бреттом Кенноном у :issue:`18416`). вказується в командному рядку) (:"
"issue:`18416`)."

msgid ""
"The removal of the *strict* argument to :class:`~http.client.HTTPConnection` "
"and :class:`~http.client.HTTPSConnection` changes the meaning of the "
"remaining arguments if you are specifying them positionally rather than by "
"keyword.  If you've been paying attention to deprecation warnings your code "
"should already be specifying any additional arguments via keywords."
msgstr ""
"Видалення аргументу *strict* для :class:`~http.client.HTTPConnection` і :"
"class:`~http.client.HTTPSConnection` змінює значення решти аргументів, якщо "
"ви вказуєте їх позиційно, а не за ключовим словом. Якщо ви звертали увагу на "
"застереження щодо застарілості, ваш код уже має вказувати додаткові "
"аргументи за допомогою ключових слів."

msgid ""
"Strings between ``from __future__ import ...`` statements now *always* raise "
"a :exc:`SyntaxError`.  Previously if there was no leading docstring, an "
"interstitial string would sometimes be ignored.  This brings CPython into "
"compliance with the language spec; Jython and PyPy already were. (:issue:"
"`17434`)."
msgstr ""
"Рядки між операторами ``from __future__ import ...`` тепер *завжди* "
"викликають :exc:`SyntaxError`. Раніше, якщо не було початкового рядка "
"документації, проміжний рядок іноді ігнорувався. Це приводить CPython у "
"відповідність зі специфікацією мови; Jython і PyPy вже були. (:issue:"
"`17434`)."

msgid ""
":meth:`ssl.SSLSocket.getpeercert` and :meth:`ssl.SSLSocket.do_handshake` now "
"raise an :exc:`OSError` with ``ENOTCONN`` when the ``SSLSocket`` is not "
"connected, instead of the previous behavior of raising an :exc:"
"`AttributeError`.  In addition, :meth:`~ssl.SSLSocket.getpeercert` will "
"raise a :exc:`ValueError` if the handshake has not yet been done."
msgstr ""
":meth:`ssl.SSLSocket.getpeercert` і :meth:`ssl.SSLSocket.do_handshake` тепер "
"викликають :exc:`OSError` з ``ENOTCONN``, коли ``SSLSocket`` не підключено, "
"замість попередня поведінка виклику :exc:`AttributeError`. Крім того, :meth:"
"`~ssl.SSLSocket.getpeercert` викличе :exc:`ValueError`, якщо рукостискання "
"ще не виконано."

msgid ""
":func:`base64.b32decode` now raises a :exc:`binascii.Error` when the input "
"string contains non-b32-alphabet characters, instead of a :exc:`TypeError`.  "
"This particular :exc:`TypeError` was missed when the other :exc:"
"`TypeError`\\ s were converted.  (Contributed by Serhiy Storchaka in :issue:"
"`18011`.)  Note: this change was also inadvertently applied in Python 3.3.3."
msgstr ""
":func:`base64.b32decode` тепер викликає :exc:`binascii.Error`, коли вхідний "
"рядок містить символи, відмінні від b32-алфавіту, замість :exc:`TypeError`. "
"Ця конкретна :exc:`TypeError` була пропущена під час перетворення інших :exc:"
"`TypeError`\\. (Надано Сергієм Сторчакою в :issue:`18011`.) Примітка: цю "
"зміну також було випадково застосовано в Python 3.3.3."

msgid ""
"The :attr:`~cgi.FieldStorage.file` attribute is now automatically closed "
"when the creating :class:`cgi.FieldStorage` instance is garbage collected. "
"If you were pulling the file object out separately from the :class:`cgi."
"FieldStorage` instance and not keeping the instance alive, then you should "
"either store the entire :class:`cgi.FieldStorage` instance or read the "
"contents of the file before the :class:`cgi.FieldStorage` instance is "
"garbage collected."
msgstr ""
"Атрибут :attr:`~cgi.FieldStorage.file` тепер автоматично закривається, коли "
"створюваний екземпляр :class:`cgi.FieldStorage` збирається як сміття. Якщо "
"ви витягували об’єкт файлу окремо від екземпляра :class:`cgi.FieldStorage` і "
"не зберігали екземпляр живим, то вам слід або зберегти весь екземпляр :class:"
"`cgi.FieldStorage`, або прочитати вміст файлу до того, як екземпляр :class:"
"`cgi.FieldStorage` буде зібрано сміттям."

msgid ""
"Calling ``read`` or ``write`` on a closed SSL socket now raises an "
"informative :exc:`ValueError` rather than the previous more mysterious :exc:"
"`AttributeError` (:issue:`9177`)."
msgstr ""
"Виклик ``read`` або ``write`` у закритому SSL-сокеті тепер викликає "
"інформативну :exc:`ValueError`, а не попередню більш загадкову :exc:"
"`AttributeError` (:issue:`9177`)."

msgid ""
":meth:`slice.indices` no longer produces an :exc:`OverflowError` for huge "
"values.  As a consequence of this fix, :meth:`slice.indices` now raises a :"
"exc:`ValueError` if given a negative length; previously it returned nonsense "
"values (:issue:`14794`)."
msgstr ""
":meth:`slice.indices` більше не створює :exc:`OverflowError` для великих "
"значень. Як наслідок цього виправлення, :meth:`slice.indices` тепер "
"викликає :exc:`ValueError`, якщо задано від’ємну довжину; раніше він "
"повертав безглузді значення (:issue:`14794`)."

msgid ""
"The :class:`complex` constructor, unlike the :mod:`cmath` functions, was "
"incorrectly accepting :class:`float` values if an object's ``__complex__`` "
"special method returned one.  This now raises a :exc:`TypeError`. (:issue:"
"`16290`.)"
msgstr ""
"Конструктор :class:`complex`, на відміну від функцій :mod:`cmath`, "
"неправильно приймав значення :class:`float`, якщо спеціальний метод "
"``__complex__`` об’єкта повертав одне. Тепер це викликає :exc:`TypeError`. (:"
"issue:`16290`.)"

msgid ""
"The :class:`int` constructor in 3.2 and 3.3 erroneously accepts :class:"
"`float` values for the *base* parameter.  It is unlikely anyone was doing "
"this, but if so, it will now raise a :exc:`TypeError` (:issue:`16772`)."
msgstr ""
"Конструктор :class:`int` у версіях 3.2 і 3.3 помилково приймає значення :"
"class:`float` для параметра *base*. Навряд чи хтось це робив, але якщо так, "
"то тепер це викличе :exc:`TypeError` (:issue:`16772`)."

msgid ""
"Defaults for keyword-only arguments are now evaluated *after* defaults for "
"regular keyword arguments, instead of before.  Hopefully no one wrote any "
"code that depends on the previous buggy behavior (:issue:`16967`)."
msgstr ""
"Значення за замовчуванням для аргументів лише ключових слів тепер оцінюються "
"*після* значень за замовчуванням для звичайних аргументів ключових слів, а "
"не раніше. Сподіваюся, ніхто не написав код, який би залежав від попередньої "
"поведінки з помилками (:issue:`16967`)."

msgid ""
"Stale thread states are now cleared after :func:`~os.fork`.  This may cause "
"some system resources to be released that previously were incorrectly kept "
"perpetually alive (for example, database connections kept in thread-local "
"storage).  (:issue:`17094`.)"
msgstr ""
"Застарілі стани потоку тепер очищаються після :func:`~os.fork`. Це може "
"спричинити звільнення деяких системних ресурсів, які раніше неправильно "
"зберігалися безперервно активними (наприклад, підключення до бази даних, що "
"зберігаються в локальному сховищі потоку). (:issue:`17094`.)"

msgid ""
"Parameter names in ``__annotations__`` dicts are now mangled properly, "
"similarly to ``__kwdefaults__``.  (Contributed by Yury Selivanov in :issue:"
"`20625`.)"
msgstr ""
"Назви параметрів у ``__annotations__`` dicts тепер змінюються належним "
"чином, подібно до ``__kwdefaults__``. (Надав Юрій Селіванов у :issue:"
"`20625`.)"

msgid ""
":attr:`hashlib.hash.name` now always returns the identifier in lower case. "
"Previously some builtin hashes had uppercase names, but now that it is a "
"formal public interface the naming has been made consistent (:issue:`18532`)."
msgstr ""
":attr:`hashlib.hash.name` тепер завжди повертає ідентифікатор у нижньому "
"регістрі. Раніше деякі вбудовані хеші мали назви у верхньому регістрі, але "
"тепер, коли це офіційний загальнодоступний інтерфейс, іменування стало "
"узгодженим (:issue:`18532`)."

msgid ""
"Because :mod:`unittest.TestSuite` now drops references to tests after they "
"are run, test harnesses that re-use a :class:`~unittest.TestSuite` to re-run "
"a set of tests may fail.   Test suites should not be re-used in this fashion "
"since it means state is retained between test runs, breaking the test "
"isolation that :mod:`unittest` is designed to provide.  However, if the lack "
"of isolation is considered acceptable, the old behavior can be restored by "
"creating a :mod:`~unittest.TestSuite` subclass that defines a "
"``_removeTestAtIndex`` method that does nothing (see :meth:`.TestSuite."
"__iter__`) (:issue:`11798`)."
msgstr ""
"Оскільки :mod:`unittest.TestSuite` тепер видаляє посилання на тести після їх "
"виконання, тестові пакети, які повторно використовують :class:`~unittest."
"TestSuite` для повторного запуску набору тестів, можуть не працювати. Набори "
"тестів не слід повторно використовувати таким чином, оскільки це означає, що "
"стан зберігається між тестовими запусками, порушуючи ізоляцію тесту, яку :"
"mod:`unittest` створено для забезпечення. Однак, якщо відсутність ізоляції "
"вважається прийнятною, стару поведінку можна відновити шляхом створення "
"підкласу :mod:`~unittest.TestSuite`, який визначає метод "
"``_removeTestAtIndex``, який нічого не робить (див. :meth:`.TestSuite ."
"__iter__`) (:issue:`11798`)."

msgid ""
":mod:`unittest` now uses :mod:`argparse` for command line parsing.  There "
"are certain invalid command forms that used to work that are no longer "
"allowed; in theory this should not cause backward compatibility issues since "
"the disallowed command forms didn't make any sense and are unlikely to be in "
"use."
msgstr ""
":mod:`unittest` тепер використовує :mod:`argparse` для аналізу командного "
"рядка. Існують певні недійсні форми команд, які раніше працювали, але більше "
"не дозволені; теоретично це не повинно викликати проблем із зворотною "
"сумісністю, оскільки заборонені форми команд не мали жодного сенсу та навряд "
"чи будуть використовуватися."

msgid ""
"The :func:`re.split`, :func:`re.findall`, and :func:`re.sub` functions, and "
"the :meth:`~re.match.group` and :meth:`~re.match.groups` methods of "
"``match`` objects now always return a *bytes* object when the string to be "
"matched is a :term:`bytes-like object`.  Previously the return type matched "
"the input type, so if your code was depending on the return value being, "
"say, a ``bytearray``, you will need to change your code."
msgstr ""
"Функції :func:`re.split`, :func:`re.findall` і :func:`re.sub`, а також :meth:"
"`~re.match.group` і Методи :meth:`~re.match.groups` об’єктів ``match`` тепер "
"завжди повертають об’єкт *bytes*, коли рядок, який потрібно знайти, є :term:"
"`bytes-like object`. Раніше тип повернення відповідав типу введення, тому, "
"якщо ваш код залежав від значення, яке повертається, скажімо, як "
"``bytearray``, вам потрібно буде змінити свій код."

msgid ""
":mod:`audioop` functions now raise an error immediately if passed string "
"input, instead of failing randomly later on (:issue:`16685`)."
msgstr ""
"Функції :mod:`audioop` тепер викликають помилку відразу після введення "
"рядка, замість того, щоб випадково виходити з ладу пізніше (:issue:`16685`)."

msgid ""
"The new *convert_charrefs* argument to :class:`~html.parser.HTMLParser` "
"currently defaults to ``False`` for backward compatibility, but will "
"eventually be changed to default to ``True``.  It is recommended that you "
"add this keyword, with the appropriate value, to any :class:`~html.parser."
"HTMLParser` calls in your code (:issue:`13633`)."
msgstr ""
"Новий аргумент *convert_charrefs* для :class:`~html.parser.HTMLParser` "
"наразі має значення ``False`` для зворотної сумісності, але з часом буде "
"змінено на ``True``. Рекомендовано додати це ключове слово з відповідним "
"значенням до будь-яких викликів :class:`~html.parser.HTMLParser` у вашому "
"коді (:issue:`13633`)."

msgid ""
"Since the *digestmod* argument to the :func:`hmac.new` function will in the "
"future have no default, all calls to :func:`hmac.new` should be changed to "
"explicitly specify a *digestmod* (:issue:`17276`)."
msgstr ""
"Оскільки аргумент *digestmod* для функції :func:`hmac.new` у майбутньому не "
"матиме значення за замовчуванням, усі виклики до :func:`hmac.new` слід "
"змінити, щоб явно вказати *digestmod* (:issue:`17276`)."

msgid ""
"Calling :func:`sysconfig.get_config_var` with the ``SO`` key, or looking "
"``SO`` up in the results of a call to :func:`sysconfig.get_config_vars` is "
"deprecated.  This key should be replaced by ``EXT_SUFFIX`` or "
"``SHLIB_SUFFIX``, depending on the context (:issue:`19555`)."
msgstr ""
"Виклик :func:`sysconfig.get_config_var` за допомогою ключа ``SO`` або пошук "
"``SO`` у результатах виклику :func:`sysconfig.get_config_vars` є застарілим. "
"Цей ключ слід замінити на ``EXT_SUFFIX`` або ``SHLIB_SUFFIX``, залежно від "
"контексту (:issue:`19555`)."

msgid ""
"Any calls to ``open`` functions that specify ``U`` should be modified. ``U`` "
"is ineffective in Python3 and will eventually raise an error if used. "
"Depending on the function, the equivalent of its old Python2 behavior can be "
"achieved using either a *newline* argument, or if necessary by wrapping the "
"stream in :mod:`~io.TextIOWrapper` to use its *newline* argument (:issue:"
"`15204`)."
msgstr ""
"Будь-які виклики функцій ``open``, які вказують ``U``, слід змінити. ``U`` "
"неефективний у Python3 і зрештою викличе помилку, якщо його використовувати. "
"Залежно від функції, еквівалент її старої поведінки Python2 може бути "
"досягнутий за допомогою аргументу *нового рядка* або, якщо необхідно, "
"загортання потоку в :mod:`~io.TextIOWrapper` для використання його аргументу "
"*нового рядка* (:issue:`15204`)."

msgid ""
"If you use ``pyvenv`` in a script and desire that pip *not* be installed, "
"you must add ``--without-pip`` to your command invocation."
msgstr ""
"Якщо ви використовуєте ``pyvenv`` у сценарії та бажаєте, щоб pip *не* був "
"встановлений, ви повинні додати ``--without-pip`` до виклику вашої команди."

msgid ""
"The default behavior of :func:`json.dump` and :func:`json.dumps` when an "
"indent is specified has changed: it no longer produces trailing spaces after "
"the item separating commas at the ends of lines.  This will matter only if "
"you have tests that are doing white-space-sensitive comparisons of such "
"output (:issue:`16333`)."
msgstr ""
"Поведінка за замовчуванням :func:`json.dump` і :func:`json.dumps`, коли "
"вказано відступ, змінилася: він більше не створює кінцевих пробілів після "
"елемента, що розділяє коми в кінцях рядків. Це матиме значення, лише якщо у "
"вас є тести, які виконують чутливі до пробілів порівняння такого результату "
"(:issue:`16333`)."

msgid ""
":mod:`doctest` now looks for doctests in extension module ``__doc__`` "
"strings, so if your doctest test discovery includes extension modules that "
"have things that look like doctests in them you may see test failures you've "
"never seen before when running your tests (:issue:`3158`)."
msgstr ""
":mod:`doctest` тепер шукає doctests у рядках модуля розширення ``__doc__``, "
"тож якщо ваш тест doctest включає модулі розширення, які містять речі, схожі "
"на doctests, ви можете побачити помилки тестування, яких ніколи раніше не "
"бачили, коли виконання ваших тестів (:issue:`3158`)."

msgid ""
"The :mod:`collections.abc` module has been slightly refactored as part of "
"the Python startup improvements.  As a consequence of this, it is no longer "
"the case that importing :mod:`collections` automatically imports :mod:"
"`collections.abc`.  If your program depended on the (undocumented) implicit "
"import, you will need to add an explicit ``import collections.abc`` (:issue:"
"`20784`)."
msgstr ""
"Модуль :mod:`collections.abc` було дещо перероблено в рамках покращення "
"запуску Python. Як наслідок цього, імпорт :mod:`collections` автоматично "
"імпортує :mod:`collections.abc`. Якщо ваша програма залежала від "
"(недокументованого) неявного імпорту, вам потрібно буде додати явний "
"``import collections.abc`` (:issue:`20784`)."

msgid "Changes in the C API"
msgstr "Зміни в C API"

msgid ""
":c:func:`PyEval_EvalFrameEx`, :c:func:`PyObject_Repr`, and :c:func:"
"`PyObject_Str`, along with some other internal C APIs, now include a "
"debugging assertion that ensures they are not used in situations where they "
"may silently discard a currently active exception. In cases where discarding "
"the active exception is expected and desired (for example, because it has "
"already been saved locally with :c:func:`PyErr_Fetch` or is being "
"deliberately replaced with a different exception), an explicit :c:func:"
"`PyErr_Clear` call will be needed to avoid triggering the assertion when "
"invoking these operations (directly or indirectly) and running against a "
"version of Python that is compiled with assertions enabled."
msgstr ""
":c:func:`PyEval_EvalFrameEx`, :c:func:`PyObject_Repr` і :c:func:"
"`PyObject_Str`, а також деякі інші внутрішні API C тепер включають "
"твердження про налагодження, яке гарантує, що вони не використовуються в "
"ситуаціях, коли вони можуть мовчки відхилити поточний активний виняток. У "
"випадках, коли скасування активного винятку є очікуваним і бажаним "
"(наприклад, оскільки його вже було збережено локально за допомогою :c:func:"
"`PyErr_Fetch` або навмисно замінено іншим винятком), явний виклик :c:func:"
"`PyErr_Clear` буде потрібний, щоб уникнути запуску твердження під час "
"виклику цих операцій (прямо чи опосередковано) і роботи з версією Python, "
"яка скомпільована з увімкненими твердженнями."

msgid ""
":c:func:`PyErr_SetImportError` now sets :exc:`TypeError` when its **msg** "
"argument is not set. Previously only ``NULL`` was returned with no exception "
"set."
msgstr ""
":c:func:`PyErr_SetImportError` тепер встановлює :exc:`TypeError`, коли його "
"аргумент **msg** не встановлено. Раніше повертався лише ``NULL`` без набору "
"винятків."

msgid ""
"The result of the :c:data:`PyOS_ReadlineFunctionPointer` callback must now "
"be a string allocated by :c:func:`PyMem_RawMalloc` or :c:func:"
"`PyMem_RawRealloc`, or ``NULL`` if an error occurred, instead of a string "
"allocated by :c:func:`PyMem_Malloc` or :c:func:`PyMem_Realloc` (:issue:"
"`16742`)"
msgstr ""
"Результатом зворотного виклику :c:data:`PyOS_ReadlineFunctionPointer` тепер "
"має бути рядок, виділений :c:func:`PyMem_RawMalloc` або :c:func:"
"`PyMem_RawRealloc`, або ``NULL``, якщо сталася помилка, натомість рядка, "
"виділеного :c:func:`PyMem_Malloc` або :c:func:`PyMem_Realloc` (:issue:"
"`16742`)"

msgid ""
":c:func:`PyThread_set_key_value` now always set the value. In Python 3.3, "
"the function did nothing if the key already exists (if the current value is "
"a non-``NULL`` pointer)."
msgstr ""
":c:func:`PyThread_set_key_value` тепер завжди встановлює значення. У Python "
"3.3 функція нічого не робила, якщо ключ уже існує (якщо поточне значення не "
"є вказівником ``NULL``)."

msgid ""
"The ``f_tstate`` (thread state) field of the :c:type:`PyFrameObject` "
"structure has been removed to fix a bug: see :issue:`14432` for the "
"rationale."
msgstr ""
"Поле ``f_tstate`` (стан потоку) структури :c:type:`PyFrameObject` було "
"видалено, щоб виправити помилку: див. :issue:`14432` для обґрунтування."

msgid "Changed in 3.4.3"
msgstr "Змінено в 3.4.3"

msgid ""
"PEP 476: Enabling certificate verification by default for stdlib http clients"
msgstr ""
"PEP 476: увімкнення перевірки сертифіката за замовчуванням для http-клієнтів "
"stdlib"

msgid ""
":mod:`http.client` and modules which use it, such as :mod:`urllib.request` "
"and :mod:`xmlrpc.client`, will now verify that the server presents a "
"certificate which is signed by a CA in the platform trust store and whose "
"hostname matches the hostname being requested by default, significantly "
"improving security for many applications."
msgstr ""
":mod:`http.client` і модулі, які його використовують, такі як :mod:`urllib."
"request` і :mod:`xmlrpc.client`, тепер перевірятимуть, чи надає сервер "
"сертифікат, підписаний ЦС у довіреного сховища платформи, і чиє ім’я хоста "
"збігається з ім’ям хоста, яке запитується за замовчуванням, що значно "
"покращує безпеку для багатьох програм."

msgid ""
"For applications which require the old previous behavior, they can pass an "
"alternate context::"
msgstr ""
"Для програм, які вимагають старої попередньої поведінки, вони можуть "
"передавати альтернативний контекст::"
