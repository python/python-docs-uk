# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-12 16:28+0000\n"
"PO-Revision-Date: 2021-06-29 13:04+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "What's New In Python 3.3"
msgstr "Що нового в Python 3.3"

msgid ""
"This article explains the new features in Python 3.3, compared to 3.2. "
"Python 3.3 was released on September 29, 2012.  For full details, see the "
"`changelog <https://docs.python.org/3.3/whatsnew/changelog.html>`_."
msgstr ""
"У цій статті пояснюється нові функції в Python 3.3 порівняно з 3.2. Python "
"3.3 було випущено 29 вересня 2012 року. Щоб отримати повну інформацію, "
"перегляньте `журнал змін <https://docs.python.org/3.3/whatsnew/changelog."
"html>`_."

msgid ":pep:`398` - Python 3.3 Release Schedule"
msgstr ":pep:`398` - Графік випуску Python 3.3"

msgid "Summary -- Release highlights"
msgstr "Підсумок – основні моменти випуску"

msgid "New syntax features:"
msgstr "Нові функції синтаксису:"

msgid ""
"New ``yield from`` expression for :ref:`generator delegation <pep-380>`."
msgstr ""
"Новий вираз ``yield from`` для :ref:`генератора делегування <pep-380>`."

msgid "The ``u'unicode'`` syntax is accepted again for :class:`str` objects."
msgstr "Синтаксис ``u'unicode'`` знову приймається для об'єктів :class:`str`."

msgid "New library modules:"
msgstr "Нові бібліотечні модулі:"

msgid ":mod:`faulthandler` (helps debugging low-level crashes)"
msgstr ":mod:`faulthandler` (допомагає налагодити низькорівневі збої)"

msgid ""
":mod:`ipaddress` (high-level objects representing IP addresses and masks)"
msgstr ""
":mod:`ipaddress` (об'єкти високого рівня, що представляють IP-адреси та "
"маски)"

msgid ":mod:`lzma` (compress data using the XZ / LZMA algorithm)"
msgstr ":mod:`lzma` (стиснення даних за допомогою алгоритму XZ / LZMA)"

msgid ""
":mod:`unittest.mock` (replace parts of your system under test with mock "
"objects)"
msgstr ""
":mod:`unittest.mock` (замінити частини вашої тестованої системи на макетні "
"об’єкти)"

msgid ""
":mod:`venv` (Python :ref:`virtual environments <pep-405>`, as in the popular "
"``virtualenv`` package)"
msgstr ""
":mod:`venv` (Python :ref:`віртуальні середовища <pep-405>`, як у популярному "
"пакеті ``virtualenv``)"

msgid "New built-in features:"
msgstr "Нові вбудовані функції:"

msgid "Reworked :ref:`I/O exception hierarchy <pep-3151>`."
msgstr "Перероблено :ref:`ієрархію винятків вводу/виводу <pep-3151>`."

msgid "Implementation improvements:"
msgstr "Покращення реалізації:"

msgid ""
"Rewritten :ref:`import machinery <importlib>` based on :mod:`importlib`."
msgstr ""
"Переписано :ref:`import machinery <importlib>` на основі :mod:`importlib`."

msgid "More compact :ref:`unicode strings <pep-393>`."
msgstr "Більш компактні :ref:`рядки Unicode <pep-393>`."

msgid "More compact :ref:`attribute dictionaries <pep-412>`."
msgstr "Більш компактні :ref:`словники атрибутів <pep-412>`."

msgid "Significantly Improved Library Modules:"
msgstr "Значно вдосконалені бібліотечні модулі:"

msgid "C Accelerator for the :ref:`decimal <new-decimal>` module."
msgstr "C Прискорювач для модуля :ref:`decimal <new-decimal>`."

msgid ""
"Better unicode handling in the :ref:`email <new-email>` module (:term:"
"`provisional <provisional package>`)."
msgstr ""
"Краще оброблення Юнікоду в модулі :ref:`email <new-email>` (:term:"
"`provisional <provisional package>`)."

msgid "Security improvements:"
msgstr "Покращення безпеки:"

msgid "Hash randomization is switched on by default."
msgstr "Хеш-рандомізація ввімкнена за замовчуванням."

msgid "Please read on for a comprehensive list of user-facing changes."
msgstr "Будь ласка, прочитайте повний список змін, які стосуються користувача."

msgid "PEP 405: Virtual Environments"
msgstr "PEP 405: Віртуальні середовища"

msgid ""
"Virtual environments help create separate Python setups while sharing a "
"system-wide base install, for ease of maintenance.  Virtual environments "
"have their own set of private site packages (i.e. locally installed "
"libraries), and are optionally segregated from the system-wide site "
"packages.  Their concept and implementation are inspired by the popular "
"``virtualenv`` third-party package, but benefit from tighter integration "
"with the interpreter core."
msgstr ""

msgid ""
"This PEP adds the :mod:`venv` module for programmatic access, and the "
"``pyvenv`` script for command-line access and administration.  The Python "
"interpreter checks for a ``pyvenv.cfg``, file whose existence signals the "
"base of a virtual environment's directory tree."
msgstr ""
"Цей PEP додає модуль :mod:`venv` для програмного доступу та сценарій "
"``pyvenv`` для доступу до командного рядка та адміністрування. Інтерпретатор "
"Python перевіряє наявність файла ``pyvenv.cfg``, існування якого сигналізує "
"про основу дерева каталогів віртуального середовища."

msgid ":pep:`405` - Python Virtual Environments"
msgstr ":pep:`405` - Віртуальні середовища Python"

msgid "PEP written by Carl Meyer; implementation by Carl Meyer and Vinay Sajip"
msgstr ""
"PEP, написаний Карлом Майєром; реалізація Карла Мейєра та Віная Саджипа"

msgid "PEP 420: Implicit Namespace Packages"
msgstr "PEP 420: неявні пакети простору імен"

msgid ""
"Native support for package directories that don't require ``__init__.py`` "
"marker files and can automatically span multiple path segments (inspired by "
"various third party approaches to namespace packages, as described in :pep:"
"`420`)"
msgstr ""
"Вбудована підтримка каталогів пакунків, які не потребують файлів маркерів "
"``__init__.py`` і можуть автоматично охоплювати кілька сегментів шляху "
"(навіяні різними сторонніми підходами до пакетів простору імен, як описано "
"в :pep:`420`)"

msgid ":pep:`420` - Implicit Namespace Packages"
msgstr ":pep:`420` - неявні пакети простору імен"

msgid ""
"PEP written by Eric V. Smith; implementation by Eric V. Smith and Barry "
"Warsaw"
msgstr ""
"PEP, написаний Еріком В. Смітом; виконання Еріком В. Смітом і Баррі Варшау"

msgid ""
"PEP 3118: New memoryview implementation and buffer protocol documentation"
msgstr "PEP 3118: Нова реалізація memoryview і документація протоколу буфера"

msgid "The implementation of :pep:`3118` has been significantly improved."
msgstr "Реалізацію :pep:`3118` було значно покращено."

msgid ""
"The new memoryview implementation comprehensively fixes all ownership and "
"lifetime issues of dynamically allocated fields in the Py_buffer struct that "
"led to multiple crash reports. Additionally, several functions that crashed "
"or returned incorrect results for non-contiguous or multi-dimensional input "
"have been fixed."
msgstr ""
"Нова реалізація memoryview комплексно виправляє всі проблеми власності та "
"терміну служби динамічно розподілених полів у структурі Py_buffer, які "
"призвели до кількох звітів про збої. Крім того, було виправлено кілька "
"функцій, які виходили з ладу або повертали неправильні результати для "
"несуміжного або багатовимірного введення."

msgid ""
"The memoryview object now has a PEP-3118 compliant getbufferproc() that "
"checks the consumer's request type. Many new features have been added, most "
"of them work in full generality for non-contiguous arrays and arrays with "
"suboffsets."
msgstr ""
"Об’єкт memoryview тепер має сумісний з PEP-3118 getbufferproc(), який "
"перевіряє тип запиту споживача. Було додано багато нових функцій, більшість "
"із яких працюють у повному обсязі для несуміжних масивів і масивів із "
"підзсувами."

msgid ""
"The documentation has been updated, clearly spelling out responsibilities "
"for both exporters and consumers. Buffer request flags are grouped into "
"basic and compound flags. The memory layout of non-contiguous and multi-"
"dimensional NumPy-style arrays is explained."
msgstr ""
"Документацію оновлено, чітко прописані обов’язки як експортерів, так і "
"споживачів. Прапори запиту буфера згруповані в основні та складені прапори. "
"Пояснюється розташування пам’яті несуміжних і багатовимірних масивів у стилі "
"NumPy."

msgid "Features"
msgstr "особливості"

msgid ""
"All native single character format specifiers in struct module syntax "
"(optionally prefixed with '@') are now supported."
msgstr ""
"Тепер підтримуються всі рідні специфікатори односимвольного формату в "
"синтаксисі модуля struct (за бажанням із префіксом \"@\")."

msgid ""
"With some restrictions, the cast() method allows changing of format and "
"shape of C-contiguous arrays."
msgstr ""
"З деякими обмеженнями метод cast() дозволяє змінювати формат і форму C-"
"суміжних масивів."

msgid ""
"Multi-dimensional list representations are supported for any array type."
msgstr ""
"Представлення багатовимірного списку підтримуються для будь-якого типу "
"масиву."

msgid "Multi-dimensional comparisons are supported for any array type."
msgstr "Багатовимірні порівняння підтримуються для будь-якого типу масиву."

msgid ""
"One-dimensional memoryviews of hashable (read-only) types with formats B, b "
"or c are now hashable.  (Contributed by Antoine Pitrou in :issue:`13411`.)"
msgstr ""
"Одновимірні представлення пам’яті хешованих типів (тільки для читання) з "
"форматами B, b або c тепер хешуються. (Надав Антуан Пітру в :issue:`13411`.)"

msgid ""
"Arbitrary slicing of any 1-D arrays type is supported. For example, it is "
"now possible to reverse a memoryview in O(1) by using a negative step."
msgstr ""
"Підтримується довільне нарізання будь-яких типів 1-D масивів. Наприклад, "
"тепер можна змінити відображення пам’яті в O(1) за допомогою негативного "
"кроку."

msgid "API changes"
msgstr "Зміни API"

msgid "The maximum number of dimensions is officially limited to 64."
msgstr "Максимальна кількість вимірів офіційно обмежена 64."

msgid ""
"The representation of empty shape, strides and suboffsets is now an empty "
"tuple instead of ``None``."
msgstr ""
"Представлення порожньої форми, кроків і підзсувів тепер є порожнім кортежем "
"замість \"Немає\"."

msgid ""
"Accessing a memoryview element with format 'B' (unsigned bytes) now returns "
"an integer (in accordance with the struct module syntax). For returning a "
"bytes object the view must be cast to 'c' first."
msgstr ""
"Доступ до елемента memoryview у форматі \"B\" (байти без знаку) тепер "
"повертає ціле число (відповідно до синтаксису модуля struct). Для повернення "
"об’єкта bytes спочатку має бути приведено до 'c'."

msgid ""
"memoryview comparisons now use the logical structure of the operands and "
"compare all array elements by value. All format strings in struct module "
"syntax are supported. Views with unrecognised format strings are still "
"permitted, but will always compare as unequal, regardless of view contents."
msgstr ""
"Порівняння memoryview тепер використовує логічну структуру операндів і "
"порівнює всі елементи масиву за значенням. Підтримуються всі рядки формату в "
"синтаксисі модуля struct. Перегляди з нерозпізнаними рядками формату все ще "
"дозволені, але завжди порівнюватимуться як нерівні, незалежно від вмісту "
"подання."

msgid ""
"For further changes see `Build and C API Changes`_ and `Porting C code`_."
msgstr ""
"Щоб отримати додаткові зміни, перегляньте `Зміни в API збірки та C`_ і "
"`Перенесення коду C`_."

msgid "(Contributed by Stefan Krah in :issue:`10181`.)"
msgstr "(Надав Стефан Крах у :issue:`10181`.)"

msgid ":pep:`3118` - Revising the Buffer Protocol"
msgstr ":pep:`3118` - Перегляд буферного протоколу"

msgid "PEP 393: Flexible String Representation"
msgstr "PEP 393: Гнучке представлення рядків"

msgid ""
"The Unicode string type is changed to support multiple internal "
"representations, depending on the character with the largest Unicode ordinal "
"(1, 2, or 4 bytes) in the represented string.  This allows a space-efficient "
"representation in common cases, but gives access to full UCS-4 on all "
"systems.  For compatibility with existing APIs, several representations may "
"exist in parallel; over time, this compatibility should be phased out."
msgstr ""
"Тип рядка Unicode змінено для підтримки кількох внутрішніх представлень "
"залежно від символу з найбільшим порядковим номером Unicode (1, 2 або 4 "
"байти) у представленому рядку. Це забезпечує економічне представлення у "
"звичайних випадках, але дає доступ до повного UCS-4 у всіх системах. Для "
"сумісності з існуючими API кілька представлень можуть існувати паралельно; з "
"часом ця сумісність має бути припинена."

msgid "On the Python side, there should be no downside to this change."
msgstr "З боку Python ця зміна не повинна мати ніяких недоліків."

msgid ""
"On the C API side, :pep:`393` is fully backward compatible.  The legacy API "
"should remain available at least five years.  Applications using the legacy "
"API will not fully benefit of the memory reduction, or - worse - may use a "
"bit more memory, because Python may have to maintain two versions of each "
"string (in the legacy format and in the new efficient storage)."
msgstr ""
"З боку C API :pep:`393` повністю сумісний із попередніми версіями. "
"Застарілий API має бути доступним щонайменше п’ять років. Програми, які "
"використовують застарілий API, не отримають повної вигоди від зменшення "
"обсягу пам’яті або, що ще гірше, можуть використовувати трохи більше "
"пам’яті, оскільки Python, можливо, доведеться підтримувати дві версії "
"кожного рядка (у застарілому форматі та в новому ефективному сховищі)."

msgid "Functionality"
msgstr "Функціональність"

msgid "Changes introduced by :pep:`393` are the following:"
msgstr "Зміни, внесені :pep:`393`:"

msgid ""
"Python now always supports the full range of Unicode code points, including "
"non-BMP ones (i.e. from ``U+0000`` to ``U+10FFFF``).  The distinction "
"between narrow and wide builds no longer exists and Python now behaves like "
"a wide build, even under Windows."
msgstr ""
"Тепер Python завжди підтримує повний діапазон кодових точок Unicode, включно "
"з кодами, що не є BMP (тобто від ``U+0000`` до ``U+10FFFF``). Різниця між "
"вузькими та широкими збірками більше не існує, і Python тепер поводиться як "
"широка збірка, навіть під Windows."

msgid ""
"With the death of narrow builds, the problems specific to narrow builds have "
"also been fixed, for example:"
msgstr ""
"Зі смертю вузьких збірок проблеми, характерні для вузьких збірок, також були "
"виправлені, наприклад:"

msgid ""
":func:`len` now always returns 1 for non-BMP characters, so "
"``len('\\U0010FFFF') == 1``;"
msgstr ""
":func:`len` тепер завжди повертає 1 для не-BMP символів, тому "
"``len('\\U0010FFFF') == 1``;"

msgid ""
"surrogate pairs are not recombined in string literals, so "
"``'\\uDBFF\\uDFFF' != '\\U0010FFFF'``;"
msgstr ""
"сурогатні пари не комбінуються повторно в рядкових літералах, тому "
"``'\\uDBFF\\uDFFF' != '\\U0010FFFF'``;"

msgid ""
"indexing or slicing non-BMP characters returns the expected value, so "
"``'\\U0010FFFF'[0]`` now returns ``'\\U0010FFFF'`` and not ``'\\uDBFF'``;"
msgstr ""
"індексація або нарізка символів, відмінних від BMP, повертає очікуване "
"значення, тому ``'\\U0010FFFF'[0]`` тепер повертає ``'\\U0010FFFF'``, а не "
"``'\\uDBFF'``;"

msgid ""
"all other functions in the standard library now correctly handle non-BMP "
"code points."
msgstr ""
"усі інші функції стандартної бібліотеки тепер правильно обробляють точки "
"коду, відмінні від BMP."

msgid ""
"The value of :data:`sys.maxunicode` is now always ``1114111`` (``0x10FFFF`` "
"in hexadecimal).  The :c:func:`PyUnicode_GetMax` function still returns "
"either ``0xFFFF`` or ``0x10FFFF`` for backward compatibility, and it should "
"not be used with the new Unicode API (see :issue:`13054`)."
msgstr ""
"Значення :data:`sys.maxunicode` тепер завжди ``1114111`` (``0x10FFFF`` у "
"шістнадцятковій системі). Функція :c:func:`PyUnicode_GetMax` усе ще повертає "
"або ``0xFFFF``, або ``0x10FFFF`` для зворотної сумісності, і її не слід "
"використовувати з новим API Unicode (див. :issue:`13054`)."

msgid "The :file:`./configure` flag ``--with-wide-unicode`` has been removed."
msgstr "Прапорець ``--with-wide-unicode`` у :file:`./configure` видалено."

msgid "Performance and resource usage"
msgstr "Продуктивність і використання ресурсів"

msgid ""
"The storage of Unicode strings now depends on the highest code point in the "
"string:"
msgstr ""
"Зберігання рядків Unicode тепер залежить від найвищої кодової точки в рядку:"

msgid ""
"pure ASCII and Latin1 strings (``U+0000-U+00FF``) use 1 byte per code point;"
msgstr ""
"чисті рядки ASCII і Latin1 (``U+0000-U+00FF``) використовують 1 байт на "
"кодову точку;"

msgid "BMP strings (``U+0000-U+FFFF``) use 2 bytes per code point;"
msgstr "Рядки BMP (``U+0000-U+FFFF``) використовують 2 байти на кодову точку;"

msgid "non-BMP strings (``U+10000-U+10FFFF``) use 4 bytes per code point."
msgstr ""
"не-BMP-рядки (``U+10000-U+10FFFF``) використовують 4 байти на кодову точку."

msgid ""
"The net effect is that for most applications, memory usage of string storage "
"should decrease significantly - especially compared to former wide unicode "
"builds - as, in many cases, strings will be pure ASCII even in international "
"contexts (because many strings store non-human language data, such as XML "
"fragments, HTTP headers, JSON-encoded data, etc.).  We also hope that it "
"will, for the same reasons, increase CPU cache efficiency on non-trivial "
"applications. The memory usage of Python 3.3 is two to three times smaller "
"than Python 3.2, and a little bit better than Python 2.7, on a Django "
"benchmark (see the PEP for details)."
msgstr ""
"Чистий ефект полягає в тому, що для більшості програм використання пам’яті "
"для зберігання рядків має значно зменшитися – особливо порівняно з колишніми "
"широкими збірками Unicode – оскільки в багатьох випадках рядки будуть чистим "
"ASCII навіть у міжнародних контекстах (оскільки багато рядків зберігають "
"нелюдську мову дані, наприклад фрагменти XML, заголовки HTTP, дані в "
"кодуванні JSON тощо). Ми також сподіваємося, що це з тих самих причин "
"підвищить ефективність кешу ЦП у нетривіальних програмах. Використання "
"пам’яті Python 3.3 у два-три рази менше, ніж Python 3.2, і трохи краще, ніж "
"Python 2.7, за порівняльним тестом Django (докладніше див. у PEP)."

msgid ":pep:`393` - Flexible String Representation"
msgstr ":pep:`393` - Гнучке представлення рядків"

msgid ""
"PEP written by Martin von Löwis; implementation by Torsten Becker and Martin "
"von Löwis."
msgstr ""
"PEP, написаний Мартіном фон Льовісом; виконання Торстеном Беккером і "
"Мартіном фон Льовісом."

msgid "PEP 397: Python Launcher for Windows"
msgstr "PEP 397: програма запуску Python для Windows"

msgid ""
"The Python 3.3 Windows installer now includes a ``py`` launcher application "
"that can be used to launch Python applications in a version independent "
"fashion."
msgstr ""
"Інсталятор Python 3.3 Windows тепер містить програму запуску ``py``, яку "
"можна використовувати для запуску програм Python незалежно від версії."

msgid ""
"This launcher is invoked implicitly when double-clicking ``*.py`` files. If "
"only a single Python version is installed on the system, that version will "
"be used to run the file. If multiple versions are installed, the most recent "
"version is used by default, but this can be overridden by including a Unix-"
"style \"shebang line\" in the Python script."
msgstr ""
"Цей засіб запуску неявно викликається під час подвійного клацання файлів ``*."
"py``. Якщо в системі встановлено лише одну версію Python, для запуску файлу "
"використовуватиметься ця версія. Якщо встановлено декілька версій, за "
"замовчуванням використовується найновіша версія, але це можна замінити, "
"включивши в сценарій Python рядок shebang у стилі Unix."

msgid ""
"The launcher can also be used explicitly from the command line as the ``py`` "
"application. Running ``py`` follows the same version selection rules as "
"implicitly launching scripts, but a more specific version can be selected by "
"passing appropriate arguments (such as ``-3`` to request Python 3 when "
"Python 2 is also installed, or ``-2.6`` to specifically request an earlier "
"Python version when a more recent version is installed)."
msgstr ""
"Засіб запуску також можна використовувати явно з командного рядка як "
"програму ``py``. Запуск ``py`` дотримується тих самих правил вибору версії, "
"що й неявний запуск сценаріїв, але більш конкретну версію можна вибрати "
"шляхом передачі відповідних аргументів (наприклад, ``-3`` для запиту Python "
"3, коли Python 2 також встановлено, або ``-2.6`` для спеціального запиту "
"попередньої версії Python, коли встановлено новішу версію)."

msgid ""
"In addition to the launcher, the Windows installer now includes an option to "
"add the newly installed Python to the system PATH.  (Contributed by Brian "
"Curtin in :issue:`3561`.)"
msgstr ""
"Окрім засобу запуску, інсталятор Windows тепер містить опцію додавання щойно "
"встановленого Python до системного ШЛЯХУ. (Надав Браян Кертін у :issue:"
"`3561`.)"

msgid ":pep:`397` - Python Launcher for Windows"
msgstr ":pep:`397` - програма запуску Python для Windows"

msgid ""
"PEP written by Mark Hammond and Martin v. Löwis; implementation by Vinay "
"Sajip."
msgstr ""
"PEP, написаний Марком Хаммондом і Мартіном проти Льовіса; виконання Вінай "
"Саджип."

msgid "Launcher documentation: :ref:`launcher`"
msgstr "Документація програми запуску: :ref:`launcher`"

msgid "Installer PATH modification: :ref:`windows-path-mod`"
msgstr "Модифікація PATH інсталятора: :ref:`windows-path-mod`"

msgid "PEP 3151: Reworking the OS and IO exception hierarchy"
msgstr "PEP 3151: переробка ієрархії винятків ОС та вводу-виводу"

msgid ""
"The hierarchy of exceptions raised by operating system errors is now both "
"simplified and finer-grained."
msgstr ""
"Ієрархія винятків, викликаних помилками операційної системи, тепер є "
"спрощеною та детальнішою."

msgid ""
"You don't have to worry anymore about choosing the appropriate exception "
"type between :exc:`OSError`, :exc:`IOError`, :exc:`EnvironmentError`, :exc:"
"`WindowsError`, :exc:`mmap.error`, :exc:`socket.error` or :exc:`select."
"error`.  All these exception types are now only one: :exc:`OSError`.  The "
"other names are kept as aliases for compatibility reasons."
msgstr ""
"Вам більше не потрібно турбуватися про вибір відповідного типу винятку між :"
"exc:`OSError`, :exc:`IOError`, :exc:`EnvironmentError`, :exc:"
"`WindowsError`, :exc:`mmap.error`, :exc:`socket.error` або :exc:`select."
"error`. Усі типи винятків тепер лише один: :exc:`OSError`. Інші імена "
"зберігаються як псевдоніми з міркувань сумісності."

msgid ""
"Also, it is now easier to catch a specific error condition.  Instead of "
"inspecting the ``errno`` attribute (or ``args[0]``) for a particular "
"constant from the :mod:`errno` module, you can catch the adequate :exc:"
"`OSError` subclass.  The available subclasses are the following:"
msgstr ""
"Крім того, тепер простіше виявити конкретну умову помилки. Замість того, щоб "
"перевіряти атрибут ``errno`` (або ``args[0]``) для певної константи з "
"модуля :mod:`errno`, ви можете зловити відповідний підклас :exc:`OSError`. "
"Доступні наступні підкласи:"

msgid ":exc:`BlockingIOError`"
msgstr ":exc:`BlockingIOError`"

msgid ":exc:`ChildProcessError`"
msgstr ":exc:`ChildProcessError`"

msgid ":exc:`ConnectionError`"
msgstr ":exc:`ConnectionError`"

msgid ":exc:`FileExistsError`"
msgstr ":exc:`FileExistsError`"

msgid ":exc:`FileNotFoundError`"
msgstr ":exc:`FileNotFoundError`"

msgid ":exc:`InterruptedError`"
msgstr ":exc:`InterruptedError`"

msgid ":exc:`IsADirectoryError`"
msgstr ":exc:`IsADirectoryError`"

msgid ":exc:`NotADirectoryError`"
msgstr ":exc:`NotADirectoryError`"

msgid ":exc:`PermissionError`"
msgstr ":exc:`PermissionError`"

msgid ":exc:`ProcessLookupError`"
msgstr ":exc:`ProcessLookupError`"

msgid ":exc:`TimeoutError`"
msgstr ":exc:`TimeoutError`"

msgid "And the :exc:`ConnectionError` itself has finer-grained subclasses:"
msgstr "А сам :exc:`ConnectionError` має більш детальні підкласи:"

msgid ":exc:`BrokenPipeError`"
msgstr ":exc:`Помилка BrokenPipeError`"

msgid ":exc:`ConnectionAbortedError`"
msgstr ":exc:`ConnectionAbortedError`"

msgid ":exc:`ConnectionRefusedError`"
msgstr ":exc:`ConnectionRefusedError`"

msgid ":exc:`ConnectionResetError`"
msgstr ":exc:`ConnectionResetError`"

msgid ""
"Thanks to the new exceptions, common usages of the :mod:`errno` can now be "
"avoided.  For example, the following code written for Python 3.2::"
msgstr ""
"Завдяки новим виняткам тепер можна уникнути звичайного використання :mod:"
"`errno`. Наприклад, наступний код, написаний для Python 3.2::"

msgid ""
"can now be written without the :mod:`errno` import and without manual "
"inspection of exception attributes::"
msgstr ""
"тепер можна записати без імпорту :mod:`errno` і без ручної перевірки "
"атрибутів винятків:"

msgid ":pep:`3151` - Reworking the OS and IO Exception Hierarchy"
msgstr ":pep:`3151` - Переробка ієрархії винятків ОС та вводу-виводу"

msgid "PEP written and implemented by Antoine Pitrou"
msgstr "PEP написаний і реалізований Антуаном Пітру"

msgid "PEP 380: Syntax for Delegating to a Subgenerator"
msgstr "PEP 380: Синтаксис для делегування субгенератору"

msgid ""
"PEP 380 adds the ``yield from`` expression, allowing a :term:`generator` to "
"delegate part of its operations to another generator. This allows a section "
"of code containing :keyword:`yield` to be factored out and placed in another "
"generator. Additionally, the subgenerator is allowed to return with a value, "
"and the value is made available to the delegating generator."
msgstr ""
"PEP 380 додає вираз ``yield from``, дозволяючи :term:`generator` делегувати "
"частину своїх операцій іншому генератору. Це дозволяє розділити код, що "
"містить :keyword:`yield`, і розмістити його в іншому генераторі. Крім того, "
"підгенератору дозволено повертати значення, і це значення стає доступним для "
"делегуючого генератора."

msgid ""
"While designed primarily for use in delegating to a subgenerator, the "
"``yield from`` expression actually allows delegation to arbitrary "
"subiterators."
msgstr ""
"Незважаючи на те, що вираз ``yield from`` розроблено в основному для "
"використання під час делегування підгенератору, він фактично дозволяє "
"делегувати довільним субітераторам."

msgid ""
"For simple iterators, ``yield from iterable`` is essentially just a "
"shortened form of ``for item in iterable: yield item``::"
msgstr ""
"Для простих ітераторів ``yield from iterable`` по суті є лише скороченою "
"формою ``for item in iterable: yield item``::"

msgid ""
"However, unlike an ordinary loop, ``yield from`` allows subgenerators to "
"receive sent and thrown values directly from the calling scope, and return a "
"final value to the outer generator::"
msgstr ""
"Однак, на відміну від звичайного циклу, ``yield from`` дозволяє "
"підгенераторам отримувати надіслані та викинуті значення безпосередньо з "
"області виклику та повертати остаточне значення зовнішньому генератору:"

msgid ""
"The main principle driving this change is to allow even generators that are "
"designed to be used with the ``send`` and ``throw`` methods to be split into "
"multiple subgenerators as easily as a single large function can be split "
"into multiple subfunctions."
msgstr ""
"Головний принцип, що керує цією зміною, полягає в тому, щоб дозволити навіть "
"генераторам, які призначені для використання з методами ``send`` і "
"``throw``, бути розділені на кілька підгенераторів так само легко, як одну "
"велику функцію можна розділити на кілька підфункцій ."

msgid ":pep:`380` - Syntax for Delegating to a Subgenerator"
msgstr ":pep:`380` - Синтаксис для делегування підгенератору"

msgid ""
"PEP written by Greg Ewing; implementation by Greg Ewing, integrated into 3.3 "
"by Renaud Blanch, Ryan Kelly and Nick Coghlan; documentation by Zbigniew "
"Jędrzejewski-Szmek and Nick Coghlan"
msgstr ""
"PEP, написаний Грегом Юінгом; впровадження Грегом Юінгом, інтегроване в 3.3 "
"Рено Бланчем, Раяном Келлі та Ніком Когланом; документація Збігнєва "
"Єнджеєвського-Шмека та Ніка Коглана"

msgid "PEP 409: Suppressing exception context"
msgstr "PEP 409: Придушення контексту винятку"

msgid ""
"PEP 409 introduces new syntax that allows the display of the chained "
"exception context to be disabled. This allows cleaner error messages in "
"applications that convert between exception types::"
msgstr ""
"PEP 409 представляє новий синтаксис, який дозволяє вимкнути відображення "
"зв’язаного виняткового контексту. Це дозволяє очистити повідомлення про "
"помилки в програмах, які перетворюють типи винятків:"

msgid ""
"Without the ``from None`` suffix to suppress the cause, the original "
"exception would be displayed by default::"
msgstr ""
"Без суфікса ``from None`` для придушення причини вихідний виняток "
"відображатиметься за замовчуванням::"

msgid ""
"No debugging capability is lost, as the original exception context remains "
"available if needed (for example, if an intervening library has incorrectly "
"suppressed valuable underlying details)::"
msgstr ""
"Жодна можливість налагодження не втрачається, оскільки вихідний контекст "
"винятку залишається доступним, якщо це необхідно (наприклад, якщо проміжна "
"бібліотека неправильно приховала цінні основні деталі):"

msgid ":pep:`409` - Suppressing exception context"
msgstr ":pep:`409` - Придушення контексту винятків"

msgid ""
"PEP written by Ethan Furman; implemented by Ethan Furman and Nick Coghlan."
msgstr ""
"PEP, написаний Ітаном Фурманом; реалізований Ітаном Фурманом і Ніком "
"Когланом."

msgid "PEP 414: Explicit Unicode literals"
msgstr "PEP 414: Явні літерали Unicode"

msgid ""
"To ease the transition from Python 2 for Unicode aware Python applications "
"that make heavy use of Unicode literals, Python 3.3 once again supports the "
"\"``u``\" prefix for string literals. This prefix has no semantic "
"significance in Python 3, it is provided solely to reduce the number of "
"purely mechanical changes in migrating to Python 3, making it easier for "
"developers to focus on the more significant semantic changes (such as the "
"stricter default separation of binary and text data)."
msgstr ""
"Щоб полегшити перехід від Python 2 для додатків Python, які підтримують "
"Unicode і активно використовують літерали Unicode, Python 3.3 знову "
"підтримує префікс \"``u``\" для рядкових літералів. Цей префікс не має "
"семантичного значення в Python 3, він надається виключно для того, щоб "
"зменшити кількість суто механічних змін під час переходу на Python 3, що "
"полегшує розробникам зосередження на більш значущих семантичних змінах "
"(таких як суворіше розділення двійкових за замовчуванням і текстові дані)."

msgid ":pep:`414` - Explicit Unicode literals"
msgstr ":pep:`414` - Явні літерали Unicode"

msgid "PEP written by Armin Ronacher."
msgstr "PEP, автор Армін Ронашер."

msgid "PEP 3155: Qualified name for classes and functions"
msgstr "PEP 3155: Уточнена назва для класів і функцій"

msgid ""
"Functions and class objects have a new ``__qualname__`` attribute "
"representing the \"path\" from the module top-level to their definition.  "
"For global functions and classes, this is the same as ``__name__``.  For "
"other functions and classes, it provides better information about where they "
"were actually defined, and how they might be accessible from the global "
"scope."
msgstr ""
"Функції та об’єкти класу мають новий атрибут ``__qualname__``, що "
"представляє \"шлях\" від верхнього рівня модуля до їхнього визначення. Для "
"глобальних функцій і класів це те саме, що ``__name__``. Для інших функцій і "
"класів він надає кращу інформацію про те, де вони були фактично визначені, і "
"як вони можуть бути доступні з глобальної області."

msgid "Example with (non-bound) methods::"
msgstr "Приклад із (незв’язаними) методами::"

msgid "Example with nested classes::"
msgstr "Приклад із вкладеними класами::"

msgid "Example with nested functions::"
msgstr "Приклад із вкладеними функціями::"

msgid ""
"The string representation of those objects is also changed to include the "
"new, more precise information::"
msgstr ""
"Рядкове подання цих об’єктів також змінено, щоб включити нову, більш точну "
"інформацію::"

msgid ":pep:`3155` - Qualified name for classes and functions"
msgstr ":pep:`3155` - Уточнена назва для класів і функцій"

msgid "PEP written and implemented by Antoine Pitrou."
msgstr "PEP написаний і реалізований Антуаном Пітру."

msgid "PEP 412: Key-Sharing Dictionary"
msgstr "PEP 412: словник спільного використання ключів"

msgid ""
"Dictionaries used for the storage of objects' attributes are now able to "
"share part of their internal storage between each other (namely, the part "
"which stores the keys and their respective hashes).  This reduces the memory "
"consumption of programs creating many instances of non-builtin types."
msgstr ""
"Словники, які використовуються для зберігання атрибутів об’єктів, тепер "
"можуть спільно використовувати частину свого внутрішнього сховища між собою "
"(а саме ту частину, яка зберігає ключі та їхні відповідні хеші). Це зменшує "
"споживання пам’яті програмами, які створюють багато екземплярів невбудованих "
"типів."

msgid ":pep:`412` - Key-Sharing Dictionary"
msgstr ":pep:`412` - Словник зі спільним використанням ключів"

msgid "PEP written and implemented by Mark Shannon."
msgstr "PEP написав і реалізував Марк Шеннон."

msgid "PEP 362: Function Signature Object"
msgstr "PEP 362: Об’єкт підпису функції"

msgid ""
"A new function :func:`inspect.signature` makes introspection of python "
"callables easy and straightforward.  A broad range of callables is "
"supported: python functions, decorated or not, classes, and :func:`functools."
"partial` objects.  New classes :class:`inspect.Signature`, :class:`inspect."
"Parameter` and :class:`inspect.BoundArguments` hold information about the "
"call signatures, such as, annotations, default values, parameters kinds, and "
"bound arguments, which considerably simplifies writing decorators and any "
"code that validates or amends calling signatures or arguments."
msgstr ""
"Нова функція :func:`inspect.signature` робить інтроспекцію викликів Python "
"легкою та простою. Підтримується широкий діапазон викликів: функції python, "
"декоровані чи ні, класи та об’єкти :func:`functools.partial`. Нові класи :"
"class:`inspect.Signature`, :class:`inspect.Parameter` і :class:`inspect."
"BoundArguments` містять інформацію про підписи викликів, такі як анотації, "
"значення за замовчуванням, типи параметрів і зв’язані аргументи, що значно "
"спрощує написання декораторів і будь-якого коду, який перевіряє або змінює "
"підписи викликів або аргументи."

msgid ":pep:`362`: -  Function Signature Object"
msgstr ":pep:`362`: - Об'єкт підпису функції"

msgid ""
"PEP written by Brett Cannon, Yury Selivanov, Larry Hastings, Jiwon Seo; "
"implemented by Yury Selivanov."
msgstr ""
"PEP автори Бретт Кеннон, Юрій Селіванов, Ларрі Гастінгс, Джівон Сео; "
"реалізував Юрій Селіванов."

msgid "PEP 421: Adding sys.implementation"
msgstr "PEP 421: додавання sys.implementation"

msgid ""
"A new attribute on the :mod:`sys` module exposes details specific to the "
"implementation of the currently running interpreter.  The initial set of "
"attributes on :attr:`sys.implementation` are ``name``, ``version``, "
"``hexversion``, and ``cache_tag``."
msgstr ""
"Новий атрибут у модулі :mod:`sys` розкриває деталі, специфічні для "
"реалізації поточного інтерпретатора. Початковим набором атрибутів :attr:`sys."
"implementation` є ``name``, ``version``, ``hexversion`` і ``cache_tag``."

msgid ""
"The intention of ``sys.implementation`` is to consolidate into one namespace "
"the implementation-specific data used by the standard library.  This allows "
"different Python implementations to share a single standard library code "
"base much more easily.  In its initial state, ``sys.implementation`` holds "
"only a small portion of the implementation-specific data.  Over time that "
"ratio will shift in order to make the standard library more portable."
msgstr ""
"Метою ``sys.implementation`` є консолідація в один простір імен специфічних "
"для реалізації даних, які використовуються стандартною бібліотекою. Це "
"дозволяє різним реалізаціям Python набагато легше спільно використовувати "
"одну стандартну бібліотечну базу коду. У початковому стані ``sys."
"implementation`` містить лише невелику частину даних, що стосуються "
"реалізації. З часом це співвідношення зміниться, щоб зробити стандартну "
"бібліотеку більш портативною."

msgid ""
"One example of improved standard library portability is ``cache_tag``.  As "
"of Python 3.3, ``sys.implementation.cache_tag`` is used by :mod:`importlib` "
"to support :pep:`3147` compliance.  Any Python implementation that uses "
"``importlib`` for its built-in import system may use ``cache_tag`` to "
"control the caching behavior for modules."
msgstr ""
"Одним із прикладів покращеної переносимості стандартної бібліотеки є "
"``cache_tag``. Починаючи з Python 3.3, ``sys.implementation.cache_tag`` "
"використовується :mod:`importlib` для підтримки :pep:`3147` відповідності. "
"Будь-яка реалізація Python, яка використовує ``importlib`` для своєї "
"вбудованої системи імпорту, може використовувати ``cache_tag`` для керування "
"поведінкою кешування для модулів."

msgid "SimpleNamespace"
msgstr "SimpleNamespace"

msgid ""
"The implementation of ``sys.implementation`` also introduces a new type to "
"Python: :class:`types.SimpleNamespace`.  In contrast to a mapping-based "
"namespace, like :class:`dict`, ``SimpleNamespace`` is attribute-based, like :"
"class:`object`.  However, unlike ``object``, ``SimpleNamespace`` instances "
"are writable.  This means that you can add, remove, and modify the namespace "
"through normal attribute access."
msgstr ""
"Реалізація ``sys.implementation`` також вводить новий тип у Python: :class:"
"`types.SimpleNamespace`. На відміну від простору імен на основі зіставлення, "
"наприклад :class:`dict`, ``SimpleNamespace`` базується на атрибутах, як :"
"class:`object`. Однак, на відміну від ``object``, екземпляри "
"``SimpleNamespace`` доступні для запису. Це означає, що ви можете додавати, "
"видаляти та змінювати простір імен за допомогою звичайного доступу до "
"атрибутів."

msgid ":pep:`421` - Adding sys.implementation"
msgstr ":pep:`421` - Додавання sys.implementation"

msgid "PEP written and implemented by Eric Snow."
msgstr "PEP написав і реалізував Ерік Сноу."

msgid "Using importlib as the Implementation of Import"
msgstr "Використання importlib як реалізації імпорту"

msgid ""
":issue:`2377` - Replace __import__ w/ importlib.__import__ :issue:`13959` - "
"Re-implement parts of :mod:`imp` in pure Python :issue:`14605` - Make import "
"machinery explicit :issue:`14646` - Require loaders set __loader__ and "
"__package__"
msgstr ""
":issue:`2377` - Замінити __import__ на importlib.__import__ :issue:`13959` - "
"Повторно реалізувати частини :mod:`imp` на чистому Python :issue:`14605` - "
"Зробити механізм імпорту явним :issue:`14646` - Вимагати набір "
"завантажувачів __loader__ і __package__"

msgid ""
"The :func:`__import__` function is now powered by :func:`importlib."
"__import__`. This work leads to the completion of \"phase 2\" of :pep:`302`. "
"There are multiple benefits to this change. First, it has allowed for more "
"of the machinery powering import to be exposed instead of being implicit and "
"hidden within the C code. It also provides a single implementation for all "
"Python VMs supporting Python 3.3 to use, helping to end any VM-specific "
"deviations in import semantics. And finally it eases the maintenance of "
"import, allowing for future growth to occur."
msgstr ""
"Функція :func:`__import__` тепер підтримується :func:`importlib.__import__`. "
"Ця робота призводить до завершення \"фази 2\" :pep:`302`. Ця зміна має "
"багато переваг. По-перше, це дозволило відкрити більшу частину механізму, що "
"забезпечує імпорт, замість того, щоб бути неявним і прихованим у коді C. Він "
"також забезпечує єдину реалізацію для всіх віртуальних машин Python, які "
"підтримують Python 3.3, допомагаючи покласти край будь-яким специфічним для "
"віртуальних машин відхилень у семантиці імпорту. І, нарешті, це полегшує "
"підтримку імпорту, дозволяючи відбутися майбутнє зростання."

msgid ""
"For the common user, there should be no visible change in semantics.  For "
"those whose code currently manipulates import or calls import "
"programmatically, the code changes that might possibly be required are "
"covered in the `Porting Python code`_ section of this document."
msgstr ""
"Для звичайного користувача не повинно бути видимих змін у семантиці. Для "
"тих, чий код наразі керує імпортом або викликає імпорт програмно, зміни "
"коду, які можуть знадобитися, розглядаються в розділі \"Перенесення коду "
"Python\" (`Porting Python code`_) цього документа."

msgid "New APIs"
msgstr "Нові API"

msgid ""
"One of the large benefits of this work is the exposure of what goes into "
"making the import statement work. That means the various importers that were "
"once implicit are now fully exposed as part of the :mod:`importlib` package."
msgstr ""
"Однією з значних переваг цієї роботи є розкриття того, що необхідно для "
"того, щоб оператор імпорту працював. Це означає, що різні імпортери, які "
"колись були неявними, тепер повністю доступні як частина пакета :mod:"
"`importlib`."

msgid ""
"The abstract base classes defined in :mod:`importlib.abc` have been expanded "
"to properly delineate between :term:`meta path finders <meta path finder>` "
"and :term:`path entry finders <path entry finder>` by introducing :class:"
"`importlib.abc.MetaPathFinder` and :class:`importlib.abc.PathEntryFinder`, "
"respectively. The old ABC of :class:`importlib.abc.Finder` is now only "
"provided for backwards-compatibility and does not enforce any method "
"requirements."
msgstr ""
"Абстрактні базові класи, визначені в :mod:`importlib.abc`, були розширені "
"для правильного розмежування між :term:`мета-шляхом пошуку <meta path "
"finder>` та :term:`мета-пошуком шляху <path entry finder>` шляхом введення :"
"class:`importlib.abc. MetaPathFinder` і :class:`importlib.abc."
"PathEntryFinder` відповідно. Старий ABC :class:`importlib.abc.Finder` тепер "
"надається лише для зворотної сумісності та не передбачає жодних вимог до "
"методів."

msgid ""
"In terms of finders, :class:`importlib.machinery.FileFinder` exposes the "
"mechanism used to search for source and bytecode files of a module. "
"Previously this class was an implicit member of :attr:`sys.path_hooks`."
msgstr ""
"З точки зору засобів пошуку, :class:`importlib.machinery.FileFinder` "
"відкриває механізм, який використовується для пошуку вихідних файлів і "
"файлів байт-коду модуля. Раніше цей клас був неявним членом :attr:`sys."
"path_hooks`."

msgid ""
"For loaders, the new abstract base class :class:`importlib.abc.FileLoader` "
"helps write a loader that uses the file system as the storage mechanism for "
"a module's code. The loader for source files (:class:`importlib.machinery."
"SourceFileLoader`), sourceless bytecode files (:class:`importlib.machinery."
"SourcelessFileLoader`), and extension modules (:class:`importlib.machinery."
"ExtensionFileLoader`) are now available for direct use."
msgstr ""
"Для завантажувачів новий абстрактний базовий клас :class:`importlib.abc."
"FileLoader` допомагає написати завантажувач, який використовує файлову "
"систему як механізм зберігання коду модуля. Завантажувач для вихідних файлів "
"(:class:`importlib.machinery.SourceFileLoader`), файлів байт-кодів без "
"джерел (:class:`importlib.machinery.SourcelessFileLoader`) і модулів "
"розширення (:class:`importlib.machinery.ExtensionFileLoader`) є тепер "
"доступний для прямого використання."

msgid ""
":exc:`ImportError` now has ``name`` and ``path`` attributes which are set "
"when there is relevant data to provide. The message for failed imports will "
"also provide the full name of the module now instead of just the tail end of "
"the module's name."
msgstr ""
":exc:`ImportError` тепер має атрибути ``name`` і ``path``, які "
"встановлюються, коли є відповідні дані для надання. У повідомленні про "
"невдалі імпорти тепер буде міститися повна назва модуля, а не лише кінцева "
"частина назви модуля."

msgid ""
"The :func:`importlib.invalidate_caches` function will now call the method "
"with the same name on all finders cached in :attr:`sys.path_importer_cache` "
"to help clean up any stored state as necessary."
msgstr ""
"Функція :func:`importlib.invalidate_caches` тепер викличе метод з однаковою "
"назвою для всіх засобів пошуку, кешованих у :attr:`sys.path_importer_cache`, "
"щоб допомогти очистити будь-який збережений стан за потреби."

msgid "Visible Changes"
msgstr "Видимі зміни"

msgid ""
"For potential required changes to code, see the `Porting Python code`_ "
"section."
msgstr ""
"Інформацію про потенційно необхідні зміни коду див. у розділі \"Перенесення "
"коду Python\" (`Porting Python code`_)."

msgid ""
"Beyond the expanse of what :mod:`importlib` now exposes, there are other "
"visible changes to import. The biggest is that :attr:`sys.meta_path` and :"
"attr:`sys.path_hooks` now store all of the meta path finders and path entry "
"hooks used by import.  Previously the finders were implicit and hidden "
"within the C code of import instead of being directly exposed. This means "
"that one can now easily remove or change the order of the various finders to "
"fit one's needs."
msgstr ""
"Окрім того, що зараз відкриває :mod:`importlib`, існують інші видимі зміни "
"для імпорту. Найбільшим є те, що :attr:`sys.meta_path` і :attr:`sys."
"path_hooks` тепер зберігають усі шукачі мета-шляхів і перехоплювачі для "
"введення шляхів, які використовуються імпортом. Раніше шукачі були неявними "
"та прихованими в коді імпорту C замість того, щоб бути відкритими "
"безпосередньо. Це означає, що тепер можна легко видалити або змінити порядок "
"різних шукачів відповідно до своїх потреб."

msgid ""
"Another change is that all modules have a ``__loader__`` attribute, storing "
"the loader used to create the module. :pep:`302` has been updated to make "
"this attribute mandatory for loaders to implement, so in the future once 3rd-"
"party loaders have been updated people will be able to rely on the existence "
"of the attribute. Until such time, though, import is setting the module post-"
"load."
msgstr ""
"Ще одна зміна полягає в тому, що всі модулі мають атрибут ``__loader__``, "
"який зберігає завантажувач, використаний для створення модуля. :pep:`302` "
"було оновлено, щоб зробити цей атрибут обов’язковим для завантажувачів, тож "
"у майбутньому, після оновлення завантажувачів сторонніх розробників, люди "
"зможуть покладатися на існування атрибута. Однак до цього часу імпорт "
"встановлює модуль після завантаження."

msgid ""
"Loaders are also now expected to set the ``__package__`` attribute from :pep:"
"`366`. Once again, import itself is already setting this on all loaders "
"from :mod:`importlib` and import itself is setting the attribute post-load."
msgstr ""
"Тепер очікується, що завантажувачі встановлюють атрибут ``__package__`` з :"
"pep:`366`. Знову ж таки, сам імпорт уже встановлює це для всіх "
"завантажувачів із :mod:`importlib`, а сам імпорт встановлює атрибут після "
"завантаження."

msgid ""
"``None`` is now inserted into :attr:`sys.path_importer_cache` when no finder "
"can be found on :attr:`sys.path_hooks`. Since :class:`imp.NullImporter` is "
"not directly exposed on :attr:`sys.path_hooks` it could no longer be relied "
"upon to always be available to use as a value representing no finder found."
msgstr ""
"``None`` тепер вставляється в :attr:`sys.path_importer_cache`, якщо в :attr:"
"`sys.path_hooks` не вдається знайти засіб пошуку. Оскільки :class:`imp."
"NullImporter` не доступний безпосередньо для :attr:`sys.path_hooks`, більше "
"не можна покладатися на те, що він завжди буде доступним для використання як "
"значення, що представляє не знайдений засіб пошуку."

msgid ""
"All other changes relate to semantic changes which should be taken into "
"consideration when updating code for Python 3.3, and thus should be read "
"about in the `Porting Python code`_ section of this document."
msgstr ""
"Усі інші зміни стосуються семантичних змін, які слід враховувати під час "
"оновлення коду для Python 3.3, і тому про них слід прочитати в розділі "
"\"Перенесення коду Python\" (`Porting Python code`_) цього документа."

msgid "(Implementation by Brett Cannon)"
msgstr "(Реалізація Бреттом Кенноном)"

msgid "Other Language Changes"
msgstr "Інші зміни мови"

msgid "Some smaller changes made to the core Python language are:"
msgstr "Деякі менші зміни, внесені до основної мови Python:"

msgid ""
"Added support for Unicode name aliases and named sequences. Both :func:"
"`unicodedata.lookup()` and ``'\\N{...}'`` now resolve name aliases, and :"
"func:`unicodedata.lookup()` resolves named sequences too."
msgstr ""
"Додано підтримку псевдонімів імен Unicode та іменованих послідовностей. І :"
"func:`unicodedata.lookup()`, і ``'\\N{...}''`` тепер розпізнають псевдоніми "
"імен, а :func:`unicodedata.lookup()` також розпізнає іменовані послідовності."

msgid "(Contributed by Ezio Melotti in :issue:`12753`.)"
msgstr "(Надав Еціо Мелотті в :issue:`12753`.)"

msgid "Unicode database updated to UCD version 6.1.0"
msgstr "Базу даних Unicode оновлено до UCD версії 6.1.0"

msgid ""
"Equality comparisons on :func:`range` objects now return a result reflecting "
"the equality of the underlying sequences generated by those range objects. (:"
"issue:`13201`)"
msgstr ""
"Порівняння рівності об’єктів :func:`range` тепер повертає результат, що "
"відображає рівність базових послідовностей, створених цими об’єктами "
"діапазону. (:issue:`13201`)"

msgid ""
"The ``count()``, ``find()``, ``rfind()``, ``index()`` and ``rindex()`` "
"methods of :class:`bytes` and :class:`bytearray` objects now accept an "
"integer between 0 and 255 as their first argument."
msgstr ""
"Методи ``count()``, ``find()``, ``rfind()``, ``index()`` і ``rindex()`` :"
"class:`bytes` і: Об’єкти :class:`bytearray` тепер приймають ціле число від 0 "
"до 255 як перший аргумент."

msgid "(Contributed by Petri Lehtinen in :issue:`12170`.)"
msgstr "(Надав Петрі Лехтінен у :issue:`12170`.)"

msgid ""
"The ``rjust()``, ``ljust()``, and ``center()`` methods of :class:`bytes` "
"and :class:`bytearray` now accept a :class:`bytearray` for the ``fill`` "
"argument.  (Contributed by Petri Lehtinen in :issue:`12380`.)"
msgstr ""
"Методи ``rjust()``, ``ljust()`` і ``center()`` :class:`bytes` і :class:"
"`bytearray` тепер приймають :class:`bytearray` для аргумент ``fill``. (Надав "
"Петрі Лехтінен у :issue:`12380`.)"

msgid ""
"New methods have been added to :class:`list` and :class:`bytearray`: "
"``copy()`` and ``clear()`` (:issue:`10516`).  Consequently, :class:"
"`~collections.abc.MutableSequence` now also defines a :meth:`~collections."
"abc.MutableSequence.clear` method (:issue:`11388`)."
msgstr ""
"До :class:`list` і :class:`bytearray` додано нові методи: ``copy()`` і "
"``clear()`` (:issue:`10516`). Отже, :class:`~collections.abc."
"MutableSequence` тепер також визначає метод :meth:`~collections.abc."
"MutableSequence.clear` (:issue:`11388`)."

msgid ""
"Raw bytes literals can now be written ``rb\"...\"`` as well as ``br\"...\"``."
msgstr ""
"Необроблені байтові літерали тепер можна записати ``rb\"...\"``, а також "
"``br\"...\"``."

msgid "(Contributed by Antoine Pitrou in :issue:`13748`.)"
msgstr "(Надав Антуан Пітру в :issue:`13748`.)"

msgid ""
":meth:`dict.setdefault` now does only one lookup for the given key, making "
"it atomic when used with built-in types."
msgstr ""
":meth:`dict.setdefault` тепер виконує лише один пошук для даного ключа, що "
"робить його атомарним при використанні з вбудованими типами."

msgid "(Contributed by Filip Gruszczyński in :issue:`13521`.)"
msgstr "(Надав Філіп Грущинський у :issue:`13521`.)"

msgid ""
"The error messages produced when a function call does not match the function "
"signature have been significantly improved."
msgstr ""
"Повідомлення про помилки, які видаються, коли виклик функції не відповідає "
"сигнатурі функції, було значно покращено."

msgid "(Contributed by Benjamin Peterson.)"
msgstr "(Надав Бенджамін Петерсон.)"

msgid "A Finer-Grained Import Lock"
msgstr "Точне блокування імпорту"

msgid ""
"Previous versions of CPython have always relied on a global import lock. "
"This led to unexpected annoyances, such as deadlocks when importing a module "
"would trigger code execution in a different thread as a side-effect. Clumsy "
"workarounds were sometimes employed, such as the :c:func:"
"`PyImport_ImportModuleNoBlock` C API function."
msgstr ""
"Попередні версії CPython завжди покладалися на глобальне блокування імпорту. "
"Це призвело до неочікуваних проблем, наприклад, взаємоблокування під час "
"імпортування модуля викликало б виконання коду в іншому потоці як побічний "
"ефект. Інколи використовувалися незграбні обхідні шляхи, наприклад функція C "
"API :c:func:`PyImport_ImportModuleNoBlock`."

msgid ""
"In Python 3.3, importing a module takes a per-module lock.  This correctly "
"serializes importation of a given module from multiple threads (preventing "
"the exposure of incompletely initialized modules), while eliminating the "
"aforementioned annoyances."
msgstr ""
"У Python 3.3 імпортування модуля потребує блокування кожного модуля. Це "
"правильно серіалізує імпорт певного модуля з кількох потоків (запобігаючи "
"виявленню неповністю ініціалізованих модулів), одночасно усуваючи "
"вищезгадані незручності."

msgid "(Contributed by Antoine Pitrou in :issue:`9260`.)"
msgstr "(Надав Антуан Пітру в :issue:`9260`.)"

msgid "Builtin functions and types"
msgstr "Вбудовані функції та типи"

msgid ""
":func:`open` gets a new *opener* parameter: the underlying file descriptor "
"for the file object is then obtained by calling *opener* with (*file*, "
"*flags*). It can be used to use custom flags like :data:`os.O_CLOEXEC` for "
"example. The ``'x'`` mode was added: open for exclusive creation, failing if "
"the file already exists."
msgstr ""
":func:`open` отримує новий параметр *opener*: базовий файловий дескриптор "
"для об’єкта файлу отримується шляхом виклику *opener* за допомогою (*file*, "
"*flags*). Його можна використовувати, наприклад, для використання "
"спеціальних прапорів, таких як :data:`os.O_CLOEXEC`. Додано режим ``'x``: "
"відкритий для ексклюзивного створення, не вдається, якщо файл уже існує."

msgid ""
":func:`print`: added the *flush* keyword argument. If the *flush* keyword "
"argument is true, the stream is forcibly flushed."
msgstr ""
":func:`print`: додано аргумент ключового слова *flush*. Якщо аргумент "
"ключового слова *flush* має значення true, потік примусово очищається."

msgid ""
":func:`hash`: hash randomization is enabled by default, see :meth:`object."
"__hash__` and :envvar:`PYTHONHASHSEED`."
msgstr ""
":func:`hash`: рандомізація хешу ввімкнена за замовчуванням, див. :meth:"
"`object.__hash__` і :envvar:`PYTHONHASHSEED`."

msgid ""
"The :class:`str` type gets a new :meth:`~str.casefold` method: return a "
"casefolded copy of the string, casefolded strings may be used for caseless "
"matching. For example, ``'ß'.casefold()`` returns ``'ss'``."
msgstr ""
"Тип :class:`str` отримує новий метод :meth:`~str.casefold`: повертає "
"згорнуту копію рядка, згорнуті рядки можна використовувати для зіставлення "
"без регістру. Наприклад, ``'ß'.casefold()`` повертає ``'ss'``."

msgid ""
"The sequence documentation has been substantially rewritten to better "
"explain the binary/text sequence distinction and to provide specific "
"documentation sections for the individual builtin sequence types (:issue:"
"`4966`)."
msgstr ""
"Документацію послідовності було суттєво переписано, щоб краще пояснити "
"різницю між двійковою та текстовою послідовністю та надати окремі розділи "
"документації для окремих вбудованих типів послідовностей (:issue:`4966`)."

msgid "New Modules"
msgstr "Нові модулі"

msgid "faulthandler"
msgstr "обробник помилок"

msgid ""
"This new debug module :mod:`faulthandler` contains functions to dump Python "
"tracebacks explicitly, on a fault (a crash like a segmentation fault), after "
"a timeout, or on a user signal. Call :func:`faulthandler.enable` to install "
"fault handlers for the :const:`SIGSEGV`, :const:`SIGFPE`, :const:`SIGABRT`, :"
"const:`SIGBUS`, and :const:`SIGILL` signals. You can also enable them at "
"startup by setting the :envvar:`PYTHONFAULTHANDLER` environment variable or "
"by using :option:`-X` ``faulthandler`` command line option."
msgstr ""
"Цей новий модуль налагодження :mod:`faulthandler` містить функції для явного "
"створення дампу трасування Python у разі помилки (збій, як помилка "
"сегментації), після тайм-ауту або за сигналом користувача. Викличте :func:"
"`faulthandler.enable`, щоб установити обробники помилок для :const:"
"`SIGSEGV`, :const:`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS` і :const:"
"`SIGILL` сигнали. Ви також можете ввімкнути їх під час запуску, встановивши "
"змінну середовища :envvar:`PYTHONFAULTHANDLER` або використовуючи параметр "
"командного рядка :option:`-X` ``faulthandler``."

msgid "Example of a segmentation fault on Linux:"
msgstr "Приклад помилки сегментації в Linux:"

msgid "ipaddress"
msgstr "IP-адреса"

msgid ""
"The new :mod:`ipaddress` module provides tools for creating and manipulating "
"objects representing IPv4 and IPv6 addresses, networks and interfaces (i.e. "
"an IP address associated with a specific IP subnet)."
msgstr ""
"Новий модуль :mod:`ipaddress` надає інструменти для створення та керування "
"об’єктами, що представляють адреси IPv4 та IPv6, мережі та інтерфейси (тобто "
"IP-адресу, пов’язану з певною підмережею IP)."

msgid "(Contributed by Google and Peter Moody in :pep:`3144`.)"
msgstr "(Надано Google і Пітером Муді в :pep:`3144`.)"

msgid "lzma"
msgstr "lzma"

msgid ""
"The newly added :mod:`lzma` module provides data compression and "
"decompression using the LZMA algorithm, including support for the ``.xz`` "
"and ``.lzma`` file formats."
msgstr ""

msgid "(Contributed by Nadeem Vawda and Per Øyvind Karlsen in :issue:`6715`.)"
msgstr "(Надім Вавда та Пер Ойвінд Карлсен у :issue:`6715`.)"

msgid "Improved Modules"
msgstr "Покращені модулі"

msgid "abc"
msgstr "абв"

msgid ""
"Improved support for abstract base classes containing descriptors composed "
"with abstract methods. The recommended approach to declaring abstract "
"descriptors is now to provide :attr:`__isabstractmethod__` as a dynamically "
"updated property. The built-in descriptors have been updated accordingly."
msgstr ""
"Покращена підтримка абстрактних базових класів, що містять дескриптори, "
"складені за допомогою абстрактних методів. Рекомендованим підходом до "
"оголошення абстрактних дескрипторів тепер є надання :attr:"
"`__isabstractmethod__` як динамічно оновлюваної властивості. Вбудовані "
"дескриптори були відповідно оновлені."

msgid ""
":class:`abc.abstractproperty` has been deprecated, use :class:`property` "
"with :func:`abc.abstractmethod` instead."
msgstr ""
":class:`abc.abstractproperty` застаріло, замість цього використовуйте :class:"
"`property` з :func:`abc.abstractmethod`."

msgid ""
":class:`abc.abstractclassmethod` has been deprecated, use :class:"
"`classmethod` with :func:`abc.abstractmethod` instead."
msgstr ""
":class:`abc.abstractclassmethod` застаріло, замість нього використовуйте :"
"class:`classmethod` з :func:`abc.abstractmethod`."

msgid ""
":class:`abc.abstractstaticmethod` has been deprecated, use :class:"
"`staticmethod` with :func:`abc.abstractmethod` instead."
msgstr ""
":class:`abc.abstractstaticmethod` застарів, замість нього використовуйте :"
"class:`staticmethod` з :func:`abc.abstractmethod`."

msgid "(Contributed by Darren Dale in :issue:`11610`.)"
msgstr "(Надав Даррен Дейл у :issue:`11610`.)"

msgid ""
":meth:`abc.ABCMeta.register` now returns the registered subclass, which "
"means it can now be used as a class decorator (:issue:`10868`)."
msgstr ""
":meth:`abc.ABCMeta.register` тепер повертає зареєстрований підклас, що "
"означає, що тепер його можна використовувати як декоратор класу (:issue:"
"`10868`)."

msgid "array"
msgstr "масив"

msgid ""
"The :mod:`array` module supports the :c:expr:`long long` type using ``q`` "
"and ``Q`` type codes."
msgstr ""

msgid "(Contributed by Oren Tirosh and Hirokazu Yamamoto in :issue:`1172711`.)"
msgstr "(Надано Ореном Тірошем і Хірокадзу Ямамото в :issue:`1172711`.)"

msgid "base64"
msgstr "база64"

msgid ""
"ASCII-only Unicode strings are now accepted by the decoding functions of "
"the :mod:`base64` modern interface. For example, ``base64."
"b64decode('YWJj')`` returns ``b'abc'``.  (Contributed by Catalin Iacob in :"
"issue:`13641`.)"
msgstr ""
"Функції декодування сучасного інтерфейсу :mod:`base64` тепер приймають рядки "
"Unicode лише для ASCII. Наприклад, ``base64.b64decode('YWJj')`` повертає "
"``b'abc``. (Надав Каталін Якоб у :issue:`13641`.)"

msgid "binascii"
msgstr "binascii"

msgid ""
"In addition to the binary objects they normally accept, the ``a2b_`` "
"functions now all also accept ASCII-only strings as input.  (Contributed by "
"Antoine Pitrou in :issue:`13637`.)"
msgstr ""
"На додаток до двійкових об’єктів, які вони зазвичай приймають, усі функції "
"``a2b_`` тепер також приймають як вхідні рядки лише ASCII. (Надав Антуан "
"Пітру в :issue:`13637`.)"

msgid "bz2"
msgstr "bz2"

msgid ""
"The :mod:`bz2` module has been rewritten from scratch. In the process, "
"several new features have been added:"
msgstr ""
"Модуль :mod:`bz2` було переписано з нуля. У процесі було додано кілька нових "
"функцій:"

msgid ""
"New :func:`bz2.open` function: open a bzip2-compressed file in binary or "
"text mode."
msgstr ""
"Нова функція :func:`bz2.open`: відкриває файл, стиснутий за допомогою bzip2, "
"у двійковому або текстовому режимі."

msgid ""
":class:`bz2.BZ2File` can now read from and write to arbitrary file-like "
"objects, by means of its constructor's *fileobj* argument."
msgstr ""
":class:`bz2.BZ2File` тепер може читати та записувати довільні файлоподібні "
"об’єкти за допомогою аргументу *fileobj* свого конструктора."

msgid "(Contributed by Nadeem Vawda in :issue:`5863`.)"
msgstr "(Надім Вавда в :issue:`5863`.)"

msgid ""
":class:`bz2.BZ2File` and :func:`bz2.decompress` can now decompress multi-"
"stream inputs (such as those produced by the :program:`pbzip2` tool). :class:"
"`bz2.BZ2File` can now also be used to create this type of file, using the "
"``'a'`` (append) mode."
msgstr ""
":class:`bz2.BZ2File` і :func:`bz2.decompress` тепер можуть розпакувати "
"багатопотокові вхідні дані (наприклад, створені інструментом :program:"
"`pbzip2`). :class:`bz2.BZ2File` тепер також можна використовувати для "
"створення цього типу файлу, використовуючи режим ``'a'`` (додавання)."

msgid "(Contributed by Nir Aides in :issue:`1625`.)"
msgstr "(Надано Nir Aides у :issue:`1625`.)"

msgid ""
":class:`bz2.BZ2File` now implements all of the :class:`io.BufferedIOBase` "
"API, except for the :meth:`detach` and :meth:`truncate` methods."
msgstr ""
":class:`bz2.BZ2File` тепер реалізує всі API :class:`io.BufferedIOBase`, крім "
"методів :meth:`detach` і :meth:`truncate`."

msgid "codecs"
msgstr "кодеки"

msgid ""
"The :mod:`~encodings.mbcs` codec has been rewritten to handle correctly "
"``replace`` and ``ignore`` error handlers on all Windows versions.  The :mod:"
"`~encodings.mbcs` codec now supports all error handlers, instead of only "
"``replace`` to encode and ``ignore`` to decode."
msgstr ""
"Кодек :mod:`~encodings.mbcs` було переписано для правильної обробки "
"обробників помилок ``replace`` та ``ignore`` у всіх версіях Windows. Кодек :"
"mod:`~encodings.mbcs` тепер підтримує всі обробники помилок, замість лише "
"``replace`` для кодування та ``ignore`` для декодування."

msgid ""
"A new Windows-only codec has been added: ``cp65001`` (:issue:`13216`). It is "
"the Windows code page 65001 (Windows UTF-8, ``CP_UTF8``).  For example, it "
"is used by ``sys.stdout`` if the console output code page is set to cp65001 "
"(e.g., using ``chcp 65001`` command)."
msgstr ""
"Додано новий кодек лише для Windows: ``cp65001`` (:issue:`13216`). Це кодова "
"сторінка Windows 65001 (Windows UTF-8, ``CP_UTF8``). Наприклад, він "
"використовується ``sys.stdout``, якщо для кодової сторінки консолі "
"встановлено значення cp65001 (наприклад, за допомогою команди ``chcp "
"65001``)."

msgid ""
"Multibyte CJK decoders now resynchronize faster.  They only ignore the first "
"byte of an invalid byte sequence. For example, ``b'\\xff\\n'."
"decode('gb2312', 'replace')`` now returns a ``\\n`` after the replacement "
"character."
msgstr ""
"Багатобайтові декодери CJK тепер повторно синхронізуються швидше. Вони "
"ігнорують лише перший байт недійсної послідовності байтів. Наприклад, "
"``b'\\xff\\n'.decode('gb2312', 'replace')`` тепер повертає ``\\n`` після "
"символу заміни."

msgid "(:issue:`12016`)"
msgstr "(:issue:`12016`)"

msgid ""
"Incremental CJK codec encoders are no longer reset at each call to their "
"encode() methods. For example::"
msgstr ""
"Інкрементні кодеки CJK більше не скидаються під час кожного виклику методів "
"encode(). Наприклад::"

msgid ""
"This example gives ``b'~{Np~}~{J)~}~{l6~}~{HK~}~{!#~} Bye.'`` with older "
"Python versions."
msgstr ""
"Цей приклад дає ``b'~{Np~}~{J)~}~{l6~}~{HK~}~{!#~} До побачення.''`` зі "
"старішими версіями Python."

msgid "(:issue:`12100`)"
msgstr "(:issue:`12100`)"

msgid "The ``unicode_internal`` codec has been deprecated."
msgstr "Кодек ``unicode_internal`` застарів."

msgid "collections"
msgstr "колекції"

msgid ""
"Addition of a new :class:`~collections.ChainMap` class to allow treating a "
"number of mappings as a single unit.  (Written by Raymond Hettinger for :"
"issue:`11089`, made public in :issue:`11297`.)"
msgstr ""
"Додано новий клас :class:`~collections.ChainMap`, щоб дозволити обробляти "
"кілька відображень як єдине ціле. (Написано Реймондом Геттінгером для :issue:"
"`11089`, оприлюднено в :issue:`11297`.)"

msgid ""
"The abstract base classes have been moved in a new :mod:`collections.abc` "
"module, to better differentiate between the abstract and the concrete "
"collections classes.  Aliases for ABCs are still present in the :mod:"
"`collections` module to preserve existing imports.  (:issue:`11085`)"
msgstr ""
"Базові абстрактні класи переміщено в новий модуль :mod:`collections.abc`, "
"щоб краще розрізняти абстрактні та конкретні класи колекцій. Псевдоніми для "
"ABC все ще присутні в модулі :mod:`collections`, щоб зберегти існуючий "
"імпорт. (:issue:`11085`)"

msgid ""
"The :class:`~collections.Counter` class now supports the unary ``+`` and ``-"
"`` operators, as well as the in-place operators ``+=``, ``-=``, ``|=``, and "
"``&=``.  (Contributed by Raymond Hettinger in :issue:`13121`.)"
msgstr ""
"Клас :class:`~collections.Counter` тепер підтримує унарні оператори ``+`` і "
"``-``, а також оператори на місці ``+=``, ``-=``, ``|=`` і ``&=``. (Надав "
"Раймонд Геттінгер у :issue:`13121`.)"

msgid "contextlib"
msgstr "contextlib"

msgid ""
":class:`~contextlib.ExitStack` now provides a solid foundation for "
"programmatic manipulation of context managers and similar cleanup "
"functionality. Unlike the previous ``contextlib.nested`` API (which was "
"deprecated and removed), the new API is designed to work correctly "
"regardless of whether context managers acquire their resources in their "
"``__init__`` method (for example, file objects) or in their ``__enter__`` "
"method (for example, synchronisation objects from the :mod:`threading` "
"module)."
msgstr ""
":class:`~contextlib.ExitStack` тепер забезпечує міцну основу для програмного "
"маніпулювання менеджерами контексту та подібними функціями очищення. На "
"відміну від попереднього API ``contextlib.nested`` (який був застарілим і "
"видалений), новий API розроблено для правильної роботи незалежно від того, "
"чи менеджери контексту отримують свої ресурси в своєму методі ``__init__`` "
"(наприклад, файлові об’єкти). або в їх методі ``__enter__`` (наприклад, "
"об’єкти синхронізації з модуля :mod:`threading`)."

msgid "(:issue:`13585`)"
msgstr "(:issue:`13585`)"

msgid "crypt"
msgstr "склеп"

msgid ""
"Addition of salt and modular crypt format (hashing method) and the :func:"
"`~crypt.mksalt` function to the :mod:`crypt` module."
msgstr ""
"Додано сіль і модульний формат крипти (метод хешування) і функцію :func:"
"`~crypt.mksalt` до модуля :mod:`crypt`."

msgid "(:issue:`10924`)"
msgstr "(:issue:`10924`)"

msgid "curses"
msgstr "прокльони"

msgid ""
"If the :mod:`curses` module is linked to the ncursesw library, use Unicode "
"functions when Unicode strings or characters are passed (e.g. :c:func:"
"`waddwstr`), and bytes functions otherwise (e.g. :c:func:`waddstr`)."
msgstr ""
"Якщо модуль :mod:`curses` пов’язано з бібліотекою ncursesw, використовуйте "
"функції Unicode, коли передаються рядки або символи Unicode (наприклад, :c:"
"func:`waddwstr`), і функції bytes в іншому випадку (наприклад, :c:func:"
"`waddstr`)."

msgid "Use the locale encoding instead of ``utf-8`` to encode Unicode strings."
msgstr ""
"Використовуйте кодування мови замість ``utf-8`` для кодування рядків Unicode."

msgid ""
":class:`curses.window` has a new :attr:`curses.window.encoding` attribute."
msgstr ""
":class:`curses.window` має новий атрибут :attr:`curses.window.encoding`."

msgid ""
"The :class:`curses.window` class has a new :meth:`~curses.window.get_wch` "
"method to get a wide character"
msgstr ""
"Клас :class:`curses.window` має новий метод :meth:`~curses.window.get_wch` "
"для отримання широкого символу"

msgid ""
"The :mod:`curses` module has a new :meth:`~curses.unget_wch` function to "
"push a wide character so the next :meth:`~curses.window.get_wch` will return "
"it"
msgstr ""
"Модуль :mod:`curses` має нову функцію :meth:`~curses.unget_wch`, яка "
"надсилає широкий символ, щоб наступний :meth:`~curses.window.get_wch` "
"повертав його"

msgid "(Contributed by Iñigo Serna in :issue:`6755`.)"
msgstr "(Надав Іньїго Серна в :issue:`6755`.)"

msgid "datetime"
msgstr "дата, час"

msgid ""
"Equality comparisons between naive and aware :class:`~datetime.datetime` "
"instances now return :const:`False` instead of raising :exc:`TypeError` (:"
"issue:`15006`)."
msgstr ""
"Порівняння рівності між простими та обізнаними екземплярами :class:"
"`~datetime.datetime` тепер повертає :const:`False` замість того, щоб "
"викликати :exc:`TypeError` (:issue:`15006`)."

msgid ""
"New :meth:`datetime.datetime.timestamp` method: Return POSIX timestamp "
"corresponding to the :class:`~datetime.datetime` instance."
msgstr ""
"Новий метод :meth:`datetime.datetime.timestamp`: повертає позначку часу "
"POSIX, що відповідає екземпляру :class:`~datetime.datetime`."

msgid ""
"The :meth:`datetime.datetime.strftime` method supports formatting years "
"older than 1000."
msgstr ""
"Метод :meth:`datetime.datetime.strftime` підтримує форматування років старше "
"1000."

msgid ""
"The :meth:`datetime.datetime.astimezone` method can now be called without "
"arguments to convert datetime instance to the system timezone."
msgstr ""
"Метод :meth:`datetime.datetime.astimezone` тепер можна викликати без "
"аргументів для перетворення екземпляра datetime у системний часовий пояс."

msgid "decimal"
msgstr "десятковий"

msgid ":issue:`7652` - integrate fast native decimal arithmetic."
msgstr ":issue:`7652` - інтегрувати швидку власну десяткову арифметику."

msgid "C-module and libmpdec written by Stefan Krah."
msgstr "C-module і libmpdec, написані Stefan Krah."

msgid ""
"The new C version of the decimal module integrates the high speed libmpdec "
"library for arbitrary precision correctly rounded decimal floating point "
"arithmetic. libmpdec conforms to IBM's General Decimal Arithmetic "
"Specification."
msgstr ""

msgid ""
"Performance gains range from 10x for database applications to 100x for "
"numerically intensive applications. These numbers are expected gains for "
"standard precisions used in decimal floating point arithmetic. Since the "
"precision is user configurable, the exact figures may vary. For example, in "
"integer bignum arithmetic the differences can be significantly higher."
msgstr ""
"Підвищення продуктивності коливається від 10 разів для додатків баз даних до "
"100 разів для інтенсивних програм. Ці числа є очікуваними приростами для "
"стандартної точності, яка використовується в десятковій арифметиці з "
"плаваючою комою. Оскільки точність налаштовується користувачем, точні цифри "
"можуть відрізнятися. Наприклад, у цілочисельній арифметиці bignum "
"відмінності можуть бути значно вищими."

msgid ""
"The following table is meant as an illustration. Benchmarks are available at "
"https://www.bytereef.org/mpdecimal/quickstart.html."
msgstr ""

msgid "decimal.py"
msgstr "decimal.py"

msgid "_decimal"
msgstr "_десятковий"

msgid "speedup"
msgstr "прискорювати"

msgid "pi"
msgstr "пі"

msgid "42.02s"
msgstr "42,02с"

msgid "0.345s"
msgstr "0,345с"

msgid "120x"
msgstr "120x"

msgid "telco"
msgstr "телекомунікаційна компанія"

msgid "172.19s"
msgstr "172,19с"

msgid "5.68s"
msgstr "5,68с"

msgid "30x"
msgstr "30x"

msgid "psycopg"
msgstr "psycopg"

msgid "3.57s"
msgstr "3,57с"

msgid "0.29s"
msgstr "0,29 с"

msgid "12x"
msgstr "12x"

msgid ""
"The :exc:`~decimal.FloatOperation` signal optionally enables stricter "
"semantics for mixing floats and Decimals."
msgstr ""
"Сигнал :exc:`~decimal.FloatOperation` додатково вмикає суворішу семантику "
"для змішування чисел з плаваючою точкою та десяткових знаків."

msgid ""
"If Python is compiled without threads, the C version automatically disables "
"the expensive thread local context machinery. In this case, the variable :"
"data:`~decimal.HAVE_THREADS` is set to ``False``."
msgstr ""
"Якщо Python скомпільовано без потоків, версія C автоматично вимикає дорогий "
"механізм локального контексту потоків. У цьому випадку змінна :data:"
"`~decimal.HAVE_THREADS` має значення ``False``."

msgid ""
"The C module has the following context limits, depending on the machine "
"architecture:"
msgstr ""
"Модуль C має такі контекстні обмеження, залежно від архітектури машини:"

msgid "32-bit"
msgstr "32-розрядний"

msgid "64-bit"
msgstr "64-розрядний"

msgid ":const:`MAX_PREC`"
msgstr ":const:`MAX_PREC`"

msgid ":const:`425000000`"
msgstr ":const:`425000000`"

msgid ":const:`999999999999999999`"
msgstr ":const:`999999999999999999`"

msgid ":const:`MAX_EMAX`"
msgstr ":const:`MAX_EMAX`"

msgid ":const:`MIN_EMIN`"
msgstr ":const:`MIN_EMIN`"

msgid ":const:`-425000000`"
msgstr ":const:`-425000000`"

msgid ":const:`-999999999999999999`"
msgstr ":const:`-999999999999999999`"

msgid ""
"In the context templates (:class:`~decimal.DefaultContext`, :class:`~decimal."
"BasicContext` and :class:`~decimal.ExtendedContext`) the magnitude of :attr:"
"`~decimal.Context.Emax` and :attr:`~decimal.Context.Emin` has changed to :"
"const:`999999`."
msgstr ""
"У шаблонах контексту (:class:`~decimal.DefaultContext`, :class:`~decimal."
"BasicContext` і :class:`~decimal.ExtendedContext`) величина :attr:`~decimal."
"Context.Emax` і :attr:`~decimal.Context.Emin` змінено на :const:`999999`."

msgid ""
"The :class:`~decimal.Decimal` constructor in decimal.py does not observe the "
"context limits and converts values with arbitrary exponents or precision "
"exactly. Since the C version has internal limits, the following scheme is "
"used: If possible, values are converted exactly, otherwise :exc:`~decimal."
"InvalidOperation` is raised and the result is NaN. In the latter case it is "
"always possible to use :meth:`~decimal.Context.create_decimal` in order to "
"obtain a rounded or inexact value."
msgstr ""
"Конструктор :class:`~decimal.Decimal` у decimal.py не дотримується "
"контекстних обмежень і точно перетворює значення з довільним показником "
"ступеня чи точністю. Оскільки версія C має внутрішні обмеження, "
"використовується така схема: якщо можливо, значення перетворюються точно, "
"інакше :exc:`~decimal.InvalidOperation` викликається, і результатом є NaN. В "
"останньому випадку завжди можна використовувати :meth:`~decimal.Context."
"create_decimal`, щоб отримати округлене або неточне значення."

msgid ""
"The power function in decimal.py is always correctly rounded. In the C "
"version, it is defined in terms of the correctly rounded :meth:`~decimal."
"Decimal.exp` and :meth:`~decimal.Decimal.ln` functions, but the final result "
"is only \"almost always correctly rounded\"."
msgstr ""

msgid ""
"In the C version, the context dictionary containing the signals is a :class:"
"`~collections.abc.MutableMapping`.  For speed reasons, :attr:`~decimal."
"Context.flags` and :attr:`~decimal.Context.traps` always refer to the same :"
"class:`~collections.abc.MutableMapping` that the context was initialized "
"with. If a new signal dictionary is assigned, :attr:`~decimal.Context.flags` "
"and :attr:`~decimal.Context.traps` are updated with the new values, but they "
"do not reference the RHS dictionary."
msgstr ""
"У версії C контекстний словник, що містить сигнали, є :class:`~collections."
"abc.MutableMapping`. З міркувань швидкості :attr:`~decimal.Context.flags` і :"
"attr:`~decimal.Context.traps` завжди посилаються на той самий :class:"
"`~collections.abc.MutableMapping`, яким було ініціалізовано контекст. Якщо "
"призначено новий словник сигналів, :attr:`~decimal.Context.flags` і :attr:"
"`~decimal.Context.traps` оновлюються новими значеннями, але вони не "
"посилаються на словник RHS."

msgid ""
"Pickling a :class:`~decimal.Context` produces a different output in order to "
"have a common interchange format for the Python and C versions."
msgstr ""
"Видалення :class:`~decimal.Context` створює інший вихід, щоб мати загальний "
"формат обміну для версій Python і C."

msgid ""
"The order of arguments in the :class:`~decimal.Context` constructor has been "
"changed to match the order displayed by :func:`repr`."
msgstr ""
"Порядок аргументів у конструкторі :class:`~decimal.Context` змінено "
"відповідно до порядку, який відображає :func:`repr`."

msgid ""
"The ``watchexp`` parameter in the :meth:`~decimal.Decimal.quantize` method "
"is deprecated."
msgstr ""
"Параметр ``watchexp`` у методі :meth:`~decimal.Decimal.quantize` застарів."

msgid "email"
msgstr "електронною поштою"

msgid "Policy Framework"
msgstr "Рамкова політика"

msgid ""
"The email package now has a :mod:`~email.policy` framework.  A :class:"
"`~email.policy.Policy` is an object with several methods and properties that "
"control how the email package behaves.  The primary policy for Python 3.3 is "
"the :class:`~email.policy.Compat32` policy, which provides backward "
"compatibility with the email package in Python 3.2.  A ``policy`` can be "
"specified when an email message is parsed by a :mod:`~email.parser`, or when "
"a :class:`~email.message.Message` object is created, or when an email is "
"serialized using a :mod:`~email.generator`.  Unless overridden, a policy "
"passed to a ``parser`` is inherited by all the ``Message`` object and sub-"
"objects created by the ``parser``.  By default a ``generator`` will use the "
"policy of the ``Message`` object it is serializing.  The default policy is :"
"data:`~email.policy.compat32`."
msgstr ""
"Пакет електронної пошти тепер має структуру :mod:`~email.policy`. :class:"
"`~email.policy.Policy` — це об’єкт із кількома методами та властивостями, "
"які контролюють поведінку пакета електронної пошти. Основною політикою для "
"Python 3.3 є політика :class:`~email.policy.Compat32`, яка забезпечує "
"зворотну сумісність із пакетом електронної пошти в Python 3.2. ``Політику`` "
"можна вказати, коли повідомлення електронної пошти аналізується :mod:`~email."
"parser`, або коли створюється об’єкт :class:`~email.message.Message`, або "
"коли електронний лист серіалізовано за допомогою :mod:`~email.generator`. "
"Якщо політика, передана аналізатору, не перевизначена, успадковується всіма "
"об’єктами Message і підоб’єктами, створеними синтаксичним аналізатором. За "
"замовчуванням ``генератор`` використовуватиме політику об’єкта ``Message``, "
"який він серіалізує. Політика за умовчанням: :data:`~email.policy.compat32`."

msgid "The minimum set of controls implemented by all ``policy`` objects are:"
msgstr ""
"Мінімальний набір елементів керування, реалізований усіма об’єктами "
"``policy``:"

msgid "max_line_length"
msgstr "максимальна_довжина_рядка"

msgid ""
"The maximum length, excluding the linesep character(s), individual lines may "
"have when a ``Message`` is serialized.  Defaults to 78."
msgstr ""
"Максимальна довжина окремих рядків, за винятком символів рядків, може бути у "
"серіалізованому ``повідомленні``. За замовчуванням 78."

msgid "linesep"
msgstr "linesep"

msgid ""
"The character used to separate individual lines when a ``Message`` is "
"serialized.  Defaults to ``\\n``."
msgstr ""
"Символ, який використовується для розділення окремих рядків, коли "
"``Message`` серіалізується. За замовчуванням ``\\n``."

msgid "cte_type"
msgstr "cte_type"

msgid ""
"``7bit`` or ``8bit``.  ``8bit`` applies only to a ``Bytes`` ``generator``, "
"and means that non-ASCII may be used where allowed by the protocol (or where "
"it exists in the original input)."
msgstr ""
"``7bit`` або ``8bit``. ``8bit`` застосовується лише до ``генератора`` "
"``Bytes`` і означає, що не-ASCII може використовуватися там, де це дозволено "
"протоколом (або там, де воно існує у вихідному введенні)."

msgid "raise_on_defect"
msgstr "підвищення_на_дефект"

msgid ""
"Causes a ``parser`` to raise error when defects are encountered instead of "
"adding them to the ``Message`` object's ``defects`` list."
msgstr ""
"Примушує ``аналізатор`` викликати помилку, коли трапляються дефекти, замість "
"того, щоб додавати їх до списку ``дефектів`` об'єкта ``Message``."

msgid ""
"A new policy instance, with new settings, is created using the :meth:`~email."
"policy.Policy.clone` method of policy objects.  ``clone`` takes any of the "
"above controls as keyword arguments.  Any control not specified in the call "
"retains its default value.  Thus you can create a policy that uses "
"``\\r\\n`` linesep characters like this::"
msgstr ""
"Новий екземпляр політики з новими налаштуваннями створюється за допомогою "
"методу об’єктів політики :meth:`~email.policy.Policy.clone`. ``clone`` "
"приймає будь-який із наведених вище елементів керування як аргумент "
"ключового слова. Будь-який елемент керування, не вказаний у виклику, "
"зберігає значення за замовчуванням. Таким чином, ви можете створити "
"політику, яка використовує символи рядка ``\\r\\n``, як це:"

msgid ""
"Policies can be used to make the generation of messages in the format needed "
"by your application simpler.  Instead of having to remember to specify "
"``linesep='\\r\\n'`` in all the places you call a ``generator``, you can "
"specify it once, when you set the policy used by the ``parser`` or the "
"``Message``, whichever your program uses to create ``Message`` objects.  On "
"the other hand, if you need to generate messages in multiple forms, you can "
"still specify the parameters in the appropriate ``generator`` call.  Or you "
"can have custom policy instances for your different cases, and pass those in "
"when you create the ``generator``."
msgstr ""
"Політики можна використовувати для спрощення створення повідомлень у "
"форматі, необхідному вашій програмі. Замість того, щоб не забувати вказувати "
"``linesep='\\r\\n'`` у всіх місцях, які ви називаєте ``генератором``, ви "
"можете вказати його один раз, коли ви встановлюєте політику, яку "
"використовує ``'парсер'`` або ``Message``, залежно від того, що ваша "
"програма використовує для створення об’єктів ``Message``. З іншого боку, "
"якщо вам потрібно генерувати повідомлення в кількох формах, ви можете "
"вказати параметри у відповідному виклику ``generator``. Або ви можете мати "
"спеціальні екземпляри політики для різних випадків і передати їх під час "
"створення ``генератора``."

msgid "Provisional Policy with New Header API"
msgstr "Попередня політика з новим API заголовка"

msgid ""
"While the policy framework is worthwhile all by itself, the main motivation "
"for introducing it is to allow the creation of new policies that implement "
"new features for the email package in a way that maintains backward "
"compatibility for those who do not use the new policies.  Because the new "
"policies introduce a new API, we are releasing them in Python 3.3 as a :term:"
"`provisional policy <provisional package>`.  Backwards incompatible changes "
"(up to and including removal of the code) may occur if deemed necessary by "
"the core developers."
msgstr ""
"Незважаючи на те, що структура політики сама по собі варта уваги, головною "
"мотивацією для її впровадження є можливість створення нових політик, які "
"реалізують нові функції для пакета електронної пошти таким чином, щоб "
"підтримувати зворотну сумісність для тих, хто не використовує нові політики. "
"Оскільки нові політики вводять новий API, ми випускаємо їх у Python 3.3 як :"
"term:`попередню політику <provisional package>`. Зворотні несумісні зміни "
"(аж до видалення коду) можуть відбуватися, якщо основні розробники вважають "
"це за потрібне."

msgid ""
"The new policies are instances of :class:`~email.policy.EmailPolicy`, and "
"add the following additional controls:"
msgstr ""
"Нові політики є екземплярами :class:`~email.policy.EmailPolicy` і додають "
"такі додаткові елементи керування:"

msgid "refold_source"
msgstr "refold_source"

msgid ""
"Controls whether or not headers parsed by a :mod:`~email.parser` are "
"refolded by the :mod:`~email.generator`.  It can be ``none``, ``long``, or "
"``all``.  The default is ``long``, which means that source headers with a "
"line longer than ``max_line_length`` get refolded.  ``none`` means no line "
"get refolded, and ``all`` means that all lines get refolded."
msgstr ""
"Контролює, чи заголовки, які розбираються :mod:`~email.parser`, повторно "
"згортаються :mod:`~email.generator`. Це може бути ``none``, ``long`` або "
"``all``. Типовим значенням є ``long``, що означає, що вихідні заголовки з "
"рядком, довшим за ``max_line_length``, згортаються повторно. ``none`` "
"означає, що жоден рядок не буде повторно згорнутий, а ``all`` означає, що "
"всі рядки будуть повторно згорнуті."

msgid "header_factory"
msgstr "header_factory"

msgid ""
"A callable that take a ``name`` and ``value`` and produces a custom header "
"object."
msgstr ""
"Викликається, що приймає ``ім’я`` і ``значення`` і створює спеціальний "
"об’єкт заголовка."

msgid ""
"The ``header_factory`` is the key to the new features provided by the new "
"policies.  When one of the new policies is used, any header retrieved from a "
"``Message`` object is an object produced by the ``header_factory``, and any "
"time you set a header on a ``Message`` it becomes an object produced by "
"``header_factory``.  All such header objects have a ``name`` attribute equal "
"to the header name.  Address and Date headers have additional attributes "
"that give you access to the parsed data of the header.  This means you can "
"now do things like this::"
msgstr ""
"``header_factory`` є ключем до нових функцій, наданих новими політиками. "
"Коли використовується одна з нових політик, будь-який заголовок, отриманий з "
"об’єкта ``Message``, є об’єктом, створеним ``header_factory``, і щоразу, "
"коли ви встановлюєте заголовок ``Message``, він стає об’єктом створений "
"``header_factory``. Усі такі об’єкти заголовка мають атрибут ``name``, що "
"дорівнює імені заголовка. Заголовки Address і Date мають додаткові атрибути, "
"які надають вам доступ до проаналізованих даних заголовка. Це означає, що "
"тепер ви можете робити такі речі:"

msgid ""
"You will note that the unicode display name is automatically encoded as "
"``utf-8`` when the message is serialized, but that when the header is "
"accessed directly, you get the unicode version.  This eliminates any need to "
"deal with the :mod:`email.header` :meth:`~email.header.decode_header` or :"
"meth:`~email.header.make_header` functions."
msgstr ""
"Ви помітите, що відображуване ім’я Unicode автоматично кодується як "
"``utf-8``, коли повідомлення серіалізується, але коли до заголовка "
"звертається безпосередньо, ви отримуєте версію Unicode. Це усуває будь-яку "
"потребу працювати з функціями :mod:`email.header` :meth:`~email.header."
"decode_header` або :meth:`~email.header.make_header`."

msgid "You can also create addresses from parts::"
msgstr "Ви також можете створювати адреси з частин::"

msgid "Decoding to unicode is done automatically::"
msgstr "Декодування в Юнікод виконується автоматично:"

msgid ""
"When you parse a message, you can use the ``addresses`` and ``groups`` "
"attributes of the header objects to access the groups and individual "
"addresses::"
msgstr ""
"Коли ви аналізуєте повідомлення, ви можете використовувати атрибути "
"``addresses`` і ``groups`` об’єктів заголовка для доступу до груп та окремих "
"адрес::"

msgid ""
"In summary, if you use one of the new policies, header manipulation works "
"the way it ought to:  your application works with unicode strings, and the "
"email package transparently encodes and decodes the unicode to and from the "
"RFC standard Content Transfer Encodings."
msgstr ""
"Підсумовуючи, якщо ви використовуєте одну з нових політик, маніпулювання "
"заголовками працює так, як і повинно бути: ваша програма працює з рядками "
"Unicode, а пакет електронної пошти прозоро кодує та декодує Unicode до "
"стандарту RFC Content Transfer Encodings."

msgid "Other API Changes"
msgstr "Інші зміни API"

msgid ""
"New :class:`~email.parser.BytesHeaderParser`, added to the :mod:`~email."
"parser` module to complement :class:`~email.parser.HeaderParser` and "
"complete the Bytes API."
msgstr ""
"Новий :class:`~email.parser.BytesHeaderParser`, доданий до модуля :mod:"
"`~email.parser`, щоб доповнити :class:`~email.parser.HeaderParser` і "
"завершити Bytes API."

msgid "New utility functions:"
msgstr "Нові корисні функції:"

msgid ""
":func:`~email.utils.format_datetime`: given a :class:`~datetime.datetime`, "
"produce a string formatted for use in an email header."
msgstr ""
":func:`~email.utils.format_datetime`: враховуючи :class:`~datetime."
"datetime`, створити рядок, відформатований для використання в заголовку "
"електронної пошти."

msgid ""
":func:`~email.utils.parsedate_to_datetime`: given a date string from an "
"email header, convert it into an aware :class:`~datetime.datetime`, or a "
"naive :class:`~datetime.datetime` if the offset is ``-0000``."
msgstr ""
":func:`~email.utils.parsedate_to_datetime`: отримавши рядок дати із "
"заголовка електронної пошти, перетворити його на усвідомлений :class:"
"`~datetime.datetime` або простий :class:`~datetime.datetime`, якщо зсув "
"``-0000``."

msgid ""
":func:`~email.utils.localtime`: With no argument, returns the current local "
"time as an aware :class:`~datetime.datetime` using the local :class:"
"`~datetime.timezone`.  Given an aware :class:`~datetime.datetime`, converts "
"it into an aware :class:`~datetime.datetime` using the local :class:"
"`~datetime.timezone`."
msgstr ""
":func:`~email.utils.localtime`: без аргументів повертає поточний місцевий "
"час як відомий :class:`~datetime.datetime` з використанням локального :class:"
"`~datetime.timezone`. Дано aware :class:`~datetime.datetime`, перетворює "
"його на aware :class:`~datetime.datetime` за допомогою локального :class:"
"`~datetime.timezone`."

msgid "ftplib"
msgstr "ftplib"

msgid ""
":class:`ftplib.FTP` now accepts a ``source_address`` keyword argument to "
"specify the ``(host, port)`` to use as the source address in the bind call "
"when creating the outgoing socket.  (Contributed by Giampaolo Rodolà in :"
"issue:`8594`.)"
msgstr ""
":class:`ftplib.FTP` тепер приймає аргумент ключового слова "
"``source_address``, щоб вказати ``(хост, порт)`` для використання як адреси "
"джерела у виклику зв’язування під час створення вихідного сокета. (Надав "
"Джампаоло Родола в :issue:`8594`.)"

msgid ""
"The :class:`~ftplib.FTP_TLS` class now provides a new :func:`~ftplib.FTP_TLS."
"ccc` function to revert control channel back to plaintext.  This can be "
"useful to take advantage of firewalls that know how to handle NAT with non-"
"secure FTP without opening fixed ports.  (Contributed by Giampaolo Rodolà "
"in :issue:`12139`.)"
msgstr ""
"Клас :class:`~ftplib.FTP_TLS` тепер надає нову функцію :func:`~ftplib."
"FTP_TLS.ccc` для повернення каналу керування назад до відкритого тексту. Це "
"може бути корисним, щоб скористатися перевагами брандмауерів, які знають, як "
"обробляти NAT із незахищеним FTP без відкриття фіксованих портів. (Надав "
"Джампаоло Родола в :issue:`12139`.)"

msgid ""
"Added :meth:`ftplib.FTP.mlsd` method which provides a parsable directory "
"listing format and deprecates :meth:`ftplib.FTP.nlst` and :meth:`ftplib.FTP."
"dir`.  (Contributed by Giampaolo Rodolà in :issue:`11072`.)"
msgstr ""
"Додано метод :meth:`ftplib.FTP.mlsd`, який забезпечує аналізований формат "
"списку каталогів і не підтримує :meth:`ftplib.FTP.nlst` і :meth:`ftplib.FTP."
"dir`. (Надав Джампаоло Родола в :issue:`11072`.)"

msgid "functools"
msgstr "functools"

msgid ""
"The :func:`functools.lru_cache` decorator now accepts a ``typed`` keyword "
"argument (that defaults to ``False`` to ensure that it caches values of "
"different types that compare equal in separate cache slots.  (Contributed by "
"Raymond Hettinger in :issue:`13227`.)"
msgstr ""
"Декоратор :func:`functools.lru_cache` тепер приймає аргумент ключового слова "
"``typed`` (який за замовчуванням має значення ``False``, щоб забезпечити "
"кешування значень різних типів, які порівнюються, в окремих слотах кешу. "
"(Надано Raymond Hettinger у :issue:`13227`.)"

msgid "gc"
msgstr "gc"

msgid ""
"It is now possible to register callbacks invoked by the garbage collector "
"before and after collection using the new :data:`~gc.callbacks` list."
msgstr ""
"Тепер можна реєструвати зворотні виклики, викликані збирачем сміття до та "
"після збирання, використовуючи новий список :data:`~gc.callbacks`."

msgid "hmac"
msgstr "hmac"

msgid ""
"A new :func:`~hmac.compare_digest` function has been added to prevent side "
"channel attacks on digests through timing analysis.  (Contributed by Nick "
"Coghlan and Christian Heimes in :issue:`15061`.)"
msgstr ""
"Додано нову функцію :func:`~hmac.compare_digest`, щоб запобігти атакам "
"бічних каналів на дайджести за допомогою аналізу часу. (Надано Ніком "
"Когланом і Крістіаном Хеймсом у :issue:`15061`.)"

msgid "http"
msgstr "http"

msgid ""
":class:`http.server.BaseHTTPRequestHandler` now buffers the headers and "
"writes them all at once when :meth:`~http.server.BaseHTTPRequestHandler."
"end_headers` is called.  A new method :meth:`~http.server."
"BaseHTTPRequestHandler.flush_headers` can be used to directly manage when "
"the accumulated headers are sent. (Contributed by Andrew Schaaf in :issue:"
"`3709`.)"
msgstr ""
":class:`http.server.BaseHTTPRequestHandler` тепер буферизує заголовки та "
"записує їх усі одночасно під час виклику :meth:`~http.server."
"BaseHTTPRequestHandler.end_headers`. Новий метод :meth:`~http.server."
"BaseHTTPRequestHandler.flush_headers` можна використовувати для "
"безпосереднього керування надсиланням накопичених заголовків. (Надав Ендрю "
"Шааф у :issue:`3709`.)"

msgid ""
":class:`http.server` now produces valid ``HTML 4.01 strict`` output. "
"(Contributed by Ezio Melotti in :issue:`13295`.)"
msgstr ""
":class:`http.server` тепер створює дійсний вихід ``HTML 4.01 strict``. "
"(Надав Еціо Мелотті в :issue:`13295`.)"

msgid ""
":class:`http.client.HTTPResponse` now has a :meth:`~http.client.HTTPResponse."
"readinto` method, which means it can be used as an :class:`io.RawIOBase` "
"class.  (Contributed by John Kuhn in :issue:`13464`.)"
msgstr ""
":class:`http.client.HTTPResponse` тепер має метод :meth:`~http.client."
"HTTPResponse.readinto`, що означає, що його можна використовувати як клас :"
"class:`io.RawIOBase`. (Надав Джон Кун у :issue:`13464`.)"

msgid "html"
msgstr "html"

msgid ""
":class:`html.parser.HTMLParser` is now able to parse broken markup without "
"raising errors, therefore the *strict* argument of the constructor and the :"
"exc:`~html.parser.HTMLParseError` exception are now deprecated. The ability "
"to parse broken markup is the result of a number of bug fixes that are also "
"available on the latest bug fix releases of Python 2.7/3.2. (Contributed by "
"Ezio Melotti in :issue:`15114`, and :issue:`14538`, :issue:`13993`, :issue:"
"`13960`, :issue:`13358`, :issue:`1745761`, :issue:`755670`, :issue:`13357`, :"
"issue:`12629`, :issue:`1200313`, :issue:`670664`, :issue:`13273`, :issue:"
"`12888`, :issue:`7311`.)"
msgstr ""
":class:`html.parser.HTMLParser` тепер може аналізувати пошкоджену розмітку, "
"не викликаючи помилок, тому аргумент *strict* конструктора та виняток :exc:"
"`~html.parser.HTMLParseError` тепер застаріли. Можливість аналізу "
"пошкодженої розмітки є результатом ряду виправлень помилок, які також "
"доступні в останніх версіях виправлень помилок Python 2.7/3.2. (Надав Еціо "
"Мелотті в :issue:`15114` і :issue:`14538`, :issue:`13993`, :issue:`13960`, :"
"issue:`13358`, :issue:`1745761`,  :issue:`755670`, :issue:`13357`, :issue:"
"`12629`, :issue:`1200313`, :issue:`670664`, :issue:`13273`, :issue:`12888`, :"
"issue:`7311`.)"

msgid ""
"A new :data:`~html.entities.html5` dictionary that maps HTML5 named "
"character references to the equivalent Unicode character(s) (e.g. "
"``html5['gt;'] == '>'``) has been added to the :mod:`html.entities` module.  "
"The dictionary is now also used by :class:`~html.parser.HTMLParser`.  "
"(Contributed by Ezio Melotti in :issue:`11113` and :issue:`15156`.)"
msgstr ""
"Додано новий словник :data:`~html.entities.html5`, який відображає посилання "
"на іменовані символи HTML5 на еквівалентні символи Unicode (наприклад, "
"``html5['gt;'] == '>'``). до модуля :mod:`html.entities`. Словник тепер "
"також використовується :class:`~html.parser.HTMLParser`. (Надав Еціо Мелотті "
"в :issue:`11113` і :issue:`15156`.)"

msgid "imaplib"
msgstr "імапліб"

msgid ""
"The :class:`~imaplib.IMAP4_SSL` constructor now accepts an SSLContext "
"parameter to control parameters of the secure channel."
msgstr ""
"Конструктор :class:`~imaplib.IMAP4_SSL` тепер приймає параметр SSLContext "
"для керування параметрами безпечного каналу."

msgid "(Contributed by Sijin Joseph in :issue:`8808`.)"
msgstr "(Надав Сіджин Джозеф у :issue:`8808`.)"

msgid "inspect"
msgstr "оглядати"

msgid ""
"A new :func:`~inspect.getclosurevars` function has been added. This function "
"reports the current binding of all names referenced from the function body "
"and where those names were resolved, making it easier to verify correct "
"internal state when testing code that relies on stateful closures."
msgstr ""
"Додано нову функцію :func:`~inspect.getclosurevars`. Ця функція повідомляє "
"про поточне зв’язування всіх імен, на які посилається тіло функції, і про "
"те, де ці імена були розпізнані, що полегшує перевірку правильності "
"внутрішнього стану під час тестування коду, який покладається на закриття зі "
"збереженням стану."

msgid "(Contributed by Meador Inge and Nick Coghlan in :issue:`13062`.)"
msgstr "(Надано Meador Inge та Nick Coghlan у :issue:`13062`.)"

msgid ""
"A new :func:`~inspect.getgeneratorlocals` function has been added. This "
"function reports the current binding of local variables in the generator's "
"stack frame, making it easier to verify correct internal state when testing "
"generators."
msgstr ""
"Додано нову функцію :func:`~inspect.getgeneratorlocals`. Ця функція "
"повідомляє про поточне зв’язування локальних змінних у стековому кадрі "
"генератора, що полегшує перевірку правильності внутрішнього стану під час "
"тестування генераторів."

msgid "(Contributed by Meador Inge in :issue:`15153`.)"
msgstr "(Надано Meador Inge у :issue:`15153`.)"

msgid "io"
msgstr "io"

msgid ""
"The :func:`~io.open` function has a new ``'x'`` mode that can be used to "
"exclusively create a new file, and raise a :exc:`FileExistsError` if the "
"file already exists. It is based on the C11 'x' mode to fopen()."
msgstr ""
"Функція :func:`~io.open` має новий режим ``'x''``, який можна "
"використовувати виключно для створення нового файлу та викликати :exc:"
"`FileExistsError`, якщо файл уже існує. Він заснований на режимі C11 'x' для "
"fopen()."

msgid "(Contributed by David Townshend in :issue:`12760`.)"
msgstr "(Надав Девід Тауншенд у :issue:`12760`.)"

msgid ""
"The constructor of the :class:`~io.TextIOWrapper` class has a new "
"*write_through* optional argument. If *write_through* is ``True``, calls to :"
"meth:`~io.TextIOWrapper.write` are guaranteed not to be buffered: any data "
"written on the :class:`~io.TextIOWrapper` object is immediately handled to "
"its underlying binary buffer."
msgstr ""
"Конструктор класу :class:`~io.TextIOWrapper` має новий необов’язковий "
"аргумент *write_through*. Якщо *write_through* має значення ``True``, "
"виклики :meth:`~io.TextIOWrapper.write` гарантовано не буферизуються: будь-"
"які дані, записані в об’єкт :class:`~io.TextIOWrapper`, негайно обробляються "
"базовий двійковий буфер."

msgid "itertools"
msgstr "itertools"

msgid ""
":func:`~itertools.accumulate` now takes an optional ``func`` argument for "
"providing a user-supplied binary function."
msgstr ""
":func:`~itertools.accumulate` тепер приймає додатковий аргумент ``func`` для "
"надання наданої користувачем бінарної функції."

msgid "logging"
msgstr "лісозаготівля"

msgid ""
"The :func:`~logging.basicConfig` function now supports an optional "
"``handlers`` argument taking an iterable of handlers to be added to the root "
"logger."
msgstr ""
"Функція :func:`~logging.basicConfig` тепер підтримує необов’язковий аргумент "
"``handlers``, який приймає ітерацію обробників для додавання до кореневого "
"реєстратора."

msgid ""
"A class level attribute :attr:`~logging.handlers.SysLogHandler.append_nul` "
"has been added to :class:`~logging.handlers.SysLogHandler` to allow control "
"of the appending of the ``NUL`` (``\\000``) byte to syslog records, since "
"for some daemons it is required while for others it is passed through to the "
"log."
msgstr ""
"Атрибут рівня класу :attr:`~logging.handlers.SysLogHandler.append_nul` "
"додано до :class:`~logging.handlers.SysLogHandler`, щоб дозволити "
"контролювати додавання ``NUL`` (``\\000``) байт до записів системного "
"журналу, оскільки для деяких демонов він потрібен, а для інших він "
"передається до журналу."

msgid "math"
msgstr "математика"

msgid ""
"The :mod:`math` module has a new function, :func:`~math.log2`,  which "
"returns the base-2 logarithm of *x*."
msgstr ""
"Модуль :mod:`math` має нову функцію, :func:`~math.log2`, яка повертає "
"логарифм *x* за основою 2."

msgid "(Written by Mark Dickinson in :issue:`11888`.)"
msgstr "(Написав Марк Дікінсон у :issue:`11888`.)"

msgid "mmap"
msgstr "mmap"

msgid ""
"The :meth:`~mmap.mmap.read` method is now more compatible with other file-"
"like objects: if the argument is omitted or specified as ``None``, it "
"returns the bytes from the current file position to the end of the mapping.  "
"(Contributed by Petri Lehtinen in :issue:`12021`.)"
msgstr ""
"Метод :meth:`~mmap.mmap.read` тепер більш сумісний з іншими файлоподібними "
"об’єктами: якщо аргумент опущено або вказано як ``None``, він повертає байти "
"від поточної позиції файлу до кінця відображення. (Надав Петрі Лехтінен у :"
"issue:`12021`.)"

msgid "multiprocessing"
msgstr "багатопроцесорність"

msgid ""
"The new :func:`multiprocessing.connection.wait` function allows polling "
"multiple objects (such as connections, sockets and pipes) with a timeout. "
"(Contributed by Richard Oudkerk in :issue:`12328`.)"
msgstr ""
"Нова функція :func:`multiprocessing.connection.wait` дозволяє опитувати "
"кілька об’єктів (таких як з’єднання, сокети та канали) з тайм-аутом. (Надав "
"Річард Оудкерк у :issue:`12328`.)"

msgid ""
":class:`multiprocessing.Connection` objects can now be transferred over "
"multiprocessing connections. (Contributed by Richard Oudkerk in :issue:"
"`4892`.)"
msgstr ""
":class:`multiprocessing.Connection` об’єкти тепер можна передавати через "
"багатопроцесорні з’єднання. (Надав Річард Оудкерк у :issue:`4892`.)"

msgid ""
":class:`multiprocessing.Process` now accepts a ``daemon`` keyword argument "
"to override the default behavior of inheriting the ``daemon`` flag from the "
"parent process (:issue:`6064`)."
msgstr ""
":class:`multiprocessing.Process` тепер приймає аргумент ключового слова "
"``daemon``, щоб замінити типову поведінку успадкування прапора ``daemon`` "
"від батьківського процесу (:issue:`6064`)."

msgid ""
"New attribute :data:`multiprocessing.Process.sentinel` allows a program to "
"wait on multiple :class:`~multiprocessing.Process` objects at one time using "
"the appropriate OS primitives (for example, :mod:`select` on posix systems)."
msgstr ""
"Новий атрибут :data:`multiprocessing.Process.sentinel` дозволяє програмі "
"очікувати на кілька об’єктів :class:`~multiprocessing.Process` одночасно, "
"використовуючи відповідні примітиви ОС (наприклад, :mod:`select` у системах "
"posix )."

msgid ""
"New methods :meth:`multiprocessing.pool.Pool.starmap` and :meth:"
"`~multiprocessing.pool.Pool.starmap_async` provide :func:`itertools.starmap` "
"equivalents to the existing :meth:`multiprocessing.pool.Pool.map` and :meth:"
"`~multiprocessing.pool.Pool.map_async` functions.  (Contributed by Hynek "
"Schlawack in :issue:`12708`.)"
msgstr ""
"Нові методи :meth:`multiprocessing.pool.Pool.starmap` і :meth:"
"`~multiprocessing.pool.Pool.starmap_async` забезпечують :func:`itertools."
"starmap` еквіваленти існуючого :meth:`multiprocessing.pool.Pool Функції ."
"map` і :meth:`~multiprocessing.pool.Pool.map_async`. (Надав Хайнек Шлавак у :"
"issue:`12708`.)"

msgid "nntplib"
msgstr "nntplib"

msgid ""
"The :class:`nntplib.NNTP` class now supports the context management protocol "
"to unconditionally consume :exc:`socket.error` exceptions and to close the "
"NNTP connection when done::"
msgstr ""
"Клас :class:`nntplib.NNTP` тепер підтримує протокол керування контекстом для "
"безумовного використання винятків :exc:`socket.error` і закриття з’єднання "
"NNTP після завершення:"

msgid "(Contributed by Giampaolo Rodolà in :issue:`9795`.)"
msgstr "(Надав Джампаоло Родола в :issue:`9795`.)"

msgid "os"
msgstr "ос"

msgid ""
"The :mod:`os` module has a new :func:`~os.pipe2` function that makes it "
"possible to create a pipe with :data:`~os.O_CLOEXEC` or :data:`~os."
"O_NONBLOCK` flags set atomically. This is especially useful to avoid race "
"conditions in multi-threaded programs."
msgstr ""
"Модуль :mod:`os` має нову функцію :func:`~os.pipe2`, яка дає змогу "
"створювати трубу з прапорцями :data:`~os.O_CLOEXEC` або :data:`~os."
"O_NONBLOCK` встановити атомарно. Це особливо корисно, щоб уникнути умов "
"змагань у багатопоточних програмах."

msgid ""
"The :mod:`os` module has a new :func:`~os.sendfile` function which provides "
"an efficient \"zero-copy\" way for copying data from one file (or socket) "
"descriptor to another. The phrase \"zero-copy\" refers to the fact that all "
"of the copying of data between the two descriptors is done entirely by the "
"kernel, with no copying of data into userspace buffers. :func:`~os.sendfile` "
"can be used to efficiently copy data from a file on disk to a network "
"socket, e.g. for downloading a file."
msgstr ""
"Модуль :mod:`os` має нову функцію :func:`~os.sendfile`, яка забезпечує "
"ефективний спосіб \"нульового копіювання\" для копіювання даних з одного "
"дескриптора файлу (або сокета) до іншого. Фраза \"нульове копіювання\" "
"стосується того факту, що все копіювання даних між двома дескрипторами "
"виконується виключно ядром, без копіювання даних у буфери простору "
"користувача. :func:`~os.sendfile` можна використовувати для ефективного "
"копіювання даних із файлу на диску в мережевий сокет, напр. для завантаження "
"файлу."

msgid ""
"(Patch submitted by Ross Lagerwall and Giampaolo Rodolà in :issue:`10882`.)"
msgstr ""
"(Патч надіслано Россом Лагерваллом і Джампаоло Родола в :issue:`10882`.)"

msgid ""
"To avoid race conditions like symlink attacks and issues with temporary "
"files and directories, it is more reliable (and also faster) to manipulate "
"file descriptors instead of file names. Python 3.3 enhances existing "
"functions and introduces new functions to work on file descriptors (:issue:"
"`4761`, :issue:`10755` and :issue:`14626`)."
msgstr ""
"Щоб уникнути таких ситуацій, як атаки символьних посилань і проблеми з "
"тимчасовими файлами та каталогами, надійніше (а також швидше) маніпулювати "
"дескрипторами файлів замість імен файлів. Python 3.3 покращує існуючі "
"функції та представляє нові функції для роботи з дескрипторами файлів (:"
"issue:`4761`, :issue:`10755` та :issue:`14626`)."

msgid ""
"The :mod:`os` module has a new :func:`~os.fwalk` function similar to :func:"
"`~os.walk` except that it also yields file descriptors referring to the "
"directories visited. This is especially useful to avoid symlink races."
msgstr ""
"Модуль :mod:`os` має нову функцію :func:`~os.fwalk`, подібну до :func:`~os."
"walk` за винятком того, що він також видає дескриптори файлів, які "
"посилаються на відвідані каталоги. Це особливо корисно, щоб уникнути "
"перегонів символічних посилань."

msgid ""
"The following functions get new optional *dir_fd* (:ref:`paths relative to "
"directory descriptors <dir_fd>`) and/or *follow_symlinks* (:ref:`not "
"following symlinks <follow_symlinks>`): :func:`~os.access`, :func:`~os."
"chflags`, :func:`~os.chmod`, :func:`~os.chown`, :func:`~os.link`, :func:`~os."
"lstat`, :func:`~os.mkdir`, :func:`~os.mkfifo`, :func:`~os.mknod`, :func:`~os."
"open`, :func:`~os.readlink`, :func:`~os.remove`, :func:`~os.rename`, :func:"
"`~os.replace`, :func:`~os.rmdir`, :func:`~os.stat`, :func:`~os.symlink`, :"
"func:`~os.unlink`, :func:`~os.utime`.  Platform support for using these "
"parameters can be checked via the sets :data:`os.supports_dir_fd` and :data:"
"`os.supports_follows_symlinks`."
msgstr ""
"Наступні функції отримують нові додаткові *dir_fd* (:ref:`шляхи відносно "
"дескрипторів каталогу <dir_fd>`) та/або *follow_symlinks* (:ref:`не слідують "
"символічним посиланням <follow_symlinks>`): :func:`~os.access`, :func:`~os."
"chflags`, :func:`~os.chmod`, :func:`~os.chown`, :func:`~os.link`, :func:`~os."
"lstat`, :func:`~os.mkdir`, :func:`~os.mkfifo`, :func:`~os.mknod`, :func:`~os."
"open`, :func:`~os.readlink`, :func:`~os.remove`, :func:`~os.rename`, :func:"
"`~os.replace`, :func:`~os.rmdir`, :func:`~os.stat`, :func:`~os.symlink`, :"
"func:`~os.unlink`, :func:`~os.utime`. Підтримку платформи для використання "
"цих параметрів можна перевірити за допомогою наборів :data:`os."
"supports_dir_fd` і :data:`os.supports_follows_symlinks`."

msgid ""
"The following functions now support a file descriptor for their path "
"argument: :func:`~os.chdir`, :func:`~os.chmod`, :func:`~os.chown`, :func:"
"`~os.execve`, :func:`~os.listdir`, :func:`~os.pathconf`, :func:`~os.path."
"exists`, :func:`~os.stat`, :func:`~os.statvfs`, :func:`~os.utime`.  Platform "
"support for this can be checked via the :data:`os.supports_fd` set."
msgstr ""
"Наступні функції тепер підтримують дескриптор файлу для свого аргументу "
"шляху: :func:`~os.chdir`, :func:`~os.chmod`, :func:`~os.chown`, :func:`~os. "
"execve`, :func:`~os.listdir`, :func:`~os.pathconf`, :func:`~os.path."
"exists`, :func:`~os.stat`, :func:`~os.statvfs`, :func:`~os.utime`. Підтримку "
"платформи для цього можна перевірити за допомогою набору :data:`os."
"supports_fd`."

msgid ""
":func:`~os.access` accepts an ``effective_ids`` keyword argument to turn on "
"using the effective uid/gid rather than the real uid/gid in the access "
"check. Platform support for this can be checked via the :data:`~os."
"supports_effective_ids` set."
msgstr ""
":func:`~os.access` приймає аргумент ключового слова ``effective_ids``, щоб "
"увімкнути використання ефективного uid/gid замість справжнього uid/gid під "
"час перевірки доступу. Підтримку платформи для цього можна перевірити за "
"допомогою набору :data:`~os.supports_effective_ids`."

msgid ""
"The :mod:`os` module has two new functions: :func:`~os.getpriority` and :"
"func:`~os.setpriority`. They can be used to get or set process niceness/"
"priority in a fashion similar to :func:`os.nice` but extended to all "
"processes instead of just the current one."
msgstr ""
"Модуль :mod:`os` має дві нові функції: :func:`~os.getpriority` і :func:`~os."
"setpriority`. Їх можна використовувати, щоб отримати або встановити "
"зручність/пріоритет процесів подібно до :func:`os.nice`, але поширене на всі "
"процеси, а не лише на поточний."

msgid "(Patch submitted by Giampaolo Rodolà in :issue:`10784`.)"
msgstr "(Патч надіслав Джампаоло Родола в :issue:`10784`.)"

msgid ""
"The new :func:`os.replace` function allows cross-platform renaming of a file "
"with overwriting the destination.  With :func:`os.rename`, an existing "
"destination file is overwritten under POSIX, but raises an error under "
"Windows. (Contributed by Antoine Pitrou in :issue:`8828`.)"
msgstr ""
"Нова функція :func:`os.replace` дозволяє перейменовувати файл на різних "
"платформах із перезаписом місця призначення. За допомогою :func:`os.rename` "
"наявний цільовий файл перезаписується під POSIX, але викликає помилку під "
"Windows. (Надав Антуан Пітру в :issue:`8828`.)"

msgid ""
"The stat family of functions (:func:`~os.stat`, :func:`~os.fstat`, and :func:"
"`~os.lstat`) now support reading a file's timestamps with nanosecond "
"precision.  Symmetrically, :func:`~os.utime` can now write file timestamps "
"with nanosecond precision.  (Contributed by Larry Hastings in :issue:"
"`14127`.)"
msgstr ""
"Сімейство функцій stat (:func:`~os.stat`, :func:`~os.fstat` і :func:`~os."
"lstat` тепер підтримує читання позначок часу файлу з наносекундною точністю. "
"Симетрично, :func:`~os.utime` тепер може записувати мітки часу файлу з "
"точністю до наносекунд. (Надано Ларрі Гастінгсом у :issue:`14127`.)"

msgid ""
"The new :func:`os.get_terminal_size` function queries the size of the "
"terminal attached to a file descriptor. See also :func:`shutil."
"get_terminal_size`. (Contributed by Zbigniew Jędrzejewski-Szmek in :issue:"
"`13609`.)"
msgstr ""
"Нова функція :func:`os.get_terminal_size` запитує розмір терміналу, "
"прикріпленого до дескриптора файлу. Дивіться також :func:`shutil."
"get_terminal_size`. (Надав Збігнєв Єнджеєвський-Шмек у :issue:`13609`.)"

msgid ""
"New functions to support Linux extended attributes (:issue:`12720`): :func:"
"`~os.getxattr`, :func:`~os.listxattr`, :func:`~os.removexattr`, :func:`~os."
"setxattr`."
msgstr ""
"Нові функції для підтримки розширених атрибутів Linux (:issue:`12720`): :"
"func:`~os.getxattr`, :func:`~os.listxattr`, :func:`~os.removexattr`, :func:"
"`~os.setxattr`."

msgid ""
"New interface to the scheduler. These functions control how a process is "
"allocated CPU time by the operating system. New functions: :func:`~os."
"sched_get_priority_max`, :func:`~os.sched_get_priority_min`, :func:`~os."
"sched_getaffinity`, :func:`~os.sched_getparam`, :func:`~os."
"sched_getscheduler`, :func:`~os.sched_rr_get_interval`, :func:`~os."
"sched_setaffinity`, :func:`~os.sched_setparam`, :func:`~os."
"sched_setscheduler`, :func:`~os.sched_yield`,"
msgstr ""
"Новий інтерфейс планувальника. Ці функції контролюють, як процес розподіляє "
"процесорний час операційною системою. Нові функції: :func:`~os."
"sched_get_priority_max`, :func:`~os.sched_get_priority_min`, :func:`~os."
"sched_getaffinity`, :func:`~os.sched_getparam`, :func:`~os. "
"sched_getscheduler`, :func:`~os.sched_rr_get_interval`, :func:`~os."
"sched_setaffinity`, :func:`~os.sched_setparam`, :func:`~os."
"sched_setscheduler`, :func:`~os. sched_yield`,"

msgid "New functions to control the file system:"
msgstr "Нові функції для керування файловою системою:"

msgid ""
":func:`~os.posix_fadvise`: Announces an intention to access data in a "
"specific pattern thus allowing the kernel to make optimizations."
msgstr ""
":func:`~os.posix_fadvise`: повідомляє про намір отримати доступ до даних за "
"певним шаблоном, таким чином дозволяючи ядру робити оптимізацію."

msgid ""
":func:`~os.posix_fallocate`: Ensures that enough disk space is allocated for "
"a file."
msgstr ""
":func:`~os.posix_fallocate`: Переконується, що для файлу виділено достатньо "
"місця на диску."

msgid ":func:`~os.sync`: Force write of everything to disk."
msgstr ":func:`~os.sync`: Примусовий запис усього на диск."

msgid "Additional new  posix functions:"
msgstr "Додаткові нові функції posix:"

msgid ""
":func:`~os.lockf`: Apply, test or remove a POSIX lock on an open file "
"descriptor."
msgstr ""
":func:`~os.lockf`: Застосувати, перевірити або видалити блокування POSIX для "
"дескриптора відкритого файлу."

msgid ""
":func:`~os.pread`: Read from a file descriptor at an offset, the file offset "
"remains unchanged."
msgstr ""
":func:`~os.pread`: читання з дескриптора файлу зі зміщенням, зміщення файлу "
"залишається незмінним."

msgid ""
":func:`~os.pwrite`: Write to a file descriptor from an offset, leaving the "
"file offset unchanged."
msgstr ""
":func:`~os.pwrite`: Запис у дескриптор файлу зі зсуву, залишаючи зміщення "
"файлу незмінним."

msgid ""
":func:`~os.readv`: Read from a file descriptor into a number of writable "
"buffers."
msgstr ""
":func:`~os.readv`: Читання з дескриптора файлу в декілька записуваних "
"буферів."

msgid ""
":func:`~os.truncate`: Truncate the file corresponding to *path*, so that it "
"is at most *length* bytes in size."
msgstr ""
":func:`~os.truncate`: Обрізати файл, що відповідає *шляху*, щоб він мав "
"розмір не більше *довжини* байтів."

msgid ""
":func:`~os.waitid`: Wait for the completion of one or more child processes."
msgstr ""
":func:`~os.waitid`: Зачекайте на завершення одного чи кількох дочірніх "
"процесів."

msgid ""
":func:`~os.writev`: Write the contents of *buffers* to a file descriptor, "
"where *buffers* is an arbitrary sequence of buffers."
msgstr ""
":func:`~os.writev`: Записати вміст *buffers* у файловий дескриптор, де "
"*buffers* — це довільна послідовність буферів."

msgid ""
":func:`~os.getgrouplist` (:issue:`9344`): Return list of group ids that "
"specified user belongs to."
msgstr ""
":func:`~os.getgrouplist` (:issue:`9344`): повертає список ідентифікаторів "
"груп, до яких належить вказаний користувач."

msgid ""
":func:`~os.times` and :func:`~os.uname`: Return type changed from a tuple to "
"a tuple-like object with named attributes."
msgstr ""
":func:`~os.times` і :func:`~os.uname`: тип повернення змінено з кортежу на "
"кортеж-подібний об’єкт з іменованими атрибутами."

msgid ""
"Some platforms now support additional constants for the :func:`~os.lseek` "
"function, such as ``os.SEEK_HOLE`` and ``os.SEEK_DATA``."
msgstr ""
"Деякі платформи тепер підтримують додаткові константи для функції :func:`~os."
"lseek`, такі як ``os.SEEK_HOLE`` і ``os.SEEK_DATA``."

msgid ""
"New constants :data:`~os.RTLD_LAZY`, :data:`~os.RTLD_NOW`, :data:`~os."
"RTLD_GLOBAL`, :data:`~os.RTLD_LOCAL`, :data:`~os.RTLD_NODELETE`, :data:`~os."
"RTLD_NOLOAD`, and :data:`~os.RTLD_DEEPBIND` are available on platforms that "
"support them.   These are for use with the :func:`sys.setdlopenflags` "
"function, and supersede the similar constants defined in :mod:`ctypes` and :"
"mod:`DLFCN`.  (Contributed by Victor Stinner in :issue:`13226`.)"
msgstr ""
"Нові константи :data:`~os.RTLD_LAZY`, :data:`~os.RTLD_NOW`, :data:`~os."
"RTLD_GLOBAL`, :data:`~os.RTLD_LOCAL`, :data:`~os.RTLD_NODELETE`, :data:`~os."
"RTLD_NOLOAD` і :data:`~os.RTLD_DEEPBIND` доступні на платформах, які їх "
"підтримують. Вони призначені для використання з функцією :func:`sys."
"setdlopenflags` і замінюють подібні константи, визначені в :mod:`ctypes` і :"
"mod:`DLFCN`. (Надав Віктор Стіннер у :issue:`13226`.)"

msgid ""
":func:`os.symlink` now accepts (and ignores) the ``target_is_directory`` "
"keyword argument on non-Windows platforms, to ease cross-platform support."
msgstr ""
":func:`os.symlink` тепер приймає (і ігнорує) аргумент ключового слова "
"``target_is_directory`` на платформах, відмінних від Windows, щоб полегшити "
"міжплатформенну підтримку."

msgid "pdb"
msgstr "pdb"

msgid ""
"Tab-completion is now available not only for command names, but also their "
"arguments.  For example, for the ``break`` command, function and file names "
"are completed."
msgstr ""
"Завершення табуляції тепер доступне не тільки для імен команд, але й для їх "
"аргументів. Наприклад, для команди ``break`` завершуються імена функцій і "
"файлів."

msgid "(Contributed by Georg Brandl in :issue:`14210`)"
msgstr "(Надав Георг Брандл у :issue:`14210`)"

msgid "pickle"
msgstr "маринований огірок"

msgid ""
":class:`pickle.Pickler` objects now have an optional :attr:`~pickle.Pickler."
"dispatch_table` attribute allowing per-pickler reduction functions to be set."
msgstr ""
"Об’єкти :class:`pickle.Pickler` тепер мають необов’язковий атрибут :attr:"
"`~pickle.Pickler.dispatch_table`, який дозволяє встановлювати функції "
"зменшення для кожного піклера."

msgid "(Contributed by Richard Oudkerk in :issue:`14166`.)"
msgstr "(Надав Річард Оудкерк у :issue:`14166`.)"

msgid "pydoc"
msgstr "pydoc"

msgid ""
"The Tk GUI and the :func:`~pydoc.serve` function have been removed from the :"
"mod:`pydoc` module: ``pydoc -g`` and :func:`~pydoc.serve` have been "
"deprecated in Python 3.2."
msgstr ""
"Графічний інтерфейс Tk і функцію :func:`~pydoc.serve` видалено з модуля :mod:"
"`pydoc`: ``pydoc -g`` і :func:`~pydoc.serve` застаріли в Python 3.2."

msgid "re"
msgstr "повторно"

msgid ""
":class:`str` regular expressions now support ``\\u`` and ``\\U`` escapes."
msgstr ""
":class:`str` регулярні вирази тепер підтримують екранування ``\\u`` і "
"``\\U``."

msgid "(Contributed by Serhiy Storchaka in :issue:`3665`.)"
msgstr "(Надав Сергій Сторчака в :issue:`3665`.)"

msgid "sched"
msgstr "розклад"

msgid ""
":meth:`~sched.scheduler.run` now accepts a *blocking* parameter which when "
"set to false makes the method execute the scheduled events due to expire "
"soonest (if any) and then return immediately. This is useful in case you "
"want to use the :class:`~sched.scheduler` in non-blocking applications.  "
"(Contributed by Giampaolo Rodolà in :issue:`13449`.)"
msgstr ""
":meth:`~sched.scheduler.run` тепер приймає параметр *blocking*, який, якщо "
"встановлено на false, змушує метод виконувати заплановані події, які мають "
"закінчитися якнайшвидше (якщо такі є), а потім негайно повертатися. Це "
"корисно, якщо ви хочете використовувати :class:`~sched.scheduler` у "
"неблокуючих програмах. (Надав Джампаоло Родола в :issue:`13449`.)"

msgid ""
":class:`~sched.scheduler` class can now be safely used in multi-threaded "
"environments.  (Contributed by Josiah Carlson and Giampaolo Rodolà in :issue:"
"`8684`.)"
msgstr ""
":class:`~sched.scheduler` клас тепер можна безпечно використовувати в "
"багатопоточних середовищах. (Надано Джосіа Карлсоном і Джампаоло Родола в :"
"issue:`8684`.)"

msgid ""
"*timefunc* and *delayfunct* parameters of :class:`~sched.scheduler` class "
"constructor are now optional and defaults to :func:`time.time` and :func:"
"`time.sleep` respectively.  (Contributed by Chris Clark in :issue:`13245`.)"
msgstr ""
"Параметри *timefunc* і *delayfunct* конструктора класу :class:`~sched."
"scheduler` тепер є необов’язковими і за умовчанням мають значення :func:"
"`time.time` і :func:`time.sleep` відповідно. (Надав Кріс Кларк у :issue:"
"`13245`.)"

msgid ""
":meth:`~sched.scheduler.enter` and :meth:`~sched.scheduler.enterabs` "
"*argument* parameter is now optional.  (Contributed by Chris Clark in :issue:"
"`13245`.)"
msgstr ""
"Параметр *argument* :meth:`~sched.scheduler.enter` і :meth:`~sched.scheduler."
"enterabs` тепер необов’язковий. (Надав Кріс Кларк у :issue:`13245`.)"

msgid ""
":meth:`~sched.scheduler.enter` and :meth:`~sched.scheduler.enterabs` now "
"accept a *kwargs* parameter.  (Contributed by Chris Clark in :issue:`13245`.)"
msgstr ""
":meth:`~sched.scheduler.enter` і :meth:`~sched.scheduler.enterabs` тепер "
"приймають параметр *kwargs*. (Надав Кріс Кларк у :issue:`13245`.)"

msgid "select"
msgstr "вибрати"

msgid ""
"Solaris and derivative platforms have a new class :class:`select.devpoll` "
"for high performance asynchronous sockets via :file:`/dev/poll`. "
"(Contributed by Jesús Cea Avión in :issue:`6397`.)"
msgstr ""
"Solaris і похідні платформи мають новий клас :class:`select.devpoll` для "
"високопродуктивних асинхронних сокетів через :file:`/dev/poll`. (Надав Jesús "
"Cea Avión у :issue:`6397`.)"

msgid "shlex"
msgstr "шлекс"

msgid ""
"The previously undocumented helper function ``quote`` from the :mod:`pipes` "
"modules has been moved to the :mod:`shlex` module and documented.  :func:"
"`~shlex.quote` properly escapes all characters in a string that might be "
"otherwise given special meaning by the shell."
msgstr ""
"Попередньо недокументована допоміжна функція ``quote`` з модулів :mod:"
"`pipes` була переміщена до модуля :mod:`shlex` і задокументована. :func:"
"`~shlex.quote` належним чином екранує всі символи в рядку, яким оболонка "
"могла б надати особливого значення."

msgid "shutil"
msgstr "шутил"

msgid "New functions:"
msgstr "Нові функції:"

msgid ""
":func:`~shutil.disk_usage`: provides total, used and free disk space "
"statistics.  (Contributed by Giampaolo Rodolà in :issue:`12442`.)"
msgstr ""
":func:`~shutil.disk_usage`: надає статистику загального, використаного та "
"вільного дискового простору. (Надав Джампаоло Родола в :issue:`12442`.)"

msgid ""
":func:`~shutil.chown`: allows one to change user and/or group of the given "
"path also specifying the user/group names and not only their numeric ids.  "
"(Contributed by Sandro Tosi in :issue:`12191`.)"
msgstr ""
":func:`~shutil.chown`: дозволяє змінювати користувача та/або групу заданого "
"шляху, вказуючи також імена користувачів/груп, а не лише їхні цифрові "
"ідентифікатори. (Надав Сандро Тосі в :issue:`12191`.)"

msgid ""
":func:`shutil.get_terminal_size`: returns the size of the terminal window to "
"which the interpreter is attached.  (Contributed by Zbigniew Jędrzejewski-"
"Szmek in :issue:`13609`.)"
msgstr ""
":func:`shutil.get_terminal_size`: повертає розмір вікна терміналу, до якого "
"приєднаний інтерпретатор. (Надав Збігнєв Єнджеєвський-Шмек у :issue:`13609`.)"

msgid ""
":func:`~shutil.copy2` and :func:`~shutil.copystat` now preserve file "
"timestamps with nanosecond precision on platforms that support it. They also "
"preserve file \"extended attributes\" on Linux.  (Contributed by Larry "
"Hastings in :issue:`14127` and  :issue:`15238`.)"
msgstr ""
":func:`~shutil.copy2` і :func:`~shutil.copystat` тепер зберігають мітки часу "
"файлу з точністю до наносекунд на платформах, які це підтримують. Вони також "
"зберігають \"розширені атрибути\" файлів у Linux. (Надано Ларрі Гастінгсом "
"у :issue:`14127` та :issue:`15238`.)"

msgid ""
"Several functions now take an optional ``symlinks`` argument: when that "
"parameter is true, symlinks aren't dereferenced and the operation instead "
"acts on the symlink itself (or creates one, if relevant). (Contributed by "
"Hynek Schlawack in :issue:`12715`.)"
msgstr ""
"Кілька функцій тепер приймають необов’язковий аргумент ``symlinks``: коли "
"цей параметр має значення true, символічні посилання не розіменовуються, а "
"операція натомість діє на саме символічне посилання (або створює його, якщо "
"це необхідно). (Надав Хайнек Шлавак у :issue:`12715`.)"

msgid ""
"When copying files to a different file system, :func:`~shutil.move` now "
"handles symlinks the way the posix ``mv`` command does, recreating the "
"symlink rather than copying the target file contents.  (Contributed by "
"Jonathan Niehof in :issue:`9993`.)  :func:`~shutil.move` now also returns "
"the ``dst`` argument as its result."
msgstr ""
"Під час копіювання файлів до іншої файлової системи :func:`~shutil.move` "
"тепер обробляє символічні посилання так, як це робить команда posix ``mv``, "
"відтворюючи символічне посилання, а не копіюючи вміст цільового файлу. "
"(Надано Джонатаном Нігофом у :issue:`9993`.) :func:`~shutil.move` тепер "
"також повертає аргумент ``dst`` як результат."

msgid ""
":func:`~shutil.rmtree` is now resistant to symlink attacks on platforms "
"which support the new ``dir_fd`` parameter in :func:`os.open` and :func:`os."
"unlink`.  (Contributed by Martin von Löwis and Hynek Schlawack in :issue:"
"`4489`.)"
msgstr ""
":func:`~shutil.rmtree` тепер стійкий до атак через символічні посилання на "
"платформах, які підтримують новий параметр ``dir_fd`` у :func:`os.open` і :"
"func:`os.unlink`. (Надано Мартіном фон Льовісом і Гінеком Шлаваком у :issue:"
"`4489`.)"

msgid "signal"
msgstr "сигнал"

msgid "The :mod:`signal` module has new functions:"
msgstr "Модуль :mod:`signal` має нові функції:"

msgid ""
":func:`~signal.pthread_sigmask`: fetch and/or change the signal mask of the "
"calling thread (Contributed by Jean-Paul Calderone in :issue:`8407`);"
msgstr ""
":func:`~signal.pthread_sigmask`: отримати та/або змінити маску сигналу "
"викликаючого потоку (Надано Жаном-Полем Кальдероне в :issue:`8407`);"

msgid ":func:`~signal.pthread_kill`: send a signal to a thread;"
msgstr ":func:`~signal.pthread_kill`: відправити сигнал до потоку;"

msgid ":func:`~signal.sigpending`: examine pending functions;"
msgstr ":func:`~signal.sigpending`: перевірити незавершені функції;"

msgid ":func:`~signal.sigwait`: wait a signal;"
msgstr ":func:`~signal.sigwait`: чекати сигналу;"

msgid ""
":func:`~signal.sigwaitinfo`: wait for a signal, returning detailed "
"information about it;"
msgstr ""
":func:`~signal.sigwaitinfo`: чекати сигналу, повертаючи детальну інформацію "
"про нього;"

msgid ""
":func:`~signal.sigtimedwait`: like :func:`~signal.sigwaitinfo` but with a "
"timeout."
msgstr ""
":func:`~signal.sigtimedwait`: як :func:`~signal.sigwaitinfo`, але з тайм-"
"аутом."

msgid ""
"The signal handler writes the signal number as a single byte instead of a "
"nul byte into the wakeup file descriptor. So it is possible to wait more "
"than one signal and know which signals were raised."
msgstr ""
"Обробник сигналу записує номер сигналу як один байт замість нульового байта "
"в дескриптор файлу пробудження. Таким чином, можна чекати більше ніж один "
"сигнал і знати, які сигнали були підняті."

msgid ""
":func:`signal.signal` and :func:`signal.siginterrupt` raise an OSError, "
"instead of a RuntimeError: OSError has an errno attribute."
msgstr ""
":func:`signal.signal` і :func:`signal.siginterrupt` викликають OSError "
"замість RuntimeError: OSError має атрибут errno."

msgid "smtpd"
msgstr "smtpd"

msgid ""
"The :mod:`smtpd` module now supports :rfc:`5321` (extended SMTP) and :rfc:"
"`1870` (size extension).  Per the standard, these extensions are enabled if "
"and only if the client initiates the session with an ``EHLO`` command."
msgstr ""
"Модуль :mod:`smtpd` тепер підтримує :rfc:`5321` (розширений SMTP) і :rfc:"
"`1870` (розширення розміру). Відповідно до стандарту, ці розширення "
"вмикаються тоді і тільки тоді, коли клієнт ініціює сеанс за допомогою "
"команди ``EHLO``."

msgid ""
"(Initial ``ELHO`` support by Alberto Trevino.  Size extension by Juhana "
"Jauhiainen.  Substantial additional work on the patch contributed by Michele "
"Orrù and Dan Boswell.  :issue:`8739`)"
msgstr ""
"(Початкову підтримку ``ELHO`` виконав Альберто Тревіно. Розширення розміру "
"здійснено Юханою Яухіайнен. Значну додаткову роботу над виправленням зробили "
"Мікеле Орру та Ден Босвелл. :issue:`8739`)"

msgid "smtplib"
msgstr "smtplib"

msgid ""
"The :class:`~smtplib.SMTP`, :class:`~smtplib.SMTP_SSL`, and :class:`~smtplib."
"LMTP` classes now accept a ``source_address`` keyword argument to specify "
"the ``(host, port)`` to use as the source address in the bind call when "
"creating the outgoing socket.  (Contributed by Paulo Scardine in :issue:"
"`11281`.)"
msgstr ""
"Класи :class:`~smtplib.SMTP`, :class:`~smtplib.SMTP_SSL` і :class:`~smtplib."
"LMTP` тепер приймають аргумент ключового слова ``source_address`` для "
"визначення ``(host, port)`` для використання як адреси джерела у виклику "
"зв’язування під час створення вихідного сокета. (Надав Paulo Scardine у :"
"issue:`11281`.)"

msgid ""
":class:`~smtplib.SMTP` now supports the context management protocol, "
"allowing an ``SMTP`` instance to be used in a ``with`` statement.  "
"(Contributed by Giampaolo Rodolà in :issue:`11289`.)"
msgstr ""
":class:`~smtplib.SMTP` тепер підтримує протокол керування контекстом, що "
"дозволяє використовувати екземпляр ``SMTP`` у операторі ``with``. (Надав "
"Джампаоло Родола в :issue:`11289`.)"

msgid ""
"The :class:`~smtplib.SMTP_SSL` constructor and the :meth:`~smtplib.SMTP."
"starttls` method now accept an SSLContext parameter to control parameters of "
"the secure channel.  (Contributed by Kasun Herath in :issue:`8809`.)"
msgstr ""
"Конструктор :class:`~smtplib.SMTP_SSL` і метод :meth:`~smtplib.SMTP."
"starttls` тепер приймають параметр SSLContext для керування параметрами "
"безпечного каналу. (Надано Kasun Herath у :issue:`8809`.)"

msgid "socket"
msgstr "гніздо"

msgid ""
"The :class:`~socket.socket` class now exposes additional methods to process "
"ancillary data when supported by the underlying platform:"
msgstr ""
"Клас :class:`~socket.socket` тепер надає додаткові методи для обробки "
"допоміжних даних, якщо вони підтримуються базовою платформою:"

msgid ":func:`~socket.socket.sendmsg`"
msgstr ":func:`~socket.socket.sendmsg`"

msgid ":func:`~socket.socket.recvmsg`"
msgstr ":func:`~socket.socket.recvmsg`"

msgid ":func:`~socket.socket.recvmsg_into`"
msgstr ":func:`~socket.socket.recvmsg_into`"

msgid ""
"(Contributed by David Watson in :issue:`6560`, based on an earlier patch by "
"Heiko Wundram)"
msgstr ""
"(Надано Девідом Вотсоном у :issue:`6560`, на основі попереднього патча Хайко "
"Вундрама)"

msgid ""
"The :class:`~socket.socket` class now supports the PF_CAN protocol family "
"(https://en.wikipedia.org/wiki/Socketcan), on Linux (https://lwn.net/"
"Articles/253425)."
msgstr ""
"Клас :class:`~socket.socket` тепер підтримує сімейство протоколів PF_CAN "
"(https://en.wikipedia.org/wiki/Socketcan) у Linux (https://lwn.net/"
"Articles/253425)."

msgid ""
"(Contributed by Matthias Fuchs, updated by Tiago Gonçalves in :issue:"
"`10141`.)"
msgstr ""
"(Надано Маттіасом Фуксом, оновлено Тіаго Гонсалвесом у :issue:`10141`.)"

msgid ""
"The :class:`~socket.socket` class now supports the PF_RDS protocol family "
"(https://en.wikipedia.org/wiki/Reliable_Datagram_Sockets and https://oss."
"oracle.com/projects/rds/)."
msgstr ""
"Клас :class:`~socket.socket` тепер підтримує сімейство протоколів PF_RDS "
"(https://en.wikipedia.org/wiki/Reliable_Datagram_Sockets і https://oss."
"oracle.com/projects/rds/)."

msgid ""
"The :class:`~socket.socket` class now supports the ``PF_SYSTEM`` protocol "
"family on OS X.  (Contributed by Michael Goderbauer in :issue:`13777`.)"
msgstr ""
"Клас :class:`~socket.socket` тепер підтримує сімейство протоколів "
"``PF_SYSTEM`` в OS X. (Надано Майклом Годербауером у :issue:`13777`.)"

msgid ""
"New function :func:`~socket.sethostname` allows the hostname to be set on "
"Unix systems if the calling process has sufficient privileges. (Contributed "
"by Ross Lagerwall in :issue:`10866`.)"
msgstr ""

msgid "socketserver"
msgstr "сокетсервер"

msgid ""
":class:`~socketserver.BaseServer` now has an overridable method :meth:"
"`~socketserver.BaseServer.service_actions` that is called by the :meth:"
"`~socketserver.BaseServer.serve_forever` method in the service loop. :class:"
"`~socketserver.ForkingMixIn` now uses this to clean up zombie child "
"processes.  (Contributed by Justin Warkentin in :issue:`11109`.)"
msgstr ""
":class:`~socketserver.BaseServer` тепер має замінений метод :meth:"
"`~socketserver.BaseServer.service_actions`, який викликається методом :meth:"
"`~socketserver.BaseServer.serve_forever` у циклі обслуговування. :class:"
"`~socketserver.ForkingMixIn` тепер використовує це для очищення дочірніх "
"процесів-зомбі. (Надав Джастін Варкентін у :issue:`11109`.)"

msgid "sqlite3"
msgstr "sqlite3"

msgid ""
"New :class:`sqlite3.Connection` method :meth:`~sqlite3.Connection."
"set_trace_callback` can be used to capture a trace of all sql commands "
"processed by sqlite.  (Contributed by Torsten Landschoff in :issue:`11688`.)"
msgstr ""
"Новий метод :class:`sqlite3.Connection` :meth:`~sqlite3.Connection."
"set_trace_callback` можна використовувати для захоплення трасування всіх "
"команд sql, оброблених sqlite. (Надав Торстен Ландшофф у :issue:`11688`.)"

msgid "ssl"
msgstr "ssl"

msgid "The :mod:`ssl` module has two new random generation functions:"
msgstr "Модуль :mod:`ssl` має дві нові функції випадкової генерації:"

msgid ""
":func:`~ssl.RAND_bytes`: generate cryptographically strong pseudo-random "
"bytes."
msgstr ""
":func:`~ssl.RAND_bytes`: генерувати криптографічно надійні псевдовипадкові "
"байти."

msgid ":func:`~ssl.RAND_pseudo_bytes`: generate pseudo-random bytes."
msgstr ":func:`~ssl.RAND_pseudo_bytes`: генерувати псевдовипадкові байти."

msgid "(Contributed by Victor Stinner in :issue:`12049`.)"
msgstr "(Надав Віктор Стіннер у :issue:`12049`.)"

msgid ""
"The :mod:`ssl` module now exposes a finer-grained exception hierarchy in "
"order to make it easier to inspect the various kinds of errors. (Contributed "
"by Antoine Pitrou in :issue:`11183`.)"
msgstr ""
"Модуль :mod:`ssl` тепер надає детальнішу ієрархію винятків, щоб полегшити "
"перевірку різних типів помилок. (Надав Антуан Пітру в :issue:`11183`.)"

msgid ""
":meth:`~ssl.SSLContext.load_cert_chain` now accepts a *password* argument to "
"be used if the private key is encrypted. (Contributed by Adam Simpkins in :"
"issue:`12803`.)"
msgstr ""
":meth:`~ssl.SSLContext.load_cert_chain` тепер приймає аргумент *пароль*, "
"який буде використовуватися, якщо закритий ключ зашифровано. (Надав Адам "
"Сімпкінс у :issue:`12803`.)"

msgid ""
"Diffie-Hellman key exchange, both regular and Elliptic Curve-based, is now "
"supported through the :meth:`~ssl.SSLContext.load_dh_params` and :meth:`~ssl."
"SSLContext.set_ecdh_curve` methods. (Contributed by Antoine Pitrou in :issue:"
"`13626` and :issue:`13627`.)"
msgstr ""
"Обмін ключами Діффі-Хеллмана, як звичайний, так і на основі еліптичної "
"кривої, тепер підтримується через методи :meth:`~ssl.SSLContext."
"load_dh_params` і :meth:`~ssl.SSLContext.set_ecdh_curve`. (Надав Антуан "
"Пітру в :issue:`13626` і :issue:`13627`.)"

msgid ""
"SSL sockets have a new :meth:`~ssl.SSLSocket.get_channel_binding` method "
"allowing the implementation of certain authentication mechanisms such as "
"SCRAM-SHA-1-PLUS.  (Contributed by Jacek Konieczny in :issue:`12551`.)"
msgstr ""
"SSL-сокети мають новий метод :meth:`~ssl.SSLSocket.get_channel_binding`, "
"який дозволяє реалізувати певні механізми автентифікації, такі як SCRAM-"
"SHA-1-PLUS. (Надав Яцек Конєчний у :issue:`12551`.)"

msgid ""
"You can query the SSL compression algorithm used by an SSL socket, thanks to "
"its new :meth:`~ssl.SSLSocket.compression` method.  The new attribute :attr:"
"`~ssl.OP_NO_COMPRESSION` can be used to disable compression. (Contributed by "
"Antoine Pitrou in :issue:`13634`.)"
msgstr ""
"Ви можете запитати алгоритм стиснення SSL, який використовується сокетом "
"SSL, завдяки його новому методу :meth:`~ssl.SSLSocket.compression`. Новий "
"атрибут :attr:`~ssl.OP_NO_COMPRESSION` можна використовувати для вимкнення "
"стиснення. (Надав Антуан Пітру в :issue:`13634`.)"

msgid ""
"Support has been added for the Next Protocol Negotiation extension using "
"the :meth:`ssl.SSLContext.set_npn_protocols` method. (Contributed by Colin "
"Marc in :issue:`14204`.)"
msgstr ""
"Додано підтримку розширення Next Protocol Negotiation за допомогою методу :"
"meth:`ssl.SSLContext.set_npn_protocols`. (Надав Колін Марк у :issue:`14204`.)"

msgid ""
"SSL errors can now be introspected more easily thanks to :attr:`~ssl."
"SSLError.library` and :attr:`~ssl.SSLError.reason` attributes. (Contributed "
"by Antoine Pitrou in :issue:`14837`.)"
msgstr ""
"Помилки SSL тепер легше аналізувати завдяки атрибутам :attr:`~ssl.SSLError."
"library` і :attr:`~ssl.SSLError.reason`. (Надав Антуан Пітру в :issue:"
"`14837`.)"

msgid ""
"The :func:`~ssl.get_server_certificate` function now supports IPv6. "
"(Contributed by Charles-François Natali in :issue:`11811`.)"
msgstr ""
"Функція :func:`~ssl.get_server_certificate` тепер підтримує IPv6. (Надав "
"Шарль-Франсуа Наталі в :issue:`11811`.)"

msgid ""
"New attribute :attr:`~ssl.OP_CIPHER_SERVER_PREFERENCE` allows setting SSLv3 "
"server sockets to use the server's cipher ordering preference rather than "
"the client's (:issue:`13635`)."
msgstr ""
"Новий атрибут :attr:`~ssl.OP_CIPHER_SERVER_PREFERENCE` дозволяє налаштувати "
"серверні сокети SSLv3 на використання параметрів упорядкування шифрів "
"сервера, а не клієнта (:issue:`13635`)."

msgid "stat"
msgstr "стат"

msgid ""
"The undocumented tarfile.filemode function has been moved to :func:`stat."
"filemode`. It can be used to convert a file's mode to a string of the form '-"
"rwxrwxrwx'."
msgstr ""
"Недокументовану функцію tarfile.filemode переміщено до :func:`stat."
"filemode`. Його можна використовувати для перетворення режиму файлу на рядок "
"у формі '-rwxrwxrwx'."

msgid "(Contributed by Giampaolo Rodolà in :issue:`14807`.)"
msgstr "(Надав Джампаоло Родола в :issue:`14807`.)"

msgid "struct"
msgstr "структура"

msgid ""
"The :mod:`struct` module now supports ``ssize_t`` and ``size_t`` via the new "
"codes ``n`` and ``N``, respectively.  (Contributed by Antoine Pitrou in :"
"issue:`3163`.)"
msgstr ""
"Модуль :mod:`struct` тепер підтримує ``ssize_t`` і ``size_t`` через нові "
"коди ``n`` і ``N`` відповідно. (Надав Антуан Пітру в :issue:`3163`.)"

msgid "subprocess"
msgstr "підпроцес"

msgid ""
"Command strings can now be bytes objects on posix platforms.  (Contributed "
"by Victor Stinner in :issue:`8513`.)"
msgstr ""
"Командні рядки тепер можуть бути об’єктами bytes на платформах posix. (Надав "
"Віктор Стіннер у :issue:`8513`.)"

msgid ""
"A new constant :data:`~subprocess.DEVNULL` allows suppressing output in a "
"platform-independent fashion.  (Contributed by Ross Lagerwall in :issue:"
"`5870`.)"
msgstr ""
"Нова константа :data:`~subprocess.DEVNULL` дозволяє придушувати виведення "
"незалежним від платформи способом. (Надав Росс Лагервалл у :issue:`5870`.)"

msgid "sys"
msgstr "система"

msgid ""
"The :mod:`sys` module has a new :data:`~sys.thread_info` :term:`named tuple` "
"holding information about the thread implementation (:issue:`11223`)."
msgstr ""
"Модуль :mod:`sys` має новий :data:`~sys.thread_info` :term:`named tuple`, що "
"містить інформацію про реалізацію потоку (:issue:`11223`)."

msgid "tarfile"
msgstr "tarfile"

msgid ""
":mod:`tarfile` now supports ``lzma`` encoding via the :mod:`lzma` module. "
"(Contributed by Lars Gustäbel in :issue:`5689`.)"
msgstr ""
":mod:`tarfile` тепер підтримує кодування ``lzma`` через модуль :mod:`lzma`. "
"(Надав Ларс Густебель у :issue:`5689`.)"

msgid "tempfile"
msgstr "тимчасовий файл"

msgid ""
":class:`tempfile.SpooledTemporaryFile`\\'s :meth:`~tempfile."
"SpooledTemporaryFile.truncate` method now accepts a ``size`` parameter.  "
"(Contributed by Ryan Kelly in :issue:`9957`.)"
msgstr ""
"Метод :class:`tempfile.SpooledTemporaryFile` :meth:`~tempfile."
"SpooledTemporaryFile.truncate` тепер приймає параметр ``size``. (Надав Райан "
"Келлі в :issue:`9957`.)"

msgid "textwrap"
msgstr "обтікання текстом"

msgid ""
"The :mod:`textwrap` module has a new :func:`~textwrap.indent` that makes it "
"straightforward to add a common prefix to selected lines in a block of text  "
"(:issue:`13857`)."
msgstr ""
"Модуль :mod:`textwrap` має новий :func:`~textwrap.indent`, який дозволяє "
"легко додавати загальний префікс до вибраних рядків у блоці тексту (:issue:"
"`13857`)."

msgid "threading"
msgstr "різьблення"

msgid ""
":class:`threading.Condition`, :class:`threading.Semaphore`, :class:"
"`threading.BoundedSemaphore`, :class:`threading.Event`, and :class:"
"`threading.Timer`, all of which used to be factory functions returning a "
"class instance, are now classes and may be subclassed.  (Contributed by Éric "
"Araujo in :issue:`10968`.)"
msgstr ""
":class:`threading.Condition`, :class:`threading.Semaphore`, :class:"
"`threading.BoundedSemaphore`, :class:`threading.Event` і :class:`threading."
"Timer`, усі з яких використовуються бути фабричними функціями, що повертають "
"екземпляр класу, тепер є класами та можуть бути підкласами. (Надав Ерік "
"Араужо в :issue:`10968`.)"

msgid ""
"The :class:`threading.Thread` constructor now accepts a ``daemon`` keyword "
"argument to override the default behavior of inheriting the ``daemon`` flag "
"value from the parent thread (:issue:`6064`)."
msgstr ""
"Конструктор :class:`threading.Thread` тепер приймає аргумент ключового слова "
"``daemon``, щоб замінити типову поведінку успадкування значення прапора "
"``daemon`` від батьківського потоку (:issue:`6064`)."

msgid ""
"The formerly private function ``_thread.get_ident`` is now available as the "
"public function :func:`threading.get_ident`.  This eliminates several cases "
"of direct access to the ``_thread`` module in the stdlib.  Third party code "
"that used ``_thread.get_ident`` should likewise be changed to use the new "
"public interface."
msgstr ""
"Раніше закрита функція ``_thread.get_ident`` тепер доступна як публічна "
"функція :func:`threading.get_ident`. Це усуває декілька випадків прямого "
"доступу до модуля ``_thread`` у stdlib. Код третьої сторони, який "
"використовував ``_thread.get_ident``, також слід змінити, щоб "
"використовувати новий публічний інтерфейс."

msgid "time"
msgstr "час"

msgid "The :pep:`418` added new functions to the :mod:`time` module:"
msgstr ":pep:`418` додав нові функції до модуля :mod:`time`:"

msgid ":func:`~time.get_clock_info`: Get information on a clock."
msgstr ":func:`~time.get_clock_info`: отримати інформацію про годинник."

msgid ""
":func:`~time.monotonic`: Monotonic clock (cannot go backward), not affected "
"by system clock updates."
msgstr ""
":func:`~time.monotonic`: Монотонний годинник (не може повертатися назад), на "
"нього не впливають оновлення системного годинника."

msgid ""
":func:`~time.perf_counter`: Performance counter with the highest available "
"resolution to measure a short duration."
msgstr ""
":func:`~time.perf_counter`: Лічильник продуктивності з найвищою доступною "
"роздільною здатністю для вимірювання короткої тривалості."

msgid ""
":func:`~time.process_time`: Sum of the system and user CPU time of the "
"current process."
msgstr ""
":func:`~time.process_time`: сума системного та користувальницького "
"процесорного часу поточного процесу."

msgid "Other new functions:"
msgstr "Інші нові функції:"

msgid ""
":func:`~time.clock_getres`, :func:`~time.clock_gettime` and :func:`~time."
"clock_settime` functions with ``CLOCK_xxx`` constants. (Contributed by "
"Victor Stinner in :issue:`10278`.)"
msgstr ""
"Функції :func:`~time.clock_getres`, :func:`~time.clock_gettime` і :func:"
"`~time.clock_settime` з константами ``CLOCK_xxx``. (Надав Віктор Стіннер у :"
"issue:`10278`.)"

msgid ""
"To improve cross platform consistency, :func:`~time.sleep` now raises a :exc:"
"`ValueError` when passed a negative sleep value.  Previously this was an "
"error on posix, but produced an infinite sleep on Windows."
msgstr ""
"Щоб покращити узгодженість між платформами, :func:`~time.sleep` тепер "
"викликає :exc:`ValueError`, коли передається від’ємне значення сну. Раніше "
"це була помилка на posix, але спричиняла нескінченний сон у Windows."

msgid "types"
msgstr "види"

msgid ""
"Add a new :class:`types.MappingProxyType` class: Read-only proxy of a "
"mapping. (:issue:`14386`)"
msgstr ""
"Додайте новий клас :class:`types.MappingProxyType`: проксі зіставлення лише "
"для читання. (:issue:`14386`)"

msgid ""
"The new functions :func:`types.new_class` and :func:`types.prepare_class` "
"provide support for :pep:`3115` compliant dynamic type creation. (:issue:"
"`14588`)"
msgstr ""
"Нові функції :func:`types.new_class` і :func:`types.prepare_class` "
"забезпечують підтримку для :pep:`3115` сумісного створення динамічного типу. "
"(:issue:`14588`)"

msgid "unittest"
msgstr "unittest"

msgid ""
":meth:`.assertRaises`, :meth:`.assertRaisesRegex`, :meth:`.assertWarns`, "
"and :meth:`.assertWarnsRegex` now accept a keyword argument *msg* when used "
"as context managers.  (Contributed by Ezio Melotti and Winston Ewert in :"
"issue:`10775`.)"
msgstr ""
":meth:`.assertRaises`, :meth:`.assertRaisesRegex`, :meth:`.assertWarns` і :"
"meth:`.assertWarnsRegex` тепер приймають аргумент ключового слова *msg*, "
"коли використовуються як менеджери контексту. (Надано Еціо Мелотті та "
"Вінстоном Евертом у :issue:`10775`.)"

msgid ""
":meth:`unittest.TestCase.run` now returns the :class:`~unittest.TestResult` "
"object."
msgstr ""
":meth:`unittest.TestCase.run` тепер повертає об’єкт :class:`~unittest."
"TestResult`."

msgid "urllib"
msgstr "urllib"

msgid ""
"The :class:`~urllib.request.Request` class, now accepts a *method* argument "
"used by :meth:`~urllib.request.Request.get_method` to determine what HTTP "
"method should be used.  For example, this will send a ``'HEAD'`` request::"
msgstr ""
"Клас :class:`~urllib.request.Request` тепер приймає аргумент *method*, який "
"використовується :meth:`~urllib.request.Request.get_method`, щоб визначити, "
"який метод HTTP слід використовувати. Наприклад, це надішле запит ``'HEAD'``:"

msgid "(:issue:`1673007`)"
msgstr "(:issue:`1673007`)"

msgid "webbrowser"
msgstr "веб-браузер"

msgid ""
"The :mod:`webbrowser` module supports more \"browsers\": Google Chrome "
"(named :program:`chrome`, :program:`chromium`, :program:`chrome-browser` or :"
"program:`chromium-browser` depending on the version and operating system), "
"and the generic launchers :program:`xdg-open`, from the FreeDesktop.org "
"project, and :program:`gvfs-open`, which is the default URI handler for "
"GNOME 3.  (The former contributed by Arnaud Calmettes in :issue:`13620`, the "
"latter by Matthias Klose in :issue:`14493`.)"
msgstr ""
"Модуль :mod:`webbrowser` підтримує більше \"браузерів\": Google Chrome (з "
"назвами :program:`chrome`, :program:`chromium`, :program:`chrome-browser` "
"або :program:`chromium-browser` залежно у версії й операційній системі), а "
"також загальні засоби запуску :program:`xdg-open` із проекту FreeDesktop.org "
"і :program:`gvfs-open`, який є обробником URI за замовчуванням для GNOME 3. "
"( перший надав Арно Кальметт у :issue:`13620`, другий — Матіас Клозе в :"
"issue:`14493`.)"

msgid "xml.etree.ElementTree"
msgstr "xml.etree.ElementTree"

msgid ""
"The :mod:`xml.etree.ElementTree` module now imports its C accelerator by "
"default; there is no longer a need to explicitly import :mod:`xml.etree."
"cElementTree` (this module stays for backwards compatibility, but is now "
"deprecated).  In addition,  the ``iter`` family of methods of :class:`~xml."
"etree.ElementTree.Element` has been optimized (rewritten in C). The module's "
"documentation has also been greatly improved with added examples and a more "
"detailed reference."
msgstr ""
"Модуль :mod:`xml.etree.ElementTree` тепер імпортує свій прискорювач C за "
"замовчуванням; більше немає потреби явно імпортувати :mod:`xml.etree."
"cElementTree` (цей модуль залишається для зворотної сумісності, але тепер "
"він застарів). Крім того, сімейство методів ``iter`` :class:`~xml.etree."
"ElementTree.Element` було оптимізовано (переписано на C). Документацію "
"модуля також було значно покращено, додано приклади та більш детальну "
"довідку."

msgid "zlib"
msgstr "zlib"

msgid ""
"New attribute :attr:`zlib.Decompress.eof` makes it possible to distinguish "
"between a properly formed compressed stream and an incomplete or truncated "
"one. (Contributed by Nadeem Vawda in :issue:`12646`.)"
msgstr ""

msgid ""
"New attribute :attr:`zlib.ZLIB_RUNTIME_VERSION` reports the version string "
"of the underlying ``zlib`` library that is loaded at runtime.  (Contributed "
"by Torsten Landschoff in :issue:`12306`.)"
msgstr ""
"Новий атрибут :attr:`zlib.ZLIB_RUNTIME_VERSION` повідомляє рядок версії "
"основної бібліотеки ``zlib``, яка завантажується під час виконання. (Надав "
"Торстен Ландшофф у :issue:`12306`.)"

msgid "Optimizations"
msgstr "Оптимізації"

msgid "Major performance enhancements have been added:"
msgstr "Додано основні покращення продуктивності:"

msgid ""
"Thanks to :pep:`393`, some operations on Unicode strings have been optimized:"
msgstr ""
"Завдяки :pep:`393` деякі операції над рядками Unicode були оптимізовані:"

msgid "the memory footprint is divided by 2 to 4 depending on the text"
msgstr "обсяг пам'яті ділиться на 2-4 в залежності від тексту"

msgid ""
"encode an ASCII string to UTF-8 doesn't need to encode characters anymore, "
"the UTF-8 representation is shared with the ASCII representation"
msgstr ""
"кодувати рядок ASCII у UTF-8 більше не потрібно кодувати символи, "
"представлення UTF-8 спільно з представленням ASCII"

msgid "the UTF-8 encoder has been optimized"
msgstr "кодувальник UTF-8 оптимізовано"

msgid ""
"repeating a single ASCII letter and getting a substring of an ASCII string "
"is 4 times faster"
msgstr ""
"повторення однієї літери ASCII і отримання підрядка рядка ASCII відбувається "
"в 4 рази швидше"

msgid "UTF-8 is now 2x to 4x faster.  UTF-16 encoding is now up to 10x faster."
msgstr ""
"UTF-8 тепер у 2-4 рази швидше. Кодування UTF-16 тепер у 10 разів швидше."

msgid ""
"(Contributed by Serhiy Storchaka, :issue:`14624`, :issue:`14738` and :issue:"
"`15026`.)"
msgstr ""
"(Надав Сергій Сторчака, :issue:`14624`, :issue:`14738` та :issue:`15026`.)"

msgid "Build and C API Changes"
msgstr "Зміни збірки та C API"

msgid "Changes to Python's build process and to the C API include:"
msgstr "Зміни в процесі збирання Python і в API C включають:"

msgid "New :pep:`3118` related function:"
msgstr "Нова пов'язана функція :pep:`3118`:"

msgid ":c:func:`PyMemoryView_FromMemory`"
msgstr ":c:func:`PyMemoryView_FromMemory`"

msgid ":pep:`393` added new Unicode types, macros and functions:"
msgstr ":pep:`393` додано нові типи Unicode, макроси та функції:"

msgid "High-level API:"
msgstr "API високого рівня:"

msgid ":c:func:`PyUnicode_CopyCharacters`"
msgstr ":c:func:`PyUnicode_CopyCharacters`"

msgid ":c:func:`PyUnicode_FindChar`"
msgstr ":c:func:`PyUnicode_FindChar`"

msgid ":c:func:`PyUnicode_GetLength`, :c:macro:`PyUnicode_GET_LENGTH`"
msgstr ":c:func:`PyUnicode_GetLength`, :c:macro:`PyUnicode_GET_LENGTH`"

msgid ":c:func:`PyUnicode_New`"
msgstr ":c:func:`PyUnicode_New`"

msgid ":c:func:`PyUnicode_Substring`"
msgstr ":c:func:`PyUnicode_Substring`"

msgid ":c:func:`PyUnicode_ReadChar`, :c:func:`PyUnicode_WriteChar`"
msgstr ":c:func:`PyUnicode_ReadChar`, :c:func:`PyUnicode_WriteChar`"

msgid "Low-level API:"
msgstr "API низького рівня:"

msgid ":c:type:`Py_UCS1`, :c:type:`Py_UCS2`, :c:type:`Py_UCS4` types"
msgstr "Типи :c:type:`Py_UCS1`, :c:type:`Py_UCS2`, :c:type:`Py_UCS4`"

msgid ":c:type:`PyASCIIObject` and :c:type:`PyCompactUnicodeObject` structures"
msgstr "Структури :c:type:`PyASCIIObject` і :c:type:`PyCompactUnicodeObject`"

msgid ":c:macro:`PyUnicode_READY`"
msgstr ":c:macro:`PyUnicode_READY`"

msgid ":c:func:`PyUnicode_FromKindAndData`"
msgstr ":c:func:`PyUnicode_FromKindAndData`"

msgid ":c:func:`PyUnicode_AsUCS4`, :c:func:`PyUnicode_AsUCS4Copy`"
msgstr ":c:func:`PyUnicode_AsUCS4`, :c:func:`PyUnicode_AsUCS4Copy`"

msgid ""
":c:macro:`PyUnicode_DATA`, :c:macro:`PyUnicode_1BYTE_DATA`, :c:macro:"
"`PyUnicode_2BYTE_DATA`, :c:macro:`PyUnicode_4BYTE_DATA`"
msgstr ""
":c:macro:`PyUnicode_DATA`, :c:macro:`PyUnicode_1BYTE_DATA`, :c:macro:"
"`PyUnicode_2BYTE_DATA`, :c:macro:`PyUnicode_4BYTE_DATA`"

msgid ""
":c:macro:`PyUnicode_KIND` with :c:type:`PyUnicode_Kind` enum: :c:data:"
"`PyUnicode_WCHAR_KIND`, :c:data:`PyUnicode_1BYTE_KIND`, :c:data:"
"`PyUnicode_2BYTE_KIND`, :c:data:`PyUnicode_4BYTE_KIND`"
msgstr ""
":c:macro:`PyUnicode_KIND` з :c:type:`PyUnicode_Kind` enum: :c:data:"
"`PyUnicode_WCHAR_KIND`, :c:data:`PyUnicode_1BYTE_KIND`, :c:data:"
"`PyUnicode_2BYTE_KIND`, :c:data:`PyUnicode_4BYTE_KIND`"

msgid ""
":c:macro:`PyUnicode_READ`, :c:macro:`PyUnicode_READ_CHAR`, :c:macro:"
"`PyUnicode_WRITE`"
msgstr ""
":c:macro:`PyUnicode_READ`, :c:macro:`PyUnicode_READ_CHAR`, :c:macro:"
"`PyUnicode_WRITE`"

msgid ":c:macro:`PyUnicode_MAX_CHAR_VALUE`"
msgstr ":c:macro:`PyUnicode_MAX_CHAR_VALUE`"

msgid ""
":c:macro:`PyArg_ParseTuple` now accepts a :class:`bytearray` for the ``c`` "
"format (:issue:`12380`)."
msgstr ""
":c:macro:`PyArg_ParseTuple` тепер приймає :class:`bytearray` для формату "
"``c`` (:issue:`12380`)."

msgid "Deprecated"
msgstr "Застаріле"

msgid "Unsupported Operating Systems"
msgstr "Непідтримувані операційні системи"

msgid "OS/2 and VMS are no longer supported due to the lack of a maintainer."
msgstr "OS/2 і VMS більше не підтримуються через відсутність супроводжуючого."

msgid ""
"Windows 2000 and Windows platforms which set ``COMSPEC`` to ``command.com`` "
"are no longer supported due to maintenance burden."
msgstr ""
"Платформи Windows 2000 і Windows, які встановлюють для ``COMSPEC`` значення "
"``command.com`` більше не підтримуються через тягар обслуговування."

msgid "OSF support, which was deprecated in 3.2, has been completely removed."
msgstr ""
"Підтримку OSF, яка була застарілою у версії 3.2, було повністю видалено."

msgid "Deprecated Python modules, functions and methods"
msgstr "Застарілі модулі, функції та методи Python"

msgid ""
"Passing a non-empty string to ``object.__format__()`` is deprecated, and "
"will produce a :exc:`TypeError` in Python 3.4 (:issue:`9856`)."
msgstr ""
"Передача непорожнього рядка в ``object.__format__()`` є застарілою та "
"викличе :exc:`TypeError` у Python 3.4 (:issue:`9856`)."

msgid ""
"The ``unicode_internal`` codec has been deprecated because of the :pep:"
"`393`, use UTF-8, UTF-16 (``utf-16-le`` or ``utf-16-be``), or UTF-32 "
"(``utf-32-le`` or ``utf-32-be``)"
msgstr ""
"Кодек ``unicode_internal`` застарів через :pep:`393`, використовуйте UTF-8, "
"UTF-16 (``utf-16-le`` або ``utf-16-be``), або UTF-32 (``utf-32-le`` або "
"``utf-32-be``)"

msgid ""
":meth:`ftplib.FTP.nlst` and :meth:`ftplib.FTP.dir`: use :meth:`ftplib.FTP."
"mlsd`"
msgstr ""
":meth:`ftplib.FTP.nlst` і :meth:`ftplib.FTP.dir`: використовуйте :meth:"
"`ftplib.FTP.mlsd`"

msgid ""
":func:`platform.popen`: use the :mod:`subprocess` module. Check especially "
"the :ref:`subprocess-replacements` section (:issue:`11377`)."
msgstr ""
":func:`platform.popen`: використовуйте модуль :mod:`subprocess`. Особливо "
"перевірте розділ :ref:`subprocess-replacements` (:issue:`11377`)."

msgid ""
":issue:`13374`: The Windows bytes API has been deprecated in the :mod:`os` "
"module. Use Unicode filenames, instead of bytes filenames, to not depend on "
"the ANSI code page anymore and to support any filename."
msgstr ""
":issue:`13374`: Windows bytes API більше не підтримується в модулі :mod:"
"`os`. Щоб більше не залежати від кодової сторінки ANSI та підтримувати будь-"
"які назви файлів, використовуйте назви файлів у кодуванні Unicode замість "
"імен файлів у байтах."

msgid ""
":issue:`13988`: The :mod:`xml.etree.cElementTree` module is deprecated.  The "
"accelerator is used automatically whenever available."
msgstr ""
":issue:`13988`: Модуль :mod:`xml.etree.cElementTree` застарів. Прискорювач "
"використовується автоматично, коли він доступний."

msgid ""
"The behaviour of :func:`time.clock` depends on the platform: use the new :"
"func:`time.perf_counter` or :func:`time.process_time` function instead, "
"depending on your requirements, to have a well defined behaviour."
msgstr ""
"Поведінка :func:`time.clock` залежить від платформи: замість цього "
"використовуйте нову функцію :func:`time.perf_counter` або :func:`time."
"process_time`, залежно від ваших вимог, щоб мати чітко визначену поведінку ."

msgid "The :func:`os.stat_float_times` function is deprecated."
msgstr "Функція :func:`os.stat_float_times` застаріла."

msgid ":mod:`abc` module:"
msgstr ":mod:`abc` модуль:"

msgid ":mod:`importlib` package:"
msgstr ":mod:`importlib` пакет:"

msgid ""
":meth:`importlib.abc.SourceLoader.path_mtime` is now deprecated in favour "
"of :meth:`importlib.abc.SourceLoader.path_stats` as bytecode files now store "
"both the modification time and size of the source file the bytecode file was "
"compiled from."
msgstr ""
":meth:`importlib.abc.SourceLoader.path_mtime` тепер не підтримується на "
"користь :meth:`importlib.abc.SourceLoader.path_stats`, оскільки файли байт-"
"коду тепер зберігають як час модифікації, так і розмір вихідного файлу, файл "
"байт-коду було скомпільовано від."

msgid "Deprecated functions and types of the C API"
msgstr "Застарілі функції та типи C API"

msgid ""
"The :c:type:`Py_UNICODE` has been deprecated by :pep:`393` and will be "
"removed in Python 4. All functions using this type are deprecated:"
msgstr ""
":c:type:`Py_UNICODE` був застарілим :pep:`393` і буде видалено в Python 4. "
"Усі функції, що використовують цей тип, застаріли:"

msgid ""
"Unicode functions and methods using :c:type:`Py_UNICODE` and :c:expr:"
"`Py_UNICODE*` types:"
msgstr ""

msgid ""
":c:macro:`PyUnicode_FromUnicode`: use :c:func:`PyUnicode_FromWideChar` or :c:"
"func:`PyUnicode_FromKindAndData`"
msgstr ""
":c:macro:`PyUnicode_FromUnicode`: використовуйте :c:func:"
"`PyUnicode_FromWideChar` або :c:func:`PyUnicode_FromKindAndData`"

msgid ""
":c:macro:`PyUnicode_AS_UNICODE`, :c:func:`PyUnicode_AsUnicode`, :c:func:"
"`PyUnicode_AsUnicodeAndSize`: use :c:func:`PyUnicode_AsWideCharString`"
msgstr ""
":c:macro:`PyUnicode_AS_UNICODE`, :c:func:`PyUnicode_AsUnicode`, :c:func:"
"`PyUnicode_AsUnicodeAndSize`: використовуйте :c:func:"
"`PyUnicode_AsWideCharString`"

msgid ""
":c:macro:`PyUnicode_AS_DATA`: use :c:macro:`PyUnicode_DATA` with :c:macro:"
"`PyUnicode_READ` and :c:macro:`PyUnicode_WRITE`"
msgstr ""
":c:macro:`PyUnicode_AS_DATA`: використовуйте :c:macro:`PyUnicode_DATA` з :c:"
"macro:`PyUnicode_READ` і :c:macro:`PyUnicode_WRITE`"

msgid ""
":c:macro:`PyUnicode_GET_SIZE`, :c:func:`PyUnicode_GetSize`: use :c:macro:"
"`PyUnicode_GET_LENGTH` or :c:func:`PyUnicode_GetLength`"
msgstr ""
":c:macro:`PyUnicode_GET_SIZE`, :c:func:`PyUnicode_GetSize`: використовуйте :"
"c:macro:`PyUnicode_GET_LENGTH` або :c:func:`PyUnicode_GetLength`"

msgid ""
":c:macro:`PyUnicode_GET_DATA_SIZE`: use ``PyUnicode_GET_LENGTH(str) * "
"PyUnicode_KIND(str)`` (only work on ready strings)"
msgstr ""
":c:macro:`PyUnicode_GET_DATA_SIZE`: використовуйте "
"``PyUnicode_GET_LENGTH(str) * PyUnicode_KIND(str)`` (працює лише з готовими "
"рядками)"

msgid ""
":c:func:`PyUnicode_AsUnicodeCopy`: use :c:func:`PyUnicode_AsUCS4Copy` or :c:"
"func:`PyUnicode_AsWideCharString`"
msgstr ""
":c:func:`PyUnicode_AsUnicodeCopy`: використовуйте :c:func:"
"`PyUnicode_AsUCS4Copy` або :c:func:`PyUnicode_AsWideCharString`"

msgid ":c:func:`PyUnicode_GetMax`"
msgstr ":c:func:`PyUnicode_GetMax`"

msgid "Functions and macros manipulating Py_UNICODE* strings:"
msgstr "Функції та макроси, що маніпулюють рядками Py_UNICODE*:"

msgid ""
":c:macro:`Py_UNICODE_strlen`: use :c:func:`PyUnicode_GetLength` or :c:macro:"
"`PyUnicode_GET_LENGTH`"
msgstr ""
":c:macro:`Py_UNICODE_strlen`: використовуйте :c:func:`PyUnicode_GetLength` "
"або :c:macro:`PyUnicode_GET_LENGTH`"

msgid ""
":c:macro:`Py_UNICODE_strcat`: use :c:func:`PyUnicode_CopyCharacters` or :c:"
"func:`PyUnicode_FromFormat`"
msgstr ""
":c:macro:`Py_UNICODE_strcat`: використовуйте :c:func:"
"`PyUnicode_CopyCharacters` або :c:func:`PyUnicode_FromFormat`"

msgid ""
":c:macro:`Py_UNICODE_strcpy`, :c:macro:`Py_UNICODE_strncpy`, :c:macro:"
"`Py_UNICODE_COPY`: use :c:func:`PyUnicode_CopyCharacters` or :c:func:"
"`PyUnicode_Substring`"
msgstr ""
":c:macro:`Py_UNICODE_strcpy`, :c:macro:`Py_UNICODE_strncpy`, :c:macro:"
"`Py_UNICODE_COPY`: використовуйте :c:func:`PyUnicode_CopyCharacters` або :c:"
"func:`PyUnicode_Substring`"

msgid ":c:macro:`Py_UNICODE_strcmp`: use :c:func:`PyUnicode_Compare`"
msgstr ""
":c:macro:`Py_UNICODE_strcmp`: використовуйте :c:func:`PyUnicode_Compare`"

msgid ":c:macro:`Py_UNICODE_strncmp`: use :c:func:`PyUnicode_Tailmatch`"
msgstr ""
":c:macro:`Py_UNICODE_strncmp`: використовуйте :c:func:`PyUnicode_Tailmatch`"

msgid ""
":c:macro:`Py_UNICODE_strchr`, :c:macro:`Py_UNICODE_strrchr`: use :c:func:"
"`PyUnicode_FindChar`"
msgstr ""
":c:macro:`Py_UNICODE_strchr`, :c:macro:`Py_UNICODE_strrchr`: використовуйте :"
"c:func:`PyUnicode_FindChar`"

msgid ":c:macro:`Py_UNICODE_FILL`: use :c:func:`PyUnicode_Fill`"
msgstr ":c:macro:`Py_UNICODE_FILL`: використовуйте :c:func:`PyUnicode_Fill`"

msgid ":c:macro:`Py_UNICODE_MATCH`"
msgstr ":c:macro:`Py_UNICODE_MATCH`"

msgid "Encoders:"
msgstr "Кодери:"

msgid ":c:func:`PyUnicode_Encode`: use :c:func:`PyUnicode_AsEncodedObject`"
msgstr ""
":c:func:`PyUnicode_Encode`: використовуйте :c:func:"
"`PyUnicode_AsEncodedObject`"

msgid ":c:func:`PyUnicode_EncodeUTF7`"
msgstr ":c:func:`PyUnicode_EncodeUTF7`"

msgid ""
":c:func:`PyUnicode_EncodeUTF8`: use :c:func:`PyUnicode_AsUTF8` or :c:func:"
"`PyUnicode_AsUTF8String`"
msgstr ""
":c:func:`PyUnicode_EncodeUTF8`: використовуйте :c:func:`PyUnicode_AsUTF8` "
"або :c:func:`PyUnicode_AsUTF8String`"

msgid ":c:func:`PyUnicode_EncodeUTF32`"
msgstr ":c:func:`PyUnicode_EncodeUTF32`"

msgid ":c:func:`PyUnicode_EncodeUTF16`"
msgstr ":c:func:`PyUnicode_EncodeUTF16`"

msgid ""
":c:func:`PyUnicode_EncodeUnicodeEscape` use :c:func:"
"`PyUnicode_AsUnicodeEscapeString`"
msgstr ""
":c:func:`PyUnicode_EncodeUnicodeEscape` використовуйте :c:func:"
"`PyUnicode_AsUnicodeEscapeString`"

msgid ""
":c:func:`PyUnicode_EncodeRawUnicodeEscape` use :c:func:"
"`PyUnicode_AsRawUnicodeEscapeString`"
msgstr ""
":c:func:`PyUnicode_EncodeRawUnicodeEscape` використовуйте :c:func:"
"`PyUnicode_AsRawUnicodeEscapeString`"

msgid ""
":c:func:`PyUnicode_EncodeLatin1`: use :c:func:`PyUnicode_AsLatin1String`"
msgstr ""
":c:func:`PyUnicode_EncodeLatin1`: використовуйте :c:func:"
"`PyUnicode_AsLatin1String`"

msgid ":c:func:`PyUnicode_EncodeASCII`: use :c:func:`PyUnicode_AsASCIIString`"
msgstr ""
":c:func:`PyUnicode_EncodeASCII`: використовуйте :c:func:"
"`PyUnicode_AsASCIIString`"

msgid ":c:func:`PyUnicode_EncodeCharmap`"
msgstr ":c:func:`PyUnicode_EncodeCharmap`"

msgid ":c:func:`PyUnicode_TranslateCharmap`"
msgstr ":c:func:`PyUnicode_TranslateCharmap`"

msgid ""
":c:func:`PyUnicode_EncodeMBCS`: use :c:func:`PyUnicode_AsMBCSString` or :c:"
"func:`PyUnicode_EncodeCodePage` (with ``CP_ACP`` code_page)"
msgstr ""
":c:func:`PyUnicode_EncodeMBCS`: використовуйте :c:func:"
"`PyUnicode_AsMBCSString` або :c:func:`PyUnicode_EncodeCodePage` (з "
"``CP_ACP`` code_page)"

msgid ""
":c:func:`PyUnicode_EncodeDecimal`, :c:func:"
"`PyUnicode_TransformDecimalToASCII`"
msgstr ""
":c:func:`PyUnicode_EncodeDecimal`, :c:func:"
"`PyUnicode_TransformDecimalToASCII`"

msgid "Deprecated features"
msgstr "Застарілі функції"

msgid ""
"The :mod:`array` module's ``'u'`` format code is now deprecated and will be "
"removed in Python 4 together with the rest of the (:c:type:`Py_UNICODE`) API."
msgstr ""
"Код формату ``'u'`` модуля :mod:`array` тепер не підтримується та буде "
"видалено в Python 4 разом з рештою (:c:type:`Py_UNICODE`) API."

msgid "Porting to Python 3.3"
msgstr "Перенесення на Python 3.3"

msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"У цьому розділі наведено описані раніше зміни та інші виправлення помилок, "
"які можуть потребувати змін у вашому коді."

msgid "Porting Python code"
msgstr "Перенесення коду Python"

msgid ""
"Hash randomization is enabled by default. Set the :envvar:`PYTHONHASHSEED` "
"environment variable to ``0`` to disable hash randomization. See also the :"
"meth:`object.__hash__` method."
msgstr ""
"Хеш-рандомізація ввімкнена за замовчуванням. Встановіть для змінної "
"середовища :envvar:`PYTHONHASHSEED` значення ``0``, щоб вимкнути "
"рандомізацію хешу. Дивіться також метод :meth:`object.__hash__`."

msgid ""
":issue:`12326`: On Linux, sys.platform doesn't contain the major version "
"anymore. It is now always 'linux', instead of 'linux2' or 'linux3' depending "
"on the Linux version used to build Python. Replace sys.platform == 'linux2' "
"with sys.platform.startswith('linux'), or directly sys.platform == 'linux' "
"if you don't need to support older Python versions."
msgstr ""
":issue:`12326`: У Linux sys.platform більше не містить основної версії. "
"Тепер це завжди \"linux\", а не \"linux2\" або \"linux3\", залежно від "
"версії Linux, яка використовується для створення Python. Замініть sys."
"platform == 'linux2' на sys.platform.startswith('linux') або безпосередньо "
"sys.platform == 'linux', якщо вам не потрібна підтримка старіших версій "
"Python."

msgid ""
":issue:`13847`, :issue:`14180`: :mod:`time` and :mod:`datetime`: :exc:"
"`OverflowError` is now raised instead of :exc:`ValueError` if a timestamp is "
"out of range. :exc:`OSError` is now raised if C functions :c:func:`gmtime` "
"or :c:func:`localtime` failed."
msgstr ""
":issue:`13847`, :issue:`14180`: :mod:`time` і :mod:`datetime`: :exc:"
"`OverflowError` тепер викликається замість :exc:`ValueError`, якщо немає "
"позначки часу діапазону. :exc:`OSError` тепер виникає, якщо функції C :c:"
"func:`gmtime` або :c:func:`localtime` не вдаються."

msgid ""
"The default finders used by import now utilize a cache of what is contained "
"within a specific directory. If you create a Python source file or "
"sourceless bytecode file, make sure to call :func:`importlib."
"invalidate_caches` to clear out the cache for the finders to notice the new "
"file."
msgstr ""
"Засоби пошуку за умовчанням, які використовуються імпортом, тепер "
"використовують кеш того, що міститься в певному каталозі. Якщо ви створюєте "
"вихідний файл Python або файл байт-коду без вихідного коду, обов’язково "
"викличте :func:`importlib.invalidate_caches`, щоб очистити кеш, щоб шукачі "
"помітили новий файл."

msgid ""
":exc:`ImportError` now uses the full name of the module that was attempted "
"to be imported. Doctests that check ImportErrors' message will need to be "
"updated to use the full name of the module instead of just the tail of the "
"name."
msgstr ""
":exc:`ImportError` тепер використовує повну назву модуля, який намагалися "
"імпортувати. Доктести, які перевіряють повідомлення ImportErrors, потрібно "
"буде оновити, щоб використовувати повну назву модуля, а не лише хвіст назви."

msgid ""
"The *index* argument to :func:`__import__` now defaults to 0 instead of -1 "
"and no longer support negative values. It was an oversight when :pep:`328` "
"was implemented that the default value remained -1. If you need to continue "
"to perform a relative import followed by an absolute import, then perform "
"the relative import using an index of 1, followed by another import using an "
"index of 0. It is preferred, though, that you use :func:`importlib."
"import_module` rather than call :func:`__import__` directly."
msgstr ""
"Аргумент *index* для :func:`__import__` тепер має значення 0 замість -1 і "
"більше не підтримує від’ємні значення. Коли :pep:`328` було реалізовано, це "
"було помилкою, що значення за замовчуванням залишилося -1. Якщо вам потрібно "
"продовжити виконання відносного імпорту з подальшим абсолютним імпортом, "
"тоді виконайте відносний імпорт із використанням індексу 1, а потім ще один "
"імпорт із використанням індексу 0. Однак бажано використовувати :func:"
"`importlib.import_module` замість безпосереднього виклику :func:`__import__`."

msgid ""
":func:`__import__` no longer allows one to use an index value other than 0 "
"for top-level modules. E.g. ``__import__('sys', level=1)`` is now an error."
msgstr ""
":func:`__import__` більше не дозволяє використовувати значення індексу, "
"відмінне від 0, для модулів верхнього рівня. наприклад ``__import__('sys', "
"level=1)`` тепер є помилкою."

msgid ""
"Because :attr:`sys.meta_path` and :attr:`sys.path_hooks` now have finders on "
"them by default, you will most likely want to use :meth:`list.insert` "
"instead of :meth:`list.append` to add to those lists."
msgstr ""
"Оскільки :attr:`sys.meta_path` і :attr:`sys.path_hooks` тепер мають засоби "
"пошуку за замовчуванням, ви, швидше за все, захочете використовувати :meth:"
"`list.insert` замість :meth:`list.append`, щоб додати до цих списків."

msgid ""
"Because ``None`` is now inserted into :attr:`sys.path_importer_cache`, if "
"you are clearing out entries in the dictionary of paths that do not have a "
"finder, you will need to remove keys paired with values of ``None`` **and** :"
"class:`imp.NullImporter` to be backwards-compatible. This will lead to extra "
"overhead on older versions of Python that re-insert ``None`` into :attr:`sys."
"path_importer_cache` where it represents the use of implicit finders, but "
"semantically it should not change anything."
msgstr ""
"Оскільки ``None`` тепер вставлено в :attr:`sys.path_importer_cache`, якщо ви "
"очищаєте записи в словнику шляхів, які не мають шукача, вам потрібно буде "
"видалити ключі, поєднані зі значеннями ``None`` **і** :class:`imp."
"NullImporter` для зворотної сумісності. Це призведе до додаткових витрат на "
"старіші версії Python, які повторно вставляють ``None`` у :attr:`sys."
"path_importer_cache`, де це означає використання неявних засобів пошуку, але "
"семантично це не повинно нічого змінити."

msgid ""
":class:`importlib.abc.Finder` no longer specifies a ``find_module()`` "
"abstract method that must be implemented. If you were relying on subclasses "
"to implement that method, make sure to check for the method's existence "
"first. You will probably want to check for ``find_loader()`` first, though, "
"in the case of working with :term:`path entry finders <path entry finder>`."
msgstr ""

msgid ""
":mod:`pkgutil` has been converted to use :mod:`importlib` internally. This "
"eliminates many edge cases where the old behaviour of the :pep:`302` import "
"emulation failed to match the behaviour of the real import system. The "
"import emulation itself is still present, but is now deprecated. The :func:"
"`pkgutil.iter_importers` and :func:`pkgutil.walk_packages` functions special "
"case the standard import hooks so they are still supported even though they "
"do not provide the non-standard ``iter_modules()`` method."
msgstr ""
":mod:`pkgutil` було перетворено на використання :mod:`importlib` внутрішньо. "
"Це усуває багато граничних випадків, коли стара поведінка емуляції імпорту :"
"pep:`302` не збігалася з поведінкою реальної системи імпорту. Сама емуляція "
"імпорту все ще присутня, але тепер не підтримується. Функції :func:`pkgutil."
"iter_importers` і :func:`pkgutil.walk_packages` представляють спеціальний "
"варіант для стандартних хуків імпорту, тому вони все ще підтримуються, "
"навіть якщо вони не забезпечують нестандартний метод ``iter_modules()``."

msgid ""
"A longstanding RFC-compliance bug (:issue:`1079`) in the parsing done by :"
"func:`email.header.decode_header` has been fixed.  Code that uses the "
"standard idiom to convert encoded headers into unicode "
"(``str(make_header(decode_header(h))``) will see no change, but code that "
"looks at the individual tuples returned by decode_header will see that "
"whitespace that precedes or follows ``ASCII`` sections is now included in "
"the ``ASCII`` section.  Code that builds headers using ``make_header`` "
"should also continue to work without change, since ``make_header`` continues "
"to add whitespace between ``ASCII`` and non-``ASCII`` sections if it is not "
"already present in the input strings."
msgstr ""
"Виправлено давню помилку відповідності вимогам RFC (:issue:`1079`) у "
"синтаксичному аналізі, виконаному :func:`email.header.decode_header`. Код, "
"який використовує стандартну ідіому для перетворення закодованих заголовків "
"у юнікод (``str(make_header(decode_header(h))``), не побачить жодних змін, "
"але код, який переглядає окремі кортежі, повернуті decode_header, побачить "
"пробіли, які передують або наступні розділи ``ASCII`` тепер включено в "
"розділ ``ASCII``. Код, який створює заголовки за допомогою ``make_header``, "
"також має продовжувати працювати без змін, оскільки ``make_header`` "
"продовжує додавати пробіли між ``ASCII`` і не ``ASCII`` розділи, якщо вони "
"ще не присутні у вхідних рядках."

msgid ""
":func:`email.utils.formataddr` now does the correct content transfer "
"encoding when passed non-``ASCII`` display names.  Any code that depended on "
"the previous buggy behavior that preserved the non-``ASCII`` unicode in the "
"formatted output string will need to be changed (:issue:`1690608`)."
msgstr ""
":func:`email.utils.formataddr` тепер виконує правильне кодування передачі "
"вмісту, коли передаються відображувані імена, відмінні від ``ASCII``. Будь-"
"який код, який залежав від попередньої помилкової поведінки, яка зберігала "
"не-``ASCII`` Юнікод у форматованому вихідному рядку, потрібно буде змінити (:"
"issue:`1690608`)."

msgid ""
":meth:`poplib.POP3.quit` may now raise protocol errors like all other "
"``poplib`` methods.  Code that assumes ``quit`` does not raise :exc:`poplib."
"error_proto` errors may need to be changed if errors on ``quit`` are "
"encountered by a particular application (:issue:`11291`)."
msgstr ""
":meth:`poplib.POP3.quit` тепер може викликати помилки протоколу, як і всі "
"інші методи ``poplib``. Код, який припускає, що ``вийти`` не викликає "
"помилки :exc:`poplib.error_proto`, може знадобитися змінити, якщо певна "
"програма стикається з помилками ``вийти`` (:issue:`11291`)."

msgid ""
"The ``strict`` argument to :class:`email.parser.Parser`, deprecated since "
"Python 2.4, has finally been removed."
msgstr ""
"Аргумент ``strict`` для :class:`email.parser.Parser`, застарілий з Python "
"2.4, нарешті видалено."

msgid ""
"The deprecated method ``unittest.TestCase.assertSameElements`` has been "
"removed."
msgstr ""
"Застарілий метод ``unittest.TestCase.assertSameElements`` було видалено."

msgid "The deprecated variable ``time.accept2dyear`` has been removed."
msgstr "Застарілу змінну ``time.accept2dyear`` видалено."

msgid ""
"The deprecated ``Context._clamp`` attribute has been removed from the :mod:"
"`decimal` module.  It was previously replaced by the public attribute :attr:"
"`~decimal.Context.clamp`.  (See :issue:`8540`.)"
msgstr ""
"Застарілий атрибут ``Context._clamp`` було видалено з модуля :mod:`decimal`. "
"Раніше він був замінений публічним атрибутом :attr:`~decimal.Context.clamp`. "
"(Див. :issue:`8540`.)"

msgid ""
"The undocumented internal helper class ``SSLFakeFile`` has been removed "
"from :mod:`smtplib`, since its functionality has long been provided directly "
"by :meth:`socket.socket.makefile`."
msgstr ""
"Недокументований внутрішній допоміжний клас ``SSLFakeFile`` було видалено з :"
"mod:`smtplib`, оскільки його функціональні можливості протягом тривалого "
"часу надавалися безпосередньо :meth:`socket.socket.makefile`."

msgid ""
"Passing a negative value to :func:`time.sleep` on Windows now raises an "
"error instead of sleeping forever.  It has always raised an error on posix."
msgstr ""
"Передача від’ємного значення :func:`time.sleep` у Windows тепер викликає "
"помилку, а не сплячий режим назавжди. Це завжди викликало помилку на posix."

msgid ""
"The ``ast.__version__`` constant has been removed.  If you need to make "
"decisions affected by the AST version, use :attr:`sys.version_info` to make "
"the decision."
msgstr ""
"Константу ``ast.__version__`` видалено. Якщо вам потрібно прийняти рішення, "
"на які впливає версія AST, використовуйте :attr:`sys.version_info` для "
"прийняття рішення."

msgid ""
"Code that used to work around the fact that the :mod:`threading` module used "
"factory functions by subclassing the private classes will need to change to "
"subclass the now-public classes."
msgstr ""
"Код, який раніше обходив той факт, що модуль :mod:`threading` використовував "
"фабричні функції, створюючи підкласи приватних класів, потрібно буде "
"змінити, щоб створити підкласи публічних класів."

msgid ""
"The undocumented debugging machinery in the threading module has been "
"removed, simplifying the code.  This should have no effect on production "
"code, but is mentioned here in case any application debug frameworks were "
"interacting with it (:issue:`13550`)."
msgstr ""
"Недокументований механізм налагодження в модулі обробки потоків було "
"видалено, що спростило код. Це не повинно вплинути на робочий код, але "
"згадується тут, якщо з ним взаємодіють будь-які фреймворки налагодження "
"програм (:issue:`13550`)."

msgid "Porting C code"
msgstr "Перенесення коду C"

msgid ""
"In the course of changes to the buffer API the undocumented :c:member:"
"`~Py_buffer.smalltable` member of the :c:type:`Py_buffer` structure has been "
"removed and the layout of the :c:type:`PyMemoryViewObject` has changed."
msgstr ""
"Під час змін до API буфера було видалено недокументований член :c:member:"
"`~Py_buffer.smalltable` структури :c:type:`Py_buffer` і макет :c:type:"
"`PyMemoryViewObject` змінилося."

msgid ""
"All extensions relying on the relevant parts in ``memoryobject.h`` or "
"``object.h`` must be rebuilt."
msgstr ""
"Усі розширення, що покладаються на відповідні частини в ``memoryobject.h`` "
"або ``object.h``, повинні бути перебудовані."

msgid ""
"Due to :ref:`PEP 393 <pep-393>`, the :c:type:`Py_UNICODE` type and all "
"functions using this type are deprecated (but will stay available for at "
"least five years).  If you were using low-level Unicode APIs to construct "
"and access unicode objects and you want to benefit of the memory footprint "
"reduction provided by :pep:`393`, you have to convert your code to the new :"
"doc:`Unicode API <../c-api/unicode>`."
msgstr ""
"Через :ref:`PEP 393 <pep-393>`, тип :c:type:`Py_UNICODE` та всі функції, що "
"використовують цей тип, застаріли (але залишатимуться доступними щонайменше "
"п’ять років). Якщо ви використовували низькорівневі API Unicode для "
"створення та доступу до об’єктів Unicode та хочете скористатися перевагами "
"зменшення обсягу пам’яті, яке забезпечує :pep:`393`, вам потрібно "
"перетворити свій код на новий :doc:`API Unicode <../c-api/unicode>`."

msgid ""
"However, if you only have been using high-level functions such as :c:func:"
"`PyUnicode_Concat()`, :c:func:`PyUnicode_Join` or :c:func:"
"`PyUnicode_FromFormat()`, your code will automatically take advantage of the "
"new unicode representations."
msgstr ""
"Однак, якщо ви використовували лише функції високого рівня, такі як :c:func:"
"`PyUnicode_Concat()`, :c:func:`PyUnicode_Join` або :c:func:"
"`PyUnicode_FromFormat()`, ваш код автоматично прийматиме переваги нових "
"представлень Unicode."

msgid ":c:func:`PyImport_GetMagicNumber` now returns ``-1`` upon failure."
msgstr ""
":c:func:`PyImport_GetMagicNumber` тепер повертає ``-1`` у разі помилки."

msgid ""
"As a negative value for the *level* argument to :func:`__import__` is no "
"longer valid, the same now holds for :c:func:`PyImport_ImportModuleLevel`. "
"This also means that the value of *level* used by :c:func:"
"`PyImport_ImportModuleEx` is now ``0`` instead of ``-1``."
msgstr ""
"Оскільки від’ємне значення для аргументу *level* для :func:`__import__` "
"більше недійсне, те саме тепер стосується :c:func:"
"`PyImport_ImportModuleLevel`. Це також означає, що значення *level*, яке "
"використовується :c:func:`PyImport_ImportModuleEx`, тепер дорівнює ``0`` "
"замість ``-1``."

msgid "Building C extensions"
msgstr "Будівля C розширення"

msgid ""
"The range of possible file names for C extensions has been narrowed. Very "
"rarely used spellings have been suppressed: under POSIX, files named "
"``xxxmodule.so``, ``xxxmodule.abi3.so`` and ``xxxmodule.cpython-*.so`` are "
"no longer recognized as implementing the ``xxx`` module.  If you had been "
"generating such files, you have to switch to the other spellings (i.e., "
"remove the ``module`` string from the file names)."
msgstr ""
"Діапазон можливих імен файлів для розширень C було звужено. Дуже рідко "
"використовувані варіанти написання були придушені: у POSIX файли з іменами "
"``xxxmodule.so``, ``xxxmodule.abi3.so`` і ``xxxmodule.cpython-*.so`` більше "
"не розпізнаються як такі, що реалізують` модуль `xxx``. Якщо ви створювали "
"такі файли, вам потрібно переключитися на інші варіанти написання (тобто "
"видалити рядок ``module`` з імен файлів)."

msgid "(implemented in :issue:`14040`.)"
msgstr "(реалізовано в :issue:`14040`.)"

msgid "Command Line Switch Changes"
msgstr "Зміни перемикача командного рядка"

msgid ""
"The -Q command-line flag and related artifacts have been removed.  Code "
"checking sys.flags.division_warning will need updating."
msgstr ""
"Прапор командного рядка -Q і пов’язані артефакти видалено. Код перевірки sys."
"flags.division_warning потребує оновлення."

msgid "(:issue:`10998`, contributed by Éric Araujo.)"
msgstr "(:issue:`10998`, надано Еріком Араухо.)"

msgid ""
"When :program:`python` is started with :option:`-S`, ``import site`` will no "
"longer add site-specific paths to the module search paths.  In previous "
"versions, it did."
msgstr ""
"Коли :program:`python` запускається за допомогою :option:`-S`, ``import "
"site`` більше не додаватиме шляхи для сайту до шляхів пошуку модуля. У "
"попередніх версіях так і було."

msgid ""
"(:issue:`11591`, contributed by Carl Meyer with editions by Éric Araujo.)"
msgstr "(:issue:`11591`, надано Карлом Майєром з виданнями Еріка Араухо.)"
